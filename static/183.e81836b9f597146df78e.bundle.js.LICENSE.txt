/* .Box */

/* .FontAwesomeIcon */

/* .Popover */

/* .Popover.Dropdown */

/* .Popover.Target */

/* .PopoverDropdown */

/* .extractSystemStyles */

/* .hexToHSLA */

/* .mergeRefs */

/* .useCollapse */

/* .useComponentDefaultProps */

/* .useDidUpdate */

/* .useMantineTheme */

/* .useReducedMotion */

/* .useTheme */

/* @__PURE__ */

/* Collapse */

/* FontAwesomeIcon */

/* Popover */

/* UnstyledButton */

/* atom */

/* basketDrawerState */

/* binding */

/* createStyles */

/* css */

/* default */

/* default.div */

/* default.p */

/* faCartShopping */

/* faChevronDown */

/* faCog */

/* getSize */

/* harmony default export */

/* harmony export */

/* harmony import */

/* rem */

/* replaceAll */

/* selectedLanguageIdState */

/* unused harmony export getElementHeight */

/* useBasket */

/* useChannel */

/* useComponentDefaultProps */

/* useHistory */

/* useLocation */

/* useRecoilState */

/* useRecoilValue */

/* useSetRecoilState */

/* useTheme */

/***/

// ... but to optimize you can wrap handler in useCallback before ...

// ... callback/cleanup to run every render. It's not a big deal ...

// ... function on every render that will cause this effect ...

// ... passing it into this hook.

// Add ref and handler to effect dependencies

// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Burger/Burger.styles.js

// CONCATENATED MODULE: ./src/shared_components/header/header.tsx

// CONCATENATED MODULE: ./src/shared_components/header/header_item.tsx

// CONCATENATED MODULE: ./src/shared_components/header/language_selector.tsx

// CONCATENATED MODULE: ./src/shared_components/header/styles.ts

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faCartShopping.js

// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-solid-svg-icons/faCartShopping.js

// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-solid-svg-icons/faChevronDown.js

// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-solid-svg-icons/faCog.js

// EXTERNAL MODULE: ./src/hooks/useChannel.ts

// EXTERNAL MODULE: ./src/lib/utils/replaceAll.tsx

// EXTERNAL MODULE: ./src/reservation/atoms/styleOverridesState.ts

// EXTERNAL MODULE: ./src/shared_components/basket_drawer/atoms.ts

// EXTERNAL MODULE: ./src/shared_components/popover/popover.tsx

// It's worth noting that because passed in handler is a new ...
