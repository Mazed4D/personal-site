(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("BV", [], factory);
	else if(typeof exports === 'object')
		exports["BV"] = factory();
	else
		root["BV"] = factory();
})(this, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 2963:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'angle-down';
var width = 384;
var height = 512;
var aliases = [8964];
var unicode = 'f107';
var svgPathData = 'M360.5 217.5l-152 143.1C203.9 365.8 197.9 368 192 368s-11.88-2.188-16.5-6.562L23.5 217.5C13.87 208.3 13.47 193.1 22.56 183.5C31.69 173.8 46.94 173.5 56.5 182.6L192 310.9l135.5-128.4c9.562-9.094 24.75-8.75 33.94 .9375C370.5 193.1 370.1 208.3 360.5 217.5z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.gc = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 2850:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var prefix = 'far';
var iconName = 'arrow-right-long';
var width = 512;
var height = 512;
var aliases = ["long-arrow-right"];
var unicode = 'f178';
var svgPathData = 'M335 408.1C330.3 404.3 328 398.2 328 392s2.344-12.28 7.031-16.97L430.1 280H24C10.75 280 0 269.2 0 255.1C0 242.7 10.75 232 24 232h406.1l-95.03-95.03c-9.375-9.375-9.375-24.56 0-33.94s24.56-9.375 33.94 0l136 136c9.375 9.375 9.375 24.56 0 33.94l-136 136C359.6 418.3 344.4 418.3 335 408.1z';
exports.definition = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.faArrowRightLong = exports.definition;
exports.prefix = prefix;
exports.iconName = iconName;
exports.width = width;
exports.height = height;
exports.ligatures = aliases;
exports.unicode = unicode;
exports.svgPathData = svgPathData;
exports.aliases = aliases;

/***/ }),

/***/ 1583:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'bed-front';
var width = 512;
var height = 512;
var aliases = ["bed-alt"];
var unicode = 'f8f7';
var svgPathData = 'M32 80C32 53.49 53.49 32 80 32H432C458.5 32 480 53.49 480 80V205.8C465.5 198.2 449.2 193.4 432 192.3L432 192V160C432 142.3 417.7 128 400 128H304C286.3 128 272 142.3 272 160V192H240V160C240 142.3 225.7 128 208 128H112C94.33 128 80 142.3 80 160V192L80 192.3C62.75 193.4 46.5 198.2 32 205.8V80zM424 224C472.6 224 512 263.4 512 312V456C512 469.3 501.3 480 488 480C474.7 480 464 469.3 464 456V416H48V456C48 469.3 37.25 480 24 480C10.75 480 0 469.3 0 456V312C0 263.4 39.4 224 88 224H424zM464 312C464 289.9 446.1 272 424 272H88C65.91 272 48 289.9 48 312V368H464V312z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.V1 = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 4383:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'calendar';
var width = 448;
var height = 512;
var aliases = [128197, 128198];
var unicode = 'f133';
var svgPathData = 'M152 64H296V24C296 10.75 306.7 0 320 0C333.3 0 344 10.75 344 24V64H384C419.3 64 448 92.65 448 128V448C448 483.3 419.3 512 384 512H64C28.65 512 0 483.3 0 448V128C0 92.65 28.65 64 64 64H104V24C104 10.75 114.7 0 128 0C141.3 0 152 10.75 152 24V64zM48 448C48 456.8 55.16 464 64 464H384C392.8 464 400 456.8 400 448V192H48V448z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.fT = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 7056:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'chevron-down';
var width = 448;
var height = 512;
var aliases = [];
var unicode = 'f078';
var svgPathData = 'M432.6 209.3l-191.1 183.1C235.1 397.8 229.1 400 224 400s-11.97-2.219-16.59-6.688L15.41 209.3C5.814 200.2 5.502 184.1 14.69 175.4c9.125-9.625 24.38-9.938 33.91-.7187L224 342.8l175.4-168c9.5-9.219 24.78-8.906 33.91 .7187C442.5 184.1 442.2 200.2 432.6 209.3z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.pt = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 6037:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'chevron-left';
var width = 320;
var height = 512;
var aliases = [9001];
var unicode = 'f053';
var svgPathData = 'M206.7 464.6l-183.1-191.1C18.22 267.1 16 261.1 16 256s2.219-11.97 6.688-16.59l183.1-191.1c9.152-9.594 24.34-9.906 33.9-.7187c9.625 9.125 9.938 24.37 .7187 33.91L73.24 256l168 175.4c9.219 9.5 8.906 24.78-.7187 33.91C231 474.5 215.8 474.2 206.7 464.6z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.A3 = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 5972:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'chevron-right';
var width = 320;
var height = 512;
var aliases = [9002];
var unicode = 'f054';
var svgPathData = 'M113.3 47.41l183.1 191.1c4.469 4.625 6.688 10.62 6.688 16.59s-2.219 11.97-6.688 16.59l-183.1 191.1c-9.152 9.594-24.34 9.906-33.9 .7187c-9.625-9.125-9.938-24.38-.7187-33.91l168-175.4L78.71 80.6c-9.219-9.5-8.906-24.78 .7187-33.91C88.99 37.5 104.2 37.82 113.3 47.41z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports._t = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 2120:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var source = __webpack_require__(7626);
exports.DF = {
  prefix: source.prefix,
  iconName: source.iconName,
  icon: [source.width, source.height, source.aliases, source.unicode, source.svgPathData]
};
exports.YI = exports.DF;
__webpack_unused_export__ = source.prefix;
__webpack_unused_export__ = source.iconName;
__webpack_unused_export__ = source.width;
__webpack_unused_export__ = source.height;
__webpack_unused_export__ = source.aliases;
__webpack_unused_export__ = source.unicode;
__webpack_unused_export__ = source.svgPathData;
__webpack_unused_export__ = source.aliases;

/***/ }),

/***/ 9868:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'door-open';
var width = 576;
var height = 512;
var aliases = [];
var unicode = 'f52b';
var svgPathData = 'M224 288c13.25 0 24-14.37 24-31.1S237.3 224 224 224S200 238.4 200 256S210.8 288 224 288zM288 0C285.5 0 282.9 .382 280.3 1.007l-192 49.75C73.1 54.51 64 67.76 64 82.88V464H24C10.75 464 0 474.7 0 488C0 501.3 10.75 512 24 512H288c17.67 0 32-14.33 32-32V33.13C320 14.38 305.3 0 288 0zM272 464h-160V94.13l160-41.38V464zM552 464H512V128c0-35.35-28.65-64-64-64l-96 .0061V112h96c8.836 0 16 7.162 16 16v352c0 17.67 14.33 32 32 32h56c13.25 0 24-10.75 24-24C576 474.7 565.3 464 552 464z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.TE = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 6136:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'key';
var width = 512;
var height = 512;
var aliases = [128273];
var unicode = 'f084';
var svgPathData = 'M336 144C336 126.3 350.3 112 368 112C385.7 112 400 126.3 400 144C400 161.7 385.7 176 368 176C350.3 176 336 161.7 336 144zM336 352C326.5 352 317.2 351.3 308.1 349.8L280.1 376.1C276.5 381.5 270.4 384 264 384H224V424C224 437.3 213.3 448 200 448H160V488C160 501.3 149.3 512 136 512H24C10.75 512 0 501.3 0 488V376C0 369.6 2.529 363.5 7.029 359L162.2 203.9C160.8 194.8 160 185.5 160 176C160 78.8 238.8 0 336 0C433.2 0 512 78.8 512 176C512 273.2 433.2 352 336 352zM336 304C406.7 304 464 246.7 464 176C464 105.3 406.7 48 336 48C265.3 48 208 105.3 208 176C208 182.9 208.5 189.7 209.6 196.3L213.4 220.5L47.1 385.9V464H111.1V400H175.1V336H254.1L291.5 298.6L315.7 302.4C322.3 303.5 329.1 304 336 304z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.DD = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 745:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'location-dot';
var width = 384;
var height = 512;
var aliases = ["map-marker-alt"];
var unicode = 'f3c5';
var svgPathData = 'M272 192C272 236.2 236.2 272 192 272C147.8 272 112 236.2 112 192C112 147.8 147.8 112 192 112C236.2 112 272 147.8 272 192zM192 160C174.3 160 160 174.3 160 192C160 209.7 174.3 224 192 224C209.7 224 224 209.7 224 192C224 174.3 209.7 160 192 160zM384 192C384 279.4 267 435 215.7 499.2C203.4 514.5 180.6 514.5 168.3 499.2C116.1 435 0 279.4 0 192C0 85.96 85.96 0 192 0C298 0 384 85.96 384 192H384zM192 48C112.5 48 48 112.5 48 192C48 204.4 52.49 223.6 63.3 249.2C73.78 274 88.66 301.4 105.8 329.1C134.2 375.3 167.2 419.1 192 451.7C216.8 419.1 249.8 375.3 278.2 329.1C295.3 301.4 310.2 274 320.7 249.2C331.5 223.6 336 204.4 336 192C336 112.5 271.5 48 192 48V48z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.op = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 7034:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var source = __webpack_require__(2850);
exports.DF = {
  prefix: source.prefix,
  iconName: source.iconName,
  icon: [source.width, source.height, source.aliases, source.unicode, source.svgPathData]
};
exports.b1 = exports.DF;
__webpack_unused_export__ = source.prefix;
__webpack_unused_export__ = source.iconName;
__webpack_unused_export__ = source.width;
__webpack_unused_export__ = source.height;
__webpack_unused_export__ = source.aliases;
__webpack_unused_export__ = source.unicode;
__webpack_unused_export__ = source.svgPathData;
__webpack_unused_export__ = source.aliases;

/***/ }),

/***/ 4738:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'minus';
var width = 448;
var height = 512;
var aliases = [8211, 8722, 10134, "subtract"];
var unicode = 'f068';
var svgPathData = 'M432 256C432 269.3 421.3 280 408 280H40c-13.25 0-24-10.74-24-23.99C16 242.8 26.75 232 40 232h368C421.3 232 432 242.8 432 256z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.Kl = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 2990:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'plus';
var width = 448;
var height = 512;
var aliases = [10133, 61543, "add"];
var unicode = '2b';
var svgPathData = 'M432 256C432 269.3 421.3 280 408 280h-160v160c0 13.25-10.75 24.01-24 24.01S200 453.3 200 440v-160h-160c-13.25 0-24-10.74-24-23.99C16 242.8 26.75 232 40 232h160v-160c0-13.25 10.75-23.99 24-23.99S248 58.75 248 72v160h160C421.3 232 432 242.8 432 256z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.r8 = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 4718:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'presentation-screen';
var width = 576;
var height = 512;
var aliases = ["presentation"];
var unicode = 'f685';
var svgPathData = 'M496 304h-416v-224H32v240c0 17.6 14.4 32 32 32L264 352v47.02l-72 72c-9.354 9.352-9.354 24.52 0 33.88c9.348 9.348 24.51 9.359 33.87 .0195L288 442.9l62.09 62.09c9.391 9.391 24.63 9.348 33.97-.0938c9.301-9.406 9.258-24.55-.0938-33.91L312 399V352L512 352c17.6 0 32-14.4 32-32V80h-48V304zM552 0H23.96C10.72 0 0 10.73 0 23.95S10.72 48 23.96 48h528.1C565.3 48 576 37.27 576 24.05S565.3 0 552 0z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.r0 = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 4693:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'user-group';
var width = 640;
var height = 512;
var aliases = [128101, "user-friends"];
var unicode = 'f500';
var svgPathData = 'M224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM224 48c44.11 0 80 35.89 80 80c0 44.11-35.89 80-80 80S144 172.1 144 128C144 83.89 179.9 48 224 48zM274.7 304H173.3c-95.73 0-173.3 77.6-173.3 173.3C0 496.5 15.52 512 34.66 512H413.3C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM48.71 464C55.38 401.1 108.7 352 173.3 352H274.7c64.61 0 117.1 49.13 124.6 112H48.71zM479.1 320h-73.85C451.2 357.7 480 414.1 480 477.3C480 490.1 476.2 501.9 470 512h138C625.7 512 640 497.6 640 479.1C640 391.6 568.4 320 479.1 320zM432 256C493.9 256 544 205.9 544 144S493.9 32 432 32c-25.11 0-48.04 8.555-66.72 22.51C376.8 76.63 384 101.4 384 128c0 35.52-11.93 68.14-31.59 94.71C372.7 243.2 400.8 256 432 256z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.Nd = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 6415:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'users';
var width = 640;
var height = 512;
var aliases = [];
var unicode = 'f0c0';
var svgPathData = 'M319.9 320c57.41 0 103.1-46.56 103.1-104c0-57.44-46.54-104-103.1-104c-57.41 0-103.1 46.56-103.1 104C215.9 273.4 262.5 320 319.9 320zM319.9 160c30.85 0 55.96 25.12 55.96 56S350.7 272 319.9 272S263.9 246.9 263.9 216S289 160 319.9 160zM512 160c44.18 0 80-35.82 80-80S556.2 0 512 0c-44.18 0-80 35.82-80 80S467.8 160 512 160zM369.9 352H270.1C191.6 352 128 411.7 128 485.3C128 500.1 140.7 512 156.4 512h327.2C499.3 512 512 500.1 512 485.3C512 411.7 448.4 352 369.9 352zM178.1 464c10.47-36.76 47.36-64 91.14-64H369.9c43.77 0 80.66 27.24 91.14 64H178.1zM551.9 192h-61.84c-12.8 0-24.88 3.037-35.86 8.24C454.8 205.5 455.8 210.6 455.8 216c0 33.71-12.78 64.21-33.16 88h199.7C632.1 304 640 295.6 640 285.3C640 233.8 600.6 192 551.9 192zM183.9 216c0-5.449 .9824-10.63 1.609-15.91C174.6 194.1 162.6 192 149.9 192H88.08C39.44 192 0 233.8 0 285.3C0 295.6 7.887 304 17.62 304h199.5C196.7 280.2 183.9 249.7 183.9 216zM128 160c44.18 0 80-35.82 80-80S172.2 0 128 0C83.82 0 48 35.82 48 80S83.82 160 128 160z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.FV = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 7626:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var prefix = 'far';
var iconName = 'xmark';
var width = 320;
var height = 512;
var aliases = [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"];
var unicode = 'f00d';
var svgPathData = 'M312.1 375c9.369 9.369 9.369 24.57 0 33.94s-24.57 9.369-33.94 0L160 289.9l-119 119c-9.369 9.369-24.57 9.369-33.94 0s-9.369-24.57 0-33.94L126.1 256L7.027 136.1c-9.369-9.369-9.369-24.57 0-33.94s24.57-9.369 33.94 0L160 222.1l119-119c9.369-9.369 24.57-9.369 33.94 0s9.369 24.57 0 33.94L193.9 256L312.1 375z';
exports.definition = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.faXmark = exports.definition;
exports.prefix = prefix;
exports.iconName = iconName;
exports.width = width;
exports.height = height;
exports.ligatures = aliases;
exports.unicode = unicode;
exports.svgPathData = svgPathData;
exports.aliases = aliases;

/***/ }),

/***/ 5962:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'far';
var iconName = 'xmark-large';
var width = 448;
var height = 512;
var aliases = [];
var unicode = 'e59b';
var svgPathData = 'M224 222.1L407 39.03C416.4 29.66 431.6 29.66 440.1 39.03C450.3 48.4 450.3 63.6 440.1 72.97L257.9 256L440.1 439C450.3 448.4 450.3 463.6 440.1 472.1C431.6 482.3 416.4 482.3 407 472.1L224 289.9L40.97 472.1C31.6 482.3 16.4 482.3 7.029 472.1C-2.343 463.6-2.343 448.4 7.029 439L190.1 256L7.029 72.97C-2.343 63.6-2.343 48.4 7.029 39.03C16.4 29.66 31.6 29.66 40.97 39.03L224 222.1z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.FG = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 8744:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
var prefix = 'fas';
var iconName = 'xmark';
var width = 320;
var height = 512;
var aliases = [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"];
var unicode = 'f00d';
var svgPathData = 'M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z';
exports.DF = {
  prefix: prefix,
  iconName: iconName,
  icon: [width, height, aliases, unicode, svgPathData]
};
exports.g8 = exports.DF;
__webpack_unused_export__ = prefix;
__webpack_unused_export__ = iconName;
__webpack_unused_export__ = width;
__webpack_unused_export__ = height;
__webpack_unused_export__ = aliases;
__webpack_unused_export__ = unicode;
__webpack_unused_export__ = svgPathData;
__webpack_unused_export__ = aliases;

/***/ }),

/***/ 7705:
/***/ (function(module) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);
      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }
      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names

  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }
      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }
      list.push(item);
    }
  };
  return list;
};
function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }
  return [content].join('\n');
} // Adapted from convert-source-map (MIT)

function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ 7076:
/***/ (function(module) {

!function (t, e) {
   true ? module.exports = e() : 0;
}(this, function () {
  "use strict";

  var t = 1e3,
    e = 6e4,
    n = 36e5,
    r = "millisecond",
    i = "second",
    s = "minute",
    u = "hour",
    a = "day",
    o = "week",
    f = "month",
    h = "quarter",
    c = "year",
    d = "date",
    l = "Invalid Date",
    $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,
    y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
    M = {
      name: "en",
      weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
      months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
      ordinal: function (t) {
        var e = ["th", "st", "nd", "rd"],
          n = t % 100;
        return "[" + t + (e[(n - 20) % 10] || e[n] || e[0]) + "]";
      }
    },
    m = function (t, e, n) {
      var r = String(t);
      return !r || r.length >= e ? t : "" + Array(e + 1 - r.length).join(n) + t;
    },
    v = {
      s: m,
      z: function (t) {
        var e = -t.utcOffset(),
          n = Math.abs(e),
          r = Math.floor(n / 60),
          i = n % 60;
        return (e <= 0 ? "+" : "-") + m(r, 2, "0") + ":" + m(i, 2, "0");
      },
      m: function t(e, n) {
        if (e.date() < n.date()) return -t(n, e);
        var r = 12 * (n.year() - e.year()) + (n.month() - e.month()),
          i = e.clone().add(r, f),
          s = n - i < 0,
          u = e.clone().add(r + (s ? -1 : 1), f);
        return +(-(r + (n - i) / (s ? i - u : u - i)) || 0);
      },
      a: function (t) {
        return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
      },
      p: function (t) {
        return {
          M: f,
          y: c,
          w: o,
          d: a,
          D: d,
          h: u,
          m: s,
          s: i,
          ms: r,
          Q: h
        }[t] || String(t || "").toLowerCase().replace(/s$/, "");
      },
      u: function (t) {
        return void 0 === t;
      }
    },
    g = "en",
    D = {};
  D[g] = M;
  var p = function (t) {
      return t instanceof _;
    },
    S = function t(e, n, r) {
      var i;
      if (!e) return g;
      if ("string" == typeof e) {
        var s = e.toLowerCase();
        D[s] && (i = s), n && (D[s] = n, i = s);
        var u = e.split("-");
        if (!i && u.length > 1) return t(u[0]);
      } else {
        var a = e.name;
        D[a] = e, i = a;
      }
      return !r && i && (g = i), i || !r && g;
    },
    w = function (t, e) {
      if (p(t)) return t.clone();
      var n = "object" == typeof e ? e : {};
      return n.date = t, n.args = arguments, new _(n);
    },
    O = v;
  O.l = S, O.i = p, O.w = function (t, e) {
    return w(t, {
      locale: e.$L,
      utc: e.$u,
      x: e.$x,
      $offset: e.$offset
    });
  };
  var _ = function () {
      function M(t) {
        this.$L = S(t.locale, null, !0), this.parse(t);
      }
      var m = M.prototype;
      return m.parse = function (t) {
        this.$d = function (t) {
          var e = t.date,
            n = t.utc;
          if (null === e) return new Date(NaN);
          if (O.u(e)) return new Date();
          if (e instanceof Date) return new Date(e);
          if ("string" == typeof e && !/Z$/i.test(e)) {
            var r = e.match($);
            if (r) {
              var i = r[2] - 1 || 0,
                s = (r[7] || "0").substring(0, 3);
              return n ? new Date(Date.UTC(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s)) : new Date(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s);
            }
          }
          return new Date(e);
        }(t), this.$x = t.x || {}, this.init();
      }, m.init = function () {
        var t = this.$d;
        this.$y = t.getFullYear(), this.$M = t.getMonth(), this.$D = t.getDate(), this.$W = t.getDay(), this.$H = t.getHours(), this.$m = t.getMinutes(), this.$s = t.getSeconds(), this.$ms = t.getMilliseconds();
      }, m.$utils = function () {
        return O;
      }, m.isValid = function () {
        return !(this.$d.toString() === l);
      }, m.isSame = function (t, e) {
        var n = w(t);
        return this.startOf(e) <= n && n <= this.endOf(e);
      }, m.isAfter = function (t, e) {
        return w(t) < this.startOf(e);
      }, m.isBefore = function (t, e) {
        return this.endOf(e) < w(t);
      }, m.$g = function (t, e, n) {
        return O.u(t) ? this[e] : this.set(n, t);
      }, m.unix = function () {
        return Math.floor(this.valueOf() / 1e3);
      }, m.valueOf = function () {
        return this.$d.getTime();
      }, m.startOf = function (t, e) {
        var n = this,
          r = !!O.u(e) || e,
          h = O.p(t),
          l = function (t, e) {
            var i = O.w(n.$u ? Date.UTC(n.$y, e, t) : new Date(n.$y, e, t), n);
            return r ? i : i.endOf(a);
          },
          $ = function (t, e) {
            return O.w(n.toDate()[t].apply(n.toDate("s"), (r ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e)), n);
          },
          y = this.$W,
          M = this.$M,
          m = this.$D,
          v = "set" + (this.$u ? "UTC" : "");
        switch (h) {
          case c:
            return r ? l(1, 0) : l(31, 11);
          case f:
            return r ? l(1, M) : l(0, M + 1);
          case o:
            var g = this.$locale().weekStart || 0,
              D = (y < g ? y + 7 : y) - g;
            return l(r ? m - D : m + (6 - D), M);
          case a:
          case d:
            return $(v + "Hours", 0);
          case u:
            return $(v + "Minutes", 1);
          case s:
            return $(v + "Seconds", 2);
          case i:
            return $(v + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, m.endOf = function (t) {
        return this.startOf(t, !1);
      }, m.$set = function (t, e) {
        var n,
          o = O.p(t),
          h = "set" + (this.$u ? "UTC" : ""),
          l = (n = {}, n[a] = h + "Date", n[d] = h + "Date", n[f] = h + "Month", n[c] = h + "FullYear", n[u] = h + "Hours", n[s] = h + "Minutes", n[i] = h + "Seconds", n[r] = h + "Milliseconds", n)[o],
          $ = o === a ? this.$D + (e - this.$W) : e;
        if (o === f || o === c) {
          var y = this.clone().set(d, 1);
          y.$d[l]($), y.init(), this.$d = y.set(d, Math.min(this.$D, y.daysInMonth())).$d;
        } else l && this.$d[l]($);
        return this.init(), this;
      }, m.set = function (t, e) {
        return this.clone().$set(t, e);
      }, m.get = function (t) {
        return this[O.p(t)]();
      }, m.add = function (r, h) {
        var d,
          l = this;
        r = Number(r);
        var $ = O.p(h),
          y = function (t) {
            var e = w(l);
            return O.w(e.date(e.date() + Math.round(t * r)), l);
          };
        if ($ === f) return this.set(f, this.$M + r);
        if ($ === c) return this.set(c, this.$y + r);
        if ($ === a) return y(1);
        if ($ === o) return y(7);
        var M = (d = {}, d[s] = e, d[u] = n, d[i] = t, d)[$] || 1,
          m = this.$d.getTime() + r * M;
        return O.w(m, this);
      }, m.subtract = function (t, e) {
        return this.add(-1 * t, e);
      }, m.format = function (t) {
        var e = this,
          n = this.$locale();
        if (!this.isValid()) return n.invalidDate || l;
        var r = t || "YYYY-MM-DDTHH:mm:ssZ",
          i = O.z(this),
          s = this.$H,
          u = this.$m,
          a = this.$M,
          o = n.weekdays,
          f = n.months,
          h = function (t, n, i, s) {
            return t && (t[n] || t(e, r)) || i[n].slice(0, s);
          },
          c = function (t) {
            return O.s(s % 12 || 12, t, "0");
          },
          d = n.meridiem || function (t, e, n) {
            var r = t < 12 ? "AM" : "PM";
            return n ? r.toLowerCase() : r;
          },
          $ = {
            YY: String(this.$y).slice(-2),
            YYYY: this.$y,
            M: a + 1,
            MM: O.s(a + 1, 2, "0"),
            MMM: h(n.monthsShort, a, f, 3),
            MMMM: h(f, a),
            D: this.$D,
            DD: O.s(this.$D, 2, "0"),
            d: String(this.$W),
            dd: h(n.weekdaysMin, this.$W, o, 2),
            ddd: h(n.weekdaysShort, this.$W, o, 3),
            dddd: o[this.$W],
            H: String(s),
            HH: O.s(s, 2, "0"),
            h: c(1),
            hh: c(2),
            a: d(s, u, !0),
            A: d(s, u, !1),
            m: String(u),
            mm: O.s(u, 2, "0"),
            s: String(this.$s),
            ss: O.s(this.$s, 2, "0"),
            SSS: O.s(this.$ms, 3, "0"),
            Z: i
          };
        return r.replace(y, function (t, e) {
          return e || $[t] || i.replace(":", "");
        });
      }, m.utcOffset = function () {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, m.diff = function (r, d, l) {
        var $,
          y = O.p(d),
          M = w(r),
          m = (M.utcOffset() - this.utcOffset()) * e,
          v = this - M,
          g = O.m(this, M);
        return g = ($ = {}, $[c] = g / 12, $[f] = g, $[h] = g / 3, $[o] = (v - m) / 6048e5, $[a] = (v - m) / 864e5, $[u] = v / n, $[s] = v / e, $[i] = v / t, $)[y] || v, l ? g : O.a(g);
      }, m.daysInMonth = function () {
        return this.endOf(f).$D;
      }, m.$locale = function () {
        return D[this.$L];
      }, m.locale = function (t, e) {
        if (!t) return this.$L;
        var n = this.clone(),
          r = S(t, e, !0);
        return r && (n.$L = r), n;
      }, m.clone = function () {
        return O.w(this.$d, this);
      }, m.toDate = function () {
        return new Date(this.valueOf());
      }, m.toJSON = function () {
        return this.isValid() ? this.toISOString() : null;
      }, m.toISOString = function () {
        return this.$d.toISOString();
      }, m.toString = function () {
        return this.$d.toUTCString();
      }, M;
    }(),
    T = _.prototype;
  return w.prototype = T, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", f], ["$y", c], ["$D", d]].forEach(function (t) {
    T[t[1]] = function (e) {
      return this.$g(e, t[0], t[1]);
    };
  }), w.extend = function (t, e) {
    return t.$i || (t(e, _, w), t.$i = !0), w;
  }, w.locale = S, w.isDayjs = p, w.unix = function (t) {
    return w(1e3 * t);
  }, w.en = D[g], w.Ls = D, w.p = {}, w;
});

/***/ }),

/***/ 5951:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var mod; }
})(this, function (exports) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  exports.Promise = Promise;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var noop = function noop() {
    return false;
  };
  var defaultMaxListeners = 10;
  var EventEmitter = function () {
    function EventEmitter() {
      _classCallCheck(this, EventEmitter);
      this._events = this._events || {};
      this._maxListeners = this._maxListeners || defaultMaxListeners;
    }
    _createClass(EventEmitter, [{
      key: 'setMaxListeners',
      value: function setMaxListeners(n) {
        if (typeof n !== 'number' || n < 0) throw TypeError('n must be a positive number');
        this._maxListeners = n;
      }
    }, {
      key: 'emit',
      value: function emit(type) {
        var er, handler, len, args, i, listeners;
        if (!this._events) this._events = {};

        // If there is no 'error' event listener then throw.
        if (type === 'error') {
          if (!this._events.error || typeof this._events.error === 'object' && !this._events.error.length) {
            er = arguments[1];
            if (this.domain) {
              if (!er) er = new TypeError('Uncaught, unspecified "error" event.');
            } else if (er instanceof Error) {
              throw er; // Unhandled 'error' event
            } else {
              throw TypeError('Uncaught, unspecified "error" event.');
            }
            return false;
          }
        }
        handler = this._events[type];
        if (typeof handler === 'undefined') return false;
        if (typeof handler === 'function') {
          switch (arguments.length) {
            // fast cases
            case 1:
              handler.call(this);
              break;
            case 2:
              handler.call(this, arguments[1]);
              break;
            case 3:
              handler.call(this, arguments[1], arguments[2]);
              break;
            // slower
            default:
              len = arguments.length;
              args = new Array(len - 1);
              for (i = 1; i < len; i++) args[i - 1] = arguments[i];
              handler.apply(this, args);
          }
        } else if (typeof handler === 'object') {
          len = arguments.length;
          args = new Array(len - 1);
          for (i = 1; i < len; i++) args[i - 1] = arguments[i];
          listeners = handler.slice();
          len = listeners.length;
          for (i = 0; i < len; i++) listeners[i].apply(this, args);
        }
        return true;
      }
    }, {
      key: 'addListener',
      value: function addListener(type, listener) {
        var m;
        if (typeof listener !== 'function') throw TypeError('listener must be a function');
        if (!this._events) this._events = {};

        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (this._events.newListener) this.emit('newListener', type, typeof listener.listener === 'function' ? listener.listener : listener);
        if (!this._events[type])
          // Optimize the case of one listener. Don't need the extra array object.
          this._events[type] = listener;else if (typeof this._events[type] === 'object')
          // If we've already got an array, just append.
          this._events[type].push(listener);else
          // Adding the second element, need to change to array.
          this._events[type] = [this._events[type], listener];

        // Check for listener leak
        if (typeof this._events[type] === 'object' && !this._events[type].warned) {
          m = this._maxListeners;
          if (m && m > 0 && this._events[type].length > m) {
            this._events[type].warned = true;
            console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
            console.trace();
          }
        }
        return this;
      }
    }, {
      key: 'on',
      value: function on() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return this.addListener.apply(this, args);
      }
    }, {
      key: 'once',
      value: function once(type, listener) {
        if (typeof listener !== 'function') throw TypeError('listener must be a function');
        function g() {
          this.removeListener(type, g);
          listener.apply(this, arguments);
        }
        g.listener = listener;
        this.on(type, g);
        return this;
      }
    }, {
      key: 'removeListener',
      value: function removeListener(type, listener) {
        var list, position, length, i;
        if (typeof listener !== 'function') throw TypeError('listener must be a function');
        if (!this._events || !this._events[type]) return this;
        list = this._events[type];
        length = list.length;
        position = -1;
        if (list === listener || typeof list.listener === 'function' && list.listener === listener) {
          this._events[type] = undefined;
          if (this._events.removeListener) this.emit('removeListener', type, listener);
        } else if (typeof list === 'object') {
          for (i = length; i-- > 0;) {
            if (list[i] === listener || list[i].listener && list[i].listener === listener) {
              position = i;
              break;
            }
          }
          if (position < 0) return this;
          if (list.length === 1) {
            list.length = 0;
            this._events[type] = undefined;
          } else {
            list.splice(position, 1);
          }
          if (this._events.removeListener) this.emit('removeListener', type, listener);
        }
        return this;
      }
    }, {
      key: 'removeAllListeners',
      value: function removeAllListeners(type) {
        var key, listeners;
        if (!this._events) return this;

        // not listening for removeListener, no need to emit
        if (!this._events.removeListener) {
          if (arguments.length === 0) this._events = {};else if (this._events[type]) this._events[type] = undefined;
          return this;
        }

        // emit removeListener for all listeners on all events
        if (arguments.length === 0) {
          var keys = Object.keys(this._events);
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (key === 'removeListener') continue;
            this.removeAllListeners(key);
          }
          this.removeAllListeners('removeListener');
          this._events = {};
          return this;
        }
        listeners = this._events[type];
        if (typeof listeners === 'function') {
          this.removeListener(type, listeners);
        } else {
          // LIFO order
          while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);
        }
        this._events[type] = undefined;
        return this;
      }
    }, {
      key: 'listeners',
      value: function listeners(type) {
        var ret;
        if (!this._events || !this._events[type]) ret = [];else if (typeof this._events[type] === 'function') ret = [this._events[type]];else ret = this._events[type].slice();
        return ret;
      }
    }], [{
      key: 'listenerCount',
      value: function listenerCount(emitter, type) {
        var ret;
        if (!emitter._events || !emitter._events[type]) ret = 0;else if (typeof emitter._events[type] === 'function') ret = 1;else ret = emitter._events[type].length;
        return ret;
      }
    }, {
      key: 'inherits',
      value: function inherits(ctor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    }, {
      key: 'extend',
      value: function extend(target) {
        return _extend(target, new EventEmitter(), EventEmitter.prototype);
      }
    }]);
    return EventEmitter;
  }();
  exports.EventEmitter = EventEmitter;
  function _extend(target) {
    for (var _len2 = arguments.length, objs = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      objs[_key2 - 1] = arguments[_key2];
    }
    for (var i = 0, l = objs.length; i < l; i++) {
      var keys = Object.getOwnPropertyNames(objs[i] || {});
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;
      try {
        for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var key = _step.value;
          target[key] = objs[i][key];
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return target;
  }
  var _Promise = function () {
    function _Promise() {
      var resolver = arguments.length <= 0 || arguments[0] === undefined ? noop : arguments[0];
      _classCallCheck(this, _Promise);
      this._settled = false;
      this._success = false;
      this._args = [];
      this._callbacks = [];
      this._onReject = noop;
      resolver(this.resolve.bind(this), this.reject.bind(this));
    }
    _createClass(_Promise, [{
      key: 'then',
      value: function then(onResolve) {
        var _this = this;
        var onReject = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];
        var promise = new _Promise();
        this._onReject = onReject;
        this._callbacks.push(function () {
          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          var ret = onResolve.apply(_this, args);
          if (ret && typeof ret.then == 'function') {
            ret.then(promise.resolve.bind(promise), promise.reject.bind(promise));
          }
        });
        if (this._settled) {
          if (this._success) {
            this.resolve.apply(this, this._args);
          } else {
            this.onReject.apply(this, this._args);
          }
        }
        return promise;
      }
    }, {
      key: 'catch',
      value: function _catch(onReject) {
        this._onReject = onReject;
        return this;
      }
    }, {
      key: 'resolve',
      value: function resolve() {
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;
        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        try {
          for (var _iterator2 = this._callbacks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var handler = _step2.value;
            handler.apply(this, args);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2['return']) {
              _iterator2['return']();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
        this._args = args;
        this._settled = true;
        this._success = true;
      }
    }, {
      key: 'reject',
      value: function reject() {
        for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          args[_key5] = arguments[_key5];
        }
        this._onReject.apply(this, args);
        this._args = args;
        this._settled = true;
      }
    }]);
    return _Promise;
  }();
  var nativePromise = ('undefined' !== typeof __webpack_require__.g ? __webpack_require__.g : window).Promise || null;
  function Promise(resolver) {
    var promise = null;
    var resolve = noop;
    var reject = noop;
    resolver = resolver || noop;
    if (nativePromise) {
      promise = new nativePromise(function (_1, _2) {
        resolve = _1;
        reject = _2;
        resolver(_1, _2);
      });
      promise.resolve = function () {
        for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          args[_key6] = arguments[_key6];
        }
        resolve.apply(promise, args);
      };
      promise.reject = function () {
        for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          args[_key7] = arguments[_key7];
        }
        reject.apply(promise, args);
      };
    } else {
      promise = new _Promise(resolver);
    }
    return promise;
  }
});

/***/ }),

/***/ 7773:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(9972);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above

  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);
      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }
    var keys = getOwnPropertyNames(sourceComponent);
    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }
    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }
  return targetComponent;
}
module.exports = hoistNonReactStatics;

/***/ }),

/***/ 6368:
/***/ (function(module) {

module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/***/ }),

/***/ 3974:
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */;(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined;/** Used as the semantic version number. */var VERSION='4.17.21';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function',INVALID_TEMPL_VAR_ERROR_TEXT='Invalid `variable` option passed into `_.template`';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for cloning. */var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for function metadata. */var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading whitespace. */var reTrimStart=/^\s+/;/** Used to match a single whitespace character. */var reWhitespace=/\s/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */var reForbiddenIdentifierChars=/[()=,{}\[\]\/\s]/;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f',reComboHalfMarksRange='\\ufe20-\\ufe2f',rsComboSymbolsRange='\\u20d0-\\u20ff',rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos="['\u2019]",rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d';/** Used to compose unicode regexes. */var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
'\u0100':'A','\u0102':'A','\u0104':'A','\u0101':'a','\u0103':'a','\u0105':'a','\u0106':'C','\u0108':'C','\u010a':'C','\u010c':'C','\u0107':'c','\u0109':'c','\u010b':'c','\u010d':'c','\u010e':'D','\u0110':'D','\u010f':'d','\u0111':'d','\u0112':'E','\u0114':'E','\u0116':'E','\u0118':'E','\u011a':'E','\u0113':'e','\u0115':'e','\u0117':'e','\u0119':'e','\u011b':'e','\u011c':'G','\u011e':'G','\u0120':'G','\u0122':'G','\u011d':'g','\u011f':'g','\u0121':'g','\u0123':'g','\u0124':'H','\u0126':'H','\u0125':'h','\u0127':'h','\u0128':'I','\u012a':'I','\u012c':'I','\u012e':'I','\u0130':'I','\u0129':'i','\u012b':'i','\u012d':'i','\u012f':'i','\u0131':'i','\u0134':'J','\u0135':'j','\u0136':'K','\u0137':'k','\u0138':'k','\u0139':'L','\u013b':'L','\u013d':'L','\u013f':'L','\u0141':'L','\u013a':'l','\u013c':'l','\u013e':'l','\u0140':'l','\u0142':'l','\u0143':'N','\u0145':'N','\u0147':'N','\u014a':'N','\u0144':'n','\u0146':'n','\u0148':'n','\u014b':'n','\u014c':'O','\u014e':'O','\u0150':'O','\u014d':'o','\u014f':'o','\u0151':'o','\u0154':'R','\u0156':'R','\u0158':'R','\u0155':'r','\u0157':'r','\u0159':'r','\u015a':'S','\u015c':'S','\u015e':'S','\u0160':'S','\u015b':'s','\u015d':'s','\u015f':'s','\u0161':'s','\u0162':'T','\u0164':'T','\u0166':'T','\u0163':'t','\u0165':'t','\u0167':'t','\u0168':'U','\u016a':'U','\u016c':'U','\u016e':'U','\u0170':'U','\u0172':'U','\u0169':'u','\u016b':'u','\u016d':'u','\u016f':'u','\u0171':'u','\u0173':'u','\u0174':'W','\u0175':'w','\u0176':'Y','\u0177':'y','\u0178':'Y','\u0179':'Z','\u017b':'Z','\u017d':'Z','\u017a':'z','\u017c':'z','\u017e':'z','\u0132':'IJ','\u0133':'ij','\u0152':'Oe','\u0153':'oe','\u0149':"'n",'\u017f':'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=typeof __webpack_require__.g=='object'&&__webpack_require__.g&&__webpack_require__.g.Object===Object&&__webpack_require__.g;/** Detect free variable `self`. */var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports= true&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&"object"=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/*--------------------------------------------------------------------------*/ /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */function arrayIncludes(array,value){var length=array==null?0:array.length;return!!length&&baseIndexOf(array,value,0)>-1;}/**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */var asciiSize=baseProperty('length');/**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function asciiToArray(string){return string.split('');}/**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}/**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return-1;}/**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */function baseIsNaN(value){return value!==value;}/**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}/**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */function baseProperty(key){return function(object){return object==null?undefined:object[key];};}/**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */function basePropertyOf(object){return function(key){return object==null?undefined:object[key];};}/**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined){result=result===undefined?current:result+current;}}return result;}/**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */function baseToPairs(object,props){return arrayMap(props,function(key){return[key,object[key]];});}/**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,''):string;}/**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */function baseUnary(func){return function(value){return func(value);};}/**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */function cacheHas(cache,key){return cache.has(key);}/**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */var deburrLetter=basePropertyOf(deburredLetters);/**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */function escapeStringChar(chr){return'\\'+stringEscapes[chr];}/**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */function getValue(object,key){return object==null?undefined:object[key];}/**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */function hasUnicode(string){return reHasUnicode.test(string);}/**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return-1;}/**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */function trimmedEndIndex(string){var index=string.length;while(index--&&reWhitespace.test(string.charAt(index))){}return index;}/**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/*--------------------------------------------------------------------------*/ /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */var nativeObjectToString=objectProto.toString;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined,Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=Symbol?Symbol.isConcatSpreadable:undefined,symIterator=Symbol?Symbol.iterator:undefined,symToStringTag=Symbol?Symbol.toStringTag:undefined;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return{};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined;return result;};}();/**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */function baseLodash(){// No operation performed.
}/**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined;}/**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */lodash.templateSettings={/**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'escape':reEscape,/**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'evaluate':reEvaluate,/**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */'interpolate':reInterpolate,/**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */'variable':'',/**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */'imports':{/**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */'_':lodash}};// Ensure wrappers are instances of `baseLodash`.
lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/*------------------------------------------------------------------------*/ /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else{result=this.clone();result.__dir__*=-1;}return result;}/**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else{break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/*------------------------------------------------------------------------*/ /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;}/**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);}/**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/*------------------------------------------------------------------------*/ /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */function listCacheClear(){this.__data__=[];this.size=0;}/**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else{splice.call(data,index,1);}--this.size;return true;}/**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];}/**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else{data[index][1]=value;}return this;}// Add methods to `ListCache`.
ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/*------------------------------------------------------------------------*/ /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/*------------------------------------------------------------------------*/ /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/*------------------------------------------------------------------------*/ /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */function stackGet(key){return this.__data__.get(key);}/**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */function stackHas(key){return this.__data__.has(key);}/**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/*------------------------------------------------------------------------*/ /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
isIndex(key,length)))){result.push(key);}}return result;}/**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined;}/**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}/**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function assignMergeValue(object,key,value){if(value!==undefined&&!eq(object[key],value)||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object)){baseAssignValue(object,key,value);}}/**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return-1;}/**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}/**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else{object[key]=value;}}/**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined:get(object,paths[index]);}return result;}/**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined){number=number<=upper?number:upper;}if(lower!==undefined){number=number>=lower?number:lower;}}return number;}/**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else{if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}// Check for circular references and return its corresponding clone.
stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}/**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return!length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined&&!(key in object)||!predicate(value)){return false;}}return true;}/**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined,args);},wait);}/**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */var baseEach=createBaseEach(baseForOwn);/**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
baseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */var baseFor=createBaseFor();/**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */var baseForRight=createBaseFor(true);/**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;}/**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */function baseGt(value,other){return value>other;}/**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined:apply(func,object,args);}/**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}/**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}/**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}/**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}/**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}/**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}/**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
if(typeof value=='function'){return value;}if(value==null){return identity;}if(typeof value=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */function baseLt(value,other){return value<other;}/**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}/**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){stack||(stack=new Stack());if(isObject(srcValue)){baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else{var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined;if(newValue===undefined){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}/**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined;var isCommon=newValue===undefined;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else{newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||isFunction(objValue)){newValue=initCloneObject(srcValue);}}else{isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined;}/**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap(iteratees,function(iteratee){if(isArray(iteratee)){return function(value){return baseGet(value,iteratee.length===1?iteratee[0]:iteratee);};}return iteratee;});}else{iteratees=[identity];}var index=-1;iteratees=arrayMap(iteratees,baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return{'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}/**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}/**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else{baseUnset(array,index);}}}return array;}/**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */function baseSample(collection){return arraySample(values(collection));}/**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}/**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(key==='__proto__'||key==='constructor'||key==='prototype'){return object;}if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined;if(newValue===undefined){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};/**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return!result;});return!!result;}/**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else{high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */function baseSortedIndexBy(array,value,iteratee,retHighest){var low=0,high=array==null?0:array.length;if(high===0){return 0;}value=iteratee(value);var valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else{setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else{high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return+value;}/**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else{seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}/**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}/**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined;assignFunc(result,props[index],value);}return result;}/**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */function castFunction(value){return typeof value=='function'?value:identity;}/**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}/**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */var castRest=baseRest;/**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */function castSlice(array,start,end){var length=array.length;end=end===undefined?length:end;return!start&&end>=length?array:baseSlice(array,start,end);}/**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1;}}return 0;}/**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// that causes it, under certain circumstances, to provide the same value for
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// for more details.
//
// This also ensures a stable sort in V8 and other engines.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
return object.index-other.index;}/**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined;if(newValue===undefined){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else{assignValue(object,key,newValue);}}return object;}/**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}/**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined,guard=length>2?sources[2]:undefined;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
// for more details.
var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
// See https://es5.github.io/#x13.2.2 for more details.
return isObject(result)?result:thisBinding;};}/**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined,args,holders,undefined,undefined,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined;};}/**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else{wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined&&other===undefined){return defaultValue;}if(value!==undefined){result=value;}if(other!==undefined){if(result===undefined){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else{value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */function createPadding(length,chars){chars=chars===undefined?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined;}// Ensure the sign of `-0` is preserved.
start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}step=step===undefined?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined,newHoldersRight=isCurry?undefined:holders,newPartials=isCurry?partials:undefined,newPartialsRight=isCurry?undefined:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision&&nativeIsFinite(number)){// Shift with exponential notation to avoid floating-point issues.
// See [MDN](https://mdn.io/round#Examples) for more details.
var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return+(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined;}ary=ary===undefined?ary:nativeMax(toInteger(ary),0);arity=arity===undefined?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined;}var data=isBindKey?undefined:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else{result=createHybrid.apply(undefined,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}/**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */function customOmitClone(value){return isPlainObject(value)?undefined:value;}/**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Check that cyclic values are equal.
var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
// Invalid dates are coerced to `NaN`.
return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// for more details.
return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Check that cyclic values are equal.
var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */function flatRest(func){return setToString(overRest(func,undefined,flatten),func+'');}/**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined;}/**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else{delete value[symToStringTag];}}return result;}/**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return[];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};/**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return{'start':start,'end':end};}/**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}/**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index;if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value;if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */function isKeyable(value){var type=typeof value;return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return!!data&&func===data[0];}/**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}/**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */var isMaskable=coreJsData?isFunction:stubFalse;/**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}/**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */function isStrictComparable(value){return value===value&&!isObject(value);}/**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object));};}/**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;// Exit early if metadata can't be merged.
if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}// Compose partial arguments.
var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
data[0]=source[0];data[1]=newBitmask;return data;}/**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */function objectToString(value){return nativeObjectToString.call(value);}/**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */function overRest(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}/**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined;}return array;}/**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */function safeGet(object,key){if(key==='constructor'&&typeof object[key]==='function'){return;}if(key=='__proto__'){return;}return object[key];}/**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */var setData=shortOut(baseSetData);/**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */var setToString=shortOut(baseSetToString);/**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else{count=0;}return func.apply(undefined,arguments);};}/**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});/**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return'';}/**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/*------------------------------------------------------------------------*/ /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined){size=1;}else{size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return[];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */function concat(){var length=arguments.length;if(!length){return[];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined,comparator):[];});/**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return[];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length-1;if(fromIndex!==undefined){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}/**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}/**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return[];}depth=depth===undefined?1:toInteger(depth);return baseFlatten(array,depth);}/**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */function head(array){return array&&array.length?array[0]:undefined;}/**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}/**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined;}else{mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator=='function'?comparator:undefined;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined,comparator):[];});/**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}/**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined;}/**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length;if(fromIndex!==undefined){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined;}/**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */var pull=baseRest(pullAll);/**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined,comparator):array;}/**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */function reverse(array){return array==null?array:nativeReverse.call(array);}/**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */function slice(array,start,end){var length=array==null?0:array.length;if(!length){return[];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else{start=start==null?0:toInteger(start);end=end===undefined?length:toInteger(end);}return baseSlice(array,start,end);}/**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return-1;}/**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return-1;}/**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}/**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */function take(array,n,guard){if(!(array&&array.length)){return[];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined,comparator);});/**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */function uniqWith(array,comparator){comparator=typeof comparator=='function'?comparator:undefined;return array&&array.length?baseUniq(array,undefined,comparator):[];}/**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */function unzip(array){if(!(array&&array.length)){return[];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */function unzipWith(array,iteratee){if(!(array&&array.length)){return[];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined,group);});}/**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined,comparator);});/**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */var zip=baseRest(unzip);/**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined;return unzipWith(arrays,iteratee);});/*------------------------------------------------------------------------*/ /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */function tap(value,interceptor){interceptor(value);return value;}/**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */function thru(value,interceptor){return interceptor(value);}/**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined);}return array;});});/**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */function wrapperChain(){return chain(this);}/**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */function wrapperNext(){if(this.__values__===undefined){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined:this.__values__[this.__index__++];return{'done':done,'value':value};}/**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */function wrapperToIterator(){return this;}/**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined;if(result){previous.__wrapped__=clone;}else{result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/*------------------------------------------------------------------------*/ /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else{baseAssignValue(result,key,1);}});/**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */var find=createFind(findIndex);/**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */var findLast=createFind(findLastIndex);/**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else{baseAssignValue(result,key,[value]);}});/**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});/**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return[];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return[[],[]];});/**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined){n=1;}else{n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));}/**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return[];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/*------------------------------------------------------------------------*/ /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */var now=ctxNow||function(){return root.Date.now();};/*------------------------------------------------------------------------*/ /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */function ary(func,n,guard){n=guard?undefined:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined,undefined,undefined,undefined,n);}/**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined;}return result;};}/**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */function curry(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curry.placeholder;return result;}/**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */function curryRight(func,arity,guard){arity=guard?undefined:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curryRight.placeholder;return result;}/**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
lastInvokeTime=time;// Start the timer for the trailing edge.
timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
// trailing edge, the system time has gone backwards and we're treating
// it as the trailing edge, or we've hit the `maxWait` limit.
return lastCallTime===undefined||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined;// Only invoke if we have `lastArgs` which means `func` has been
// debounced at least once.
if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined;return result;}function cancel(){if(timerId!==undefined){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined;}function flush(){return timerId===undefined?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}/**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
memoize.Cache=MapCache;/**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return!predicate.call(this);case 1:return!predicate.call(this,args[0]);case 2:return!predicate.call(this,args[0],args[1]);case 3:return!predicate.call(this,args[0],args[1],args[2]);}return!predicate.apply(this,args);};}/**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */function once(func){return before(2,func);}/**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined,partials,holders);});/**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined,partials,holders);});/**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined,undefined,undefined,indexes);});/**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined?start:toInteger(start);return baseRest(func,start);}/**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}/**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */function unary(func){return ary(func,1);}/**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */function wrap(value,wrapper){return partial(castFunction(wrapper),value);}/*------------------------------------------------------------------------*/ /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */function castArray(){if(!arguments.length){return[];}var value=arguments[0];return isArray(value)?value:[value];}/**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}/**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */function cloneWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}/**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}/**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */function cloneDeepWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}/**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */function eq(value,other){return value===other||value!==value&&other!==other;}/**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */var gt=createRelationalOperation(baseGt);/**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */var isArray=Array.isArray;/**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}/**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */var isBuffer=nativeIsBuffer||stubFalse;/**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}/**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size;}if(isPrototype(value)){return!baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */function isEqual(value,other){return baseIsEqual(value,other);}/**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined;var result=customizer?customizer(value,other):undefined;return result===undefined?baseIsEqual(value,other,undefined,customizer):!!result;}/**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message=='string'&&typeof value.name=='string'&&!isPlainObject(value);}/**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}/**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
// in Safari 9 which returns 'object' for typed arrays and other constructors.
var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);}/**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */function isObject(value){var type=typeof value;return value!=null&&(type=='object'||type=='function');}/**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */function isObjectLike(value){return value!=null&&typeof value=='object';}/**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
// Perform the `toStringTag` check first to avoid errors with some
// ActiveX objects in IE.
return isNumber(value)&&value!=+value;}/**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */function isNull(value){return value===null;}/**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */function isNil(value){return value==null;}/**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}/**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}/**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */function isSymbol(value){return typeof value=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}/**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */function isUndefined(value){return value===undefined;}/**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}/**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */var lt=createRelationalOperation(baseLt);/**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */function toArray(value){if(!value){return[];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}/**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */function toString(value){return value==null?'':baseToString(value);}/*------------------------------------------------------------------------*/ /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */var at=flatRest(baseAt);/**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}/**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});/**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */var defaultsDeep=baseRest(function(args){args.push(undefined,customDefaultsMerge);return apply(mergeWith,undefined,args);});/**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;}/**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));/**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else{result[value]=[key];}},getIteratee);/**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */var invoke=baseRest(baseInvoke);/**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});/**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});/**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */function pickBy(object,predicate){if(object==null){return{};}var props=arrayMap(getAllKeysIn(object),function(prop){return[prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}/**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
if(!length){length=1;object=undefined;}while(++index<length){var value=object==null?undefined:object[toKey(path[index])];if(value===undefined){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseSet(object,path,value,customizer);}/**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */var toPairs=createToPairs(keys);/**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */var toPairsIn=createToPairs(keysIn);/**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else{accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */function values(object){return object==null?[]:baseValues(object,keys(object));}/**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/*------------------------------------------------------------------------*/ /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */function clamp(number,lower,upper){if(upper===undefined){upper=lower;lower=undefined;}if(upper!==undefined){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */function inRange(number,start,end){start=toFinite(start);if(end===undefined){end=start;start=0;}else{end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined;}if(floating===undefined){if(typeof upper=='boolean'){floating=upper;upper=undefined;}else if(typeof lower=='boolean'){floating=lower;lower=undefined;}}if(lower===undefined&&upper===undefined){lower=0;upper=1;}else{lower=toFinite(lower);if(upper===undefined){upper=lower;lower=0;}else{upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/*------------------------------------------------------------------------*/ /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */var lowerFirst=createCaseFirst('toLowerCase');/**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined){n=1;}else{n=toInteger(n);}return baseRepeat(toString(string),n);}/**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined;}limit=limit===undefined?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return[];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
// (http://ejohn.org/blog/javascript-micro-templating/)
// and Laura Doktorova's doT.js (https://github.com/olado/doT).
var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
// The sourceURL gets injected into the source that's eval-ed, so be careful
// to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
// and escape the comment, thus injecting code that gets evaled.
var sourceURL='//# sourceURL='+(hasOwnProperty.call(options,'sourceURL')?(options.sourceURL+'').replace(/\s/g,' '):'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
// order to produce the correct `offset` value.
return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
// code to add the data object to the top of the scope chain.
var variable=hasOwnProperty.call(options,'variable')&&options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Throw an error if a forbidden character was found in `variable`, to prevent
// potential command injection attacks.
else if(reForbiddenIdentifierChars.test(variable)){throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);}// Cleanup code by stripping empty strings.
source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined,importsValues);});// Provide the compiled function's source by its `toString` method or
// the `source` property as a convenience for inlining compiled templates.
result.source=source;if(isError(result)){throw result;}return result;}/**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */function toLower(value){return toString(value).toLowerCase();}/**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */function toUpper(value){return toString(value).toUpperCase();}/**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return baseTrim(string);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.slice(0,trimmedEndIndex(string)+1);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */var upperFirst=createCaseFirst('toUpperCase');/**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined:pattern;if(pattern===undefined){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/*------------------------------------------------------------------------*/ /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */var attempt=baseRest(function(func,args){try{return apply(func,undefined,args);}catch(e){return isError(e)?e:new Error(e);}});/**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return[toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}/**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */function constant(value){return function(){return value;};}/**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */var flow=createFlow();/**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */var flowRight=createFlow(true);/**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */function identity(value){return value;}/**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,CLONE_DEEP_FLAG));}/**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}/**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}/**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */function noop(){// No operation performed.
}/**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */var over=createOver(arrayMap);/**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */var overEvery=createOver(arrayEvery);/**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */var overSome=createOver(arraySome);/**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */function propertyOf(object){return function(path){return object==null?undefined:baseGet(object,path);};}/**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */var range=createRange();/**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */var rangeRight=createRange(true);/**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */function stubArray(){return[];}/**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */function stubFalse(){return false;}/**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */function stubObject(){return{};}/**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */function stubString(){return'';}/**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */function stubTrue(){return true;}/**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return[];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}/**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/*------------------------------------------------------------------------*/ /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */var ceil=createRound('ceil');/**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */var floor=createRound('floor');/**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined;}/**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined;}/**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */function mean(array){return baseMean(array,identity);}/**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined;}/**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined;}/**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */var round=createRound('round');/**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
mixin(lodash,lodash);/*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});/*------------------------------------------------------------------------*/ /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */lodash.VERSION=VERSION;// Assign default placeholders.
arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else{result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'';if(!hasOwnProperty.call(realNames,key)){realNames[key]=[];}realNames[key].push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined,WRAP_BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined}];// Add methods to `LazyWrapper`.
LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};/*--------------------------------------------------------------------------*/ // Export lodash.
var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
if(true){// Expose Lodash on the global object to prevent errors when Lodash is
// loaded by a script tag in the presence of an AMD loader.
// See http://requirejs.org/docs/errors.html#mismatch for more details.
// Use `_.noConflict` to remove Lodash from the global object.
root._=_;// Define as an anonymous module so, through path mapping, it can be
// referenced as the "underscore" module.
!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return _;}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}// Check for `exports` after `define` in case a build optimizer adds it.
else {}}).call(this);

/***/ }),

/***/ 3433:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(6642);
function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }
  ;
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  ;
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

/***/ }),

/***/ 3074:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(3433)();
}

/***/ }),

/***/ 6642:
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

/***/ }),

/***/ 3748:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(5466),
  ca = __webpack_require__(7767);
function p(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = new Set(),
  ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + "Capture", b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++) da.add(b[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
  ja = Object.prototype.hasOwnProperty,
  ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  la = {},
  ma = {};
function oa(a) {
  if (ja.call(ma, a)) return !0;
  if (ja.call(la, a)) return !1;
  if (ka.test(a)) return ma[a] = !0;
  la[a] = !0;
  return !1;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;
  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return !1;
  }
}
function qa(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;
    case 4:
      return !1 === b;
    case 5:
      return isNaN(b);
    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}
function v(a, b, c, d, e, f, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  z[a] = new v(a, 0, !1, a, null, !1, !1);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  z[b] = new v(b, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  z[a] = new v(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  z[a] = new v(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  z[a] = new v(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  z[a] = new v(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  z[a] = new v(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  z[a] = new v(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(ra, sa);
  z[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
z.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (a) {
  z[a] = new v(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function ta(a, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1]) qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  va = Symbol.for("react.element"),
  wa = Symbol.for("react.portal"),
  ya = Symbol.for("react.fragment"),
  za = Symbol.for("react.strict_mode"),
  Aa = Symbol.for("react.profiler"),
  Ba = Symbol.for("react.provider"),
  Ca = Symbol.for("react.context"),
  Da = Symbol.for("react.forward_ref"),
  Ea = Symbol.for("react.suspense"),
  Fa = Symbol.for("react.suspense_list"),
  Ga = Symbol.for("react.memo"),
  Ha = Symbol.for("react.lazy");
Symbol.for("react.scope");
Symbol.for("react.debug_trace_mode");
var Ia = Symbol.for("react.offscreen");
Symbol.for("react.legacy_hidden");
Symbol.for("react.cache");
Symbol.for("react.tracing_marker");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign,
  La;
function Ma(a) {
  if (void 0 === La) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    La = b && b[1] || "";
  }
  return "\n" + La + a;
}
var Na = !1;
function Oa(a, b) {
  if (!a || Na) return "";
  Na = !0;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b) {
      if (b = function () {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function () {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l) {
          var d = l;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l) {
          d = l;
        }
        a.call(b.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (l) {
        d = l;
      }
      a();
    }
  } catch (l) {
    if (l && d && "string" === typeof l.stack) {
      for (var e = l.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) h--;
      for (; 1 <= g && 0 <= h; g--, h--) if (e[g] !== f[h]) {
        if (1 !== g || 1 !== h) {
          do if (g--, h--, 0 > h || e[g] !== f[h]) {
            var k = "\n" + e[g].replace(" at new ", " at ");
            a.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a.displayName));
            return k;
          } while (1 <= g && 0 <= h);
        }
        break;
      }
    }
  } finally {
    Na = !1, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, !1), a;
    case 11:
      return a = Oa(a.type.render, !1), a;
    case 1:
      return a = Oa(a.type, !0), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a) switch (a.$$typeof) {
    case Ca:
      return (a.displayName || "Context") + ".Consumer";
    case Ba:
      return (a._context.displayName || "Context") + ".Provider";
    case Da:
      var b = a.render;
      a = a.displayName;
      a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
      return a;
    case Ga:
      return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";
    case Ha:
      b = a._payload;
      a = a._init;
      try {
        return Qa(a(b));
      } catch (c) {}
  }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b) return b.displayName || b.name || null;
      if ("string" === typeof b) return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value",
    c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
    d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
      f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function () {
        return e.call(this);
      },
      set: function (a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function () {
        return d;
      },
      setValue: function (a) {
        d = "" + a;
      },
      stopTracking: function () {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}
function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
    d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, "checked", b, !1);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value),
    d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
    for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = !0);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(p(91));
  return A({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b) throw Error(p(92));
      if (eb(c)) {
        if (1 < c.length) throw Error(p(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = {
    initialValue: Sa(c)
  };
}
function ib(a, b) {
  var c = Sa(b.value),
    d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb,
  nb = function (a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
      MSApp.execUnsafeLocalFunction(function () {
        return a(b, c, d, e);
      });
    } : a;
  }(function (a, b) {
    if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a) a.innerHTML = b;else {
      mb = mb || document.createElement("div");
      mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
      for (b = mb.firstChild; a.firstChild;) a.removeChild(a.firstChild);
      for (; b.firstChild;) a.appendChild(b.firstChild);
    }
  });
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
  },
  qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function (a) {
  qb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
}
function sb(a, b) {
  a = a.style;
  for (var c in b) if (b.hasOwnProperty(c)) {
    var d = 0 === c.indexOf("--"),
      e = rb(c, b[c], d);
    "float" === c && (c = "cssFloat");
    d ? a.setProperty(c, e) : a[c] = e;
  }
}
var tb = A({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(p(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML)) throw Error(p(61));
    }
    if (null != b.style && "object" !== typeof b.style) throw Error(p(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null,
  zb = null,
  Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(p(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb,
      b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {}
var Ib = !1;
function Jb(a, b, c) {
  if (Ib) return a(b, c);
  Ib = !0;
  try {
    return Gb(a, b, c);
  } finally {
    if (Ib = !1, null !== zb || null !== Ab) Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];
  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;
    default:
      a = !1;
  }
  if (a) return null;
  if (c && "function" !== typeof c) throw Error(p(231, b, typeof c));
  return c;
}
var Lb = !1;
if (ia) try {
  var Mb = {};
  Object.defineProperty(Mb, "passive", {
    get: function () {
      Lb = !0;
    }
  });
  window.addEventListener("test", Mb, Mb);
  window.removeEventListener("test", Mb, Mb);
} catch (a) {
  Lb = !1;
}
function Nb(a, b, c, d, e, f, g, h, k) {
  var l = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l);
  } catch (m) {
    this.onError(m);
  }
}
var Ob = !1,
  Pb = null,
  Qb = !1,
  Rb = null,
  Sb = {
    onError: function (a) {
      Ob = !0;
      Pb = a;
    }
  };
function Tb(a, b, c, d, e, f, g, h, k) {
  Ob = !1;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e, f, g, h, k) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l = Pb;
      Ob = !1;
      Pb = null;
    } else throw Error(p(198));
    Qb || (Qb = !0, Rb = l);
  }
}
function Vb(a) {
  var b = a,
    c = a;
  if (a.alternate) for (; b.return;) b = b.return;else {
    a = b;
    do b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return; while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a) throw Error(p(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b) throw Error(p(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b;;) {
    var e = c.return;
    if (null === e) break;
    var f = e.alternate;
    if (null === f) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f.child) {
      for (f = e.child; f;) {
        if (f === c) return Xb(e), a;
        if (f === d) return Xb(e), b;
        f = f.sibling;
      }
      throw Error(p(188));
    }
    if (c.return !== d.return) c = e, d = f;else {
      for (var g = !1, h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }
        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }
        h = h.sibling;
      }
      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }
          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g) throw Error(p(189));
      }
    }
    if (c.alternate !== d) throw Error(p(190));
  }
  if (3 !== c.tag) throw Error(p(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag) return a;
  for (a = a.child; null !== a;) {
    var b = $b(a);
    if (null !== b) return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback,
  bc = ca.unstable_cancelCallback,
  cc = ca.unstable_shouldYield,
  dc = ca.unstable_requestPaint,
  B = ca.unstable_now,
  ec = ca.unstable_getCurrentPriorityLevel,
  fc = ca.unstable_ImmediatePriority,
  gc = ca.unstable_UserBlockingPriority,
  hc = ca.unstable_NormalPriority,
  ic = ca.unstable_LowPriority,
  jc = ca.unstable_IdlePriority,
  kc = null,
  lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot) try {
    lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
  } catch (b) {}
}
var oc = Math.clz32 ? Math.clz32 : nc,
  pc = Math.log,
  qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64,
  sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return 0;
  var d = 0,
    e = a.suspendedLanes,
    f = a.pingedLanes,
    g = c & 268435455;
  if (0 !== g) {
    var h = g & ~e;
    0 !== h ? d = tc(h) : (f &= g, 0 !== f && (d = tc(f)));
  } else g = c & ~e, 0 !== g ? d = tc(g) : 0 !== f && (d = tc(f));
  if (0 === d) return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f = b & -b, e >= f || 16 === e && 0 !== (f & 4194240))) return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) c = 31 - oc(b), e = 1 << c, d |= a[c], b &= ~e;
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5E3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f;) {
    var g = 31 - oc(f),
      h = 1 << g,
      k = e[g];
    if (-1 === k) {
      if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b);
    } else k <= b && (a.expiredLanes |= h);
    f &= ~h;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++) b.push(a);
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c;) {
    var e = 31 - oc(c),
      f = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f;
  }
}
function Cc(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c;) {
    var d = 31 - oc(c),
      e = 1 << d;
    e & b | a[d] & b && (a[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec,
  Fc,
  Gc,
  Hc,
  Ic,
  Jc = !1,
  Kc = [],
  Lc = null,
  Mc = null,
  Nc = null,
  Oc = new Map(),
  Pc = new Map(),
  Qc = [],
  Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e, f) {
  if (null === a || a.nativeEvent !== f) return a = {
    blockedOn: b,
    domEventName: c,
    eventSystemFlags: d,
    nativeEvent: f,
    targetContainers: [e]
  }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a, b, c, d, e), !0;
    case "dragenter":
      return Mc = Tc(Mc, a, b, c, d, e), !0;
    case "mouseover":
      return Nc = Tc(Nc, a, b, c, d, e), !0;
    case "pointerover":
      var f = e.pointerId;
      Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e));
      return !0;
    case "gotpointercapture":
      return f = e.pointerId, Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0;
  }
  return !1;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) if (b = c.tag, 13 === b) {
      if (b = Wb(c), null !== b) {
        a.blockedOn = b;
        Ic(a.priority, function () {
          Gc(c);
        });
        return;
      }
    } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
      return;
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn) return !1;
  for (var b = a.targetContainers; 0 < b.length;) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, !1;
    b.shift();
  }
  return !0;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = !1;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b) {
    return ad(b, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++) d = Qc[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn);) Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig,
  dd = !0;
function ed(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function gd(a, b, c, d) {
  var e = C,
    f = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f;
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e = Yc(a, b, c, d);
    if (null === e) hd(a, b, d, id, c), Sc(a, d);else if (Uc(e, a, b, c, d)) d.stopPropagation();else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e;) {
        var f = Cb(e);
        null !== f && Ec(f);
        f = Yc(a, b, c, d);
        null === f && hd(a, b, d, id, c);
        if (f === e) break;
        e = f;
      }
      null !== e && d.stopPropagation();
    } else hd(a, b, d, null, c);
  }
}
var id = null;
function Yc(a, b, c, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a) if (b = Vb(a), null === b) a = null;else if (c = b.tag, 13 === c) {
    a = Wb(b);
    if (null !== a) return a;
    a = null;
  } else if (3 === c) {
    if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null;
    a = null;
  } else b !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null,
  ld = null,
  md = null;
function nd() {
  if (md) return md;
  var a,
    b = ld,
    c = b.length,
    d,
    e = "value" in kd ? kd.value : kd.textContent,
    f = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++);
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return !0;
}
function qd() {
  return !1;
}
function rd(a) {
  function b(b, d, e, f, g) {
    this._reactName = b;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f;
    this.target = g;
    this.currentTarget = null;
    for (var c in a) a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, {
    preventDefault: function () {
      this.defaultPrevented = !0;
      var a = this.nativeEvent;
      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);
    },
    stopPropagation: function () {
      var a = this.nativeEvent;
      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);
    },
    persist: function () {},
    isPersistent: pd
  });
  return b;
}
var sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (a) {
      return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
  },
  td = rd(sd),
  ud = A({}, sd, {
    view: 0,
    detail: 0
  }),
  vd = rd(ud),
  wd,
  xd,
  yd,
  Ad = A({}, ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: zd,
    button: 0,
    buttons: 0,
    relatedTarget: function (a) {
      return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function (a) {
      if ("movementX" in a) return a.movementX;
      a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
      return wd;
    },
    movementY: function (a) {
      return "movementY" in a ? a.movementY : xd;
    }
  }),
  Bd = rd(Ad),
  Cd = A({}, Ad, {
    dataTransfer: 0
  }),
  Dd = rd(Cd),
  Ed = A({}, ud, {
    relatedTarget: 0
  }),
  Fd = rd(Ed),
  Gd = A({}, sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Hd = rd(Gd),
  Id = A({}, sd, {
    clipboardData: function (a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
  }),
  Jd = rd(Id),
  Kd = A({}, sd, {
    data: 0
  }),
  Ld = rd(Kd),
  Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  },
  Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  },
  Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
  };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, {
    key: function (a) {
      if (a.key) {
        var b = Md[a.key] || a.key;
        if ("Unidentified" !== b) return b;
      }
      return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: zd,
    charCode: function (a) {
      return "keypress" === a.type ? od(a) : 0;
    },
    keyCode: function (a) {
      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function (a) {
      return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
  }),
  Rd = rd(Qd),
  Sd = A({}, Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
  }),
  Td = rd(Sd),
  Ud = A({}, ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: zd
  }),
  Vd = rd(Ud),
  Wd = A({}, sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
  }),
  Xd = rd(Wd),
  Yd = A({}, Ad, {
    deltaX: function (a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function (a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }),
  Zd = rd(Yd),
  $d = [9, 13, 27, 32],
  ae = ia && "CompositionEvent" in window,
  be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be,
  de = ia && (!ae || be && 8 < be && 11 >= be),
  ee = String.fromCharCode(32),
  fe = !1;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = !1;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which) return null;
      fe = !0;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({
    event: c,
    listeners: b
  }));
}
var pe = null,
  qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}
function ve(a, b) {
  if ("change" === a) return b;
}
var we = !1;
if (ia) {
  var xe;
  if (ia) {
    var ye = ("oninput" in document);
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else xe = !1;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}
function Ee(a, b) {
  if ("click" === a) return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a) return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
    d = Object.keys(b);
  if (c.length !== d.length) return !1;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a[e], b[e])) return !1;
  }
  return !0;
}
function Je(a) {
  for (; a && a.firstChild;) a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }
    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }
    if (c) a = b.contentWindow;else break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(),
    c = a.focusedElem,
    d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
      a = a.getSelection();
      var e = c.textContent.length,
        f = Math.min(d.start, e);
      d = void 0 === d.end ? f : Math.min(d.end, e);
      !a.extend && f > d && (e = d, d = f, f = e);
      e = Ke(c, f);
      var g = Ke(c, d);
      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
    }
    b = [];
    for (a = c; a = a.parentNode;) 1 === a.nodeType && b.push({
      element: a,
      left: a.scrollLeft,
      top: a.scrollTop
    });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++) a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode,
  Qe = null,
  Re = null,
  Se = null,
  Te = !1;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = {
    start: d.selectionStart,
    end: d.selectionEnd
  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
    anchorNode: d.anchorNode,
    anchorOffset: d.anchorOffset,
    focusNode: d.focusNode,
    focusOffset: d.focusOffset
  }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({
    event: b,
    listeners: d
  }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = {
    animationend: Ve("Animation", "AnimationEnd"),
    animationiteration: Ve("Animation", "AnimationIteration"),
    animationstart: Ve("Animation", "AnimationStart"),
    transitionend: Ve("Transition", "TransitionEnd")
  },
  Xe = {},
  Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a]) return Xe[a];
  if (!We[a]) return a;
  var b = We[a],
    c;
  for (c in b) if (b.hasOwnProperty(c) && c in Ye) return Xe[a] = b[c];
  return a;
}
var $e = Ze("animationend"),
  af = Ze("animationiteration"),
  bf = Ze("animationstart"),
  cf = Ze("transitionend"),
  df = new Map(),
  ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf],
    jf = hf.toLowerCase(),
    kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
  mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c],
      e = d.event;
    d = d.listeners;
    a: {
      var f = void 0;
      if (b) for (var g = d.length - 1; 0 <= g; g--) {
        var h = d[g],
          k = h.instance,
          l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      } else for (g = 0; g < d.length; g++) {
        h = d[g];
        k = h.instance;
        l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        nf(e, h, l);
        f = k;
      }
    }
  }
  if (Qb) throw a = Rb, Qb = !1, Rb = null, a;
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, !1), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = !0;
    da.forEach(function (b) {
      "selectionchange" !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = !0, qf("selectionchange", !1, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
  d ? void 0 !== e ? a.addEventListener(b, c, {
    capture: !0,
    passive: e
  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
    passive: e
  }) : a.addEventListener(b, c, !1);
}
function hd(a, b, c, d, e) {
  var f = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {
    if (null === d) return;
    var g = d.tag;
    if (3 === g || 4 === g) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g;) {
        var k = g.tag;
        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
        g = g.return;
      }
      for (; null !== h;) {
        g = Wc(h);
        if (null === g) return;
        k = g.tag;
        if (5 === k || 6 === k) {
          d = f = g;
          continue a;
        }
        h = h.parentNode;
      }
    }
    d = d.return;
  }
  Jb(function () {
    var d = f,
      e = xb(c),
      g = [];
    a: {
      var h = df.get(a);
      if (void 0 !== h) {
        var k = td,
          n = a;
        switch (a) {
          case "keypress":
            if (0 === od(c)) break a;
          case "keydown":
          case "keyup":
            k = Rd;
            break;
          case "focusin":
            n = "focus";
            k = Fd;
            break;
          case "focusout":
            n = "blur";
            k = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k = Fd;
            break;
          case "click":
            if (2 === c.button) break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k = Vd;
            break;
          case $e:
          case af:
          case bf:
            k = Hd;
            break;
          case cf:
            k = Xd;
            break;
          case "scroll":
            k = vd;
            break;
          case "wheel":
            k = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k = Td;
        }
        var t = 0 !== (b & 4),
          J = !t && "scroll" === a,
          x = t ? null !== h ? h + "Capture" : null : h;
        t = [];
        for (var w = d, u; null !== w;) {
          u = w;
          var F = u.stateNode;
          5 === u.tag && null !== F && (u = F, null !== x && (F = Kb(w, x), null != F && t.push(tf(w, F, u))));
          if (J) break;
          w = w.return;
        }
        0 < t.length && (h = new k(h, n, null, c, e), g.push({
          event: h,
          listeners: t
        }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h = "mouseover" === a || "pointerover" === a;
        k = "mouseout" === a || "pointerout" === a;
        if (h && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf])) break a;
        if (k || h) {
          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;
          if (k) {
            if (n = c.relatedTarget || c.toElement, k = d, n = n ? Wc(n) : null, null !== n && (J = Vb(n), n !== J || 5 !== n.tag && 6 !== n.tag)) n = null;
          } else k = null, n = d;
          if (k !== n) {
            t = Bd;
            F = "onMouseLeave";
            x = "onMouseEnter";
            w = "mouse";
            if ("pointerout" === a || "pointerover" === a) t = Td, F = "onPointerLeave", x = "onPointerEnter", w = "pointer";
            J = null == k ? h : ue(k);
            u = null == n ? h : ue(n);
            h = new t(F, w + "leave", k, c, e);
            h.target = J;
            h.relatedTarget = u;
            F = null;
            Wc(e) === d && (t = new t(x, w + "enter", n, c, e), t.target = u, t.relatedTarget = J, F = t);
            J = F;
            if (k && n) b: {
              t = k;
              x = n;
              w = 0;
              for (u = t; u; u = vf(u)) w++;
              u = 0;
              for (F = x; F; F = vf(F)) u++;
              for (; 0 < w - u;) t = vf(t), w--;
              for (; 0 < u - w;) x = vf(x), u--;
              for (; w--;) {
                if (t === x || null !== x && t === x.alternate) break b;
                t = vf(t);
                x = vf(x);
              }
              t = null;
            } else t = null;
            null !== k && wf(g, h, k, t, !1);
            null !== n && null !== J && wf(g, J, n, t, !0);
          }
        }
      }
      a: {
        h = d ? ue(d) : window;
        k = h.nodeName && h.nodeName.toLowerCase();
        if ("select" === k || "input" === k && "file" === h.type) var na = ve;else if (me(h)) {
          if (we) na = Fe;else {
            na = De;
            var xa = Ce;
          }
        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (na = Ee);
        if (na && (na = na(a, d))) {
          ne(g, na, c, e);
          break a;
        }
        xa && xa(a, h, d);
        "focusout" === a && (xa = h._wrapperState) && xa.controlled && "number" === h.type && cb(h, "number", h.value);
      }
      xa = d ? ue(d) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = !1;
          Ue(g, c, e);
          break;
        case "selectionchange":
          if (Pe) break;
        case "keydown":
        case "keyup":
          Ue(g, c, e);
      }
      var $a;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var ba = "onCompositionStart";
            break b;
          case "compositionend":
            ba = "onCompositionEnd";
            break b;
          case "compositionupdate":
            ba = "onCompositionUpdate";
            break b;
        }
        ba = void 0;
      } else ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe(d, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e), g.push({
        event: ba,
        listeners: xa
      }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
        event: e,
        listeners: d
      }), e.data = $a);
    }
    se(g, b);
  });
}
function tf(a, b, c) {
  return {
    instance: a,
    listener: b,
    currentTarget: c
  };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e = a,
      f = e.stateNode;
    5 === e.tag && null !== f && (e = f, f = Kb(a, c), null != f && d.unshift(tf(a, f, e)), f = Kb(a, b), null != f && d.push(tf(a, f, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a) return null;
  do a = a.return; while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f = b._reactName, g = []; null !== c && c !== d;) {
    var h = c,
      k = h.alternate,
      l = h.stateNode;
    if (null !== k && k === d) break;
    5 === h.tag && null !== l && (h = l, e ? (k = Kb(c, f), null != k && g.unshift(tf(c, k, h))) : e || (k = Kb(c, f), null != k && g.push(tf(c, k, h))));
    c = c.return;
  }
  0 !== g.length && a.push({
    event: b,
    listeners: g
  });
}
var xf = /\r\n?/g,
  yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c) throw Error(p(425));
}
function Bf() {}
var Cf = null,
  Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0,
  Gf = "function" === typeof clearTimeout ? clearTimeout : void 0,
  Hf = "function" === typeof Promise ? Promise : void 0,
  Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function (a) {
    return Hf.resolve(null).then(a).catch(If);
  } : Ff;
function If(a) {
  setTimeout(function () {
    throw a;
  });
}
function Kf(a, b) {
  var c = b,
    d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType) if (c = e.data, "/$" === c) {
      if (0 === d) {
        a.removeChild(e);
        bd(b);
        return;
      }
      d--;
    } else "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b) break;
      if ("/$" === b) return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a;
        b--;
      } else "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2),
  Of = "__reactFiber$" + Nf,
  Pf = "__reactProps$" + Nf,
  uf = "__reactContainer$" + Nf,
  of = "__reactEvents$" + Nf,
  Qf = "__reactListeners$" + Nf,
  Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b = a[Of];
  if (b) return b;
  for (var c = a.parentNode; c;) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a = Mf(a); null !== a;) {
        if (c = a[Of]) return c;
        a = Mf(a);
      }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [],
  Tf = -1;
function Uf(a) {
  return {
    current: a
  };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {},
  H = Uf(Vf),
  Wf = Uf(!1),
  Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
    f;
  for (f in c) e[f] = b[f];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf) throw Error(p(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();
  for (var e in d) if (!(e in b)) throw Error(p(108, Ra(a) || "Unknown", e));
  return A({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return !0;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(p(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c);
}
var eg = null,
  fg = !1,
  gg = !1;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = !0;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = !0;
    var a = 0,
      b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do d = d(!0); while (null !== d);
      }
      eg = null;
      fg = !1;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;
    } finally {
      C = b, gg = !1;
    }
  }
  return null;
}
var kg = [],
  lg = 0,
  mg = null,
  ng = 0,
  og = [],
  pg = 0,
  qg = null,
  rg = 1,
  sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f = 32 - oc(b) + e;
  if (30 < f) {
    var g = e - e % 5;
    f = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e -= g;
    rg = 1 << 32 - oc(b) + e | c << e | d;
    sg = f + a;
  } else rg = 1 << f | c << e | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg;) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg;) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null,
  yg = null,
  I = !1,
  zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), !0) : !1;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, !0) : !1;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? {
        id: rg,
        overflow: sg
      } : null, a.memoizedState = {
        dehydrated: b,
        treeContext: c,
        retryLane: 1073741824
      }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, !0) : !1;
    default:
      return !1;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a)) throw Error(p(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = !1, xg = a);
      }
    } else {
      if (Dg(a)) throw Error(p(418));
      a.flags = a.flags & -4097 | 2;
      I = !1;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg) return !1;
  if (!I) return Fg(a), I = !0, !1;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a)) throw Hg(), Error(p(418));
    for (; b;) Ag(a, b), b = Lf(b.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return !0;
}
function Hg() {
  for (var a = yg; a;) a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = !1;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a) void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
var Mg = Uf(null),
  Ng = null,
  Og = null,
  Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b = Mg.current;
  E(Mg);
  a._currentValue = b;
}
function Sg(a, b, c) {
  for (; null !== a;) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c) break;
    a = a.return;
  }
}
function Tg(a, b) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = !0), a.firstContext = null);
}
function Vg(a) {
  var b = a._currentValue;
  if (Pg !== a) if (a = {
    context: a,
    memoizedValue: b,
    next: null
  }, null === Og) {
    if (null === Ng) throw Error(p(308));
    Og = a;
    Ng.dependencies = {
      lanes: 0,
      firstContext: a
    };
  } else Og = Og.next = a;
  return b;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return Zg(a, d);
}
function Zg(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a;) a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  return 3 === c.tag ? c.stateNode : null;
}
var $g = !1;
function ah(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null,
      interleaved: null,
      lanes: 0
    },
    effects: null
  };
}
function bh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = {
    baseState: a.baseState,
    firstBaseUpdate: a.firstBaseUpdate,
    lastBaseUpdate: a.lastBaseUpdate,
    shared: a.shared,
    effects: a.effects
  });
}
function ch(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null
  };
}
function dh(a, b, c) {
  var d = a.updateQueue;
  if (null === d) return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return Zg(a, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return Zg(a, c);
}
function eh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function fh(a, b) {
  var c = a.updateQueue,
    d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null,
      f = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null
        };
        null === f ? e = f = g : f = f.next = g;
        c = c.next;
      } while (null !== c);
      null === f ? e = f = b : f = f.next = b;
    } else e = f = b;
    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f,
      shared: d.shared,
      effects: d.effects
    };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function gh(a, b, c, d) {
  var e = a.updateQueue;
  $g = !1;
  var f = e.firstBaseUpdate,
    g = e.lastBaseUpdate,
    h = e.shared.pending;
  if (null !== h) {
    e.shared.pending = null;
    var k = h,
      l = k.next;
    k.next = null;
    null === g ? f = l : g.next = l;
    g = k;
    var m = a.alternate;
    null !== m && (m = m.updateQueue, h = m.lastBaseUpdate, h !== g && (null === h ? m.firstBaseUpdate = l : h.next = l, m.lastBaseUpdate = k));
  }
  if (null !== f) {
    var q = e.baseState;
    g = 0;
    m = l = k = null;
    h = f;
    do {
      var r = h.lane,
        y = h.eventTime;
      if ((d & r) === r) {
        null !== m && (m = m.next = {
          eventTime: y,
          lane: 0,
          tag: h.tag,
          payload: h.payload,
          callback: h.callback,
          next: null
        });
        a: {
          var n = a,
            t = h;
          r = b;
          y = c;
          switch (t.tag) {
            case 1:
              n = t.payload;
              if ("function" === typeof n) {
                q = n.call(y, q, r);
                break a;
              }
              q = n;
              break a;
            case 3:
              n.flags = n.flags & -65537 | 128;
            case 0:
              n = t.payload;
              r = "function" === typeof n ? n.call(y, q, r) : n;
              if (null === r || void 0 === r) break a;
              q = A({}, q, r);
              break a;
            case 2:
              $g = !0;
          }
        }
        null !== h.callback && 0 !== h.lane && (a.flags |= 64, r = e.effects, null === r ? e.effects = [h] : r.push(h));
      } else y = {
        eventTime: y,
        lane: r,
        tag: h.tag,
        payload: h.payload,
        callback: h.callback,
        next: null
      }, null === m ? (l = m = y, k = q) : m = m.next = y, g |= r;
      h = h.next;
      if (null === h) if (h = e.shared.pending, null === h) break;else r = h, h = r.next, r.next = null, e.lastBaseUpdate = r, e.shared.pending = null;
    } while (1);
    null === m && (k = q);
    e.baseState = k;
    e.firstBaseUpdate = l;
    e.lastBaseUpdate = m;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do g |= e.lane, e = e.next; while (e !== b);
    } else null === f && (e.shared.lanes = 0);
    hh |= g;
    a.lanes = g;
    a.memoizedState = q;
  }
}
function ih(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a) for (b = 0; b < a.length; b++) {
    var d = a[b],
      e = d.callback;
    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(p(191, e));
      e.call(d);
    }
  }
}
var jh = new aa.Component().refs;
function kh(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var nh = {
  isMounted: function (a) {
    return (a = a._reactInternals) ? Vb(a) === a : !1;
  },
  enqueueSetState: function (a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueReplaceState: function (a, b, c) {
    a = a._reactInternals;
    var d = L(),
      e = lh(a),
      f = ch(d, e);
    f.tag = 1;
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    b = dh(a, f, e);
    null !== b && (mh(b, a, e, d), eh(b, a, e));
  },
  enqueueForceUpdate: function (a, b) {
    a = a._reactInternals;
    var c = L(),
      d = lh(a),
      e = ch(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    b = dh(a, e, d);
    null !== b && (mh(b, a, d, c), eh(b, a, d));
  }
};
function oh(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f) : !0;
}
function ph(a, b, c) {
  var d = !1,
    e = Vf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = Vg(f) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = nh;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}
function qh(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && nh.enqueueReplaceState(b, b.state, null);
}
function rh(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jh;
  ah(a);
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = Vg(f) : (f = Zf(b) ? Xf : H.current, e.context = Yf(a, f));
  e.state = a.memoizedState;
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (kh(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag) throw Error(p(309));
        var d = c.stateNode;
      }
      if (!d) throw Error(p(147, a));
      var e = d,
        f = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
      b = function (a) {
        var b = e.refs;
        b === jh && (b = e.refs = {});
        null === a ? delete b[f] : b[f] = a;
      };
      b._stringRef = f;
      return b;
    }
    if ("string" !== typeof a) throw Error(p(284));
    if (!c._owner) throw Error(p(290, a));
  }
  return a;
}
function th(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function uh(a) {
  var b = a._init;
  return b(a._payload);
}
function vh(a) {
  function b(b, c) {
    if (a) {
      var d = b.deletions;
      null === d ? (b.deletions = [c], b.flags |= 16) : d.push(c);
    }
  }
  function c(c, d) {
    if (!a) return null;
    for (; null !== d;) b(c, d), d = d.sibling;
    return null;
  }
  function d(a, b) {
    for (a = new Map(); null !== b;) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    return a;
  }
  function e(a, b) {
    a = wh(a, b);
    a.index = 0;
    a.sibling = null;
    return a;
  }
  function f(b, c, d) {
    b.index = d;
    if (!a) return b.flags |= 1048576, c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.flags |= 2, c) : d;
    b.flags |= 2;
    return c;
  }
  function g(b) {
    a && null === b.alternate && (b.flags |= 2);
    return b;
  }
  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = xh(c, a.mode, d), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function k(a, b, c, d) {
    var f = c.type;
    if (f === ya) return m(a, b, c.props.children, d, c.key);
    if (null !== b && (b.elementType === f || "object" === typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type)) return d = e(b, c.props), d.ref = sh(a, b, c), d.return = a, d;
    d = yh(c.type, c.key, c.props, null, a.mode, d);
    d.ref = sh(a, b, c);
    d.return = a;
    return d;
  }
  function l(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = zh(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || []);
    b.return = a;
    return b;
  }
  function m(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Ah(c, a.mode, d, f), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }
  function q(a, b, c) {
    if ("string" === typeof b && "" !== b || "number" === typeof b) return b = xh("" + b, a.mode, c), b.return = a, b;
    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case va:
          return c = yh(b.type, b.key, b.props, null, a.mode, c), c.ref = sh(a, null, b), c.return = a, c;
        case wa:
          return b = zh(b, a.mode, c), b.return = a, b;
        case Ha:
          var d = b._init;
          return q(a, d(b._payload), c);
      }
      if (eb(b) || Ka(b)) return b = Ah(b, a.mode, c, null), b.return = a, b;
      th(a, b);
    }
    return null;
  }
  function r(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c && "" !== c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);
    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case va:
          return c.key === e ? k(a, b, c, d) : null;
        case wa:
          return c.key === e ? l(a, b, c, d) : null;
        case Ha:
          return e = c._init, r(a, b, e(c._payload), d);
      }
      if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null);
      th(a, c);
    }
    return null;
  }
  function y(a, b, c, d, e) {
    if ("string" === typeof d && "" !== d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);
    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case va:
          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);
        case wa:
          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
        case Ha:
          var f = d._init;
          return y(a, b, c, f(d._payload), e);
      }
      if (eb(d) || Ka(d)) return a = a.get(c) || null, m(b, a, d, e, null);
      th(b, d);
    }
    return null;
  }
  function n(e, g, h, k) {
    for (var l = null, m = null, u = g, w = g = 0, x = null; null !== u && w < h.length; w++) {
      u.index > w ? (x = u, u = null) : x = u.sibling;
      var n = r(e, u, h[w], k);
      if (null === n) {
        null === u && (u = x);
        break;
      }
      a && u && null === n.alternate && b(e, u);
      g = f(n, g, w);
      null === m ? l = n : m.sibling = n;
      m = n;
      u = x;
    }
    if (w === h.length) return c(e, u), I && tg(e, w), l;
    if (null === u) {
      for (; w < h.length; w++) u = q(e, h[w], k), null !== u && (g = f(u, g, w), null === m ? l = u : m.sibling = u, m = u);
      I && tg(e, w);
      return l;
    }
    for (u = d(e, u); w < h.length; w++) x = y(u, e, w, h[w], k), null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), g = f(x, g, w), null === m ? l = x : m.sibling = x, m = x);
    a && u.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function t(e, g, h, k) {
    var l = Ka(h);
    if ("function" !== typeof l) throw Error(p(150));
    h = l.call(h);
    if (null == h) throw Error(p(151));
    for (var u = l = null, m = g, w = g = 0, x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()) {
      m.index > w ? (x = m, m = null) : x = m.sibling;
      var t = r(e, m, n.value, k);
      if (null === t) {
        null === m && (m = x);
        break;
      }
      a && m && null === t.alternate && b(e, m);
      g = f(t, g, w);
      null === u ? l = t : u.sibling = t;
      u = t;
      m = x;
    }
    if (n.done) return c(e, m), I && tg(e, w), l;
    if (null === m) {
      for (; !n.done; w++, n = h.next()) n = q(e, n.value, k), null !== n && (g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
      I && tg(e, w);
      return l;
    }
    for (m = d(e, m); !n.done; w++, n = h.next()) n = y(m, e, w, n.value, k), null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), g = f(n, g, w), null === u ? l = n : u.sibling = n, u = n);
    a && m.forEach(function (a) {
      return b(e, a);
    });
    I && tg(e, w);
    return l;
  }
  function J(a, d, f, h) {
    "object" === typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children);
    if ("object" === typeof f && null !== f) {
      switch (f.$$typeof) {
        case va:
          a: {
            for (var k = f.key, l = d; null !== l;) {
              if (l.key === k) {
                k = f.type;
                if (k === ya) {
                  if (7 === l.tag) {
                    c(a, l.sibling);
                    d = e(l, f.props.children);
                    d.return = a;
                    a = d;
                    break a;
                  }
                } else if (l.elementType === k || "object" === typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type) {
                  c(a, l.sibling);
                  d = e(l, f.props);
                  d.ref = sh(a, l, f);
                  d.return = a;
                  a = d;
                  break a;
                }
                c(a, l);
                break;
              } else b(a, l);
              l = l.sibling;
            }
            f.type === ya ? (d = Ah(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = yh(f.type, f.key, f.props, null, a.mode, h), h.ref = sh(a, d, f), h.return = a, a = h);
          }
          return g(a);
        case wa:
          a: {
            for (l = f.key; null !== d;) {
              if (d.key === l) {
                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                  c(a, d.sibling);
                  d = e(d, f.children || []);
                  d.return = a;
                  a = d;
                  break a;
                } else {
                  c(a, d);
                  break;
                }
              } else b(a, d);
              d = d.sibling;
            }
            d = zh(f, a.mode, h);
            d.return = a;
            a = d;
          }
          return g(a);
        case Ha:
          return l = f._init, J(a, d, l(f._payload), h);
      }
      if (eb(f)) return n(a, d, f, h);
      if (Ka(f)) return t(a, d, f, h);
      th(a, f);
    }
    return "string" === typeof f && "" !== f || "number" === typeof f ? (f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = xh(f, a.mode, h), d.return = a, a = d), g(a)) : c(a, d);
  }
  return J;
}
var Bh = vh(!0),
  Ch = vh(!1),
  Dh = {},
  Eh = Uf(Dh),
  Fh = Uf(Dh),
  Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh) throw Error(p(174));
  return a;
}
function Ih(a, b) {
  G(Gh, b);
  G(Fh, a);
  G(Eh, Dh);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);
  }
  E(Eh);
  G(Eh, b);
}
function Jh() {
  E(Eh);
  E(Fh);
  E(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b = Hh(Eh.current);
  var c = lb(b, a.type);
  b !== c && (G(Fh, a), G(Eh, c));
}
function Lh(a) {
  Fh.current === a && (E(Eh), E(Fh));
}
var M = Uf(0);
function Mh(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a) break;
    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++) Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher,
  Qh = ua.ReactCurrentBatchConfig,
  Rh = 0,
  N = null,
  O = null,
  P = null,
  Sh = !1,
  Th = !1,
  Uh = 0,
  Vh = 0;
function Q() {
  throw Error(p(321));
}
function Wh(a, b) {
  if (null === b) return !1;
  for (var c = 0; c < b.length && c < a.length; c++) if (!He(a[c], b[c])) return !1;
  return !0;
}
function Xh(a, b, c, d, e, f) {
  Rh = f;
  N = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c(d, e);
  if (Th) {
    f = 0;
    do {
      Th = !1;
      Uh = 0;
      if (25 <= f) throw Error(p(301));
      f += 1;
      P = O = null;
      b.updateQueue = null;
      Ph.current = $h;
      a = c(d, e);
    } while (Th);
  }
  Ph.current = ai;
  b = null !== O && null !== O.next;
  Rh = 0;
  P = O = N = null;
  Sh = !1;
  if (b) throw Error(p(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === P ? N.memoizedState = P = a : P = P.next = a;
  return P;
}
function di() {
  if (null === O) {
    var a = N.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = O.next;
  var b = null === P ? N.memoizedState : P.next;
  if (null !== b) P = b, O = a;else {
    if (null === a) throw Error(p(310));
    O = a;
    a = {
      memoizedState: O.memoizedState,
      baseState: O.baseState,
      baseQueue: O.baseQueue,
      queue: O.queue,
      next: null
    };
    null === P ? N.memoizedState = P = a : P = P.next = a;
  }
  return P;
}
function ei(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function fi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = O,
    e = d.baseQueue,
    f = c.pending;
  if (null !== f) {
    if (null !== e) {
      var g = e.next;
      e.next = f.next;
      f.next = g;
    }
    d.baseQueue = e = f;
    c.pending = null;
  }
  if (null !== e) {
    f = e.next;
    d = d.baseState;
    var h = g = null,
      k = null,
      l = f;
    do {
      var m = l.lane;
      if ((Rh & m) === m) null !== k && (k = k.next = {
        lane: 0,
        action: l.action,
        hasEagerState: l.hasEagerState,
        eagerState: l.eagerState,
        next: null
      }), d = l.hasEagerState ? l.eagerState : a(d, l.action);else {
        var q = {
          lane: m,
          action: l.action,
          hasEagerState: l.hasEagerState,
          eagerState: l.eagerState,
          next: null
        };
        null === k ? (h = k = q, g = d) : k = k.next = q;
        N.lanes |= m;
        hh |= m;
      }
      l = l.next;
    } while (null !== l && l !== f);
    null === k ? g = d : k.next = h;
    He(d, b.memoizedState) || (Ug = !0);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do f = e.lane, N.lanes |= f, hh |= f, e = e.next; while (e !== a);
  } else null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function gi(a) {
  var b = di(),
    c = b.queue;
  if (null === c) throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
    e = c.pending,
    f = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g = e = e.next;
    do f = a(f, g.action), g = g.next; while (g !== e);
    He(f, b.memoizedState) || (Ug = !0);
    b.memoizedState = f;
    null === b.baseQueue && (b.baseState = f);
    c.lastRenderedState = f;
  }
  return [f, d];
}
function hi() {}
function ii(a, b) {
  var c = N,
    d = di(),
    e = b(),
    f = !He(d.memoizedState, e);
  f && (d.memoizedState = e, Ug = !0);
  d = d.queue;
  ji(ki.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f || null !== P && P.memoizedState.tag & 1) {
    c.flags |= 2048;
    li(9, mi.bind(null, c, d, e, b), void 0, null);
    if (null === R) throw Error(p(349));
    0 !== (Rh & 30) || ni(c, b, e);
  }
  return e;
}
function ni(a, b, c) {
  a.flags |= 16384;
  a = {
    getSnapshot: b,
    value: c
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function mi(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  oi(b) && pi(a);
}
function ki(a, b, c) {
  return c(function () {
    oi(b) && pi(a);
  });
}
function oi(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return !0;
  }
}
function pi(a) {
  var b = Zg(a, 1);
  null !== b && mh(b, a, 1, -1);
}
function qi(a) {
  var b = ci();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = {
    pending: null,
    interleaved: null,
    lanes: 0,
    dispatch: null,
    lastRenderedReducer: ei,
    lastRenderedState: a
  };
  b.queue = a;
  a = a.dispatch = ri.bind(null, N, a);
  return [b.memoizedState, a];
}
function li(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  b = N.updateQueue;
  null === b ? (b = {
    lastEffect: null,
    stores: null
  }, N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b, c, d) {
  var e = ci();
  N.flags |= a;
  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
}
function ui(a, b, c, d) {
  var e = di();
  d = void 0 === d ? null : d;
  var f = void 0;
  if (null !== O) {
    var g = O.memoizedState;
    f = g.destroy;
    if (null !== d && Wh(d, g.deps)) {
      e.memoizedState = li(b, c, f, d);
      return;
    }
  }
  N.flags |= a;
  e.memoizedState = li(1 | b, c, f, d);
}
function vi(a, b) {
  return ti(8390656, 8, a, b);
}
function ji(a, b) {
  return ui(2048, 8, a, b);
}
function wi(a, b) {
  return ui(4, 2, a, b);
}
function xi(a, b) {
  return ui(4, 4, a, b);
}
function yi(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}
function zi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b, a), c);
}
function Ai() {}
function Bi(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}
function Ci(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function Di(a, b, c) {
  if (0 === (Rh & 21)) return a.baseState && (a.baseState = !1, Ug = !0), a.memoizedState = c;
  He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a.baseState = !0);
  return b;
}
function Ei(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(!0);
  var d = Qh.transition;
  Qh.transition = {};
  try {
    a(!1), b();
  } finally {
    C = c, Qh.transition = d;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b, c) {
  var d = lh(a);
  c = {
    lane: d,
    action: c,
    hasEagerState: !1,
    eagerState: null,
    next: null
  };
  if (Hi(a)) Ii(b, c);else if (c = Yg(a, b, c, d), null !== c) {
    var e = L();
    mh(c, a, d, e);
    Ji(c, b, d);
  }
}
function ri(a, b, c) {
  var d = lh(a),
    e = {
      lane: d,
      action: c,
      hasEagerState: !1,
      eagerState: null,
      next: null
    };
  if (Hi(a)) Ii(b, e);else {
    var f = a.alternate;
    if (0 === a.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
      var g = b.lastRenderedState,
        h = f(g, c);
      e.hasEagerState = !0;
      e.eagerState = h;
      if (He(h, g)) {
        var k = b.interleaved;
        null === k ? (e.next = e, Xg(b)) : (e.next = k.next, k.next = e);
        b.interleaved = e;
        return;
      }
    } catch (l) {} finally {}
    c = Yg(a, b, e, d);
    null !== c && (e = L(), mh(c, a, d, e), Ji(c, b, d));
  }
}
function Hi(a) {
  var b = a.alternate;
  return a === N || null !== b && b === N;
}
function Ii(a, b) {
  Th = Sh = !0;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Ji(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var ai = {
    readContext: Vg,
    useCallback: Q,
    useContext: Q,
    useEffect: Q,
    useImperativeHandle: Q,
    useInsertionEffect: Q,
    useLayoutEffect: Q,
    useMemo: Q,
    useReducer: Q,
    useRef: Q,
    useState: Q,
    useDebugValue: Q,
    useDeferredValue: Q,
    useTransition: Q,
    useMutableSource: Q,
    useSyncExternalStore: Q,
    useId: Q,
    unstable_isNewReconciler: !1
  },
  Yh = {
    readContext: Vg,
    useCallback: function (a, b) {
      ci().memoizedState = [a, void 0 === b ? null : b];
      return a;
    },
    useContext: Vg,
    useEffect: vi,
    useImperativeHandle: function (a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return ti(4194308, 4, yi.bind(null, b, a), c);
    },
    useLayoutEffect: function (a, b) {
      return ti(4194308, 4, a, b);
    },
    useInsertionEffect: function (a, b) {
      return ti(4, 2, a, b);
    },
    useMemo: function (a, b) {
      var c = ci();
      b = void 0 === b ? null : b;
      a = a();
      c.memoizedState = [a, b];
      return a;
    },
    useReducer: function (a, b, c) {
      var d = ci();
      b = void 0 !== c ? c(b) : b;
      d.memoizedState = d.baseState = b;
      a = {
        pending: null,
        interleaved: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: a,
        lastRenderedState: b
      };
      d.queue = a;
      a = a.dispatch = Gi.bind(null, N, a);
      return [d.memoizedState, a];
    },
    useRef: function (a) {
      var b = ci();
      a = {
        current: a
      };
      return b.memoizedState = a;
    },
    useState: qi,
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      return ci().memoizedState = a;
    },
    useTransition: function () {
      var a = qi(!1),
        b = a[0];
      a = Ei.bind(null, a[1]);
      ci().memoizedState = a;
      return [b, a];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (a, b, c) {
      var d = N,
        e = ci();
      if (I) {
        if (void 0 === c) throw Error(p(407));
        c = c();
      } else {
        c = b();
        if (null === R) throw Error(p(349));
        0 !== (Rh & 30) || ni(d, b, c);
      }
      e.memoizedState = c;
      var f = {
        value: c,
        getSnapshot: b
      };
      e.queue = f;
      vi(ki.bind(null, d, f, a), [a]);
      d.flags |= 2048;
      li(9, mi.bind(null, d, f, c, b), void 0, null);
      return c;
    },
    useId: function () {
      var a = ci(),
        b = R.identifierPrefix;
      if (I) {
        var c = sg;
        var d = rg;
        c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
        b = ":" + b + "R" + c;
        c = Uh++;
        0 < c && (b += "H" + c.toString(32));
        b += ":";
      } else c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
      return a.memoizedState = b;
    },
    unstable_isNewReconciler: !1
  },
  Zh = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: fi,
    useRef: si,
    useState: function () {
      return fi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      var b = di();
      return Di(b, O.memoizedState, a);
    },
    useTransition: function () {
      var a = fi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  },
  $h = {
    readContext: Vg,
    useCallback: Bi,
    useContext: Vg,
    useEffect: ji,
    useImperativeHandle: zi,
    useInsertionEffect: wi,
    useLayoutEffect: xi,
    useMemo: Ci,
    useReducer: gi,
    useRef: si,
    useState: function () {
      return gi(ei);
    },
    useDebugValue: Ai,
    useDeferredValue: function (a) {
      var b = di();
      return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);
    },
    useTransition: function () {
      var a = gi(ei)[0],
        b = di().memoizedState;
      return [a, b];
    },
    useMutableSource: hi,
    useSyncExternalStore: ii,
    useId: Fi,
    unstable_isNewReconciler: !1
  };
function Ki(a, b) {
  try {
    var c = "",
      d = b;
    do c += Pa(d), d = d.return; while (d);
    var e = c;
  } catch (f) {
    e = "\nError generating stack: " + f.message + "\n" + f.stack;
  }
  return {
    value: a,
    source: b,
    stack: e,
    digest: null
  };
}
function Li(a, b, c) {
  return {
    value: a,
    source: null,
    stack: null != c ? c : null,
    digest: null != b ? b : null
  };
}
function Mi(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  c.payload = {
    element: null
  };
  var d = b.value;
  c.callback = function () {
    Pi || (Pi = !0, Qi = d);
    Mi(a, b);
  };
  return c;
}
function Ri(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function () {
      return d(e);
    };
    c.callback = function () {
      Mi(a, b);
    };
  }
  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    Mi(a, b);
    "function" !== typeof d && (null === Si ? Si = new Set([this]) : Si.add(this));
    var c = b.stack;
    this.componentDidCatch(b.value, {
      componentStack: null !== c ? c : ""
    });
  });
  return c;
}
function Ti(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Ni();
    var e = new Set();
    d.set(b, e);
  } else e = d.get(b), void 0 === e && (e = new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
}
function Vi(a) {
  do {
    var b;
    if (b = 13 === a.tag) b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? !0 : !1 : !0;
    if (b) return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b, c, d, e) {
  if (0 === (a.mode & 1)) return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Xi = ua.ReactCurrentOwner,
  Ug = !1;
function Yi(a, b, c, d) {
  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
}
function Zi(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  Tg(b, e);
  d = Xh(a, b, c, d, f, e);
  c = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && c && vg(b);
  b.flags |= 1;
  Yi(a, b, d, e);
  return b.child;
}
function aj(a, b, c, d, e) {
  if (null === a) {
    var f = c.type;
    if ("function" === typeof f && !bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = f, cj(a, b, f, d, e);
    a = yh(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f = a.child;
  if (0 === (a.lanes & e)) {
    var g = f.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref) return $i(a, b, e);
  }
  b.flags |= 1;
  a = wh(f, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function cj(a, b, c, d, e) {
  if (null !== a) {
    var f = a.memoizedProps;
    if (Ie(f, d) && a.ref === b.ref) if (Ug = !1, b.pendingProps = d = f, 0 !== (a.lanes & e)) 0 !== (a.flags & 131072) && (Ug = !0);else return b.lanes = a.lanes, $i(a, b, e);
  }
  return dj(a, b, c, d, e);
}
function ej(a, b, c) {
  var d = b.pendingProps,
    e = d.children,
    f = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode) {
    if (0 === (b.mode & 1)) b.memoizedState = {
      baseLanes: 0,
      cachePool: null,
      transitions: null
    }, G(fj, gj), gj |= c;else {
      if (0 === (c & 1073741824)) return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
        baseLanes: a,
        cachePool: null,
        transitions: null
      }, b.updateQueue = null, G(fj, gj), gj |= a, null;
      b.memoizedState = {
        baseLanes: 0,
        cachePool: null,
        transitions: null
      };
      d = null !== f ? f.baseLanes : c;
      G(fj, gj);
      gj |= d;
    }
  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;
  Yi(a, b, e, c);
  return b.child;
}
function hj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 512, b.flags |= 2097152;
}
function dj(a, b, c, d, e) {
  var f = Zf(c) ? Xf : H.current;
  f = Yf(b, f);
  Tg(b, e);
  c = Xh(a, b, c, d, f, e);
  d = bi();
  if (null !== a && !Ug) return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && d && vg(b);
  b.flags |= 1;
  Yi(a, b, c, e);
  return b.child;
}
function ij(a, b, c, d, e) {
  if (Zf(c)) {
    var f = !0;
    cg(b);
  } else f = !1;
  Tg(b, e);
  if (null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
      h = b.memoizedProps;
    g.props = h;
    var k = g.context,
      l = c.contextType;
    "object" === typeof l && null !== l ? l = Vg(l) : (l = Zf(c) ? Xf : H.current, l = Yf(b, l));
    var m = c.getDerivedStateFromProps,
      q = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
    q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && qh(b, g, d, l);
    $g = !1;
    var r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    k = b.memoizedState;
    h !== d || r !== k || Wf.current || $g ? ("function" === typeof m && (kh(b, c, m, d), k = b.memoizedState), (h = $g || oh(b, c, h, d, r, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = !1);
  } else {
    g = b.stateNode;
    bh(a, b);
    h = b.memoizedProps;
    l = b.type === b.elementType ? h : Lg(b.type, h);
    g.props = l;
    q = b.pendingProps;
    r = g.context;
    k = c.contextType;
    "object" === typeof k && null !== k ? k = Vg(k) : (k = Zf(c) ? Xf : H.current, k = Yf(b, k));
    var y = c.getDerivedStateFromProps;
    (m = "function" === typeof y || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== q || r !== k) && qh(b, g, d, k);
    $g = !1;
    r = b.memoizedState;
    g.state = r;
    gh(b, d, g, e);
    var n = b.memoizedState;
    h !== q || r !== n || Wf.current || $g ? ("function" === typeof y && (kh(b, c, y, d), n = b.memoizedState), (l = $g || oh(b, c, l, d, r, n, k) || !1) ? (m || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n), g.props = d, g.state = n, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && r === a.memoizedState || (b.flags |= 1024), d = !1);
  }
  return kj(a, b, c, d, f, e);
}
function kj(a, b, c, d, e, f) {
  hj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g) return e && dg(b, c, !1), $i(a, b, f);
  d = b.stateNode;
  Xi.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Bh(b, a.child, null, f), b.child = Bh(b, null, h, f)) : Yi(a, b, h, f);
  b.memoizedState = d.state;
  e && dg(b, c, !0);
  return b.child;
}
function lj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, !1);
  Ih(a, b.containerInfo);
}
function mj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Yi(a, b, c, d);
  return b.child;
}
var nj = {
  dehydrated: null,
  treeContext: null,
  retryLane: 0
};
function oj(a) {
  return {
    baseLanes: a,
    cachePool: null,
    transitions: null
  };
}
function pj(a, b, c) {
  var d = b.pendingProps,
    e = M.current,
    f = !1,
    g = 0 !== (b.flags & 128),
    h;
  (h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
  if (h) f = !0, b.flags &= -129;else if (null === a || null !== a.memoizedState) e |= 1;
  G(M, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a)) return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f ? (d = b.mode, f = b.child, g = {
      mode: "hidden",
      children: g
    }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = qj(g, d, 0, null), a = Ah(a, d, c, null), f.return = b, a.return = b, f.sibling = a, b.child = f, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g);
  }
  e = a.memoizedState;
  if (null !== e && (h = e.dehydrated, null !== h)) return sj(a, b, g, d, h, e, c);
  if (f) {
    f = d.fallback;
    g = b.mode;
    e = a.child;
    h = e.sibling;
    var k = {
      mode: "hidden",
      children: d.children
    };
    0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = wh(e, k), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h ? f = wh(h, f) : (f = Ah(f, g, c, null), f.flags |= 2);
    f.return = b;
    d.return = b;
    d.sibling = f;
    b.child = d;
    d = f;
    f = b.child;
    g = a.child.memoizedState;
    g = null === g ? oj(c) : {
      baseLanes: g.baseLanes | c,
      cachePool: null,
      transitions: g.transitions
    };
    f.memoizedState = g;
    f.childLanes = a.childLanes & ~c;
    b.memoizedState = nj;
    return d;
  }
  f = a.child;
  a = f.sibling;
  d = wh(f, {
    mode: "visible",
    children: d.children
  });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function rj(a, b) {
  b = qj({
    mode: "visible",
    children: b
  }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function tj(a, b, c, d) {
  null !== d && Jg(d);
  Bh(b, a.child, null, c);
  a = rj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function sj(a, b, c, d, e, f, g) {
  if (c) {
    if (b.flags & 256) return b.flags &= -257, d = Li(Error(p(422))), tj(a, b, g, d);
    if (null !== b.memoizedState) return b.child = a.child, b.flags |= 128, null;
    f = d.fallback;
    e = b.mode;
    d = qj({
      mode: "visible",
      children: d.children
    }, e, 0, null);
    f = Ah(f, e, g, null);
    f.flags |= 2;
    d.return = b;
    f.return = b;
    d.sibling = f;
    b.child = d;
    0 !== (b.mode & 1) && Bh(b, a.child, null, g);
    b.child.memoizedState = oj(g);
    b.memoizedState = nj;
    return f;
  }
  if (0 === (b.mode & 1)) return tj(a, b, g, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d) var h = d.dgst;
    d = h;
    f = Error(p(419));
    d = Li(f, d, void 0);
    return tj(a, b, g, d);
  }
  h = 0 !== (g & a.childLanes);
  if (Ug || h) {
    d = R;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e && e !== f.retryLane && (f.retryLane = e, Zg(a, e), mh(d, a, e, -1));
    }
    uj();
    d = Li(Error(p(421)));
    return tj(a, b, g, d);
  }
  if ("$?" === e.data) return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;
  a = f.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = !0;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = rj(b, d.children);
  b.flags |= 4096;
  return b;
}
function wj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  Sg(a.return, b, c);
}
function xj(a, b, c, d, e) {
  var f = a.memoizedState;
  null === f ? a.memoizedState = {
    isBackwards: b,
    rendering: null,
    renderingStartTime: 0,
    last: d,
    tail: c,
    tailMode: e
  } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c, f.tailMode = e);
}
function yj(a, b, c) {
  var d = b.pendingProps,
    e = d.revealOrder,
    f = d.tail;
  Yi(a, b, d.children, c);
  d = M.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;else {
    if (null !== a && 0 !== (a.flags & 128)) a: for (a = b.child; null !== a;) {
      if (13 === a.tag) null !== a.memoizedState && wj(a, c, b);else if (19 === a.tag) wj(a, c, b);else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b) break a;
      for (; null === a.sibling;) {
        if (null === a.return || a.return === b) break a;
        a = a.return;
      }
      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  G(M, d);
  if (0 === (b.mode & 1)) b.memoizedState = null;else switch (e) {
    case "forwards":
      c = b.child;
      for (e = null; null !== c;) a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;
      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      xj(b, !1, e, c, f);
      break;
    case "backwards":
      c = null;
      e = b.child;
      for (b.child = null; null !== e;) {
        a = e.alternate;
        if (null !== a && null === Mh(a)) {
          b.child = e;
          break;
        }
        a = e.sibling;
        e.sibling = c;
        c = e;
        e = a;
      }
      xj(b, !0, c, null, f);
      break;
    case "together":
      xj(b, !1, null, null, void 0);
      break;
    default:
      b.memoizedState = null;
  }
  return b.child;
}
function jj(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $i(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  hh |= b.lanes;
  if (0 === (c & b.childLanes)) return null;
  if (null !== a && b.child !== a.child) throw Error(p(153));
  if (null !== b.child) {
    a = b.child;
    c = wh(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling;) a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function zj(a, b, c) {
  switch (b.tag) {
    case 3:
      lj(b);
      Ig();
      break;
    case 5:
      Kh(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      Ih(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context,
        e = b.memoizedProps.value;
      G(Mg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated) return G(M, M.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes)) return pj(a, b, c);
        G(M, M.current & 1);
        a = $i(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(M, M.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d) return yj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(M, M.current);
      if (d) break;else return null;
    case 22:
    case 23:
      return b.lanes = 0, ej(a, b, c);
  }
  return $i(a, b, c);
}
var Aj, Bj, Cj, Dj;
Aj = function (a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;
    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Bj = function () {};
Cj = function (a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    Hh(Eh.current);
    var f = null;
    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f = [];
        break;
      case "select":
        e = A({}, e, {
          value: void 0
        });
        d = A({}, d, {
          value: void 0
        });
        f = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l in e) if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
      var h = e[l];
      for (g in h) h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
    } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
    for (l in d) {
      var k = d[l];
      h = null != e ? e[l] : void 0;
      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {
        if (h) {
          for (g in h) !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
          for (g in k) k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
        } else c || (f || (f = []), f.push(l, c)), c = k;
      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ea.hasOwnProperty(l) ? (null != k && "onScroll" === l && D("scroll", a), f || h === k || (f = [])) : (f = f || []).push(l, k));
    }
    c && (f = f || []).push("style", c);
    var l = f;
    if (b.updateQueue = l) b.flags |= 4;
  }
};
Dj = function (a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Ej(a, b) {
  if (!I) switch (a.tailMode) {
    case "hidden":
      b = a.tail;
      for (var c = null; null !== b;) null !== b.alternate && (c = b), b = b.sibling;
      null === c ? a.tail = null : c.sibling = null;
      break;
    case "collapsed":
      c = a.tail;
      for (var d = null; null !== c;) null !== c.alternate && (d = c), c = c.sibling;
      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child,
    c = 0,
    d = 0;
  if (b) for (var e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;else for (e = a.child; null !== e;) c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Fj(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      Jh();
      E(Wf);
      E(H);
      Oh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b);
      S(b);
      return null;
    case 5:
      Lh(b);
      var e = Hh(Gh.current);
      c = b.type;
      if (null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);else {
        if (!d) {
          if (null === b.stateNode) throw Error(p(166));
          S(b);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++) D(lf[e], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D("error", d);
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = {
                wasMultiple: !!f.multiple
              };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f), D("invalid", d);
          }
          ub(c, f);
          e = null;
          for (var g in f) if (f.hasOwnProperty(g)) {
            var h = f[g];
            "children" === g ? "string" === typeof h ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", h]) : "number" === typeof h && d.textContent !== "" + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), e = ["children", "" + h]) : ea.hasOwnProperty(g) && null != h && "onScroll" === g && D("scroll", d);
          }
          switch (c) {
            case "input":
              Va(d);
              db(d, f, !0);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
            is: d.is
          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          Aj(a, b, !1, !1);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++) D(lf[e], a);
                e = d;
                break;
              case "source":
                D("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D("error", a);
                D("load", a);
                e = d;
                break;
              case "details":
                D("toggle", a);
                e = d;
                break;
              case "input":
                Za(a, d);
                e = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = {
                  wasMultiple: !!d.multiple
                };
                e = A({}, d, {
                  value: void 0
                });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e = gb(a, d);
                D("invalid", a);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h = e;
            for (f in h) if (h.hasOwnProperty(f)) {
              var k = h[f];
              "style" === f ? sb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && nb(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && ob(a, k) : "number" === typeof k && ob(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ea.hasOwnProperty(f) ? null != k && "onScroll" === f && D("scroll", a) : null != k && ta(a, f, k, g));
            }
            switch (c) {
              case "input":
                Va(a);
                db(a, d, !1);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f = d.value;
                null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = !0;
                break a;
              default:
                d = !1;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d);else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(p(166));
        c = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f = d.nodeValue !== c) if (a = xg, null !== a) switch (a.tag) {
            case 3:
              Af(d.nodeValue, c, 0 !== (a.mode & 1));
              break;
            case 5:
              !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
          }
          f && (b.flags |= 4);
        } else d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(M);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), b.flags |= 98560, f = !1;else if (f = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f) throw Error(p(318));
            f = b.memoizedState;
            f = null !== f ? f.dehydrated : null;
            if (!f) throw Error(p(317));
            f[Of] = b;
          } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f = !1;
        } else null !== zg && (Gj(zg), zg = null), f = !0;
        if (!f) return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128)) return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return Rg(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(M);
      f = b.memoizedState;
      if (null === f) return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f.rendering;
      if (null === g) {
        if (d) Ej(f, !1);else {
          if (0 !== T || null !== a && 0 !== (a.flags & 128)) for (a = b.child; null !== a;) {
            g = Mh(a);
            if (null !== g) {
              b.flags |= 128;
              Ej(f, !1);
              d = g.updateQueue;
              null !== d && (b.updateQueue = d, b.flags |= 4);
              b.subtreeFlags = 0;
              d = c;
              for (c = b.child; null !== c;) f = c, a = d, f.flags &= 14680066, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.subtreeFlags = 0, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.subtreeFlags = 0, f.deletions = null, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                lanes: a.lanes,
                firstContext: a.firstContext
              }), c = c.sibling;
              G(M, M.current & 1 | 2);
              return b.child;
            }
            a = a.sibling;
          }
          null !== f.tail && B() > Hj && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        }
      } else {
        if (!d) if (a = Mh(g), null !== a) {
          if (b.flags |= 128, d = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f, !0), null === f.tail && "hidden" === f.tailMode && !g.alternate && !I) return S(b), null;
        } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = !0, Ej(f, !1), b.lanes = 4194304);
        f.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f.last, null !== c ? c.sibling = g : b.child = g, f.last = g);
      }
      if (null !== f.tail) return b = f.tail, f.rendering = b, f.tail = b.sibling, f.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b.tag));
}
function Jj(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return Jh(), E(Wf), E(H), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Lh(b), null;
    case 13:
      E(M);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate) throw Error(p(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E(M), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = !1,
  U = !1,
  Lj = "function" === typeof WeakSet ? WeakSet : Set,
  V = null;
function Mj(a, b) {
  var c = a.ref;
  if (null !== c) if ("function" === typeof c) try {
    c(null);
  } catch (d) {
    W(a, b, d);
  } else c.current = null;
}
function Nj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Oj = !1;
function Pj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a) var c = {
      start: a.selectionStart,
      end: a.selectionEnd
    };else a: {
      c = (c = a.ownerDocument) && c.defaultView || window;
      var d = c.getSelection && c.getSelection();
      if (d && 0 !== d.rangeCount) {
        c = d.anchorNode;
        var e = d.anchorOffset,
          f = d.focusNode;
        d = d.focusOffset;
        try {
          c.nodeType, f.nodeType;
        } catch (F) {
          c = null;
          break a;
        }
        var g = 0,
          h = -1,
          k = -1,
          l = 0,
          m = 0,
          q = a,
          r = null;
        b: for (;;) {
          for (var y;;) {
            q !== c || 0 !== e && 3 !== q.nodeType || (h = g + e);
            q !== f || 0 !== d && 3 !== q.nodeType || (k = g + d);
            3 === q.nodeType && (g += q.nodeValue.length);
            if (null === (y = q.firstChild)) break;
            r = q;
            q = y;
          }
          for (;;) {
            if (q === a) break b;
            r === c && ++l === e && (h = g);
            r === f && ++m === d && (k = g);
            if (null !== (y = q.nextSibling)) break;
            q = r;
            r = q.parentNode;
          }
          q = y;
        }
        c = -1 === h || -1 === k ? null : {
          start: h,
          end: k
        };
      } else c = null;
    }
    c = c || {
      start: 0,
      end: 0
    };
  } else c = null;
  Df = {
    focusedElem: a,
    selectionRange: c
  };
  dd = !1;
  for (V = b; null !== V;) if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a) a.return = b, V = a;else for (; null !== V;) {
    b = V;
    try {
      var n = b.alternate;
      if (0 !== (b.flags & 1024)) switch (b.tag) {
        case 0:
        case 11:
        case 15:
          break;
        case 1:
          if (null !== n) {
            var t = n.memoizedProps,
              J = n.memoizedState,
              x = b.stateNode,
              w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J);
            x.__reactInternalSnapshotBeforeUpdate = w;
          }
          break;
        case 3:
          var u = b.stateNode.containerInfo;
          1 === u.nodeType ? u.textContent = "" : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement);
          break;
        case 5:
        case 6:
        case 4:
        case 17:
          break;
        default:
          throw Error(p(163));
      }
    } catch (F) {
      W(b, b.return, F);
    }
    a = b.sibling;
    if (null !== a) {
      a.return = b.return;
      V = a;
      break;
    }
    V = b.return;
  }
  n = Oj;
  Oj = !1;
  return n;
}
function Qj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f = e.destroy;
        e.destroy = void 0;
        void 0 !== f && Nj(b, c, f);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Rj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Sj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Tj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Tj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a: for (;;) {
    for (; null === a.sibling;) {
      if (null === a.return || Uj(a.return)) return null;
      a = a.return;
    }
    a.sibling.return = a.return;
    for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag;) {
      if (a.flags & 2) continue a;
      if (null === a.child || 4 === a.tag) continue a;else a.child.return = a, a = a.child;
    }
    if (!(a.flags & 2)) return a.stateNode;
  }
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));else if (4 !== d && (a = a.child, null !== a)) for (Wj(a, b, c), a = a.sibling; null !== a;) Wj(a, b, c), a = a.sibling;
}
function Xj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d) a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (Xj(a, b, c), a = a.sibling; null !== a;) Xj(a, b, c), a = a.sibling;
}
var X = null,
  Yj = !1;
function Zj(a, b, c) {
  for (c = c.child; null !== c;) ak(a, b, c), c = c.sibling;
}
function ak(a, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
    lc.onCommitFiberUnmount(kc, c);
  } catch (h) {}
  switch (c.tag) {
    case 5:
      U || Mj(c, b);
    case 6:
      var d = X,
        e = Yj;
      X = null;
      Zj(a, b, c);
      X = d;
      Yj = e;
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Yj;
      X = c.stateNode.containerInfo;
      Yj = !0;
      Zj(a, b, c);
      X = d;
      Yj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f = e,
            g = f.destroy;
          f = f.tag;
          void 0 !== g && (0 !== (f & 2) ? Nj(c, b, g) : 0 !== (f & 4) && Nj(c, b, g));
          e = e.next;
        } while (e !== d);
      }
      Zj(a, b, c);
      break;
    case 1:
      if (!U && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount)) try {
        d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
      } catch (h) {
        W(c, b, h);
      }
      Zj(a, b, c);
      break;
    case 21:
      Zj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);
      break;
    default:
      Zj(a, b, c);
  }
}
function bk(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Lj());
    b.forEach(function (b) {
      var d = ck.bind(null, a, b);
      c.has(b) || (c.add(b), b.then(d, d));
    });
  }
}
function dk(a, b) {
  var c = b.deletions;
  if (null !== c) for (var d = 0; d < c.length; d++) {
    var e = c[d];
    try {
      var f = a,
        g = b,
        h = g;
      a: for (; null !== h;) {
        switch (h.tag) {
          case 5:
            X = h.stateNode;
            Yj = !1;
            break a;
          case 3:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
          case 4:
            X = h.stateNode.containerInfo;
            Yj = !0;
            break a;
        }
        h = h.return;
      }
      if (null === X) throw Error(p(160));
      ak(f, g, e);
      X = null;
      Yj = !1;
      var k = e.alternate;
      null !== k && (k.return = null);
      e.return = null;
    } catch (l) {
      W(e, b, l);
    }
  }
  if (b.subtreeFlags & 12854) for (b = b.child; null !== b;) ek(b, a), b = b.sibling;
}
function ek(a, b) {
  var c = a.alternate,
    d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b, a);
      fk(a);
      if (d & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t) {
          W(a, a.return, t);
        }
        try {
          Qj(5, a, a.return);
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 1:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      break;
    case 5:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, "");
        } catch (t) {
          W(a, a.return, t);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f = a.memoizedProps,
          g = null !== c ? c.memoizedProps : f,
          h = a.type,
          k = a.updateQueue;
        a.updateQueue = null;
        if (null !== k) try {
          "input" === h && "radio" === f.type && null != f.name && ab(e, f);
          vb(h, g);
          var l = vb(h, f);
          for (g = 0; g < k.length; g += 2) {
            var m = k[g],
              q = k[g + 1];
            "style" === m ? sb(e, q) : "dangerouslySetInnerHTML" === m ? nb(e, q) : "children" === m ? ob(e, q) : ta(e, m, q, l);
          }
          switch (h) {
            case "input":
              bb(e, f);
              break;
            case "textarea":
              ib(e, f);
              break;
            case "select":
              var r = e._wrapperState.wasMultiple;
              e._wrapperState.wasMultiple = !!f.multiple;
              var y = f.value;
              null != y ? fb(e, !!f.multiple, y, !1) : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : "", !1));
          }
          e[Pf] = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 6:
      dk(b, a);
      fk(a);
      if (d & 4) {
        if (null === a.stateNode) throw Error(p(162));
        e = a.stateNode;
        f = a.memoizedProps;
        try {
          e.nodeValue = f;
        } catch (t) {
          W(a, a.return, t);
        }
      }
      break;
    case 3:
      dk(b, a);
      fk(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated) try {
        bd(b.containerInfo);
      } catch (t) {
        W(a, a.return, t);
      }
      break;
    case 4:
      dk(b, a);
      fk(a);
      break;
    case 13:
      dk(b, a);
      fk(a);
      e = a.child;
      e.flags & 8192 && (f = null !== e.memoizedState, e.stateNode.isHidden = f, !f || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B()));
      d & 4 && bk(a);
      break;
    case 22:
      m = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U = (l = U) || m, dk(b, a), U = l) : dk(b, a);
      fk(a);
      if (d & 8192) {
        l = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1)) for (V = a, m = a.child; null !== m;) {
          for (q = V = m; null !== V;) {
            r = V;
            y = r.child;
            switch (r.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                Qj(4, r, r.return);
                break;
              case 1:
                Mj(r, r.return);
                var n = r.stateNode;
                if ("function" === typeof n.componentWillUnmount) {
                  d = r;
                  c = r.return;
                  try {
                    b = d, n.props = b.memoizedProps, n.state = b.memoizedState, n.componentWillUnmount();
                  } catch (t) {
                    W(d, c, t);
                  }
                }
                break;
              case 5:
                Mj(r, r.return);
                break;
              case 22:
                if (null !== r.memoizedState) {
                  hk(q);
                  continue;
                }
            }
            null !== y ? (y.return = r, V = y) : hk(q);
          }
          m = m.sibling;
        }
        a: for (m = null, q = a;;) {
          if (5 === q.tag) {
            if (null === m) {
              m = q;
              try {
                e = q.stateNode, l ? (f = e.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (h = q.stateNode, k = q.memoizedProps.style, g = void 0 !== k && null !== k && k.hasOwnProperty("display") ? k.display : null, h.style.display = rb("display", g));
              } catch (t) {
                W(a, a.return, t);
              }
            }
          } else if (6 === q.tag) {
            if (null === m) try {
              q.stateNode.nodeValue = l ? "" : q.memoizedProps;
            } catch (t) {
              W(a, a.return, t);
            }
          } else if ((22 !== q.tag && 23 !== q.tag || null === q.memoizedState || q === a) && null !== q.child) {
            q.child.return = q;
            q = q.child;
            continue;
          }
          if (q === a) break a;
          for (; null === q.sibling;) {
            if (null === q.return || q.return === a) break a;
            m === q && (m = null);
            q = q.return;
          }
          m === q && (m = null);
          q.sibling.return = q.return;
          q = q.sibling;
        }
      }
      break;
    case 19:
      dk(b, a);
      fk(a);
      d & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(b, a), fk(a);
  }
}
function fk(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c;) {
          if (Uj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f = Vj(a);
          Xj(a, f, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo,
            h = Vj(a);
          Wj(a, h, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k) {
      W(a, a.return, k);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function ik(a, b, c) {
  V = a;
  jk(a, b, c);
}
function jk(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V;) {
    var e = V,
      f = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Kj;
      if (!g) {
        var h = e.alternate,
          k = null !== h && null !== h.memoizedState || U;
        h = Kj;
        var l = U;
        Kj = g;
        if ((U = k) && !l) for (V = e; null !== V;) g = V, k = g.child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? (k.return = g, V = k) : kk(e);
        for (; null !== f;) V = f, jk(f, b, c), f = f.sibling;
        V = e;
        Kj = h;
        U = l;
      }
      lk(a, b, c);
    } else 0 !== (e.subtreeFlags & 8772) && null !== f ? (f.return = e, V = f) : lk(a, b, c);
  }
}
function lk(a) {
  for (; null !== V;) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772)) switch (b.tag) {
          case 0:
          case 11:
          case 15:
            U || Rj(5, b);
            break;
          case 1:
            var d = b.stateNode;
            if (b.flags & 4 && !U) if (null === c) d.componentDidMount();else {
              var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
              d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
            }
            var f = b.updateQueue;
            null !== f && ih(b, f, d);
            break;
          case 3:
            var g = b.updateQueue;
            if (null !== g) {
              c = null;
              if (null !== b.child) switch (b.child.tag) {
                case 5:
                  c = b.child.stateNode;
                  break;
                case 1:
                  c = b.child.stateNode;
              }
              ih(b, g, c);
            }
            break;
          case 5:
            var h = b.stateNode;
            if (null === c && b.flags & 4) {
              c = h;
              var k = b.memoizedProps;
              switch (b.type) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  k.autoFocus && c.focus();
                  break;
                case "img":
                  k.src && (c.src = k.src);
              }
            }
            break;
          case 6:
            break;
          case 4:
            break;
          case 12:
            break;
          case 13:
            if (null === b.memoizedState) {
              var l = b.alternate;
              if (null !== l) {
                var m = l.memoizedState;
                if (null !== m) {
                  var q = m.dehydrated;
                  null !== q && bd(q);
                }
              }
            }
            break;
          case 19:
          case 17:
          case 21:
          case 22:
          case 23:
          case 25:
            break;
          default:
            throw Error(p(163));
        }
        U || b.flags & 512 && Sj(b);
      } catch (r) {
        W(b, b.return, r);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function hk(a) {
  for (; null !== V;) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function kk(a) {
  for (; null !== V;) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Rj(4, b);
          } catch (k) {
            W(b, c, k);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k) {
              W(b, e, k);
            }
          }
          var f = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, f, k);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Sj(b);
          } catch (k) {
            W(b, g, k);
          }
      }
    } catch (k) {
      W(b, b.return, k);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h = b.sibling;
    if (null !== h) {
      h.return = b.return;
      V = h;
      break;
    }
    V = b.return;
  }
}
var mk = Math.ceil,
  nk = ua.ReactCurrentDispatcher,
  ok = ua.ReactCurrentOwner,
  pk = ua.ReactCurrentBatchConfig,
  K = 0,
  R = null,
  Y = null,
  Z = 0,
  gj = 0,
  fj = Uf(0),
  T = 0,
  qk = null,
  hh = 0,
  rk = 0,
  sk = 0,
  tk = null,
  uk = null,
  gk = 0,
  Hj = Infinity,
  vk = null,
  Pi = !1,
  Qi = null,
  Si = null,
  wk = !1,
  xk = null,
  yk = 0,
  zk = 0,
  Ak = null,
  Bk = -1,
  Ck = 0;
function L() {
  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();
}
function lh(a) {
  if (0 === (a.mode & 1)) return 1;
  if (0 !== (K & 2) && 0 !== Z) return Z & -Z;
  if (null !== Kg.transition) return 0 === Ck && (Ck = yc()), Ck;
  a = C;
  if (0 !== a) return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function mh(a, b, c, d) {
  if (50 < zk) throw zk = 0, Ak = null, Error(p(185));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== R) a === R && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Hj = B() + 500, fg && jg());
}
function Ek(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b) 0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function () {
      0 === (K & 6) && jg();
    }), c = null;else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Gk(c, Hk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Hk(a, b) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6)) throw Error(p(327));
  var c = a.callbackNode;
  if (Ik() && a.callbackNode !== c) return null;
  var d = uc(a, a === R ? Z : 0);
  if (0 === d) return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Jk(a, d);else {
    b = d;
    var e = K;
    K |= 2;
    var f = Kk();
    if (R !== a || Z !== b) vk = null, Hj = B() + 500, Lk(a, b);
    do try {
      Mk();
      break;
    } catch (h) {
      Nk(a, h);
    } while (1);
    Qg();
    nk.current = f;
    K = e;
    null !== Y ? b = 0 : (R = null, Z = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e = xc(a), 0 !== e && (d = e, b = Ok(a, e)));
    if (1 === b) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
    if (6 === b) Dk(a, d);else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f = xc(a), 0 !== f && (d = f, b = Ok(a, f))), 1 === b)) throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d);
          if ((d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {
            if (0 !== uc(a, 0)) break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              L();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d);
          if ((d & 4194240) === d) break;
          b = a.eventTimes;
          for (e = -1; 0 < d;) {
            var g = 31 - oc(d);
            f = 1 << g;
            g = b[g];
            g > e && (e = g);
            d &= ~f;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Ek(a, B());
  return a.callbackNode === c ? Hk.bind(null, a) : null;
}
function Ok(a, b) {
  var c = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);
  a = Jk(a, b);
  2 !== a && (b = uk, uk = c, null !== b && Gj(b));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b = a;;) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c)) for (var d = 0; d < c.length; d++) {
        var e = c[d],
          f = e.getSnapshot;
        e = e.value;
        try {
          if (!He(f(), e)) return !1;
        } catch (g) {
          return !1;
        }
      }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c) c.return = b, b = c;else {
      if (b === a) break;
      for (; null === b.sibling;) {
        if (null === b.return || b.return === a) return !0;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return !0;
}
function Dk(a, b) {
  b &= ~sk;
  b &= ~rk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - oc(b),
      d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Fk(a) {
  if (0 !== (K & 6)) throw Error(p(327));
  Ik();
  var b = uc(a, 0);
  if (0 === (b & 1)) return Ek(a, B()), null;
  var c = Jk(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && (b = d, c = Ok(a, d));
  }
  if (1 === c) throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;
  if (6 === c) throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Qk(a, uk, vk);
  Ek(a, B());
  return null;
}
function Rk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    K = c, 0 === K && (Hj = B() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b = K;
  K |= 1;
  var c = pk.transition,
    d = C;
  try {
    if (pk.transition = null, C = 1, a) return a();
  } finally {
    C = d, pk.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E(fj);
}
function Lk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y) for (c = Y.return; null !== c;) {
    var d = c;
    wg(d);
    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && $f();
        break;
      case 3:
        Jh();
        E(Wf);
        E(H);
        Oh();
        break;
      case 5:
        Lh(d);
        break;
      case 4:
        Jh();
        break;
      case 13:
        E(M);
        break;
      case 19:
        E(M);
        break;
      case 10:
        Rg(d.type._context);
        break;
      case 22:
      case 23:
        Ij();
    }
    c = c.return;
  }
  R = a;
  Y = a = wh(a.current, null);
  Z = gj = b;
  T = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b = 0; b < Wg.length; b++) if (c = Wg[b], d = c.interleaved, null !== d) {
      c.interleaved = null;
      var e = d.next,
        f = c.pending;
      if (null !== f) {
        var g = f.next;
        f.next = e;
        d.next = g;
      }
      c.pending = d;
    }
    Wg = null;
  }
  return a;
}
function Nk(a, b) {
  do {
    var c = Y;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d = N.memoizedState; null !== d;) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Sh = !1;
      }
      Rh = 0;
      P = O = N = null;
      Th = !1;
      Uh = 0;
      ok.current = null;
      if (null === c || null === c.return) {
        T = 1;
        qk = b;
        Y = null;
        break;
      }
      a: {
        var f = a,
          g = c.return,
          h = c,
          k = b;
        b = Z;
        h.flags |= 32768;
        if (null !== k && "object" === typeof k && "function" === typeof k.then) {
          var l = k,
            m = h,
            q = m.tag;
          if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
            var r = m.alternate;
            r ? (m.updateQueue = r.updateQueue, m.memoizedState = r.memoizedState, m.lanes = r.lanes) : (m.updateQueue = null, m.memoizedState = null);
          }
          var y = Vi(g);
          if (null !== y) {
            y.flags &= -257;
            Wi(y, g, h, f, b);
            y.mode & 1 && Ti(f, l, b);
            b = y;
            k = l;
            var n = b.updateQueue;
            if (null === n) {
              var t = new Set();
              t.add(k);
              b.updateQueue = t;
            } else n.add(k);
            break a;
          } else {
            if (0 === (b & 1)) {
              Ti(f, l, b);
              uj();
              break a;
            }
            k = Error(p(426));
          }
        } else if (I && h.mode & 1) {
          var J = Vi(g);
          if (null !== J) {
            0 === (J.flags & 65536) && (J.flags |= 256);
            Wi(J, g, h, f, b);
            Jg(Ki(k, h));
            break a;
          }
        }
        f = k = Ki(k, h);
        4 !== T && (T = 2);
        null === tk ? tk = [f] : tk.push(f);
        f = g;
        do {
          switch (f.tag) {
            case 3:
              f.flags |= 65536;
              b &= -b;
              f.lanes |= b;
              var x = Oi(f, k, b);
              fh(f, x);
              break a;
            case 1:
              h = k;
              var w = f.type,
                u = f.stateNode;
              if (0 === (f.flags & 128) && ("function" === typeof w.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === Si || !Si.has(u)))) {
                f.flags |= 65536;
                b &= -b;
                f.lanes |= b;
                var F = Ri(f, h, b);
                fh(f, F);
                break a;
              }
          }
          f = f.return;
        } while (null !== f);
      }
      Tk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T || 3 === T || 2 === T) T = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);
}
function Jk(a, b) {
  var c = K;
  K |= 2;
  var d = Kk();
  if (R !== a || Z !== b) vk = null, Lk(a, b);
  do try {
    Uk();
    break;
  } catch (e) {
    Nk(a, e);
  } while (1);
  Qg();
  K = c;
  nk.current = d;
  if (null !== Y) throw Error(p(261));
  R = null;
  Z = 0;
  return T;
}
function Uk() {
  for (; null !== Y;) Vk(Y);
}
function Mk() {
  for (; null !== Y && !cc();) Vk(Y);
}
function Vk(a) {
  var b = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b ? Tk(a) : Y = b;
  ok.current = null;
}
function Tk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Fj(c, b, gj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Jj(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a) a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Qk(a, b, c) {
  var d = C,
    e = pk.transition;
  try {
    pk.transition = null, C = 1, Xk(a, b, c, d);
  } finally {
    pk.transition = e, C = d;
  }
  return null;
}
function Xk(a, b, c, d) {
  do Ik(); while (null !== xk);
  if (0 !== (K & 6)) throw Error(p(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f = c.lanes | c.childLanes;
  Bc(a, f);
  a === R && (Y = R = null, Z = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = !0, Gk(hc, function () {
    Ik();
    return null;
  }));
  f = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f) {
    f = pk.transition;
    pk.transition = null;
    var g = C;
    C = 1;
    var h = K;
    K |= 4;
    ok.current = null;
    Pj(a, c);
    ek(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    ik(c, a, e);
    dc();
    K = h;
    C = g;
    pk.transition = f;
  } else a.current = c;
  wk && (wk = !1, xk = a, yk = e);
  f = a.pendingLanes;
  0 === f && (Si = null);
  mc(c.stateNode, d);
  Ek(a, B());
  if (null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) e = b[c], d(e.value, {
    componentStack: e.stack,
    digest: e.digest
  });
  if (Pi) throw Pi = !1, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f = a.pendingLanes;
  0 !== (f & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc(yk),
      b = pk.transition,
      c = C;
    try {
      pk.transition = null;
      C = 16 > a ? 16 : a;
      if (null === xk) var d = !1;else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6)) throw Error(p(331));
        var e = K;
        K |= 4;
        for (V = a.current; null !== V;) {
          var f = V,
            g = f.child;
          if (0 !== (V.flags & 16)) {
            var h = f.deletions;
            if (null !== h) {
              for (var k = 0; k < h.length; k++) {
                var l = h[k];
                for (V = l; null !== V;) {
                  var m = V;
                  switch (m.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m, f);
                  }
                  var q = m.child;
                  if (null !== q) q.return = m, V = q;else for (; null !== V;) {
                    m = V;
                    var r = m.sibling,
                      y = m.return;
                    Tj(m);
                    if (m === l) {
                      V = null;
                      break;
                    }
                    if (null !== r) {
                      r.return = y;
                      V = r;
                      break;
                    }
                    V = y;
                  }
                }
              }
              var n = f.alternate;
              if (null !== n) {
                var t = n.child;
                if (null !== t) {
                  n.child = null;
                  do {
                    var J = t.sibling;
                    t.sibling = null;
                    t = J;
                  } while (null !== t);
                }
              }
              V = f;
            }
          }
          if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, V = g;else b: for (; null !== V;) {
            f = V;
            if (0 !== (f.flags & 2048)) switch (f.tag) {
              case 0:
              case 11:
              case 15:
                Qj(9, f, f.return);
            }
            var x = f.sibling;
            if (null !== x) {
              x.return = f.return;
              V = x;
              break b;
            }
            V = f.return;
          }
        }
        var w = a.current;
        for (V = w; null !== V;) {
          g = V;
          var u = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, V = u;else b: for (g = w; null !== V;) {
            h = V;
            if (0 !== (h.flags & 2048)) try {
              switch (h.tag) {
                case 0:
                case 11:
                case 15:
                  Rj(9, h);
              }
            } catch (na) {
              W(h, h.return, na);
            }
            if (h === g) {
              V = null;
              break b;
            }
            var F = h.sibling;
            if (null !== F) {
              F.return = h.return;
              V = F;
              break b;
            }
            V = h.return;
          }
        }
        K = e;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
          lc.onPostCommitFiberRoot(kc, a);
        } catch (na) {}
        d = !0;
      }
      return d;
    } finally {
      C = c, pk.transition = b;
    }
  }
  return !1;
}
function Yk(a, b, c) {
  b = Ki(c, b);
  b = Oi(a, b, 1);
  a = dh(a, b, 1);
  b = L();
  null !== a && (Ac(a, 1, b), Ek(a, b));
}
function W(a, b, c) {
  if (3 === a.tag) Yk(a, a, c);else for (; null !== b;) {
    if (3 === b.tag) {
      Yk(b, a, c);
      break;
    } else if (1 === b.tag) {
      var d = b.stateNode;
      if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
        a = Ki(c, a);
        a = Ri(b, a, 1);
        b = dh(b, a, 1);
        a = L();
        null !== b && (Ac(b, 1, a), Ek(b, a));
        break;
      }
    }
    b = b.return;
  }
}
function Ui(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = L();
  a.pingedLanes |= a.suspendedLanes & c;
  R === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c);
  Ek(a, b);
}
function Zk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = L();
  a = Zg(a, b);
  null !== a && (Ac(a, b, c), Ek(a, c));
}
function vj(a) {
  var b = a.memoizedState,
    c = 0;
  null !== b && (c = b.retryLane);
  Zk(a, c);
}
function ck(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b);
  Zk(a, c);
}
var Wk;
Wk = function (a, b, c) {
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0;else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return Ug = !1, zj(a, b, c);
      Ug = 0 !== (a.flags & 131072) ? !0 : !1;
    }
  } else Ug = !1, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      jj(a, b);
      a = b.pendingProps;
      var e = Yf(b, H.current);
      Tg(b, c);
      e = Xh(null, b, d, a, e, c);
      var f = bi();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f = !0, cg(b)) : f = !1, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, !0, f, c)) : (b.tag = 0, I && f && vg(b), Yi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        jj(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = $k(d);
        a = Lg(d, a);
        switch (e) {
          case 0:
            b = dj(null, b, d, a, c);
            break a;
          case 1:
            b = ij(null, b, d, a, c);
            break a;
          case 11:
            b = Zi(null, b, d, a, c);
            break a;
          case 14:
            b = aj(null, b, d, Lg(d.type, a), c);
            break a;
        }
        throw Error(p(306, d, ""));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);
    case 3:
      a: {
        lj(b);
        if (null === a) throw Error(p(387));
        d = b.pendingProps;
        f = b.memoizedState;
        e = f.element;
        bh(a, b);
        gh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f.isDehydrated) {
          if (f = {
            element: d,
            isDehydrated: !1,
            cache: g.cache,
            pendingSuspenseBoundaries: g.pendingSuspenseBoundaries,
            transitions: g.transitions
          }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
            e = Ki(Error(p(423)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ki(Error(p(424)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c;) c.flags = c.flags & -3 | 4096, c = c.sibling;
        } else {
          Ig();
          if (d === e) {
            b = $i(a, b, c);
            break a;
          }
          Yi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f && Ef(d, f) && (b.flags |= 32), hj(a, b), Yi(a, b, g, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return pj(a, b, c);
    case 4:
      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);
    case 7:
      return Yi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f = b.memoizedProps;
        g = e.value;
        G(Mg, d._currentValue);
        d._currentValue = g;
        if (null !== f) if (He(f.value, g)) {
          if (f.children === e.children && !Wf.current) {
            b = $i(a, b, c);
            break a;
          }
        } else for (f = b.child, null !== f && (f.return = b); null !== f;) {
          var h = f.dependencies;
          if (null !== h) {
            g = f.child;
            for (var k = h.firstContext; null !== k;) {
              if (k.context === d) {
                if (1 === f.tag) {
                  k = ch(-1, c & -c);
                  k.tag = 2;
                  var l = f.updateQueue;
                  if (null !== l) {
                    l = l.shared;
                    var m = l.pending;
                    null === m ? k.next = k : (k.next = m.next, m.next = k);
                    l.pending = k;
                  }
                }
                f.lanes |= c;
                k = f.alternate;
                null !== k && (k.lanes |= c);
                Sg(f.return, c, b);
                h.lanes |= c;
                break;
              }
              k = k.next;
            }
          } else if (10 === f.tag) g = f.type === b.type ? null : f.child;else if (18 === f.tag) {
            g = f.return;
            if (null === g) throw Error(p(341));
            g.lanes |= c;
            h = g.alternate;
            null !== h && (h.lanes |= c);
            Sg(g, c, b);
            g = f.sibling;
          } else g = f.child;
          if (null !== g) g.return = f;else for (g = f; null !== g;) {
            if (g === b) {
              g = null;
              break;
            }
            f = g.sibling;
            if (null !== f) {
              f.return = g.return;
              g = f;
              break;
            }
            g = g.return;
          }
          f = g;
        }
        Yi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);
    case 15:
      return cj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = !0, cg(b)) : a = !1, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, !0, a, c);
    case 19:
      return yj(a, b, c);
    case 22:
      return ej(a, b, c);
  }
  throw Error(p(156, b.tag));
};
function Gk(a, b) {
  return ac(a, b);
}
function al(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new al(a, b, c, d);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a) return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da) return 11;
    if (a === Ga) return 14;
  }
  return 2;
}
function wh(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : {
    lanes: b.lanes,
    firstContext: b.firstContext
  };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function yh(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) bj(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case ya:
      return Ah(c.children, e, f, b);
    case za:
      g = 8;
      e |= 8;
      break;
    case Aa:
      return a = Bg(12, c, b, e | 2), a.elementType = Aa, a.lanes = f, a;
    case Ea:
      return a = Bg(13, c, b, e), a.elementType = Ea, a.lanes = f, a;
    case Fa:
      return a = Bg(19, c, b, e), a.elementType = Fa, a.lanes = f, a;
    case Ia:
      return qj(c, e, f, b);
    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case Ba:
          g = 10;
          break a;
        case Ca:
          g = 9;
          break a;
        case Da:
          g = 11;
          break a;
        case Ga:
          g = 14;
          break a;
        case Ha:
          g = 16;
          d = null;
          break a;
      }
      throw Error(p(130, null == a ? a : typeof a, ""));
  }
  b = Bg(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f;
  return b;
}
function Ah(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function qj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = {
    isHidden: !1
  };
  return a;
}
function xh(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function zh(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}
function bl(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b, c, d, e, f, g, h, k) {
  a = new bl(a, b, c, h, k);
  1 === b ? (b = 1, !0 === f && (b |= 8)) : b = 0;
  f = Bg(3, null, null, b);
  a.current = f;
  f.stateNode = a;
  f.memoizedState = {
    element: d,
    isDehydrated: c,
    cache: null,
    transitions: null,
    pendingSuspenseBoundaries: null
  };
  ah(f);
  return a;
}
function dl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: wa,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}
function el(a) {
  if (!a) return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag) throw Error(p(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c)) return bg(a, c, b);
  }
  return b;
}
function fl(a, b, c, d, e, f, g, h, k) {
  a = cl(c, d, !0, a, e, f, g, h, k);
  a.context = el(null);
  c = a.current;
  d = L();
  e = lh(c);
  f = ch(d, e);
  f.callback = void 0 !== b && null !== b ? b : null;
  dh(c, f, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Ek(a, d);
  return a;
}
function gl(a, b, c, d) {
  var e = b.current,
    f = L(),
    g = lh(e);
  c = el(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = ch(f, g);
  b.payload = {
    element: a
  };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = dh(e, b, g);
  null !== a && (mh(a, e, g, f), eh(a, e, g));
  return g;
}
function hl(a) {
  a = a.current;
  if (!a.child) return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function jl(a, b) {
  il(a, b);
  (a = a.alternate) && il(a, b);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function (a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function (a) {
  var b = this._internalRoot;
  if (null === b) throw Error(p(409));
  gl(a, b, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function () {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Sk(function () {
      gl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function (a) {
  if (a) {
    var b = Hc();
    a = {
      blockedOn: null,
      target: a,
      priority: b
    };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++);
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {}
function rl(a, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f = d;
      d = function () {
        var a = hl(g);
        f.call(a);
      };
    }
    var g = fl(b, d, a, 0, null, !1, !1, "", ql);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g;
  }
  for (; e = a.lastChild;) a.removeChild(e);
  if ("function" === typeof d) {
    var h = d;
    d = function () {
      var a = hl(k);
      h.call(a);
    };
  }
  var k = cl(a, 0, !1, null, null, !1, !1, "", ql);
  a._reactRootContainer = k;
  a[uf] = k.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function () {
    gl(b, k, c, d);
  });
  return k;
}
function sl(a, b, c, d, e) {
  var f = c._reactRootContainer;
  if (f) {
    var g = f;
    if ("function" === typeof e) {
      var h = e;
      e = function () {
        var a = hl(g);
        h.call(a);
      };
    }
    gl(b, g, a, e);
  } else g = rl(c, b, a, e, d);
  return hl(g);
}
Ec = function (a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));
      }
      break;
    case 13:
      Sk(function () {
        var b = Zg(a, 1);
        if (null !== b) {
          var c = L();
          mh(b, a, 1, c);
        }
      }), jl(a, 1);
  }
};
Fc = function (a) {
  if (13 === a.tag) {
    var b = Zg(a, 134217728);
    if (null !== b) {
      var c = L();
      mh(b, a, 134217728, c);
    }
    jl(a, 134217728);
  }
};
Gc = function (a) {
  if (13 === a.tag) {
    var b = lh(a),
      c = Zg(a, b);
    if (null !== c) {
      var d = L();
      mh(c, a, b, d);
    }
    jl(a, b);
  }
};
Hc = function () {
  return C;
};
Ic = function (a, b) {
  var c = C;
  try {
    return C = a, b();
  } finally {
    C = c;
  }
};
yb = function (a, b, c) {
  switch (b) {
    case "input":
      bb(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, !1);
  }
};
Gb = Rk;
Hb = Sk;
var tl = {
    usingClientEntryPoint: !1,
    Events: [Cb, ue, Db, Eb, Fb, Rk]
  },
  ul = {
    findFiberByHostInstance: Wc,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom"
  };
var vl = {
  bundleType: ul.bundleType,
  version: ul.version,
  rendererPackageName: ul.rendererPackageName,
  rendererConfig: ul.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setErrorHandler: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ua.ReactCurrentDispatcher,
  findHostInstanceByFiber: function (a) {
    a = Zb(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: ul.findFiberByHostInstance || kl,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null,
  reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber) try {
    kc = wl.inject(vl), lc = wl;
  } catch (a) {}
}
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
exports.createPortal = function (a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b)) throw Error(p(200));
  return dl(a, b, null, c);
};
exports.createRoot = function (a, b) {
  if (!ol(a)) throw Error(p(299));
  var c = !1,
    d = "",
    e = ll;
  null !== b && void 0 !== b && (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = cl(a, 1, !1, null, null, c, !1, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b);
};
exports.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render) throw Error(p(188));
    a = Object.keys(a).join(",");
    throw Error(p(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
exports.flushSync = function (a) {
  return Sk(a);
};
exports.hydrate = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !0, c);
};
exports.hydrateRoot = function (a, b, c) {
  if (!ol(a)) throw Error(p(405));
  var d = null != c && c.hydratedSources || null,
    e = !1,
    f = "",
    g = ll;
  null !== c && void 0 !== c && (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = fl(b, null, a, 1, null != c ? c : null, e, !1, f, g);
  a[uf] = b.current;
  sf(a);
  if (d) for (a = 0; a < d.length; a++) c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(c, e);
  return new nl(b);
};
exports.render = function (a, b, c) {
  if (!pl(b)) throw Error(p(200));
  return sl(null, a, b, !1, c);
};
exports.unmountComponentAtNode = function (a) {
  if (!pl(a)) throw Error(p(40));
  return a._reactRootContainer ? (Sk(function () {
    sl(null, null, a, !1, function () {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), !0) : !1;
};
exports.unstable_batchedUpdates = Rk;
exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!pl(c)) throw Error(p(200));
  if (null == a || void 0 === a._reactInternals) throw Error(p(38));
  return sl(a, b, c, !1, d);
};
exports.version = "18.2.0-next-9e3b772b8-20220608";

/***/ }),

/***/ 6116:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}
if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(3748);
} else {}

/***/ }),

/***/ 8900:
/***/ (function(module) {

!function (t, e) {
   true ? module.exports = e() : 0;
}(window, function () {
  return function (t) {
    var e = {};
    function n(o) {
      if (e[o]) return e[o].exports;
      var r = e[o] = {
        i: o,
        l: !1,
        exports: {}
      };
      return t[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
    }
    return n.m = t, n.c = e, n.d = function (t, e, o) {
      n.o(t, e) || Object.defineProperty(t, e, {
        enumerable: !0,
        get: o
      });
    }, n.r = function (t) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(t, "__esModule", {
        value: !0
      });
    }, n.t = function (t, e) {
      if (1 & e && (t = n(t)), 8 & e) return t;
      if (4 & e && "object" == typeof t && t && t.__esModule) return t;
      var o = Object.create(null);
      if (n.r(o), Object.defineProperty(o, "default", {
        enumerable: !0,
        value: t
      }), 2 & e && "string" != typeof t) for (var r in t) n.d(o, r, function (e) {
        return t[e];
      }.bind(null, r));
      return o;
    }, n.n = function (t) {
      var e = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };
      return n.d(e, "a", e), e;
    }, n.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, n.p = "", n(n.s = 0);
  }([function (t, e, n) {
    t.exports = n(1);
  }, function (t, e, n) {
    "use strict";

    function o(t) {
      return function (t) {
        if (Array.isArray(t)) {
          for (var e = 0, n = new Array(t.length); e < t.length; e++) n[e] = t[e];
          return n;
        }
      }(t) || function (t) {
        if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) return Array.from(t);
      }(t) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }
    n.r(e);
    var r = !!window.fbq,
      i = !1,
      a = function () {
        var t;
        if (i) {
          for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
          (t = console).info.apply(t, o(["[react-facebook-pixel]"].concat(n)));
        }
      },
      c = function () {
        var t;
        if (i) {
          for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
          (t = console).info.apply(t, o(["[react-facebook-pixel]"].concat(n)));
        }
      },
      f = function () {
        return r || a("Pixel not initialized before using call ReactPixel.init with required params"), r;
      },
      u = {
        autoConfig: !0,
        debug: !1
      };
    e.default = {
      init: function (t) {
        var e,
          n,
          o,
          c,
          f,
          l,
          d = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : u;
        e = window, n = document, o = "script", e.fbq || (c = e.fbq = function () {
          c.callMethod ? c.callMethod.apply(c, arguments) : c.queue.push(arguments);
        }, e._fbq || (e._fbq = c), c.push = c, c.loaded = !0, c.version = "2.0", c.queue = [], (f = n.createElement(o)).async = !0, f.src = "https://connect.facebook.net/en_US/fbevents.js", (l = n.getElementsByTagName(o)[0]).parentNode.insertBefore(f, l)), t ? (!1 === s.autoConfig && fbq("set", "autoConfig", !1, t), fbq("init", t, d), r = !0, i = s.debug) : a("Please insert pixel id for initializing");
      },
      pageView: function () {
        f() && (fbq("track", "PageView"), i && c("called fbq('track', 'PageView');"));
      },
      track: function (t, e) {
        f() && (fbq("track", t, e), i && (c("called fbq('track', '".concat(t, "');")), e && c("with data", e)));
      },
      trackSingle: function (t, e, n) {
        f() && (fbq("trackSingle", t, e, n), i && (c("called fbq('trackSingle', '".concat(t, "', '").concat(e, "');")), n && c("with data", n)));
      },
      trackCustom: function (t, e) {
        f() && (fbq("trackCustom", t, e), i && (c("called fbq('trackCustom', '".concat(t, "');")), e && c("with data", e)));
      },
      trackSingleCustom: function (t, e, n) {
        f() && (fbq("trackSingle", t, e, n), i && (c("called fbq('trackSingleCustom', '".concat(t, "', '").concat(e, "');")), n && c("with data", n)));
      },
      grantConsent: function () {
        f() && (fbq("consent", "grant"), i && c("called fbq('consent', 'grant');"));
      },
      revokeConsent: function () {
        f() && (fbq("consent", "revoke"), i && c("called fbq('consent', 'revoke');"));
      },
      fbq: function (t) {
        function e() {
          return t.apply(this, arguments);
        }
        return e.toString = function () {
          return t.toString();
        }, e;
      }(function () {
        if (f()) {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          fbq.apply(void 0, e), i && (c("called fbq('".concat(e.slice(0, 2).join("', '"), "')")), e[2] && c("with data", e[2]));
        }
      })
    };
  }]);
});

/***/ }),

/***/ 8304:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = format;
var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;
function toTitleCase(string) {
  return string.toString().trim().replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function (match, index, title) {
    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== ":" && (title.charAt(index + match.length) !== "-" || title.charAt(index - 1) === "-") && title.charAt(index - 1).search(/[^\s-]/) < 0) {
      return match.toLowerCase();
    }
    if (match.substr(1).search(/[A-Z]|\../) > -1) {
      return match;
    }
    return match.charAt(0).toUpperCase() + match.substr(1);
  });
}

// See if s could be an email address. We don't want to send personal data like email.
// https://support.google.com/analytics/answer/2795983?hl=en
function mightBeEmail(s) {
  // There's no point trying to validate rfc822 fully, just look for ...@...
  return typeof s === "string" && s.indexOf("@") !== -1;
}
var redacted = "REDACTED (Potential Email Address)";
function redactEmail(string) {
  if (mightBeEmail(string)) {
    console.warn("This arg looks like an email address, redacting.");
    return redacted;
  }
  return string;
}
function format() {
  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var _str = s || "";
  if (titleCase) {
    _str = toTitleCase(s);
  }
  if (redactingEmail) {
    _str = redactEmail(_str);
  }
  return _str;
}

/***/ }),

/***/ 8093:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.GA4 = void 0;
var _gtag = _interopRequireDefault(__webpack_require__(9163));
var _format = _interopRequireDefault(__webpack_require__(8304));
var _excluded = ["eventCategory", "eventAction", "eventLabel", "eventValue", "hitType"],
  _excluded2 = ["title", "location"],
  _excluded3 = ["page", "hitType"];
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
/*
Links
https://developers.google.com/gtagjs/reference/api
https://developers.google.com/tag-platform/gtagjs/reference
*/
/**
 * @typedef GaOptions
 * @type {Object}
 * @property {boolean} [cookieUpdate=true]
 * @property {number} [cookieExpires=63072000] Default two years
 * @property {string} [cookieDomain="auto"]
 * @property {string} [cookieFlags]
 * @property {string} [userId]
 * @property {string} [clientId]
 * @property {boolean} [anonymizeIp]
 * @property {string} [contentGroup1]
 * @property {string} [contentGroup2]
 * @property {string} [contentGroup3]
 * @property {string} [contentGroup4]
 * @property {string} [contentGroup5]
 * @property {boolean} [allowAdFeatures=true]
 * @property {boolean} [allowAdPersonalizationSignals]
 * @property {boolean} [nonInteraction]
 * @property {string} [page]
 */
/**
 * @typedef UaEventOptions
 * @type {Object}
 * @property {string} action
 * @property {string} category
 * @property {string} [label]
 * @property {number} [value]
 * @property {boolean} [nonInteraction]
 * @property {('beacon'|'xhr'|'image')} [transport]
 */
/**
 * @typedef InitOptions
 * @type {Object}
 * @property {string} trackingId
 * @property {GaOptions|any} [gaOptions]
 * @property {Object} [gtagOptions] New parameter
 */
var GA4 = /*#__PURE__*/function () {
  function GA4() {
    var _this = this;
    _classCallCheck(this, GA4);
    _defineProperty(this, "reset", function () {
      _this.isInitialized = false;
      _this._testMode = false;
      _this._currentMeasurementId;
      _this._hasLoadedGA = false;
      _this._isQueuing = false;
      _this._queueGtag = [];
    });
    _defineProperty(this, "_gtag", function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (!_this._testMode) {
        if (_this._isQueuing) {
          _this._queueGtag.push(args);
        } else {
          _gtag["default"].apply(void 0, args);
        }
      } else {
        _this._queueGtag.push(args);
      }
    });
    _defineProperty(this, "_loadGA", function (GA_MEASUREMENT_ID, nonce) {
      if (typeof window === "undefined" || typeof document === "undefined") {
        return;
      }
      if (!_this._hasLoadedGA) {
        // Global Site Tag (gtag.js) - Google Analytics
        var script = document.createElement("script");
        script.async = true;
        script.src = "https://www.googletagmanager.com/gtag/js?id=".concat(GA_MEASUREMENT_ID);
        if (nonce) {
          script.setAttribute("nonce", nonce);
        }
        document.body.appendChild(script);
        window.dataLayer = window.dataLayer || [];
        window.gtag = function gtag() {
          window.dataLayer.push(arguments);
        };
        _this._hasLoadedGA = true;
      }
    });
    _defineProperty(this, "_toGtagOptions", function (gaOptions) {
      if (!gaOptions) {
        return;
      }
      var mapFields = {
        // Old https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieUpdate
        // New https://developers.google.com/analytics/devguides/collection/gtagjs/cookies-user-id#cookie_update
        cookieUpdate: "cookie_update",
        cookieExpires: "cookie_expires",
        cookieDomain: "cookie_domain",
        cookieFlags: "cookie_flags",
        // must be in set method?
        userId: "user_id",
        clientId: "client_id",
        anonymizeIp: "anonymize_ip",
        // https://support.google.com/analytics/answer/2853546?hl=en#zippy=%2Cin-this-article
        contentGroup1: "content_group1",
        contentGroup2: "content_group2",
        contentGroup3: "content_group3",
        contentGroup4: "content_group4",
        contentGroup5: "content_group5",
        // https://support.google.com/analytics/answer/9050852?hl=en
        allowAdFeatures: "allow_google_signals",
        allowAdPersonalizationSignals: "allow_ad_personalization_signals",
        nonInteraction: "non_interaction",
        page: "page_path",
        hitCallback: "event_callback"
      };
      var gtagOptions = Object.entries(gaOptions).reduce(function (prev, _ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];
        if (mapFields[key]) {
          prev[mapFields[key]] = value;
        } else {
          prev[key] = value;
        }
        return prev;
      }, {});
      return gtagOptions;
    });
    _defineProperty(this, "initialize", function (GA_MEASUREMENT_ID) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (!GA_MEASUREMENT_ID) {
        throw new Error("Require GA_MEASUREMENT_ID");
      }
      var initConfigs = typeof GA_MEASUREMENT_ID === "string" ? [{
        trackingId: GA_MEASUREMENT_ID
      }] : GA_MEASUREMENT_ID;
      _this._currentMeasurementId = initConfigs[0].trackingId;
      var gaOptions = options.gaOptions,
        gtagOptions = options.gtagOptions,
        nonce = options.nonce,
        _options$testMode = options.testMode,
        testMode = _options$testMode === void 0 ? false : _options$testMode;
      _this._testMode = testMode;
      if (!testMode) {
        _this._loadGA(_this._currentMeasurementId, nonce);
      }
      if (!_this.isInitialized) {
        _this._gtag("js", new Date());
        initConfigs.forEach(function (config) {
          var mergedGtagOptions = _objectSpread(_objectSpread(_objectSpread({}, _this._toGtagOptions(_objectSpread(_objectSpread({}, gaOptions), config.gaOptions))), gtagOptions), config.gtagOptions);
          if (Object.keys(mergedGtagOptions).length) {
            _this._gtag("config", config.trackingId, mergedGtagOptions);
          } else {
            _this._gtag("config", config.trackingId);
          }
        });
      }
      _this.isInitialized = true;
      if (!testMode) {
        var queues = _toConsumableArray(_this._queueGtag);
        _this._queueGtag = [];
        _this._isQueuing = false;
        while (queues.length) {
          var queue = queues.shift();
          _this._gtag.apply(_this, _toConsumableArray(queue));
          if (queue[0] === "get") {
            _this._isQueuing = true;
          }
        }
      }
    });
    _defineProperty(this, "set", function (fieldsObject) {
      if (!fieldsObject) {
        console.warn("`fieldsObject` is required in .set()");
        return;
      }
      if (_typeof(fieldsObject) !== "object") {
        console.warn("Expected `fieldsObject` arg to be an Object");
        return;
      }
      if (Object.keys(fieldsObject).length === 0) {
        console.warn("empty `fieldsObject` given to .set()");
      }
      _this._gaCommand("set", fieldsObject);
    });
    _defineProperty(this, "_gaCommandSendEvent", function (eventCategory, eventAction, eventLabel, eventValue, fieldsObject) {
      _this._gtag("event", eventAction, _objectSpread(_objectSpread({
        event_category: eventCategory,
        event_label: eventLabel,
        value: eventValue
      }, fieldsObject && {
        non_interaction: fieldsObject.nonInteraction
      }), _this._toGtagOptions(fieldsObject)));
    });
    _defineProperty(this, "_gaCommandSendEventParameters", function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      if (typeof args[0] === "string") {
        _this._gaCommandSendEvent.apply(_this, _toConsumableArray(args.slice(1)));
      } else {
        var _args$ = args[0],
          eventCategory = _args$.eventCategory,
          eventAction = _args$.eventAction,
          eventLabel = _args$.eventLabel,
          eventValue = _args$.eventValue,
          hitType = _args$.hitType,
          rest = _objectWithoutProperties(_args$, _excluded);
        _this._gaCommandSendEvent(eventCategory, eventAction, eventLabel, eventValue, rest);
      }
    });
    _defineProperty(this, "_gaCommandSendTiming", function (timingCategory, timingVar, timingValue, timingLabel) {
      _this._gtag("event", "timing_complete", {
        name: timingVar,
        value: timingValue,
        event_category: timingCategory,
        event_label: timingLabel
      });
    });
    _defineProperty(this, "_gaCommandSendPageview", function (page, fieldsObject) {
      if (fieldsObject && Object.keys(fieldsObject).length) {
        var _this$_toGtagOptions = _this._toGtagOptions(fieldsObject),
          title = _this$_toGtagOptions.title,
          location = _this$_toGtagOptions.location,
          rest = _objectWithoutProperties(_this$_toGtagOptions, _excluded2);
        _this._gtag("event", "page_view", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, page && {
          page_path: page
        }), title && {
          page_title: title
        }), location && {
          page_location: location
        }), rest));
      } else if (page) {
        _this._gtag("event", "page_view", {
          page_path: page
        });
      } else {
        _this._gtag("event", "page_view");
      }
    });
    _defineProperty(this, "_gaCommandSendPageviewParameters", function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      if (typeof args[0] === "string") {
        _this._gaCommandSendPageview.apply(_this, _toConsumableArray(args.slice(1)));
      } else {
        var _args$2 = args[0],
          page = _args$2.page,
          hitType = _args$2.hitType,
          rest = _objectWithoutProperties(_args$2, _excluded3);
        _this._gaCommandSendPageview(page, rest);
      }
    });
    _defineProperty(this, "_gaCommandSend", function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      var hitType = typeof args[0] === "string" ? args[0] : args[0].hitType;
      switch (hitType) {
        case "event":
          _this._gaCommandSendEventParameters.apply(_this, args);
          break;
        case "pageview":
          _this._gaCommandSendPageviewParameters.apply(_this, args);
          break;
        case "timing":
          _this._gaCommandSendTiming.apply(_this, _toConsumableArray(args.slice(1)));
          break;
        case "screenview":
        case "transaction":
        case "item":
        case "social":
        case "exception":
          console.warn("Unsupported send command: ".concat(hitType));
          break;
        default:
          console.warn("Send command doesn't exist: ".concat(hitType));
      }
    });
    _defineProperty(this, "_gaCommandSet", function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      if (typeof args[0] === "string") {
        args[0] = _defineProperty({}, args[0], args[1]);
      }
      _this._gtag("set", _this._toGtagOptions(args[0]));
    });
    _defineProperty(this, "_gaCommand", function (command) {
      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        args[_key6 - 1] = arguments[_key6];
      }
      switch (command) {
        case "send":
          _this._gaCommandSend.apply(_this, args);
          break;
        case "set":
          _this._gaCommandSet.apply(_this, args);
          break;
        default:
          console.warn("Command doesn't exist: ".concat(command));
      }
    });
    _defineProperty(this, "ga", function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      if (typeof args[0] === "string") {
        _this._gaCommand.apply(_this, args);
      } else {
        var readyCallback = args[0];
        _this._gtag("get", _this._currentMeasurementId, "client_id", function (clientId) {
          _this._isQueuing = false;
          var queues = _this._queueGtag;
          readyCallback({
            get: function get(property) {
              return property === "clientId" ? clientId : property === "trackingId" ? _this._currentMeasurementId : property === "apiVersion" ? "1" : undefined;
            }
          });
          while (queues.length) {
            var queue = queues.shift();
            _this._gtag.apply(_this, _toConsumableArray(queue));
          }
        });
        _this._isQueuing = true;
      }
      return _this.ga;
    });
    _defineProperty(this, "event", function (optionsOrName, params) {
      if (typeof optionsOrName === "string") {
        _this._gtag("event", optionsOrName, _this._toGtagOptions(params));
      } else {
        var action = optionsOrName.action,
          category = optionsOrName.category,
          label = optionsOrName.label,
          value = optionsOrName.value,
          nonInteraction = optionsOrName.nonInteraction,
          transport = optionsOrName.transport;
        if (!category || !action) {
          console.warn("args.category AND args.action are required in event()");
          return;
        }

        // Required Fields
        var fieldObject = {
          hitType: "event",
          eventCategory: (0, _format["default"])(category),
          eventAction: (0, _format["default"])(action)
        };

        // Optional Fields
        if (label) {
          fieldObject.eventLabel = (0, _format["default"])(label);
        }
        if (typeof value !== "undefined") {
          if (typeof value !== "number") {
            console.warn("Expected `args.value` arg to be a Number.");
          } else {
            fieldObject.eventValue = value;
          }
        }
        if (typeof nonInteraction !== "undefined") {
          if (typeof nonInteraction !== "boolean") {
            console.warn("`args.nonInteraction` must be a boolean.");
          } else {
            fieldObject.nonInteraction = nonInteraction;
          }
        }
        if (typeof transport !== "undefined") {
          if (typeof transport !== "string") {
            console.warn("`args.transport` must be a string.");
          } else {
            if (["beacon", "xhr", "image"].indexOf(transport) === -1) {
              console.warn("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`");
            }
            fieldObject.transport = transport;
          }
        }
        _this._gaCommand("send", fieldObject);
      }
    });
    _defineProperty(this, "send", function (fieldObject) {
      _this._gaCommand("send", fieldObject);
    });
    this.reset();
  }
  _createClass(GA4, [{
    key: "gtag",
    value: function gtag() {
      this._gtag.apply(this, arguments);
    }
  }]);
  return GA4;
}();
exports.GA4 = GA4;
var _default = new GA4();
exports["default"] = _default;

/***/ }),

/***/ 9163:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var gtag = function gtag() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof window !== "undefined") {
    var _window;
    if (typeof window.gtag === "undefined") {
      window.dataLayer = window.dataLayer || [];
      window.gtag = function gtag() {
        window.dataLayer.push(arguments);
      };
    }
    (_window = window).gtag.apply(_window, args);
  }
};
var _default = gtag;
exports["default"] = _default;

/***/ }),

/***/ 1980:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
var __webpack_unused_export__;


function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
__webpack_unused_export__ = ({
  value: true
});
exports.ZP = __webpack_unused_export__ = void 0;
var _ga = _interopRequireWildcard(__webpack_require__(8093));
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj["default"] = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var ReactGAImplementation = _ga.GA4;
__webpack_unused_export__ = ReactGAImplementation;
var _default = _ga["default"];
exports.ZP = _default;

/***/ }),

/***/ 8971:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _warn = __webpack_require__(9927);
var _warn2 = _interopRequireDefault(_warn);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

// https://developers.google.com/tag-manager/quickstart

var Snippets = {
  tags: function tags(_ref) {
    var id = _ref.id,
      events = _ref.events,
      dataLayer = _ref.dataLayer,
      dataLayerName = _ref.dataLayerName,
      preview = _ref.preview,
      auth = _ref.auth;
    var gtm_auth = '&gtm_auth=' + auth;
    var gtm_preview = '&gtm_preview=' + preview;
    if (!id) (0, _warn2.default)('GTM Id is required');
    var iframe = '\n      <iframe src="https://www.googletagmanager.com/ns.html?id=' + id + gtm_auth + gtm_preview + '&gtm_cookies_win=x"\n        height="0" width="0" style="display:none;visibility:hidden" id="tag-manager"></iframe>';
    var script = '\n      (function(w,d,s,l,i){w[l]=w[l]||[];\n        w[l].push({\'gtm.start\': new Date().getTime(),event:\'gtm.js\', ' + JSON.stringify(events).slice(1, -1) + '});\n        var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!=\'dataLayer\'?\'&l=\'+l:\'\';\n        j.async=true;j.src=\'https://www.googletagmanager.com/gtm.js?id=\'+i+dl+\'' + gtm_auth + gtm_preview + '&gtm_cookies_win=x\';\n        f.parentNode.insertBefore(j,f);\n      })(window,document,\'script\',\'' + dataLayerName + '\',\'' + id + '\');';
    var dataLayerVar = this.dataLayer(dataLayer, dataLayerName);
    return {
      iframe: iframe,
      script: script,
      dataLayerVar: dataLayerVar
    };
  },
  dataLayer: function dataLayer(_dataLayer, dataLayerName) {
    return '\n      window.' + dataLayerName + ' = window.' + dataLayerName + ' || [];\n      window.' + dataLayerName + '.push(' + JSON.stringify(_dataLayer) + ')';
  }
};
module.exports = Snippets;

/***/ }),

/***/ 4043:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _Snippets = __webpack_require__(8971);
var _Snippets2 = _interopRequireDefault(_Snippets);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var TagManager = {
  dataScript: function dataScript(dataLayer) {
    var script = document.createElement('script');
    script.innerHTML = dataLayer;
    return script;
  },
  gtm: function gtm(args) {
    var snippets = _Snippets2.default.tags(args);
    var noScript = function noScript() {
      var noscript = document.createElement('noscript');
      noscript.innerHTML = snippets.iframe;
      return noscript;
    };
    var script = function script() {
      var script = document.createElement('script');
      script.innerHTML = snippets.script;
      return script;
    };
    var dataScript = this.dataScript(snippets.dataLayerVar);
    return {
      noScript: noScript,
      script: script,
      dataScript: dataScript
    };
  },
  initialize: function initialize(_ref) {
    var gtmId = _ref.gtmId,
      _ref$events = _ref.events,
      events = _ref$events === undefined ? {} : _ref$events,
      dataLayer = _ref.dataLayer,
      _ref$dataLayerName = _ref.dataLayerName,
      dataLayerName = _ref$dataLayerName === undefined ? 'dataLayer' : _ref$dataLayerName,
      _ref$auth = _ref.auth,
      auth = _ref$auth === undefined ? '' : _ref$auth,
      _ref$preview = _ref.preview,
      preview = _ref$preview === undefined ? '' : _ref$preview;
    var gtm = this.gtm({
      id: gtmId,
      events: events,
      dataLayer: dataLayer || undefined,
      dataLayerName: dataLayerName,
      auth: auth,
      preview: preview
    });
    if (dataLayer) document.head.appendChild(gtm.dataScript);
    document.head.insertBefore(gtm.script(), document.head.childNodes[0]);
    document.body.insertBefore(gtm.noScript(), document.body.childNodes[0]);
  },
  dataLayer: function dataLayer(_ref2) {
    var _dataLayer = _ref2.dataLayer,
      _ref2$dataLayerName = _ref2.dataLayerName,
      dataLayerName = _ref2$dataLayerName === undefined ? 'dataLayer' : _ref2$dataLayerName;
    if (window[dataLayerName]) return window[dataLayerName].push(_dataLayer);
    var snippets = _Snippets2.default.dataLayer(_dataLayer, dataLayerName);
    var dataScript = this.dataScript(snippets);
    document.head.insertBefore(dataScript, document.head.childNodes[0]);
  }
};
module.exports = TagManager;

/***/ }),

/***/ 8162:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var _TagManager = __webpack_require__(4043);
var _TagManager2 = _interopRequireDefault(_TagManager);
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
module.exports = _TagManager2.default;

/***/ }),

/***/ 9927:
/***/ (function(__unused_webpack_module, exports) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var warn = function warn(s) {
  console.warn('[react-gtm]', s);
};
exports["default"] = warn;

/***/ }),

/***/ 4005:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var b = "function" === typeof Symbol && Symbol.for,
  c = b ? Symbol.for("react.element") : 60103,
  d = b ? Symbol.for("react.portal") : 60106,
  e = b ? Symbol.for("react.fragment") : 60107,
  f = b ? Symbol.for("react.strict_mode") : 60108,
  g = b ? Symbol.for("react.profiler") : 60114,
  h = b ? Symbol.for("react.provider") : 60109,
  k = b ? Symbol.for("react.context") : 60110,
  l = b ? Symbol.for("react.async_mode") : 60111,
  m = b ? Symbol.for("react.concurrent_mode") : 60111,
  n = b ? Symbol.for("react.forward_ref") : 60112,
  p = b ? Symbol.for("react.suspense") : 60113,
  q = b ? Symbol.for("react.suspense_list") : 60120,
  r = b ? Symbol.for("react.memo") : 60115,
  t = b ? Symbol.for("react.lazy") : 60116,
  v = b ? Symbol.for("react.block") : 60121,
  w = b ? Symbol.for("react.fundamental") : 60117,
  x = b ? Symbol.for("react.responder") : 60118,
  y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;
    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;
              default:
                return u;
            }
        }
      case d:
        return u;
    }
  }
}
function A(a) {
  return z(a) === m;
}
exports.AsyncMode = l;
exports.ConcurrentMode = m;
exports.ContextConsumer = k;
exports.ContextProvider = h;
exports.Element = c;
exports.ForwardRef = n;
exports.Fragment = e;
exports.Lazy = t;
exports.Memo = r;
exports.Portal = d;
exports.Profiler = g;
exports.StrictMode = f;
exports.Suspense = p;
exports.isAsyncMode = function (a) {
  return A(a) || z(a) === l;
};
exports.isConcurrentMode = A;
exports.isContextConsumer = function (a) {
  return z(a) === k;
};
exports.isContextProvider = function (a) {
  return z(a) === h;
};
exports.isElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};
exports.isForwardRef = function (a) {
  return z(a) === n;
};
exports.isFragment = function (a) {
  return z(a) === e;
};
exports.isLazy = function (a) {
  return z(a) === t;
};
exports.isMemo = function (a) {
  return z(a) === r;
};
exports.isPortal = function (a) {
  return z(a) === d;
};
exports.isProfiler = function (a) {
  return z(a) === g;
};
exports.isStrictMode = function (a) {
  return z(a) === f;
};
exports.isSuspense = function (a) {
  return z(a) === p;
};
exports.isValidElementType = function (a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
exports.typeOf = z;

/***/ }),

/***/ 9972:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(4005);
} else {}

/***/ }),

/***/ 1758:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "j": function() { return /* binding */ focusManager; }
/* harmony export */ });
/* unused harmony export FocusManager */
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6881);
/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6280);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2723);



var FocusManager = /*#__PURE__*/function (_Subscribable) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(FocusManager, _Subscribable);
  function FocusManager() {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.setup = function (onFocus) {
      var _window;
      if (!_utils__WEBPACK_IMPORTED_MODULE_1__/* .isServer */ .sk && ((_window = window) == null ? void 0 : _window.addEventListener)) {
        var listener = function listener() {
          return onFocus();
        }; // Listen to visibillitychange and focus

        window.addEventListener('visibilitychange', listener, false);
        window.addEventListener('focus', listener, false);
        return function () {
          // Be sure to unsubscribe if a new handler is set
          window.removeEventListener('visibilitychange', listener);
          window.removeEventListener('focus', listener);
        };
      }
    };
    return _this;
  }
  var _proto = FocusManager.prototype;
  _proto.onSubscribe = function onSubscribe() {
    if (!this.cleanup) {
      this.setEventListener(this.setup);
    }
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
    if (!this.hasListeners()) {
      var _this$cleanup;
      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);
      this.cleanup = undefined;
    }
  };
  _proto.setEventListener = function setEventListener(setup) {
    var _this$cleanup2,
      _this2 = this;
    this.setup = setup;
    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);
    this.cleanup = setup(function (focused) {
      if (typeof focused === 'boolean') {
        _this2.setFocused(focused);
      } else {
        _this2.onFocus();
      }
    });
  };
  _proto.setFocused = function setFocused(focused) {
    this.focused = focused;
    if (focused) {
      this.onFocus();
    }
  };
  _proto.onFocus = function onFocus() {
    this.listeners.forEach(function (listener) {
      listener();
    });
  };
  _proto.isFocused = function isFocused() {
    if (typeof this.focused === 'boolean') {
      return this.focused;
    } // document global can be unavailable in react native

    if (typeof document === 'undefined') {
      return true;
    }
    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);
  };
  return FocusManager;
}(_subscribable__WEBPACK_IMPORTED_MODULE_2__/* .Subscribable */ .l);
var focusManager = new FocusManager();

/***/ }),

/***/ 2977:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1710);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "QueryClientProvider")) __webpack_require__.d(__webpack_exports__, { "QueryClientProvider": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "useIsFetching")) __webpack_require__.d(__webpack_exports__, { "useIsFetching": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.useIsFetching; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "useMutation")) __webpack_require__.d(__webpack_exports__, { "useMutation": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.useMutation; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "useQuery")) __webpack_require__.d(__webpack_exports__, { "useQuery": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.useQuery; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "useQueryClient")) __webpack_require__.d(__webpack_exports__, { "useQueryClient": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.useQueryClient; } });














 // Types



/***/ }),

/***/ 438:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "j": function() { return /* binding */ getLogger; }
/* harmony export */ });
/* unused harmony export setLogger */
// TYPES
// FUNCTIONS
var logger = console;
function getLogger() {
  return logger;
}
function setLogger(newLogger) {
  logger = newLogger;
}

/***/ }),

/***/ 9187:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "R": function() { return /* binding */ getDefaultState; },
/* harmony export */   "m": function() { return /* binding */ Mutation; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3123);
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(438);
/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1165);
/* harmony import */ var _retryer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7085);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2723);




 // TYPES

// CLASS
var Mutation = /*#__PURE__*/function () {
  function Mutation(config) {
    this.options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, config.defaultOptions, config.options);
    this.mutationId = config.mutationId;
    this.mutationCache = config.mutationCache;
    this.observers = [];
    this.state = config.state || getDefaultState();
    this.meta = config.meta;
  }
  var _proto = Mutation.prototype;
  _proto.setState = function setState(state) {
    this.dispatch({
      type: 'setState',
      state: state
    });
  };
  _proto.addObserver = function addObserver(observer) {
    if (this.observers.indexOf(observer) === -1) {
      this.observers.push(observer);
    }
  };
  _proto.removeObserver = function removeObserver(observer) {
    this.observers = this.observers.filter(function (x) {
      return x !== observer;
    });
  };
  _proto.cancel = function cancel() {
    if (this.retryer) {
      this.retryer.cancel();
      return this.retryer.promise.then(_utils__WEBPACK_IMPORTED_MODULE_1__/* .noop */ .ZT).catch(_utils__WEBPACK_IMPORTED_MODULE_1__/* .noop */ .ZT);
    }
    return Promise.resolve();
  };
  _proto.continue = function _continue() {
    if (this.retryer) {
      this.retryer.continue();
      return this.retryer.promise;
    }
    return this.execute();
  };
  _proto.execute = function execute() {
    var _this = this;
    var data;
    var restored = this.state.status === 'loading';
    var promise = Promise.resolve();
    if (!restored) {
      this.dispatch({
        type: 'loading',
        variables: this.options.variables
      });
      promise = promise.then(function () {
        // Notify cache callback
        _this.mutationCache.config.onMutate == null ? void 0 : _this.mutationCache.config.onMutate(_this.state.variables, _this);
      }).then(function () {
        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);
      }).then(function (context) {
        if (context !== _this.state.context) {
          _this.dispatch({
            type: 'loading',
            context: context,
            variables: _this.state.variables
          });
        }
      });
    }
    return promise.then(function () {
      return _this.executeMutation();
    }).then(function (result) {
      data = result; // Notify cache callback

      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);
    }).then(function () {
      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);
    }).then(function () {
      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);
    }).then(function () {
      _this.dispatch({
        type: 'success',
        data: data
      });
      return data;
    }).catch(function (error) {
      // Notify cache callback
      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error

      (0,_logger__WEBPACK_IMPORTED_MODULE_2__/* .getLogger */ .j)().error(error);
      return Promise.resolve().then(function () {
        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);
      }).then(function () {
        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);
      }).then(function () {
        _this.dispatch({
          type: 'error',
          error: error
        });
        throw error;
      });
    });
  };
  _proto.executeMutation = function executeMutation() {
    var _this2 = this,
      _this$options$retry;
    this.retryer = new _retryer__WEBPACK_IMPORTED_MODULE_3__/* .Retryer */ .m4({
      fn: function fn() {
        if (!_this2.options.mutationFn) {
          return Promise.reject('No mutationFn found');
        }
        return _this2.options.mutationFn(_this2.state.variables);
      },
      onFail: function onFail() {
        _this2.dispatch({
          type: 'failed'
        });
      },
      onPause: function onPause() {
        _this2.dispatch({
          type: 'pause'
        });
      },
      onContinue: function onContinue() {
        _this2.dispatch({
          type: 'continue'
        });
      },
      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,
      retryDelay: this.options.retryDelay
    });
    return this.retryer.promise;
  };
  _proto.dispatch = function dispatch(action) {
    var _this3 = this;
    this.state = reducer(this.state, action);
    _notifyManager__WEBPACK_IMPORTED_MODULE_4__/* .notifyManager.batch */ .V.batch(function () {
      _this3.observers.forEach(function (observer) {
        observer.onMutationUpdate(action);
      });
      _this3.mutationCache.notify(_this3);
    });
  };
  return Mutation;
}();
function getDefaultState() {
  return {
    context: undefined,
    data: undefined,
    error: null,
    failureCount: 0,
    isPaused: false,
    status: 'idle',
    variables: undefined
  };
}
function reducer(state, action) {
  switch (action.type) {
    case 'failed':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        failureCount: state.failureCount + 1
      });
    case 'pause':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        isPaused: true
      });
    case 'continue':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        isPaused: false
      });
    case 'loading':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        context: action.context,
        data: undefined,
        error: null,
        isPaused: false,
        status: 'loading',
        variables: action.variables
      });
    case 'success':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        data: action.data,
        error: null,
        status: 'success',
        isPaused: false
      });
    case 'error':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, {
        data: undefined,
        error: action.error,
        failureCount: state.failureCount + 1,
        isPaused: false,
        status: 'error'
      });
    case 'setState':
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, state, action.state);
    default:
      return state;
  }
}

/***/ }),

/***/ 1165:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V": function() { return /* binding */ notifyManager; }
/* harmony export */ });
/* unused harmony export NotifyManager */
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2723);
 // TYPES

// CLASS
var NotifyManager = /*#__PURE__*/function () {
  function NotifyManager() {
    this.queue = [];
    this.transactions = 0;
    this.notifyFn = function (callback) {
      callback();
    };
    this.batchNotifyFn = function (callback) {
      callback();
    };
  }
  var _proto = NotifyManager.prototype;
  _proto.batch = function batch(callback) {
    var result;
    this.transactions++;
    try {
      result = callback();
    } finally {
      this.transactions--;
      if (!this.transactions) {
        this.flush();
      }
    }
    return result;
  };
  _proto.schedule = function schedule(callback) {
    var _this = this;
    if (this.transactions) {
      this.queue.push(callback);
    } else {
      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(function () {
        _this.notifyFn(callback);
      });
    }
  }
  /**
   * All calls to the wrapped function will be batched.
   */;

  _proto.batchCalls = function batchCalls(callback) {
    var _this2 = this;
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this2.schedule(function () {
        callback.apply(void 0, args);
      });
    };
  };
  _proto.flush = function flush() {
    var _this3 = this;
    var queue = this.queue;
    this.queue = [];
    if (queue.length) {
      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .scheduleMicrotask */ .A4)(function () {
        _this3.batchNotifyFn(function () {
          queue.forEach(function (callback) {
            _this3.notifyFn(callback);
          });
        });
      });
    }
  }
  /**
   * Use this method to set a custom notify function.
   * This can be used to for example wrap notifications with `React.act` while running tests.
   */;

  _proto.setNotifyFunction = function setNotifyFunction(fn) {
    this.notifyFn = fn;
  }
  /**
   * Use this method to set a custom function to batch notifications together into a single tick.
   * By default React Query will use the batch function provided by ReactDOM or React Native.
   */;

  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {
    this.batchNotifyFn = fn;
  };
  return NotifyManager;
}(); // SINGLETON

var notifyManager = new NotifyManager();

/***/ }),

/***/ 7664:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "N": function() { return /* binding */ onlineManager; }
/* harmony export */ });
/* unused harmony export OnlineManager */
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6881);
/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6280);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2723);



var OnlineManager = /*#__PURE__*/function (_Subscribable) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(OnlineManager, _Subscribable);
  function OnlineManager() {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.setup = function (onOnline) {
      var _window;
      if (!_utils__WEBPACK_IMPORTED_MODULE_1__/* .isServer */ .sk && ((_window = window) == null ? void 0 : _window.addEventListener)) {
        var listener = function listener() {
          return onOnline();
        }; // Listen to online

        window.addEventListener('online', listener, false);
        window.addEventListener('offline', listener, false);
        return function () {
          // Be sure to unsubscribe if a new handler is set
          window.removeEventListener('online', listener);
          window.removeEventListener('offline', listener);
        };
      }
    };
    return _this;
  }
  var _proto = OnlineManager.prototype;
  _proto.onSubscribe = function onSubscribe() {
    if (!this.cleanup) {
      this.setEventListener(this.setup);
    }
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
    if (!this.hasListeners()) {
      var _this$cleanup;
      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);
      this.cleanup = undefined;
    }
  };
  _proto.setEventListener = function setEventListener(setup) {
    var _this$cleanup2,
      _this2 = this;
    this.setup = setup;
    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);
    this.cleanup = setup(function (online) {
      if (typeof online === 'boolean') {
        _this2.setOnline(online);
      } else {
        _this2.onOnline();
      }
    });
  };
  _proto.setOnline = function setOnline(online) {
    this.online = online;
    if (online) {
      this.onOnline();
    }
  };
  _proto.onOnline = function onOnline() {
    this.listeners.forEach(function (listener) {
      listener();
    });
  };
  _proto.isOnline = function isOnline() {
    if (typeof this.online === 'boolean') {
      return this.online;
    }
    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {
      return true;
    }
    return navigator.onLine;
  };
  return OnlineManager;
}(_subscribable__WEBPACK_IMPORTED_MODULE_2__/* .Subscribable */ .l);
var onlineManager = new OnlineManager();

/***/ }),

/***/ 7085:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DV": function() { return /* binding */ isCancelledError; },
/* harmony export */   "LE": function() { return /* binding */ isCancelable; },
/* harmony export */   "m4": function() { return /* binding */ Retryer; }
/* harmony export */ });
/* unused harmony export CancelledError */
/* harmony import */ var _focusManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1758);
/* harmony import */ var _onlineManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7664);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2723);



function defaultRetryDelay(failureCount) {
  return Math.min(1000 * Math.pow(2, failureCount), 30000);
}
function isCancelable(value) {
  return typeof (value == null ? void 0 : value.cancel) === 'function';
}
var CancelledError = function CancelledError(options) {
  this.revert = options == null ? void 0 : options.revert;
  this.silent = options == null ? void 0 : options.silent;
};
function isCancelledError(value) {
  return value instanceof CancelledError;
} // CLASS

var Retryer = function Retryer(config) {
  var _this = this;
  var cancelRetry = false;
  var cancelFn;
  var continueFn;
  var promiseResolve;
  var promiseReject;
  this.abort = config.abort;
  this.cancel = function (cancelOptions) {
    return cancelFn == null ? void 0 : cancelFn(cancelOptions);
  };
  this.cancelRetry = function () {
    cancelRetry = true;
  };
  this.continueRetry = function () {
    cancelRetry = false;
  };
  this.continue = function () {
    return continueFn == null ? void 0 : continueFn();
  };
  this.failureCount = 0;
  this.isPaused = false;
  this.isResolved = false;
  this.isTransportCancelable = false;
  this.promise = new Promise(function (outerResolve, outerReject) {
    promiseResolve = outerResolve;
    promiseReject = outerReject;
  });
  var resolve = function resolve(value) {
    if (!_this.isResolved) {
      _this.isResolved = true;
      config.onSuccess == null ? void 0 : config.onSuccess(value);
      continueFn == null ? void 0 : continueFn();
      promiseResolve(value);
    }
  };
  var reject = function reject(value) {
    if (!_this.isResolved) {
      _this.isResolved = true;
      config.onError == null ? void 0 : config.onError(value);
      continueFn == null ? void 0 : continueFn();
      promiseReject(value);
    }
  };
  var pause = function pause() {
    return new Promise(function (continueResolve) {
      continueFn = continueResolve;
      _this.isPaused = true;
      config.onPause == null ? void 0 : config.onPause();
    }).then(function () {
      continueFn = undefined;
      _this.isPaused = false;
      config.onContinue == null ? void 0 : config.onContinue();
    });
  }; // Create loop function

  var run = function run() {
    // Do nothing if already resolved
    if (_this.isResolved) {
      return;
    }
    var promiseOrValue; // Execute query

    try {
      promiseOrValue = config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    } // Create callback to cancel this fetch

    cancelFn = function cancelFn(cancelOptions) {
      if (!_this.isResolved) {
        reject(new CancelledError(cancelOptions));
        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported

        if (isCancelable(promiseOrValue)) {
          try {
            promiseOrValue.cancel();
          } catch (_unused) {}
        }
      }
    }; // Check if the transport layer support cancellation

    _this.isTransportCancelable = isCancelable(promiseOrValue);
    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {
      var _config$retry, _config$retryDelay;

      // Stop if the fetch is already resolved
      if (_this.isResolved) {
        return;
      } // Do we need to retry the request?

      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;
      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;
      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;
      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);
      if (cancelRetry || !shouldRetry) {
        // We are done if the query does not need to be retried
        reject(error);
        return;
      }
      _this.failureCount++; // Notify on fail

      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay

      (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .sleep */ .Gh)(delay) // Pause if the document is not visible or when the device is offline
      .then(function () {
        if (!_focusManager__WEBPACK_IMPORTED_MODULE_1__/* .focusManager.isFocused */ .j.isFocused() || !_onlineManager__WEBPACK_IMPORTED_MODULE_2__/* .onlineManager.isOnline */ .N.isOnline()) {
          return pause();
        }
      }).then(function () {
        if (cancelRetry) {
          reject(error);
        } else {
          run();
        }
      });
    });
  }; // Start loop

  run();
};

/***/ }),

/***/ 6280:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "l": function() { return /* binding */ Subscribable; }
/* harmony export */ });
var Subscribable = /*#__PURE__*/function () {
  function Subscribable() {
    this.listeners = [];
  }
  var _proto = Subscribable.prototype;
  _proto.subscribe = function subscribe(listener) {
    var _this = this;
    var callback = listener || function () {
      return undefined;
    };
    this.listeners.push(callback);
    this.onSubscribe();
    return function () {
      _this.listeners = _this.listeners.filter(function (x) {
        return x !== callback;
      });
      _this.onUnsubscribe();
    };
  };
  _proto.hasListeners = function hasListeners() {
    return this.listeners.length > 0;
  };
  _proto.onSubscribe = function onSubscribe() {// Do nothing
  };
  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing
  };
  return Subscribable;
}();

/***/ }),

/***/ 1710:
/***/ (function() {



/***/ }),

/***/ 2723:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A4": function() { return /* binding */ scheduleMicrotask; },
/* harmony export */   "G9": function() { return /* binding */ getAbortController; },
/* harmony export */   "Gh": function() { return /* binding */ sleep; },
/* harmony export */   "I6": function() { return /* binding */ parseFilterArgs; },
/* harmony export */   "Kp": function() { return /* binding */ timeUntilStale; },
/* harmony export */   "PN": function() { return /* binding */ isValidTimeout; },
/* harmony export */   "Q$": function() { return /* binding */ replaceEqualDeep; },
/* harmony export */   "Rm": function() { return /* binding */ hashQueryKeyByOptions; },
/* harmony export */   "SE": function() { return /* binding */ functionalUpdate; },
/* harmony export */   "VS": function() { return /* binding */ shallowEqualObjects; },
/* harmony export */   "X7": function() { return /* binding */ matchMutation; },
/* harmony export */   "ZT": function() { return /* binding */ noop; },
/* harmony export */   "_v": function() { return /* binding */ parseQueryArgs; },
/* harmony export */   "_x": function() { return /* binding */ matchQuery; },
/* harmony export */   "lV": function() { return /* binding */ parseMutationArgs; },
/* harmony export */   "mc": function() { return /* binding */ ensureQueryKeyArray; },
/* harmony export */   "sk": function() { return /* binding */ isServer; },
/* harmony export */   "to": function() { return /* binding */ partialMatchKey; },
/* harmony export */   "yF": function() { return /* binding */ hashQueryKey; }
/* harmony export */ });
/* unused harmony exports difference, replaceAt, parseMutationFilterArgs, mapQueryStatusFilter, stableValueHash, partialDeepEqual, isPlainObject, isQueryKey, isError */
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3123);

// TYPES
// UTILS
var isServer = typeof window === 'undefined';
function noop() {
  return undefined;
}
function functionalUpdate(updater, input) {
  return typeof updater === 'function' ? updater(input) : updater;
}
function isValidTimeout(value) {
  return typeof value === 'number' && value >= 0 && value !== Infinity;
}
function ensureQueryKeyArray(value) {
  return Array.isArray(value) ? value : [value];
}
function difference(array1, array2) {
  return array1.filter(function (x) {
    return array2.indexOf(x) === -1;
  });
}
function replaceAt(array, index, value) {
  var copy = array.slice(0);
  copy[index] = value;
  return copy;
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function parseQueryArgs(arg1, arg2, arg3) {
  if (!isQueryKey(arg1)) {
    return arg1;
  }
  if (typeof arg2 === 'function') {
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg3, {
      queryKey: arg1,
      queryFn: arg2
    });
  }
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg2, {
    queryKey: arg1
  });
}
function parseMutationArgs(arg1, arg2, arg3) {
  if (isQueryKey(arg1)) {
    if (typeof arg2 === 'function') {
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg3, {
        mutationKey: arg1,
        mutationFn: arg2
      });
    }
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg2, {
      mutationKey: arg1
    });
  }
  if (typeof arg1 === 'function') {
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg2, {
      mutationFn: arg1
    });
  }
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg1);
}
function parseFilterArgs(arg1, arg2, arg3) {
  return isQueryKey(arg1) ? [(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, arg2, {
    queryKey: arg1
  }), arg3] : [arg1 || {}, arg2];
}
function parseMutationFilterArgs(arg1, arg2) {
  return isQueryKey(arg1) ? _extends({}, arg2, {
    mutationKey: arg1
  }) : arg1;
}
function mapQueryStatusFilter(active, inactive) {
  if (active === true && inactive === true || active == null && inactive == null) {
    return 'all';
  } else if (active === false && inactive === false) {
    return 'none';
  } else {
    // At this point, active|inactive can only be true|false or false|true
    // so, when only one value is provided, the missing one has to be the negated value
    var isActive = active != null ? active : !inactive;
    return isActive ? 'active' : 'inactive';
  }
}
function matchQuery(filters, query) {
  var active = filters.active,
    exact = filters.exact,
    fetching = filters.fetching,
    inactive = filters.inactive,
    predicate = filters.predicate,
    queryKey = filters.queryKey,
    stale = filters.stale;
  if (isQueryKey(queryKey)) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {
        return false;
      }
    } else if (!partialMatchKey(query.queryKey, queryKey)) {
      return false;
    }
  }
  var queryStatusFilter = mapQueryStatusFilter(active, inactive);
  if (queryStatusFilter === 'none') {
    return false;
  } else if (queryStatusFilter !== 'all') {
    var isActive = query.isActive();
    if (queryStatusFilter === 'active' && !isActive) {
      return false;
    }
    if (queryStatusFilter === 'inactive' && isActive) {
      return false;
    }
  }
  if (typeof stale === 'boolean' && query.isStale() !== stale) {
    return false;
  }
  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {
    return false;
  }
  if (predicate && !predicate(query)) {
    return false;
  }
  return true;
}
function matchMutation(filters, mutation) {
  var exact = filters.exact,
    fetching = filters.fetching,
    predicate = filters.predicate,
    mutationKey = filters.mutationKey;
  if (isQueryKey(mutationKey)) {
    if (!mutation.options.mutationKey) {
      return false;
    }
    if (exact) {
      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {
        return false;
      }
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {
      return false;
    }
  }
  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {
    return false;
  }
  if (predicate && !predicate(mutation)) {
    return false;
  }
  return true;
}
function hashQueryKeyByOptions(queryKey, options) {
  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;
  return hashFn(queryKey);
}
/**
 * Default query keys hash function.
 */

function hashQueryKey(queryKey) {
  var asArray = ensureQueryKeyArray(queryKey);
  return stableValueHash(asArray);
}
/**
 * Hashes the value into a stable hash.
 */

function stableValueHash(value) {
  return JSON.stringify(value, function (_, val) {
    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {
      result[key] = val[key];
      return result;
    }, {}) : val;
  });
}
/**
 * Checks if key `b` partially matches with key `a`.
 */

function partialMatchKey(a, b) {
  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));
}
/**
 * Checks if `b` partially matches with `a`.
 */

function partialDeepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (a && b && typeof a === 'object' && typeof b === 'object') {
    return !Object.keys(b).some(function (key) {
      return !partialDeepEqual(a[key], b[key]);
    });
  }
  return false;
}
/**
 * This function returns `a` if `b` is deeply equal.
 * If not, it will replace any deeply equal children of `b` with those of `a`.
 * This can be used for structural sharing between JSON values for example.
 */

function replaceEqualDeep(a, b) {
  if (a === b) {
    return a;
  }
  var array = Array.isArray(a) && Array.isArray(b);
  if (array || isPlainObject(a) && isPlainObject(b)) {
    var aSize = array ? a.length : Object.keys(a).length;
    var bItems = array ? b : Object.keys(b);
    var bSize = bItems.length;
    var copy = array ? [] : {};
    var equalItems = 0;
    for (var i = 0; i < bSize; i++) {
      var key = array ? i : bItems[i];
      copy[key] = replaceEqualDeep(a[key], b[key]);
      if (copy[key] === a[key]) {
        equalItems++;
      }
    }
    return aSize === bSize && equalItems === aSize ? a : copy;
  }
  return b;
}
/**
 * Shallow compare objects. Only works with objects that always have the same properties.
 */

function shallowEqualObjects(a, b) {
  if (a && !b || b && !a) {
    return false;
  }
  for (var key in a) {
    if (a[key] !== b[key]) {
      return false;
    }
  }
  return true;
} // Copied from: https://github.com/jonschlinkert/is-plain-object

function isPlainObject(o) {
  if (!hasObjectPrototype(o)) {
    return false;
  } // If has modified constructor

  var ctor = o.constructor;
  if (typeof ctor === 'undefined') {
    return true;
  } // If has modified prototype

  var prot = ctor.prototype;
  if (!hasObjectPrototype(prot)) {
    return false;
  } // If constructor does not have an Object-specific method

  if (!prot.hasOwnProperty('isPrototypeOf')) {
    return false;
  } // Most likely a plain Object

  return true;
}
function hasObjectPrototype(o) {
  return Object.prototype.toString.call(o) === '[object Object]';
}
function isQueryKey(value) {
  return typeof value === 'string' || Array.isArray(value);
}
function isError(value) {
  return value instanceof Error;
}
function sleep(timeout) {
  return new Promise(function (resolve) {
    setTimeout(resolve, timeout);
  });
}
/**
 * Schedules a microtask.
 * This can be useful to schedule state updates after rendering.
 */

function scheduleMicrotask(callback) {
  Promise.resolve().then(callback).catch(function (error) {
    return setTimeout(function () {
      throw error;
    });
  });
}
function getAbortController() {
  if (typeof AbortController === 'function') {
    return new AbortController();
  }
}

/***/ }),

/***/ 6098:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QueryClientProvider": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider; },
/* harmony export */   "useIsFetching": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.useIsFetching; },
/* harmony export */   "useMutation": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.useMutation; },
/* harmony export */   "useQuery": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.useQuery; },
/* harmony export */   "useQueryClient": function() { return /* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.useQueryClient; }
/* harmony export */ });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2977);
/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, "QueryClientProvider")) __webpack_require__.d(__webpack_exports__, { "QueryClientProvider": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, "useIsFetching")) __webpack_require__.d(__webpack_exports__, { "useIsFetching": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.useIsFetching; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, "useMutation")) __webpack_require__.d(__webpack_exports__, { "useMutation": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.useMutation; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, "useQuery")) __webpack_require__.d(__webpack_exports__, { "useQuery": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.useQuery; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, "useQueryClient")) __webpack_require__.d(__webpack_exports__, { "useQueryClient": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.useQueryClient; } });
/* harmony import */ var _react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2473);



/***/ }),

/***/ 2473:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "QueryClientProvider": function() { return /* reexport */ QueryClientProvider; },
  "useIsFetching": function() { return /* reexport */ useIsFetching; },
  "useMutation": function() { return /* reexport */ useMutation; },
  "useQuery": function() { return /* reexport */ useQuery; },
  "useQueryClient": function() { return /* reexport */ useQueryClient; }
});

// UNUSED EXPORTS: Hydrate, QueryErrorResetBoundary, useHydrate, useInfiniteQuery, useIsMutating, useQueries, useQueryErrorResetBoundary

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(5466);
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/QueryClientProvider.js

var defaultContext = /*#__PURE__*/react.createContext(undefined);
var QueryClientSharingContext = /*#__PURE__*/react.createContext(false); // if contextSharing is on, we share the first and at least one
// instance of the context across the window
// to ensure that if React Query is used across
// different bundles or microfrontends they will
// all use the same **instance** of context, regardless
// of module scoping.

function getQueryClientContext(contextSharing) {
  if (contextSharing && typeof window !== 'undefined') {
    if (!window.ReactQueryClientContext) {
      window.ReactQueryClientContext = defaultContext;
    }
    return window.ReactQueryClientContext;
  }
  return defaultContext;
}
var useQueryClient = function useQueryClient() {
  var queryClient = react.useContext(getQueryClientContext(react.useContext(QueryClientSharingContext)));
  if (!queryClient) {
    throw new Error('No QueryClient set, use QueryClientProvider to set one');
  }
  return queryClient;
};
var QueryClientProvider = function QueryClientProvider(_ref) {
  var client = _ref.client,
    _ref$contextSharing = _ref.contextSharing,
    contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,
    children = _ref.children;
  react.useEffect(function () {
    client.mount();
    return function () {
      client.unmount();
    };
  }, [client]);
  var Context = getQueryClientContext(contextSharing);
  return /*#__PURE__*/react.createElement(QueryClientSharingContext.Provider, {
    value: contextSharing
  }, /*#__PURE__*/react.createElement(Context.Provider, {
    value: client
  }, children));
};
// EXTERNAL MODULE: ./node_modules/react-query/es/core/notifyManager.js
var notifyManager = __webpack_require__(1165);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/utils.js
var utils = __webpack_require__(2723);
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/useIsFetching.js




var checkIsFetching = function checkIsFetching(queryClient, filters, isFetching, setIsFetching) {
  var newIsFetching = queryClient.isFetching(filters);
  if (isFetching !== newIsFetching) {
    setIsFetching(newIsFetching);
  }
};
function useIsFetching(arg1, arg2) {
  var mountedRef = react.useRef(false);
  var queryClient = useQueryClient();
  var _parseFilterArgs = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),
    filters = _parseFilterArgs[0];
  var _React$useState = react.useState(queryClient.isFetching(filters)),
    isFetching = _React$useState[0],
    setIsFetching = _React$useState[1];
  var filtersRef = react.useRef(filters);
  filtersRef.current = filters;
  var isFetchingRef = react.useRef(isFetching);
  isFetchingRef.current = isFetching;
  react.useEffect(function () {
    mountedRef.current = true;
    checkIsFetching(queryClient, filtersRef.current, isFetchingRef.current, setIsFetching);
    var unsubscribe = queryClient.getQueryCache().subscribe(notifyManager/* notifyManager.batchCalls */.V.batchCalls(function () {
      if (mountedRef.current) {
        checkIsFetching(queryClient, filtersRef.current, isFetchingRef.current, setIsFetching);
      }
    }));
    return function () {
      mountedRef.current = false;
      unsubscribe();
    };
  }, [queryClient]);
  return isFetching;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(3123);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(6881);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/mutation.js
var mutation = __webpack_require__(9187);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/subscribable.js
var subscribable = __webpack_require__(6280);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/mutationObserver.js





// CLASS
var MutationObserver = /*#__PURE__*/function (_Subscribable) {
  (0,inheritsLoose/* default */.Z)(MutationObserver, _Subscribable);
  function MutationObserver(client, options) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.client = client;
    _this.setOptions(options);
    _this.bindMethods();
    _this.updateResult();
    return _this;
  }
  var _proto = MutationObserver.prototype;
  _proto.bindMethods = function bindMethods() {
    this.mutate = this.mutate.bind(this);
    this.reset = this.reset.bind(this);
  };
  _proto.setOptions = function setOptions(options) {
    this.options = this.client.defaultMutationOptions(options);
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
    if (!this.listeners.length) {
      var _this$currentMutation;
      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);
    }
  };
  _proto.onMutationUpdate = function onMutationUpdate(action) {
    this.updateResult(); // Determine which callbacks to trigger

    var notifyOptions = {
      listeners: true
    };
    if (action.type === 'success') {
      notifyOptions.onSuccess = true;
    } else if (action.type === 'error') {
      notifyOptions.onError = true;
    }
    this.notify(notifyOptions);
  };
  _proto.getCurrentResult = function getCurrentResult() {
    return this.currentResult;
  };
  _proto.reset = function reset() {
    this.currentMutation = undefined;
    this.updateResult();
    this.notify({
      listeners: true
    });
  };
  _proto.mutate = function mutate(variables, options) {
    this.mutateOptions = options;
    if (this.currentMutation) {
      this.currentMutation.removeObserver(this);
    }
    this.currentMutation = this.client.getMutationCache().build(this.client, (0,esm_extends/* default */.Z)({}, this.options, {
      variables: typeof variables !== 'undefined' ? variables : this.options.variables
    }));
    this.currentMutation.addObserver(this);
    return this.currentMutation.execute();
  };
  _proto.updateResult = function updateResult() {
    var state = this.currentMutation ? this.currentMutation.state : (0,mutation/* getDefaultState */.R)();
    var result = (0,esm_extends/* default */.Z)({}, state, {
      isLoading: state.status === 'loading',
      isSuccess: state.status === 'success',
      isError: state.status === 'error',
      isIdle: state.status === 'idle',
      mutate: this.mutate,
      reset: this.reset
    });
    this.currentResult = result;
  };
  _proto.notify = function notify(options) {
    var _this2 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      // First trigger the mutate callbacks
      if (_this2.mutateOptions) {
        if (options.onSuccess) {
          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);
          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);
        } else if (options.onError) {
          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);
          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);
        }
      } // Then trigger the listeners

      if (options.listeners) {
        _this2.listeners.forEach(function (listener) {
          listener(_this2.currentResult);
        });
      }
    });
  };
  return MutationObserver;
}(subscribable/* Subscribable */.l);
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/utils.js
function shouldThrowError(suspense, _useErrorBoundary, params) {
  // Allow useErrorBoundary function to override throwing behavior on a per-error basis
  if (typeof _useErrorBoundary === 'function') {
    return _useErrorBoundary.apply(void 0, params);
  } // Allow useErrorBoundary to override suspense's throwing behavior

  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors

  return !!suspense;
}
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/useMutation.js






 // HOOK

function useMutation(arg1, arg2, arg3) {
  var mountedRef = react.useRef(false);
  var _React$useState = react.useState(0),
    forceUpdate = _React$useState[1];
  var options = (0,utils/* parseMutationArgs */.lV)(arg1, arg2, arg3);
  var queryClient = useQueryClient();
  var obsRef = react.useRef();
  if (!obsRef.current) {
    obsRef.current = new MutationObserver(queryClient, options);
  } else {
    obsRef.current.setOptions(options);
  }
  var currentResult = obsRef.current.getCurrentResult();
  react.useEffect(function () {
    mountedRef.current = true;
    var unsubscribe = obsRef.current.subscribe(notifyManager/* notifyManager.batchCalls */.V.batchCalls(function () {
      if (mountedRef.current) {
        forceUpdate(function (x) {
          return x + 1;
        });
      }
    }));
    return function () {
      mountedRef.current = false;
      unsubscribe();
    };
  }, []);
  var mutate = react.useCallback(function (variables, mutateOptions) {
    obsRef.current.mutate(variables, mutateOptions).catch(utils/* noop */.ZT);
  }, []);
  if (currentResult.error && shouldThrowError(undefined, obsRef.current.options.useErrorBoundary, [currentResult.error])) {
    throw currentResult.error;
  }
  return (0,esm_extends/* default */.Z)({}, currentResult, {
    mutate: mutate,
    mutateAsync: currentResult.mutate
  });
}
// EXTERNAL MODULE: ./node_modules/react-query/es/core/focusManager.js
var focusManager = __webpack_require__(1758);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/logger.js
var logger = __webpack_require__(438);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/retryer.js
var retryer = __webpack_require__(7085);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/queryObserver.js








var QueryObserver = /*#__PURE__*/function (_Subscribable) {
  (0,inheritsLoose/* default */.Z)(QueryObserver, _Subscribable);
  function QueryObserver(client, options) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.client = client;
    _this.options = options;
    _this.trackedProps = [];
    _this.selectError = null;
    _this.bindMethods();
    _this.setOptions(options);
    return _this;
  }
  var _proto = QueryObserver.prototype;
  _proto.bindMethods = function bindMethods() {
    this.remove = this.remove.bind(this);
    this.refetch = this.refetch.bind(this);
  };
  _proto.onSubscribe = function onSubscribe() {
    if (this.listeners.length === 1) {
      this.currentQuery.addObserver(this);
      if (shouldFetchOnMount(this.currentQuery, this.options)) {
        this.executeFetch();
      }
      this.updateTimers();
    }
  };
  _proto.onUnsubscribe = function onUnsubscribe() {
    if (!this.listeners.length) {
      this.destroy();
    }
  };
  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {
    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);
  };
  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {
    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);
  };
  _proto.destroy = function destroy() {
    this.listeners = [];
    this.clearTimers();
    this.currentQuery.removeObserver(this);
  };
  _proto.setOptions = function setOptions(options, notifyOptions) {
    var prevOptions = this.options;
    var prevQuery = this.currentQuery;
    this.options = this.client.defaultQueryObserverOptions(options);
    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {
      throw new Error('Expected enabled to be a boolean');
    } // Keep previous query key if the user does not supply one

    if (!this.options.queryKey) {
      this.options.queryKey = prevOptions.queryKey;
    }
    this.updateQuery();
    var mounted = this.hasListeners(); // Fetch if there are subscribers

    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {
      this.executeFetch();
    } // Update result

    this.updateResult(notifyOptions); // Update stale interval if needed

    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {
      this.updateStaleTimeout();
    }
    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed

    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {
      this.updateRefetchInterval(nextRefetchInterval);
    }
  };
  _proto.getOptimisticResult = function getOptimisticResult(options) {
    var defaultedOptions = this.client.defaultQueryObserverOptions(options);
    var query = this.client.getQueryCache().build(this.client, defaultedOptions);
    return this.createResult(query, defaultedOptions);
  };
  _proto.getCurrentResult = function getCurrentResult() {
    return this.currentResult;
  };
  _proto.trackResult = function trackResult(result, defaultedOptions) {
    var _this2 = this;
    var trackedResult = {};
    var trackProp = function trackProp(key) {
      if (!_this2.trackedProps.includes(key)) {
        _this2.trackedProps.push(key);
      }
    };
    Object.keys(result).forEach(function (key) {
      Object.defineProperty(trackedResult, key, {
        configurable: false,
        enumerable: true,
        get: function get() {
          trackProp(key);
          return result[key];
        }
      });
    });
    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {
      trackProp('error');
    }
    return trackedResult;
  };
  _proto.getNextResult = function getNextResult(options) {
    var _this3 = this;
    return new Promise(function (resolve, reject) {
      var unsubscribe = _this3.subscribe(function (result) {
        if (!result.isFetching) {
          unsubscribe();
          if (result.isError && (options == null ? void 0 : options.throwOnError)) {
            reject(result.error);
          } else {
            resolve(result);
          }
        }
      });
    });
  };
  _proto.getCurrentQuery = function getCurrentQuery() {
    return this.currentQuery;
  };
  _proto.remove = function remove() {
    this.client.getQueryCache().remove(this.currentQuery);
  };
  _proto.refetch = function refetch(options) {
    return this.fetch((0,esm_extends/* default */.Z)({}, options, {
      meta: {
        refetchPage: options == null ? void 0 : options.refetchPage
      }
    }));
  };
  _proto.fetchOptimistic = function fetchOptimistic(options) {
    var _this4 = this;
    var defaultedOptions = this.client.defaultQueryObserverOptions(options);
    var query = this.client.getQueryCache().build(this.client, defaultedOptions);
    return query.fetch().then(function () {
      return _this4.createResult(query, defaultedOptions);
    });
  };
  _proto.fetch = function fetch(fetchOptions) {
    var _this5 = this;
    return this.executeFetch(fetchOptions).then(function () {
      _this5.updateResult();
      return _this5.currentResult;
    });
  };
  _proto.executeFetch = function executeFetch(fetchOptions) {
    // Make sure we reference the latest query as the current one might have been removed
    this.updateQuery(); // Fetch

    var promise = this.currentQuery.fetch(this.options, fetchOptions);
    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {
      promise = promise.catch(utils/* noop */.ZT);
    }
    return promise;
  };
  _proto.updateStaleTimeout = function updateStaleTimeout() {
    var _this6 = this;
    this.clearStaleTimeout();
    if (utils/* isServer */.sk || this.currentResult.isStale || !(0,utils/* isValidTimeout */.PN)(this.options.staleTime)) {
      return;
    }
    var time = (0,utils/* timeUntilStale */.Kp)(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.
    // To mitigate this issue we always add 1 ms to the timeout.

    var timeout = time + 1;
    this.staleTimeoutId = setTimeout(function () {
      if (!_this6.currentResult.isStale) {
        _this6.updateResult();
      }
    }, timeout);
  };
  _proto.computeRefetchInterval = function computeRefetchInterval() {
    var _this$options$refetch;
    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;
  };
  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {
    var _this7 = this;
    this.clearRefetchInterval();
    this.currentRefetchInterval = nextInterval;
    if (utils/* isServer */.sk || this.options.enabled === false || !(0,utils/* isValidTimeout */.PN)(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {
      return;
    }
    this.refetchIntervalId = setInterval(function () {
      if (_this7.options.refetchIntervalInBackground || focusManager/* focusManager.isFocused */.j.isFocused()) {
        _this7.executeFetch();
      }
    }, this.currentRefetchInterval);
  };
  _proto.updateTimers = function updateTimers() {
    this.updateStaleTimeout();
    this.updateRefetchInterval(this.computeRefetchInterval());
  };
  _proto.clearTimers = function clearTimers() {
    this.clearStaleTimeout();
    this.clearRefetchInterval();
  };
  _proto.clearStaleTimeout = function clearStaleTimeout() {
    if (this.staleTimeoutId) {
      clearTimeout(this.staleTimeoutId);
      this.staleTimeoutId = undefined;
    }
  };
  _proto.clearRefetchInterval = function clearRefetchInterval() {
    if (this.refetchIntervalId) {
      clearInterval(this.refetchIntervalId);
      this.refetchIntervalId = undefined;
    }
  };
  _proto.createResult = function createResult(query, options) {
    var prevQuery = this.currentQuery;
    var prevOptions = this.options;
    var prevResult = this.currentResult;
    var prevResultState = this.currentResultState;
    var prevResultOptions = this.currentResultOptions;
    var queryChange = query !== prevQuery;
    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;
    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;
    var state = query.state;
    var dataUpdatedAt = state.dataUpdatedAt,
      error = state.error,
      errorUpdatedAt = state.errorUpdatedAt,
      isFetching = state.isFetching,
      status = state.status;
    var isPreviousData = false;
    var isPlaceholderData = false;
    var data; // Optimistically set result in fetching state if needed

    if (options.optimisticResults) {
      var mounted = this.hasListeners();
      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);
      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
      if (fetchOnMount || fetchOptionally) {
        isFetching = true;
        if (!dataUpdatedAt) {
          status = 'loading';
        }
      }
    } // Keep previous data if needed

    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {
      data = prevQueryResult.data;
      dataUpdatedAt = prevQueryResult.dataUpdatedAt;
      status = prevQueryResult.status;
      isPreviousData = true;
    } // Select data if needed
    else if (options.select && typeof state.data !== 'undefined') {
      // Memoize select result
      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {
        data = this.selectResult;
      } else {
        try {
          this.selectFn = options.select;
          data = options.select(state.data);
          if (options.structuralSharing !== false) {
            data = (0,utils/* replaceEqualDeep */.Q$)(prevResult == null ? void 0 : prevResult.data, data);
          }
          this.selectResult = data;
          this.selectError = null;
        } catch (selectError) {
          (0,logger/* getLogger */.j)().error(selectError);
          this.selectError = selectError;
        }
      }
    } // Use query data
    else {
      data = state.data;
    } // Show placeholder data if needed

    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {
      var placeholderData; // Memoize placeholder data

      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {
        placeholderData = prevResult.data;
      } else {
        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;
        if (options.select && typeof placeholderData !== 'undefined') {
          try {
            placeholderData = options.select(placeholderData);
            if (options.structuralSharing !== false) {
              placeholderData = (0,utils/* replaceEqualDeep */.Q$)(prevResult == null ? void 0 : prevResult.data, placeholderData);
            }
            this.selectError = null;
          } catch (selectError) {
            (0,logger/* getLogger */.j)().error(selectError);
            this.selectError = selectError;
          }
        }
      }
      if (typeof placeholderData !== 'undefined') {
        status = 'success';
        data = placeholderData;
        isPlaceholderData = true;
      }
    }
    if (this.selectError) {
      error = this.selectError;
      data = this.selectResult;
      errorUpdatedAt = Date.now();
      status = 'error';
    }
    var result = {
      status: status,
      isLoading: status === 'loading',
      isSuccess: status === 'success',
      isError: status === 'error',
      isIdle: status === 'idle',
      data: data,
      dataUpdatedAt: dataUpdatedAt,
      error: error,
      errorUpdatedAt: errorUpdatedAt,
      failureCount: state.fetchFailureCount,
      errorUpdateCount: state.errorUpdateCount,
      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,
      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,
      isFetching: isFetching,
      isRefetching: isFetching && status !== 'loading',
      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,
      isPlaceholderData: isPlaceholderData,
      isPreviousData: isPreviousData,
      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,
      isStale: isStale(query, options),
      refetch: this.refetch,
      remove: this.remove
    };
    return result;
  };
  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {
    if (!prevResult) {
      return true;
    }
    var _this$options = this.options,
      notifyOnChangeProps = _this$options.notifyOnChangeProps,
      notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;
    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {
      return true;
    }
    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {
      return true;
    }
    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;
    return Object.keys(result).some(function (key) {
      var typedKey = key;
      var changed = result[typedKey] !== prevResult[typedKey];
      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {
        return x === key;
      });
      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {
        return x === key;
      });
      return changed && !isExcluded && (!includedProps || isIncluded);
    });
  };
  _proto.updateResult = function updateResult(notifyOptions) {
    var prevResult = this.currentResult;
    this.currentResult = this.createResult(this.currentQuery, this.options);
    this.currentResultState = this.currentQuery.state;
    this.currentResultOptions = this.options; // Only notify if something has changed

    if ((0,utils/* shallowEqualObjects */.VS)(this.currentResult, prevResult)) {
      return;
    } // Determine which callbacks to trigger

    var defaultNotifyOptions = {
      cache: true
    };
    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {
      defaultNotifyOptions.listeners = true;
    }
    this.notify((0,esm_extends/* default */.Z)({}, defaultNotifyOptions, notifyOptions));
  };
  _proto.updateQuery = function updateQuery() {
    var query = this.client.getQueryCache().build(this.client, this.options);
    if (query === this.currentQuery) {
      return;
    }
    var prevQuery = this.currentQuery;
    this.currentQuery = query;
    this.currentQueryInitialState = query.state;
    this.previousQueryResult = this.currentResult;
    if (this.hasListeners()) {
      prevQuery == null ? void 0 : prevQuery.removeObserver(this);
      query.addObserver(this);
    }
  };
  _proto.onQueryUpdate = function onQueryUpdate(action) {
    var notifyOptions = {};
    if (action.type === 'success') {
      notifyOptions.onSuccess = true;
    } else if (action.type === 'error' && !(0,retryer/* isCancelledError */.DV)(action.error)) {
      notifyOptions.onError = true;
    }
    this.updateResult(notifyOptions);
    if (this.hasListeners()) {
      this.updateTimers();
    }
  };
  _proto.notify = function notify(notifyOptions) {
    var _this8 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      // First trigger the configuration callbacks
      if (notifyOptions.onSuccess) {
        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);
        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);
      } else if (notifyOptions.onError) {
        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);
        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);
      } // Then trigger the listeners

      if (notifyOptions.listeners) {
        _this8.listeners.forEach(function (listener) {
          listener(_this8.currentResult);
        });
      } // Then the cache listeners

      if (notifyOptions.cache) {
        _this8.client.getQueryCache().notify({
          query: _this8.currentQuery,
          type: 'observerResultsUpdated'
        });
      }
    });
  };
  return QueryObserver;
}(subscribable/* Subscribable */.l);
function shouldLoadOnMount(query, options) {
  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);
}
function shouldFetchOnMount(query, options) {
  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);
}
function shouldFetchOn(query, options, field) {
  if (options.enabled !== false) {
    var value = typeof field === 'function' ? field(query) : field;
    return value === 'always' || value !== false && isStale(query, options);
  }
  return false;
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);
}
function isStale(query, options) {
  return query.isStaleByTime(options.staleTime);
}
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/QueryErrorResetBoundary.js
 // CONTEXT

function createValue() {
  var _isReset = false;
  return {
    clearReset: function clearReset() {
      _isReset = false;
    },
    reset: function reset() {
      _isReset = true;
    },
    isReset: function isReset() {
      return _isReset;
    }
  };
}
var QueryErrorResetBoundaryContext = /*#__PURE__*/react.createContext(createValue()); // HOOK

var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {
  return react.useContext(QueryErrorResetBoundaryContext);
}; // COMPONENT

var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {
  var children = _ref.children;
  var value = React.useMemo(function () {
    return createValue();
  }, []);
  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {
    value: value
  }, typeof children === 'function' ? children(value) : children);
};
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/useBaseQuery.js





function useBaseQuery(options, Observer) {
  var mountedRef = react.useRef(false);
  var _React$useState = react.useState(0),
    forceUpdate = _React$useState[1];
  var queryClient = useQueryClient();
  var errorResetBoundary = useQueryErrorResetBoundary();
  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options

  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders

  if (defaultedOptions.onError) {
    defaultedOptions.onError = notifyManager/* notifyManager.batchCalls */.V.batchCalls(defaultedOptions.onError);
  }
  if (defaultedOptions.onSuccess) {
    defaultedOptions.onSuccess = notifyManager/* notifyManager.batchCalls */.V.batchCalls(defaultedOptions.onSuccess);
  }
  if (defaultedOptions.onSettled) {
    defaultedOptions.onSettled = notifyManager/* notifyManager.batchCalls */.V.batchCalls(defaultedOptions.onSettled);
  }
  if (defaultedOptions.suspense) {
    // Always set stale time when using suspense to prevent
    // fetching again when directly mounting after suspending
    if (typeof defaultedOptions.staleTime !== 'number') {
      defaultedOptions.staleTime = 1000;
    } // Set cache time to 1 if the option has been set to 0
    // when using suspense to prevent infinite loop of fetches

    if (defaultedOptions.cacheTime === 0) {
      defaultedOptions.cacheTime = 1;
    }
  }
  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {
    // Prevent retrying failed query if the error boundary has not been reset yet
    if (!errorResetBoundary.isReset()) {
      defaultedOptions.retryOnMount = false;
    }
  }
  var _React$useState2 = react.useState(function () {
      return new Observer(queryClient, defaultedOptions);
    }),
    observer = _React$useState2[0];
  var result = observer.getOptimisticResult(defaultedOptions);
  react.useEffect(function () {
    mountedRef.current = true;
    errorResetBoundary.clearReset();
    var unsubscribe = observer.subscribe(notifyManager/* notifyManager.batchCalls */.V.batchCalls(function () {
      if (mountedRef.current) {
        forceUpdate(function (x) {
          return x + 1;
        });
      }
    })); // Update result to make sure we did not miss any query updates
    // between creating the observer and subscribing to it.

    observer.updateResult();
    return function () {
      mountedRef.current = false;
      unsubscribe();
    };
  }, [errorResetBoundary, observer]);
  react.useEffect(function () {
    // Do not notify on updates because of changes in the options because
    // these changes should already be reflected in the optimistic result.
    observer.setOptions(defaultedOptions, {
      listeners: false
    });
  }, [defaultedOptions, observer]); // Handle suspense

  if (defaultedOptions.suspense && result.isLoading) {
    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {
      var data = _ref.data;
      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);
      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);
    }).catch(function (error) {
      errorResetBoundary.clearReset();
      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);
      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);
    });
  } // Handle error boundary

  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {
    throw result.error;
  } // Handle result property usage tracking

  if (defaultedOptions.notifyOnChangeProps === 'tracked') {
    result = observer.trackResult(result, defaultedOptions);
  }
  return result;
}
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/useQuery.js


 // HOOK

function useQuery(arg1, arg2, arg3) {
  var parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);
  return useBaseQuery(parsedOptions, QueryObserver);
}
;// CONCATENATED MODULE: ./node_modules/react-query/es/react/index.js
// Side effects










 // Types



/***/ }),

/***/ 4952:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

!function (root, factory) {
   true ? module.exports = factory(__webpack_require__(5466)) : 0;
}("undefined" != typeof self ? self : this, function (__WEBPACK_EXTERNAL_MODULE_1__) {
  return function (modules) {
    function __nested_webpack_require_444__(moduleId) {
      if (installedModules[moduleId]) return installedModules[moduleId].exports;
      var module = installedModules[moduleId] = {
        i: moduleId,
        l: !1,
        exports: {}
      };
      return modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_444__), module.l = !0, module.exports;
    }
    var installedModules = {};
    return __nested_webpack_require_444__.m = modules, __nested_webpack_require_444__.c = installedModules, __nested_webpack_require_444__.d = function (exports, name, getter) {
      __nested_webpack_require_444__.o(exports, name) || Object.defineProperty(exports, name, {
        configurable: !1,
        enumerable: !0,
        get: getter
      });
    }, __nested_webpack_require_444__.n = function (module) {
      var getter = module && module.__esModule ? function () {
        return module.default;
      } : function () {
        return module;
      };
      return __nested_webpack_require_444__.d(getter, "a", getter), getter;
    }, __nested_webpack_require_444__.o = function (object, property) {
      return Object.prototype.hasOwnProperty.call(object, property);
    }, __nested_webpack_require_444__.p = "", __nested_webpack_require_444__(__nested_webpack_require_444__.s = 8);
  }([function (module, exports, __nested_webpack_require_1668__) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        default: mod
      };
    };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var react_1 = __importDefault(__nested_webpack_require_1668__(1)),
      matchmediaquery_1 = __importDefault(__nested_webpack_require_1668__(9)),
      hyphenate_style_name_1 = __importDefault(__nested_webpack_require_1668__(2)),
      shallow_equal_1 = __nested_webpack_require_1668__(11),
      toQuery_1 = __importDefault(__nested_webpack_require_1668__(3)),
      Context_1 = __importDefault(__nested_webpack_require_1668__(7)),
      makeQuery = function (settings) {
        return settings.query || (0, toQuery_1.default)(settings);
      },
      hyphenateKeys = function (obj) {
        if (obj) {
          return Object.keys(obj).reduce(function (result, key) {
            return result[(0, hyphenate_style_name_1.default)(key)] = obj[key], result;
          }, {});
        }
      },
      useIsUpdate = function () {
        var ref = react_1.default.useRef(!1);
        return react_1.default.useEffect(function () {
          ref.current = !0;
        }, []), ref.current;
      },
      useDevice = function (deviceFromProps) {
        var deviceFromContext = react_1.default.useContext(Context_1.default),
          getDevice = function () {
            return hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext);
          },
          _a = react_1.default.useState(getDevice),
          device = _a[0],
          setDevice = _a[1];
        return react_1.default.useEffect(function () {
          var newDevice = getDevice();
          (0, shallow_equal_1.shallowEqualObjects)(device, newDevice) || setDevice(newDevice);
        }, [deviceFromProps, deviceFromContext]), device;
      },
      useQuery = function (settings) {
        var getQuery = function () {
            return makeQuery(settings);
          },
          _a = react_1.default.useState(getQuery),
          query = _a[0],
          setQuery = _a[1];
        return react_1.default.useEffect(function () {
          var newQuery = getQuery();
          query !== newQuery && setQuery(newQuery);
        }, [settings]), query;
      },
      useMatchMedia = function (query, device) {
        var getMatchMedia = function () {
            return (0, matchmediaquery_1.default)(query, device || {}, !!device);
          },
          _a = react_1.default.useState(getMatchMedia),
          mq = _a[0],
          setMq = _a[1],
          isUpdate = useIsUpdate();
        return react_1.default.useEffect(function () {
          if (isUpdate) {
            var newMq_1 = getMatchMedia();
            return setMq(newMq_1), function () {
              newMq_1 && newMq_1.dispose();
            };
          }
        }, [query, device]), mq;
      },
      useMatches = function (mediaQuery) {
        var _a = react_1.default.useState(mediaQuery.matches),
          matches = _a[0],
          setMatches = _a[1];
        return react_1.default.useEffect(function () {
          var updateMatches = function () {
            setMatches(mediaQuery.matches);
          };
          return mediaQuery.addListener(updateMatches), updateMatches(), function () {
            mediaQuery.removeListener(updateMatches);
          };
        }, [mediaQuery]), matches;
      },
      useMediaQuery = function (settings, device, onChange) {
        var deviceSettings = useDevice(device),
          query = useQuery(settings);
        if (!query) throw new Error("Invalid or missing MediaQuery!");
        var mq = useMatchMedia(query, deviceSettings),
          matches = useMatches(mq),
          isUpdate = useIsUpdate();
        return react_1.default.useEffect(function () {
          isUpdate && onChange && onChange(matches);
        }, [matches]), react_1.default.useEffect(function () {
          return function () {
            mq && mq.dispose();
          };
        }, []), matches;
      };
    exports.default = useMediaQuery;
  }, function (module, exports) {
    module.exports = __WEBPACK_EXTERNAL_MODULE_1__;
  }, function (module, __webpack_exports__, __webpack_require__) {
    "use strict";

    function toHyphenLower(match) {
      return "-" + match.toLowerCase();
    }
    function hyphenateStyleName(name) {
      if (cache.hasOwnProperty(name)) return cache[name];
      var hName = name.replace(uppercasePattern, toHyphenLower);
      return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
    }
    Object.defineProperty(__webpack_exports__, "__esModule", {
      value: !0
    });
    var uppercasePattern = /[A-Z]/g,
      msPattern = /^ms-/,
      cache = {};
    __webpack_exports__.default = hyphenateStyleName;
  }, function (module, exports, __nested_webpack_require_6456__) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        default: mod
      };
    };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var hyphenate_style_name_1 = __importDefault(__nested_webpack_require_6456__(2)),
      mediaQuery_1 = __importDefault(__nested_webpack_require_6456__(12)),
      negate = function (cond) {
        return "not ".concat(cond);
      },
      keyVal = function (k, v) {
        var realKey = (0, hyphenate_style_name_1.default)(k);
        return "number" == typeof v && (v = "".concat(v, "px")), !0 === v ? realKey : !1 === v ? negate(realKey) : "(".concat(realKey, ": ").concat(v, ")");
      },
      join = function (conds) {
        return conds.join(" and ");
      },
      toQuery = function (obj) {
        var rules = [];
        return Object.keys(mediaQuery_1.default.all).forEach(function (k) {
          var v = obj[k];
          null != v && rules.push(keyVal(k, v));
        }), join(rules);
      };
    exports.default = toQuery;
  }, function (module, exports, __nested_webpack_require_7588__) {
    "use strict";

    module.exports = __nested_webpack_require_7588__(14);
  }, function (module, exports, __webpack_require__) {
    "use strict";

    module.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  }, function (module, exports) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }, function (module, exports, __nested_webpack_require_7959__) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        default: mod
      };
    };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var react_1 = __importDefault(__nested_webpack_require_7959__(1)),
      Context = react_1.default.createContext(void 0);
    exports.default = Context;
  }, function (module, exports, __nested_webpack_require_8410__) {
    "use strict";

    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        default: mod
      };
    };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    }), exports.Context = exports.toQuery = exports.useMediaQuery = exports.default = void 0;
    var useMediaQuery_1 = __importDefault(__nested_webpack_require_8410__(0));
    exports.useMediaQuery = useMediaQuery_1.default;
    var Component_1 = __importDefault(__nested_webpack_require_8410__(18));
    exports.default = Component_1.default;
    var toQuery_1 = __importDefault(__nested_webpack_require_8410__(3));
    exports.toQuery = toQuery_1.default;
    var Context_1 = __importDefault(__nested_webpack_require_8410__(7));
    exports.Context = Context_1.default;
  }, function (module, exports, __nested_webpack_require_9233__) {
    "use strict";

    function Mql(query, values, forceStatic) {
      function addListener(listener) {
        mql && mql.addListener(listener);
      }
      function removeListener(listener) {
        mql && mql.removeListener(listener);
      }
      function update(evt) {
        self.matches = evt.matches, self.media = evt.media;
      }
      function dispose() {
        mql && mql.removeListener(update);
      }
      var self = this;
      if (dynamicMatch && !forceStatic) {
        var mql = dynamicMatch.call(window, query);
        this.matches = mql.matches, this.media = mql.media, mql.addListener(update);
      } else this.matches = staticMatch(query, values), this.media = query;
      this.addListener = addListener, this.removeListener = removeListener, this.dispose = dispose;
    }
    function matchMedia(query, values, forceStatic) {
      return new Mql(query, values, forceStatic);
    }
    var staticMatch = __nested_webpack_require_9233__(10).match,
      dynamicMatch = "undefined" != typeof window ? window.matchMedia : null;
    module.exports = matchMedia;
  }, function (module, exports, __webpack_require__) {
    "use strict";

    function matchQuery(mediaQuery, values) {
      return parseQuery(mediaQuery).some(function (query) {
        var inverse = query.inverse,
          typeMatch = "all" === query.type || values.type === query.type;
        if (typeMatch && inverse || !typeMatch && !inverse) return !1;
        var expressionsMatch = query.expressions.every(function (expression) {
          var feature = expression.feature,
            modifier = expression.modifier,
            expValue = expression.value,
            value = values[feature];
          if (!value) return !1;
          switch (feature) {
            case "orientation":
            case "scan":
              return value.toLowerCase() === expValue.toLowerCase();
            case "width":
            case "height":
            case "device-width":
            case "device-height":
              expValue = toPx(expValue), value = toPx(value);
              break;
            case "resolution":
              expValue = toDpi(expValue), value = toDpi(value);
              break;
            case "aspect-ratio":
            case "device-aspect-ratio":
            case "device-pixel-ratio":
              expValue = toDecimal(expValue), value = toDecimal(value);
              break;
            case "grid":
            case "color":
            case "color-index":
            case "monochrome":
              expValue = parseInt(expValue, 10) || 1, value = parseInt(value, 10) || 0;
          }
          switch (modifier) {
            case "min":
              return value >= expValue;
            case "max":
              return value <= expValue;
            default:
              return value === expValue;
          }
        });
        return expressionsMatch && !inverse || !expressionsMatch && inverse;
      });
    }
    function parseQuery(mediaQuery) {
      return mediaQuery.split(",").map(function (query) {
        query = query.trim();
        var captures = query.match(RE_MEDIA_QUERY),
          modifier = captures[1],
          type = captures[2],
          expressions = captures[3] || "",
          parsed = {};
        return parsed.inverse = !!modifier && "not" === modifier.toLowerCase(), parsed.type = type ? type.toLowerCase() : "all", expressions = expressions.match(/\([^\)]+\)/g) || [], parsed.expressions = expressions.map(function (expression) {
          var captures = expression.match(RE_MQ_EXPRESSION),
            feature = captures[1].toLowerCase().match(RE_MQ_FEATURE);
          return {
            modifier: feature[1],
            feature: feature[2],
            value: captures[2]
          };
        }), parsed;
      });
    }
    function toDecimal(ratio) {
      var numbers,
        decimal = Number(ratio);
      return decimal || (numbers = ratio.match(/^(\d+)\s*\/\s*(\d+)$/), decimal = numbers[1] / numbers[2]), decimal;
    }
    function toDpi(resolution) {
      var value = parseFloat(resolution);
      switch (String(resolution).match(RE_RESOLUTION_UNIT)[1]) {
        case "dpcm":
          return value / 2.54;
        case "dppx":
          return 96 * value;
        default:
          return value;
      }
    }
    function toPx(length) {
      var value = parseFloat(length);
      switch (String(length).match(RE_LENGTH_UNIT)[1]) {
        case "em":
        case "rem":
          return 16 * value;
        case "cm":
          return 96 * value / 2.54;
        case "mm":
          return 96 * value / 2.54 / 10;
        case "in":
          return 96 * value;
        case "pt":
          return 72 * value;
        case "pc":
          return 72 * value / 12;
        default:
          return value;
      }
    }
    exports.match = matchQuery, exports.parse = parseQuery;
    var RE_MEDIA_QUERY = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i,
      RE_MQ_EXPRESSION = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/,
      RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/,
      RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/,
      RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;
  }, function (module, __webpack_exports__, __nested_webpack_require_14479__) {
    "use strict";

    function shallowEqualObjects(objA, objB) {
      if (objA === objB) return !0;
      if (!objA || !objB) return !1;
      var aKeys = Object.keys(objA),
        bKeys = Object.keys(objB),
        len = aKeys.length;
      if (bKeys.length !== len) return !1;
      for (var i = 0; i < len; i++) {
        var key = aKeys[i];
        if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) return !1;
      }
      return !0;
    }
    function shallowEqualArrays(arrA, arrB) {
      if (arrA === arrB) return !0;
      if (!arrA || !arrB) return !1;
      var len = arrA.length;
      if (arrB.length !== len) return !1;
      for (var i = 0; i < len; i++) if (arrA[i] !== arrB[i]) return !1;
      return !0;
    }
    Object.defineProperty(__webpack_exports__, "__esModule", {
      value: !0
    }), __nested_webpack_require_14479__.d(__webpack_exports__, "shallowEqualArrays", function () {
      return shallowEqualArrays;
    }), __nested_webpack_require_14479__.d(__webpack_exports__, "shallowEqualObjects", function () {
      return shallowEqualObjects;
    });
  }, function (module, exports, __nested_webpack_require_15627__) {
    "use strict";

    var __assign = this && this.__assign || function () {
        return __assign = Object.assign || function (t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
          }
          return t;
        }, __assign.apply(this, arguments);
      },
      __rest = this && this.__rest || function (s, e) {
        var t = {};
        for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0 && (t[p] = s[p]);
        if (null != s && "function" == typeof Object.getOwnPropertySymbols) for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
        return t;
      },
      __importDefault = this && this.__importDefault || function (mod) {
        return mod && mod.__esModule ? mod : {
          default: mod
        };
      };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var prop_types_1 = __importDefault(__nested_webpack_require_15627__(13)),
      stringOrNumber = prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
      types = {
        all: prop_types_1.default.bool,
        grid: prop_types_1.default.bool,
        aural: prop_types_1.default.bool,
        braille: prop_types_1.default.bool,
        handheld: prop_types_1.default.bool,
        print: prop_types_1.default.bool,
        projection: prop_types_1.default.bool,
        screen: prop_types_1.default.bool,
        tty: prop_types_1.default.bool,
        tv: prop_types_1.default.bool,
        embossed: prop_types_1.default.bool
      },
      matchers = {
        orientation: prop_types_1.default.oneOf(["portrait", "landscape"]),
        scan: prop_types_1.default.oneOf(["progressive", "interlace"]),
        aspectRatio: prop_types_1.default.string,
        deviceAspectRatio: prop_types_1.default.string,
        height: stringOrNumber,
        deviceHeight: stringOrNumber,
        width: stringOrNumber,
        deviceWidth: stringOrNumber,
        color: prop_types_1.default.bool,
        colorIndex: prop_types_1.default.bool,
        monochrome: prop_types_1.default.bool,
        resolution: stringOrNumber,
        type: Object.keys(types)
      },
      featureMatchers = __rest(matchers, ["type"]),
      features = __assign({
        minAspectRatio: prop_types_1.default.string,
        maxAspectRatio: prop_types_1.default.string,
        minDeviceAspectRatio: prop_types_1.default.string,
        maxDeviceAspectRatio: prop_types_1.default.string,
        minHeight: stringOrNumber,
        maxHeight: stringOrNumber,
        minDeviceHeight: stringOrNumber,
        maxDeviceHeight: stringOrNumber,
        minWidth: stringOrNumber,
        maxWidth: stringOrNumber,
        minDeviceWidth: stringOrNumber,
        maxDeviceWidth: stringOrNumber,
        minColor: prop_types_1.default.number,
        maxColor: prop_types_1.default.number,
        minColorIndex: prop_types_1.default.number,
        maxColorIndex: prop_types_1.default.number,
        minMonochrome: prop_types_1.default.number,
        maxMonochrome: prop_types_1.default.number,
        minResolution: stringOrNumber,
        maxResolution: stringOrNumber
      }, featureMatchers),
      all = __assign(__assign({}, types), features);
    exports.default = {
      all: all,
      types: types,
      matchers: matchers,
      features: features
    };
  }, function (module, exports, __nested_webpack_require_19259__) {
    var ReactIs = __nested_webpack_require_19259__(4);
    module.exports = __nested_webpack_require_19259__(15)(ReactIs.isElement, !0);
  }, function (module, exports, __webpack_require__) {
    "use strict";

    !function () {
      function isValidElementType(type) {
        return "string" == typeof type || "function" == typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || "object" == typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }
      function typeOf(object) {
        if ("object" == typeof object && null !== object) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;
              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;
                default:
                  var $$typeofType = type && type.$$typeof;
                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
      }
      function isAsyncMode(object) {
        return hasWarnedAboutDeprecatedIsAsyncMode || (hasWarnedAboutDeprecatedIsAsyncMode = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }
      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }
      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }
      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }
      function isElement(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }
      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }
      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }
      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }
      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }
      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }
      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }
      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }
      var hasSymbol = "function" == typeof Symbol && Symbol.for,
        REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103,
        REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106,
        REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107,
        REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108,
        REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114,
        REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109,
        REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110,
        REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111,
        REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111,
        REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112,
        REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113,
        REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120,
        REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115,
        REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116,
        REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121,
        REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117,
        REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118,
        REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119,
        AsyncMode = REACT_ASYNC_MODE_TYPE,
        ConcurrentMode = REACT_CONCURRENT_MODE_TYPE,
        ContextConsumer = REACT_CONTEXT_TYPE,
        ContextProvider = REACT_PROVIDER_TYPE,
        Element = REACT_ELEMENT_TYPE,
        ForwardRef = REACT_FORWARD_REF_TYPE,
        Fragment = REACT_FRAGMENT_TYPE,
        Lazy = REACT_LAZY_TYPE,
        Memo = REACT_MEMO_TYPE,
        Portal = REACT_PORTAL_TYPE,
        Profiler = REACT_PROFILER_TYPE,
        StrictMode = REACT_STRICT_MODE_TYPE,
        Suspense = REACT_SUSPENSE_TYPE,
        hasWarnedAboutDeprecatedIsAsyncMode = !1;
      exports.AsyncMode = AsyncMode, exports.ConcurrentMode = ConcurrentMode, exports.ContextConsumer = ContextConsumer, exports.ContextProvider = ContextProvider, exports.Element = Element, exports.ForwardRef = ForwardRef, exports.Fragment = Fragment, exports.Lazy = Lazy, exports.Memo = Memo, exports.Portal = Portal, exports.Profiler = Profiler, exports.StrictMode = StrictMode, exports.Suspense = Suspense, exports.isAsyncMode = isAsyncMode, exports.isConcurrentMode = isConcurrentMode, exports.isContextConsumer = isContextConsumer, exports.isContextProvider = isContextProvider, exports.isElement = isElement, exports.isForwardRef = isForwardRef, exports.isFragment = isFragment, exports.isLazy = isLazy, exports.isMemo = isMemo, exports.isPortal = isPortal, exports.isProfiler = isProfiler, exports.isStrictMode = isStrictMode, exports.isSuspense = isSuspense, exports.isValidElementType = isValidElementType, exports.typeOf = typeOf;
    }();
  }, function (module, exports, __nested_webpack_require_26120__) {
    "use strict";

    function emptyFunctionThatReturnsNull() {
      return null;
    }
    var ReactIs = __nested_webpack_require_26120__(4),
      assign = __nested_webpack_require_26120__(16),
      ReactPropTypesSecret = __nested_webpack_require_26120__(5),
      has = __nested_webpack_require_26120__(6),
      checkPropTypes = __nested_webpack_require_26120__(17),
      printWarning = function () {};
    printWarning = function (text) {
      var message = "Warning: " + text;
      "undefined" != typeof console && console.error(message);
      try {
        throw new Error(message);
      } catch (x) {}
    }, module.exports = function (isValidElement, throwOnDirectAccess) {
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if ("function" == typeof iteratorFn) return iteratorFn;
      }
      function is(x, y) {
        return x === y ? 0 !== x || 1 / x == 1 / y : x !== x && y !== y;
      }
      function PropTypeError(message, data) {
        this.message = message, this.data = data && "object" == typeof data ? data : {}, this.stack = "";
      }
      function createChainableTypeChecker(validate) {
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          if (componentName = componentName || ANONYMOUS, propFullName = propFullName || propName, secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              throw err.name = "Invariant Violation", err;
            }
            if ("undefined" != typeof console) {
              var cacheKey = componentName + ":" + propName;
              !manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3 && (printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."), manualPropTypeCallCache[cacheKey] = !0, manualPropTypeWarningCount++);
            }
          }
          return null == props[propName] ? isRequired ? new PropTypeError(null === props[propName] ? "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `null`." : "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `undefined`.") : null : validate(props, propName, componentName, location, propFullName);
        }
        var manualPropTypeCallCache = {},
          manualPropTypeWarningCount = 0,
          chainedCheckType = checkType.bind(null, !1);
        return chainedCheckType.isRequired = checkType.bind(null, !0), chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          if (getPropType(propValue) !== expectedType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPreciseType(propValue) + "` supplied to `" + componentName + "`, expected `" + expectedType + "`.", {
            expectedType: expectedType
          });
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if ("function" != typeof typeChecker) return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected an array.");
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getClassName(props[propName]) + "` supplied to `" + componentName + "`, expected instance of `" + expectedClassName + "`.");
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        function validate(props, propName, componentName, location, propFullName) {
          for (var propValue = props[propName], i = 0; i < expectedValues.length; i++) if (is(propValue, expectedValues[i])) return null;
          var valuesString = JSON.stringify(expectedValues, function (key, value) {
            return "symbol" === getPreciseType(value) ? String(value) : value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` supplied to `" + componentName + "`, expected one of " + valuesString + ".");
        }
        return Array.isArray(expectedValues) ? createChainableTypeChecker(validate) : (printWarning(arguments.length > 1 ? "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])." : "Invalid argument supplied to oneOf, expected an array."), emptyFunctionThatReturnsNull);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if ("function" != typeof typeChecker) return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          var propValue = props[propName],
            propType = getPropType(propValue);
          if ("object" !== propType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected an object.");
          for (var key in propValue) if (has(propValue, key)) {
            var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error instanceof Error) return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        function validate(props, propName, componentName, location, propFullName) {
          for (var expectedTypes = [], i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i],
              checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (null == checkerResult) return null;
            checkerResult.data && has(checkerResult.data, "expectedType") && expectedTypes.push(checkerResult.data.expectedType);
          }
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`" + (expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "") + ".");
        }
        if (!Array.isArray(arrayOfTypeCheckers)) return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunctionThatReturnsNull;
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if ("function" != typeof checker) return printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."), emptyFunctionThatReturnsNull;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName],
            propType = getPropType(propValue);
          if ("object" !== propType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected `object`.");
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if ("function" != typeof checker) return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName],
            propType = getPropType(propValue);
          if ("object" !== propType) return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected `object`.");
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && "function" != typeof checker) return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            if (!checker) return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return !0;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) return propValue.every(isNode);
            if (null === propValue || isValidElement(propValue)) return !0;
            var iteratorFn = getIteratorFn(propValue);
            if (!iteratorFn) return !1;
            var step,
              iterator = iteratorFn.call(propValue);
            if (iteratorFn !== propValue.entries) {
              for (; !(step = iterator.next()).done;) if (!isNode(step.value)) return !1;
            } else for (; !(step = iterator.next()).done;) {
              var entry = step.value;
              if (entry && !isNode(entry[1])) return !1;
            }
            return !0;
          default:
            return !1;
        }
      }
      function isSymbol(propType, propValue) {
        return "symbol" === propType || !!propValue && ("Symbol" === propValue["@@toStringTag"] || "function" == typeof Symbol && propValue instanceof Symbol);
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        return Array.isArray(propValue) ? "array" : propValue instanceof RegExp ? "object" : isSymbol(propType, propValue) ? "symbol" : propType;
      }
      function getPreciseType(propValue) {
        if (void 0 === propValue || null === propValue) return "" + propValue;
        var propType = getPropType(propValue);
        if ("object" === propType) {
          if (propValue instanceof Date) return "date";
          if (propValue instanceof RegExp) return "regexp";
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        return propValue.constructor && propValue.constructor.name ? propValue.constructor.name : ANONYMOUS;
      }
      var ITERATOR_SYMBOL = "function" == typeof Symbol && Symbol.iterator,
        FAUX_ITERATOR_SYMBOL = "@@iterator",
        ANONYMOUS = "<<anonymous>>",
        ReactPropTypes = {
          array: createPrimitiveTypeChecker("array"),
          bigint: createPrimitiveTypeChecker("bigint"),
          bool: createPrimitiveTypeChecker("boolean"),
          func: createPrimitiveTypeChecker("function"),
          number: createPrimitiveTypeChecker("number"),
          object: createPrimitiveTypeChecker("object"),
          string: createPrimitiveTypeChecker("string"),
          symbol: createPrimitiveTypeChecker("symbol"),
          any: function () {
            return createChainableTypeChecker(emptyFunctionThatReturnsNull);
          }(),
          arrayOf: createArrayOfTypeChecker,
          element: function () {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              if (!isValidElement(propValue)) {
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected a single ReactElement.");
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }(),
          elementType: function () {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              if (!ReactIs.isValidElementType(propValue)) {
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected a single ReactElement type.");
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }(),
          instanceOf: createInstanceTypeChecker,
          node: function () {
            function validate(props, propName, componentName, location, propFullName) {
              return isNode(props[propName]) ? null : new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`, expected a ReactNode.");
            }
            return createChainableTypeChecker(validate);
          }(),
          objectOf: createObjectOfTypeChecker,
          oneOf: createEnumTypeChecker,
          oneOfType: createUnionTypeChecker,
          shape: createShapeTypeChecker,
          exact: createStrictShapeTypeChecker
        };
      return PropTypeError.prototype = Error.prototype, ReactPropTypes.checkPropTypes = checkPropTypes, ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache, ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
    };
  }, function (module, exports, __webpack_require__) {
    "use strict";

    function toObject(val) {
      if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
      return Object(val);
    }
    /*
    object-assign
    (c) Sindre Sorhus
    @license MIT
    */
    var getOwnPropertySymbols = Object.getOwnPropertySymbols,
      hasOwnProperty = Object.prototype.hasOwnProperty,
      propIsEnumerable = Object.prototype.propertyIsEnumerable;
    module.exports = function () {
      try {
        if (!Object.assign) return !1;
        var test1 = new String("abc");
        if (test1[5] = "de", "5" === Object.getOwnPropertyNames(test1)[0]) return !1;
        for (var test2 = {}, i = 0; i < 10; i++) test2["_" + String.fromCharCode(i)] = i;
        if ("0123456789" !== Object.getOwnPropertyNames(test2).map(function (n) {
          return test2[n];
        }).join("")) return !1;
        var test3 = {};
        return "abcdefghijklmnopqrst".split("").forEach(function (letter) {
          test3[letter] = letter;
        }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, test3)).join("");
      } catch (err) {
        return !1;
      }
    }() ? Object.assign : function (target, source) {
      for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) hasOwnProperty.call(from, key) && (to[key] = from[key]);
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
        }
      }
      return to;
    };
  }, function (module, exports, __nested_webpack_require_44286__) {
    "use strict";

    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      for (var typeSpecName in typeSpecs) if (has(typeSpecs, typeSpecName)) {
        var error;
        try {
          if ("function" != typeof typeSpecs[typeSpecName]) {
            var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
            throw err.name = "Invariant Violation", err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (!error || error instanceof Error || printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."), error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = !0;
          var stack = getStack ? getStack() : "";
          printWarning("Failed " + location + " type: " + error.message + (null != stack ? stack : ""));
        }
      }
    }
    var printWarning = function () {},
      ReactPropTypesSecret = __nested_webpack_require_44286__(5),
      loggedTypeFailures = {},
      has = __nested_webpack_require_44286__(6);
    printWarning = function (text) {
      var message = "Warning: " + text;
      "undefined" != typeof console && console.error(message);
      try {
        throw new Error(message);
      } catch (x) {}
    }, checkPropTypes.resetWarningCache = function () {
      loggedTypeFailures = {};
    }, module.exports = checkPropTypes;
  }, function (module, exports, __nested_webpack_require_46414__) {
    "use strict";

    var __rest = this && this.__rest || function (s, e) {
        var t = {};
        for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0 && (t[p] = s[p]);
        if (null != s && "function" == typeof Object.getOwnPropertySymbols) for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
        return t;
      },
      __importDefault = this && this.__importDefault || function (mod) {
        return mod && mod.__esModule ? mod : {
          default: mod
        };
      };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var useMediaQuery_1 = __importDefault(__nested_webpack_require_46414__(0)),
      MediaQuery = function (_a) {
        var children = _a.children,
          device = _a.device,
          onChange = _a.onChange,
          settings = __rest(_a, ["children", "device", "onChange"]),
          matches = (0, useMediaQuery_1.default)(settings, device, onChange);
        return "function" == typeof children ? children(matches) : matches ? children : null;
      };
    exports.default = MediaQuery;
  }]);
});

/***/ }),

/***/ 2540:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isarray = __webpack_require__(6368);

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp;
module.exports.parse = parse;
module.exports.compile = compile;
module.exports.tokensToFunction = tokensToFunction;
module.exports.tokensToRegExp = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
// Match escaped characters that would otherwise appear in future matches.
// This allows the user to escape special characters that won't transform.
'(\\\\.)',
// Match Express-style parameters and un-named parameters with a prefix
// and optional suffixes. Matches appear as:
//
// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
'([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;
  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue;
    }
    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }
    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;
    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }
  return tokens;
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile(str, options) {
  return tokensToFunction(parse(str, options), options);
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction(tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options));
    }
  }
  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];
      if (typeof token === 'string') {
        path += token;
        continue;
      }
      var value = data[token.name];
      var segment;
      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }
          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }
      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }
        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }
        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);
          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }
          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }
        continue;
      }
      segment = token.asterisk ? encodeAsterisk(value) : encode(value);
      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }
      path += token.prefix + segment;
    }
    return path;
  };
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags(options) {
  return options && options.sensitive ? '' : 'i';
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp(path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);
  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }
  return attachKeys(path, keys);
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp(path, keys, options) {
  var parts = [];
  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }
  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));
  return attachKeys(regexp, keys);
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */keys || options;
    keys = [];
  }
  options = options || {};
  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';
      keys.push(token);
      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }
      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }
      route += capture;
    }
  }
  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }
  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }
  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */keys || options;
    keys = [];
  }
  options = options || {};
  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */keys);
  }
  if (isarray(path)) {
    return arrayToRegexp( /** @type {!Array} */path, /** @type {!Array} */keys, options);
  }
  return stringToRegexp( /** @type {string} */path, /** @type {!Array} */keys, options);
}

/***/ }),

/***/ 6751:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var l = Symbol.for("react.element"),
  n = Symbol.for("react.portal"),
  p = Symbol.for("react.fragment"),
  q = Symbol.for("react.strict_mode"),
  r = Symbol.for("react.profiler"),
  t = Symbol.for("react.provider"),
  u = Symbol.for("react.context"),
  v = Symbol.for("react.forward_ref"),
  w = Symbol.for("react.suspense"),
  x = Symbol.for("react.memo"),
  y = Symbol.for("react.lazy"),
  z = Symbol.iterator;
function A(a) {
  if (null === a || "object" !== typeof a) return null;
  a = z && a[z] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {}
  },
  C = Object.assign,
  D = {};
function E(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
E.prototype.isReactComponent = {};
E.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {}
F.prototype = E.prototype;
function G(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D;
  this.updater = e || B;
}
var H = G.prototype = new F();
H.constructor = G;
C(H, E.prototype);
H.isPureReactComponent = !0;
var I = Array.isArray,
  J = Object.prototype.hasOwnProperty,
  K = {
    current: null
  },
  L = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
  };
function M(a, b, e) {
  var d,
    c = {},
    k = null,
    h = null;
  if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
  var g = arguments.length - 2;
  if (1 === g) c.children = e;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];
    c.children = f;
  }
  if (a && a.defaultProps) for (d in g = a.defaultProps, g) void 0 === c[d] && (c[d] = g[d]);
  return {
    $$typeof: l,
    type: a,
    key: k,
    ref: h,
    props: c,
    _owner: K.current
  };
}
function N(a, b) {
  return {
    $$typeof: l,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}
function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l;
}
function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}
var P = /\/+/g;
function Q(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}
function R(a, b, e, d, c) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;
    case "object":
      switch (a.$$typeof) {
        case l:
        case n:
          h = !0;
      }
  }
  if (h) return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function (a) {
    return a;
  })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
  h = 0;
  d = "" === d ? "." : d + ":";
  if (I(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = d + Q(k, g);
    h += R(k, b, e, f, c);
  } else if (f = A(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h;
}
function S(a, b, e) {
  if (null == a) return a;
  var d = [],
    c = 0;
  R(a, d, "", "", function (a) {
    return b.call(e, a, c++);
  });
  return d;
}
function T(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function (b) {
      if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
    }, function (b) {
      if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status) return a._result.default;
  throw a._result;
}
var U = {
    current: null
  },
  V = {
    transition: null
  },
  W = {
    ReactCurrentDispatcher: U,
    ReactCurrentBatchConfig: V,
    ReactCurrentOwner: K
  };
exports.Children = {
  map: S,
  forEach: function (a, b, e) {
    S(a, function () {
      b.apply(this, arguments);
    }, e);
  },
  count: function (a) {
    var b = 0;
    S(a, function () {
      b++;
    });
    return b;
  },
  toArray: function (a) {
    return S(a, function (a) {
      return a;
    }) || [];
  },
  only: function (a) {
    if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");
    return a;
  }
};
exports.Component = E;
exports.Fragment = p;
exports.Profiler = r;
exports.PureComponent = G;
exports.StrictMode = q;
exports.Suspense = w;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
exports.cloneElement = function (a, b, e) {
  if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C({}, a.props),
    c = a.key,
    k = a.ref,
    h = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = K.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
    for (f in b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
  }
  var f = arguments.length - 2;
  if (1 === f) d.children = e;else if (1 < f) {
    g = Array(f);
    for (var m = 0; m < f; m++) g[m] = arguments[m + 2];
    d.children = g;
  }
  return {
    $$typeof: l,
    type: a.type,
    key: c,
    ref: k,
    props: d,
    _owner: h
  };
};
exports.createContext = function (a) {
  a = {
    $$typeof: u,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null,
    _defaultValue: null,
    _globalName: null
  };
  a.Provider = {
    $$typeof: t,
    _context: a
  };
  return a.Consumer = a;
};
exports.createElement = M;
exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};
exports.createRef = function () {
  return {
    current: null
  };
};
exports.forwardRef = function (a) {
  return {
    $$typeof: v,
    render: a
  };
};
exports.isValidElement = O;
exports.lazy = function (a) {
  return {
    $$typeof: y,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: T
  };
};
exports.memo = function (a, b) {
  return {
    $$typeof: x,
    type: a,
    compare: void 0 === b ? null : b
  };
};
exports.startTransition = function (a) {
  var b = V.transition;
  V.transition = {};
  try {
    a();
  } finally {
    V.transition = b;
  }
};
exports.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
exports.useCallback = function (a, b) {
  return U.current.useCallback(a, b);
};
exports.useContext = function (a) {
  return U.current.useContext(a);
};
exports.useDebugValue = function () {};
exports.useDeferredValue = function (a) {
  return U.current.useDeferredValue(a);
};
exports.useEffect = function (a, b) {
  return U.current.useEffect(a, b);
};
exports.useId = function () {
  return U.current.useId();
};
exports.useImperativeHandle = function (a, b, e) {
  return U.current.useImperativeHandle(a, b, e);
};
exports.useInsertionEffect = function (a, b) {
  return U.current.useInsertionEffect(a, b);
};
exports.useLayoutEffect = function (a, b) {
  return U.current.useLayoutEffect(a, b);
};
exports.useMemo = function (a, b) {
  return U.current.useMemo(a, b);
};
exports.useReducer = function (a, b, e) {
  return U.current.useReducer(a, b, e);
};
exports.useRef = function (a) {
  return U.current.useRef(a);
};
exports.useState = function (a) {
  return U.current.useState(a);
};
exports.useSyncExternalStore = function (a, b, e) {
  return U.current.useSyncExternalStore(a, b, e);
};
exports.useTransition = function () {
  return U.current.useTransition();
};
exports.version = "18.2.0";

/***/ }),

/***/ 5466:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(6751);
} else {}

/***/ }),

/***/ 8794:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function f(a, b) {
  var c = a.length;
  a.push(b);
  a: for (; 0 < c;) {
    var d = c - 1 >>> 1,
      e = a[d];
    if (0 < g(e, b)) a[d] = b, a[c] = e, c = d;else break a;
  }
}
function h(a) {
  return 0 === a.length ? null : a[0];
}
function k(a) {
  if (0 === a.length) return null;
  var b = a[0],
    c = a.pop();
  if (c !== b) {
    a[0] = c;
    a: for (var d = 0, e = a.length, w = e >>> 1; d < w;) {
      var m = 2 * (d + 1) - 1,
        C = a[m],
        n = m + 1,
        x = a[n];
      if (0 > g(C, c)) n < e && 0 > g(x, C) ? (a[d] = x, a[n] = c, d = n) : (a[d] = C, a[m] = c, d = m);else if (n < e && 0 > g(x, c)) a[d] = x, a[n] = c, d = n;else break a;
    }
  }
  return b;
}
function g(a, b) {
  var c = a.sortIndex - b.sortIndex;
  return 0 !== c ? c : a.id - b.id;
}
if ("object" === typeof performance && "function" === typeof performance.now) {
  var l = performance;
  exports.unstable_now = function () {
    return l.now();
  };
} else {
  var p = Date,
    q = p.now();
  exports.unstable_now = function () {
    return p.now() - q;
  };
}
var r = [],
  t = [],
  u = 1,
  v = null,
  y = 3,
  z = !1,
  A = !1,
  B = !1,
  D = "function" === typeof setTimeout ? setTimeout : null,
  E = "function" === typeof clearTimeout ? clearTimeout : null,
  F = "undefined" !== typeof setImmediate ? setImmediate : null;
"undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
function G(a) {
  for (var b = h(t); null !== b;) {
    if (null === b.callback) k(t);else if (b.startTime <= a) k(t), b.sortIndex = b.expirationTime, f(r, b);else break;
    b = h(t);
  }
}
function H(a) {
  B = !1;
  G(a);
  if (!A) if (null !== h(r)) A = !0, I(J);else {
    var b = h(t);
    null !== b && K(H, b.startTime - a);
  }
}
function J(a, b) {
  A = !1;
  B && (B = !1, E(L), L = -1);
  z = !0;
  var c = y;
  try {
    G(b);
    for (v = h(r); null !== v && (!(v.expirationTime > b) || a && !M());) {
      var d = v.callback;
      if ("function" === typeof d) {
        v.callback = null;
        y = v.priorityLevel;
        var e = d(v.expirationTime <= b);
        b = exports.unstable_now();
        "function" === typeof e ? v.callback = e : v === h(r) && k(r);
        G(b);
      } else k(r);
      v = h(r);
    }
    if (null !== v) var w = !0;else {
      var m = h(t);
      null !== m && K(H, m.startTime - b);
      w = !1;
    }
    return w;
  } finally {
    v = null, y = c, z = !1;
  }
}
var N = !1,
  O = null,
  L = -1,
  P = 5,
  Q = -1;
function M() {
  return exports.unstable_now() - Q < P ? !1 : !0;
}
function R() {
  if (null !== O) {
    var a = exports.unstable_now();
    Q = a;
    var b = !0;
    try {
      b = O(!0, a);
    } finally {
      b ? S() : (N = !1, O = null);
    }
  } else N = !1;
}
var S;
if ("function" === typeof F) S = function () {
  F(R);
};else if ("undefined" !== typeof MessageChannel) {
  var T = new MessageChannel(),
    U = T.port2;
  T.port1.onmessage = R;
  S = function () {
    U.postMessage(null);
  };
} else S = function () {
  D(R, 0);
};
function I(a) {
  O = a;
  N || (N = !0, S());
}
function K(a, b) {
  L = D(function () {
    a(exports.unstable_now());
  }, b);
}
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;
exports.unstable_cancelCallback = function (a) {
  a.callback = null;
};
exports.unstable_continueExecution = function () {
  A || z || (A = !0, I(J));
};
exports.unstable_forceFrameRate = function (a) {
  0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a ? Math.floor(1E3 / a) : 5;
};
exports.unstable_getCurrentPriorityLevel = function () {
  return y;
};
exports.unstable_getFirstCallbackNode = function () {
  return h(r);
};
exports.unstable_next = function (a) {
  switch (y) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;
    default:
      b = y;
  }
  var c = y;
  y = b;
  try {
    return a();
  } finally {
    y = c;
  }
};
exports.unstable_pauseExecution = function () {};
exports.unstable_requestPaint = function () {};
exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;
    default:
      a = 3;
  }
  var c = y;
  y = a;
  try {
    return b();
  } finally {
    y = c;
  }
};
exports.unstable_scheduleCallback = function (a, b, c) {
  var d = exports.unstable_now();
  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
  switch (a) {
    case 1:
      var e = -1;
      break;
    case 2:
      e = 250;
      break;
    case 5:
      e = 1073741823;
      break;
    case 4:
      e = 1E4;
      break;
    default:
      e = 5E3;
  }
  e = c + e;
  a = {
    id: u++,
    callback: b,
    priorityLevel: a,
    startTime: c,
    expirationTime: e,
    sortIndex: -1
  };
  c > d ? (a.sortIndex = c, f(t, a), null === h(r) && a === h(t) && (B ? (E(L), L = -1) : B = !0, K(H, c - d))) : (a.sortIndex = e, f(r, a), A || z || (A = !0, I(J)));
  return a;
};
exports.unstable_shouldYield = M;
exports.unstable_wrapCallback = function (a) {
  var b = y;
  return function () {
    var c = y;
    y = b;
    try {
      return a.apply(this, arguments);
    } finally {
      y = c;
    }
  };
};

/***/ }),

/***/ 7767:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(8794);
} else {}

/***/ }),

/***/ 2807:
/***/ (function(module) {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
  if (ret !== void 0) {
    return !!ret;
  }
  if (objA === objB) {
    return true;
  }
  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];
    if (!bHasOwnProperty(key)) {
      return false;
    }
    var valueA = objA[key];
    var valueB = objB[key];
    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }
  return true;
};

/***/ }),

/***/ 2126:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Emitter = __webpack_require__(5951);
function Stream() {
  Emitter.call(this);
}
Stream.prototype = new Emitter();
module.exports = Stream;
// Backwards-compat with node 0.4.x
Stream.Stream = Stream;
Stream.prototype.pipe = function (dest, options) {
  var source = this;
  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }
  source.on('data', ondata);
  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }
  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }
  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;
    dest.end();
  }
  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;
    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (!this.hasListeners('error')) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.off('data', ondata);
    dest.off('drain', ondrain);
    source.off('end', onend);
    source.off('close', onclose);
    source.off('error', onerror);
    dest.off('error', onerror);
    source.off('end', cleanup);
    source.off('close', cleanup);
    dest.off('end', cleanup);
    dest.off('close', cleanup);
  }
  source.on('end', cleanup);
  source.on('close', cleanup);
  dest.on('end', cleanup);
  dest.on('close', cleanup);
  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

/***/ }),

/***/ 586:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(7705);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, "@keyframes react-loading-skeleton {\n    100% {\n        transform: translateX(100%);\n    }\n}\n\n.react-loading-skeleton {\n    --base-color: #ebebeb;\n    --highlight-color: #f5f5f5;\n    --animation-duration: 1.5s;\n    --animation-direction: normal;\n    --pseudo-element-display: block; /* Enable animation */\n\n    background-color: var(--base-color);\n\n    width: 100%;\n    border-radius: 0.25rem;\n    display: inline-flex;\n    line-height: 1;\n\n    position: relative;\n    overflow: hidden;\n    z-index: 1; /* Necessary for overflow: hidden to work correctly in Safari */\n}\n\n.react-loading-skeleton::after {\n    content: ' ';\n    display: var(--pseudo-element-display);\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-image: linear-gradient(\n        90deg,\n        var(--base-color),\n        var(--highlight-color),\n        var(--base-color)\n    );\n    transform: translateX(-100%);\n\n    animation-name: react-loading-skeleton;\n    animation-direction: var(--animation-direction);\n    animation-duration: var(--animation-duration);\n    animation-timing-function: ease-in-out;\n    animation-iteration-count: infinite;\n}\n", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 2518:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(435)["default"]);
function _regeneratorRuntime() {
  "use strict";

  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 435:
/***/ (function(module) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 1117:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(2518)();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

/***/ }),

/***/ 3123:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 6881:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _inheritsLoose; }
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2717);

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(subClass, superClass);
}

/***/ }),

/***/ 2717:
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": function() { return /* binding */ _setPrototypeOf; }
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	!function() {
/******/ 		var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });
/******/ 			}
/******/ 			def['default'] = function() { return value; };
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "CfWidget": function() { return /* binding */ CfWidget; },
  "TestCfWidget": function() { return /* binding */ TestCfWidget; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(5466);
var react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(6116);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function asyncToGenerator_asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function slicedToArray_slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function objectWithoutProperties_objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(1117);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
// EXTERNAL MODULE: ./node_modules/react-is/cjs/react-is.production.min.js
var react_is_production_min = __webpack_require__(4005);
// EXTERNAL MODULE: ./node_modules/react/cjs/react.production.min.js
var react_production_min = __webpack_require__(6751);
// EXTERNAL MODULE: ./node_modules/shallowequal/index.js
var shallowequal = __webpack_require__(2807);
var shallowequal_default = /*#__PURE__*/__webpack_require__.n(shallowequal);
;// CONCATENATED MODULE: ./node_modules/@emotion/stylis/dist/stylis.esm.js
function stylis_min(W) {
  function M(d, c, e, h, a) {
    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {
      g = e.charCodeAt(l);
      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);
      if (0 === b + n + v + m) {
        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
          switch (g) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f += e.charAt(l);
          }
          g = 59;
        }
        switch (g) {
          case 123:
            f = f.trim();
            q = f.charCodeAt(0);
            k = 1;
            for (t = ++l; l < B;) {
              switch (g = e.charCodeAt(l)) {
                case 123:
                  k++;
                  break;
                case 125:
                  k--;
                  break;
                case 47:
                  switch (g = e.charCodeAt(l + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u = l + 1; u < J; ++u) {
                          switch (e.charCodeAt(u)) {
                            case 47:
                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                l = u + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (47 === g) {
                                l = u + 1;
                                break a;
                              }
                          }
                        }
                        l = u;
                      }
                  }
                  break;
                case 91:
                  g++;
                case 40:
                  g++;
                case 34:
                case 39:
                  for (; l++ < J && e.charCodeAt(l) !== g;) {}
              }
              if (0 === k) break;
              l++;
            }
            k = e.substring(t, l);
            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));
            switch (q) {
              case 64:
                0 < r && (f = f.replace(N, ''));
                g = f.charCodeAt(1);
                switch (g) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r = c;
                    break;
                  default:
                    r = O;
                }
                k = M(c, r, k, g, a + 1);
                t = k.length;
                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));
                if (0 < t) switch (g) {
                  case 115:
                    f = f.replace(da, ea);
                  case 100:
                  case 109:
                  case 45:
                    k = f + '{' + k + '}';
                    break;
                  case 107:
                    f = f.replace(fa, '$1 $2');
                    k = f + '{' + k + '}';
                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;
                    break;
                  default:
                    k = f + k, 112 === h && (k = (p += k, ''));
                } else k = '';
                break;
              default:
                k = M(c, X(c, f, I), k, h, a + 1);
            }
            F += k;
            k = I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
            break;
          case 125:
          case 59:
            f = (0 < r ? f.replace(N, '') : f).trim();
            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
              case 0:
                break;
              case 64:
                if (105 === g || 99 === g) {
                  G += f + e.charAt(l);
                  break;
                }
              default:
                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
            }
            I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
        }
      }
      switch (g) {
        case 13:
        case 10:
          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\x00');
          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
          z = 1;
          D++;
          break;
        case 59:
        case 125:
          if (0 === b + n + v + m) {
            z++;
            break;
          }
        default:
          z++;
          y = e.charAt(l);
          switch (g) {
            case 9:
            case 32:
              if (0 === n + m + b) switch (x) {
                case 44:
                case 58:
                case 9:
                case 32:
                  y = '';
                  break;
                default:
                  32 !== g && (y = ' ');
              }
              break;
            case 0:
              y = '\\0';
              break;
            case 12:
              y = '\\f';
              break;
            case 11:
              y = '\\v';
              break;
            case 38:
              0 === n + b + m && (r = I = 1, y = '\f' + y);
              break;
            case 108:
              if (0 === n + b + m + E && 0 < u) switch (l - u) {
                case 2:
                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);
                case 8:
                  111 === K && (E = K);
              }
              break;
            case 58:
              0 === n + b + m && (u = l);
              break;
            case 44:
              0 === b + v + n + m && (r = 1, y += '\r');
              break;
            case 34:
            case 39:
              0 === b && (n = n === g ? 0 : 0 === n ? g : n);
              break;
            case 91:
              0 === n + b + v && m++;
              break;
            case 93:
              0 === n + b + v && m--;
              break;
            case 41:
              0 === n + b + m && v--;
              break;
            case 40:
              if (0 === n + b + m) {
                if (0 === q) switch (2 * x + 3 * K) {
                  case 533:
                    break;
                  default:
                    q = 1;
                }
                v++;
              }
              break;
            case 64:
              0 === b + v + n + m + u + k && (k = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n + m + v)) switch (b) {
                case 0:
                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                    case 235:
                      b = 47;
                      break;
                    case 220:
                      t = l, b = 42;
                  }
                  break;
                case 42:
                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);
              }
          }
          0 === b && (f += y);
      }
      K = x;
      x = g;
      l++;
    }
    t = p.length;
    if (0 < t) {
      r = c;
      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;
      p = r.join(',') + '{' + p + '}';
      if (0 !== w * E) {
        2 !== w || L(p, 2) || (E = 0);
        switch (E) {
          case 111:
            p = p.replace(ha, ':-moz-$1') + p;
            break;
          case 112:
            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;
        }
        E = 0;
      }
    }
    return G + p + F;
  }
  function X(d, c, e) {
    var h = c.trim().split(ia);
    c = h;
    var a = h.length,
      m = d.length;
    switch (m) {
      case 0:
      case 1:
        var b = 0;
        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
          c[b] = Z(d, c[b], e).trim();
        }
        break;
      default:
        var v = b = 0;
        for (c = []; b < a; ++b) {
          for (var n = 0; n < m; ++n) {
            c[v++] = Z(d[n] + ' ', h[b], e).trim();
          }
        }
    }
    return c;
  }
  function Z(d, c, e) {
    var h = c.charCodeAt(0);
    33 > h && (h = (c = c.trim()).charCodeAt(0));
    switch (h) {
      case 38:
        return c.replace(F, '$1' + d.trim());
      case 58:
        return d.trim() + c.replace(F, '$1' + d.trim());
      default:
        if (0 < 1 * e && 0 < c.indexOf('\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
    }
    return d + c;
  }
  function P(d, c, e, h) {
    var a = d + ';',
      m = 2 * c + 3 * e + 4 * h;
    if (944 === m) {
      d = a.indexOf(':', 9) + 1;
      var b = a.substring(d, a.length - 1).trim();
      b = a.substring(0, d).trim() + b + ';';
      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;
    }
    if (0 === w || 2 === w && !L(a, 1)) return a;
    switch (m) {
      case 1015:
        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;
      case 951:
        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;
      case 963:
        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;
      case 1009:
        if (100 !== a.charCodeAt(4)) break;
      case 969:
      case 942:
        return '-webkit-' + a + a;
      case 978:
        return '-webkit-' + a + '-moz-' + a + a;
      case 1019:
      case 983:
        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;
      case 883:
        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;
        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;
        break;
      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;
          case 115:
            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;
          case 98:
            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
        }
        return '-webkit-' + a + '-ms-' + a + a;
      case 964:
        return '-webkit-' + a + '-ms-flex-' + a + a;
      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;
      case 1005:
        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;
      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf('-') + 1;
        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(G, 'tb');
            break;
          case 232:
            b = a.replace(G, 'tb-rl');
            break;
          case 220:
            b = a.replace(G, 'lr');
            break;
          default:
            return a;
        }
        return '-webkit-' + a + '-ms-' + b + a;
      case 1017:
        if (-1 === a.indexOf('sticky', 9)) break;
      case 975:
        c = (a = d).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();
        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;
          case 115:
            a = a.replace(b, '-webkit-' + b) + ';' + a;
            break;
          case 207:
          case 102:
            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
        }
        return a + ';';
      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;
          case 115:
            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;
          default:
            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;
        }
        break;
      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;
      case 931:
      case 953:
        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
        break;
      case 962:
        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
    }
    return a;
  }
  function L(d, c) {
    var e = d.indexOf(1 === c ? ':' : '{'),
      h = d.substring(0, 3 !== c ? e : 10);
    e = d.substring(e + 1, d.length - 1);
    return R(2 !== c ? h : h.replace(na, '$1'), e, c);
  }
  function ea(d, c) {
    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
  }
  function H(d, c, e, h, a, m, b, v, n, q) {
    for (var g = 0, x = c, w; g < A; ++g) {
      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;
        default:
          x = w;
      }
    }
    if (x !== c) return x;
  }
  function T(d) {
    switch (d) {
      case void 0:
      case null:
        A = S.length = 0;
        break;
      default:
        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {
          T(d[c]);
        } else Y = !!d | 0;
    }
    return T;
  }
  function U(d) {
    d = d.prefix;
    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
    return U;
  }
  function B(d, c) {
    var e = d;
    33 > e.charCodeAt(0) && (e = e.trim());
    V = e;
    e = [V];
    if (0 < A) {
      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
      void 0 !== h && 'string' === typeof h && (c = h);
    }
    var a = M(O, e, c, 0, 0);
    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
    V = '';
    E = 0;
    z = D = 1;
    return a;
  }
  var ca = /^\0+/g,
    N = /[\0\r\f]/g,
    aa = /: */g,
    ka = /zoo|gra/,
    ma = /([,: ])(transform)/g,
    ia = /,\r+?/g,
    F = /([\t\r\n ])*\f?&/g,
    fa = /@(k\w+)\s*(\S*)\s*/,
    Q = /::(place)/g,
    ha = /:(read-only)/g,
    G = /[svh]\w+-[tblr]{2}/,
    da = /\(\s*(.*)\s*\)/g,
    oa = /([\s\S]*?);/g,
    ba = /-self|flex-/g,
    na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
    la = /stretch|:\s*\w+\-(?:conte|avail)/,
    ja = /([^-])(image-set\()/,
    z = 1,
    D = 1,
    E = 0,
    w = 1,
    O = [],
    S = [],
    A = 0,
    R = null,
    Y = 0,
    V = '';
  B.use = T;
  B.set = U;
  void 0 !== W && U(W);
  return B;
}
/* harmony default export */ var stylis_esm = (stylis_min);
;// CONCATENATED MODULE: ./node_modules/@emotion/unitless/dist/unitless.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
/* harmony default export */ var unitless_esm = (unitlessKeys);
;// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn) {
  var cache = Object.create(null);
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}
/* harmony default export */ var emotion_memoize_esm = (memoize);
;// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js

var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var isPropValid = /* #__PURE__ */emotion_memoize_esm(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */ && prop.charCodeAt(1) === 110
  /* n */ && prop.charCodeAt(2) < 91;
}
/* Z+1 */);

/* harmony default export */ var emotion_is_prop_valid_esm = (isPropValid);
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(7773);
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);
;// CONCATENATED MODULE: ./node_modules/styled-components/dist/styled-components.esm.js







function y() {
  return (y = Object.assign || function (e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }).apply(this, arguments);
}
var v = function (e, t) {
    for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1) n.push(t[r], e[r + 1]);
    return n;
  },
  g = function (t) {
    return null !== t && "object" == typeof t && "[object Object]" === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !(0,react_is_production_min.typeOf)(t);
  },
  S = Object.freeze([]),
  w = Object.freeze({});
function E(e) {
  return "function" == typeof e;
}
function b(e) {
  return  false || e.displayName || e.name || "Component";
}
function styled_components_esm_(e) {
  return e && "string" == typeof e.styledComponentId;
}
var N = "undefined" != typeof process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled",
  A = "5.3.6",
  C = "undefined" != typeof window && "HTMLElement" in window,
  I = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : "production" !== "production"),
  P = {},
  O =  false ? 0 : {};
function R() {
  for (var e = arguments.length <= 0 ? void 0 : arguments[0], t = [], n = 1, r = arguments.length; n < r; n += 1) t.push(n < 0 || arguments.length <= n ? void 0 : arguments[n]);
  return t.forEach(function (t) {
    e = e.replace(/%[a-z]/, t);
  }), e;
}
function D(e) {
  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
  throw  true ? new Error("An error occurred. See https://git.io/JUIaE#" + e + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : "")) : 0;
}
var j = function () {
    function e(e) {
      this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e;
    }
    var t = e.prototype;
    return t.indexOfGroup = function (e) {
      for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n];
      return t;
    }, t.insertRules = function (e, t) {
      if (e >= this.groupSizes.length) {
        for (var n = this.groupSizes, r = n.length, o = r; e >= o;) (o <<= 1) < 0 && D(16, "" + e);
        this.groupSizes = new Uint32Array(o), this.groupSizes.set(n), this.length = o;
        for (var s = r; s < o; s++) this.groupSizes[s] = 0;
      }
      for (var i = this.indexOfGroup(e + 1), a = 0, c = t.length; a < c; a++) this.tag.insertRule(i, t[a]) && (this.groupSizes[e]++, i++);
    }, t.clearGroup = function (e) {
      if (e < this.length) {
        var t = this.groupSizes[e],
          n = this.indexOfGroup(e),
          r = n + t;
        this.groupSizes[e] = 0;
        for (var o = n; o < r; o++) this.tag.deleteRule(n);
      }
    }, t.getGroup = function (e) {
      var t = "";
      if (e >= this.length || 0 === this.groupSizes[e]) return t;
      for (var n = this.groupSizes[e], r = this.indexOfGroup(e), o = r + n, s = r; s < o; s++) t += this.tag.getRule(s) + "/*!sc*/\n";
      return t;
    }, e;
  }(),
  T = new Map(),
  x = new Map(),
  k = 1,
  V = function (e) {
    if (T.has(e)) return T.get(e);
    for (; x.has(k);) k++;
    var t = k++;
    return  false && 0, T.set(e, t), x.set(t, e), t;
  },
  z = function (e) {
    return x.get(e);
  },
  B = function (e, t) {
    t >= k && (k = t + 1), T.set(e, t), x.set(t, e);
  },
  M = "style[" + N + '][data-styled-version="5.3.6"]',
  G = new RegExp("^" + N + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
  L = function (e, t, n) {
    for (var r, o = n.split(","), s = 0, i = o.length; s < i; s++) (r = o[s]) && e.registerName(t, r);
  },
  F = function (e, t) {
    for (var n = (t.textContent || "").split("/*!sc*/\n"), r = [], o = 0, s = n.length; o < s; o++) {
      var i = n[o].trim();
      if (i) {
        var a = i.match(G);
        if (a) {
          var c = 0 | parseInt(a[1], 10),
            u = a[2];
          0 !== c && (B(u, c), L(e, u, a[3]), e.getTag().insertRules(c, r)), r.length = 0;
        } else r.push(i);
      }
    }
  },
  Y = function () {
    return  true ? __webpack_require__.nc : 0;
  },
  q = function (e) {
    var t = document.head,
      n = e || t,
      r = document.createElement("style"),
      o = function (e) {
        for (var t = e.childNodes, n = t.length; n >= 0; n--) {
          var r = t[n];
          if (r && 1 === r.nodeType && r.hasAttribute(N)) return r;
        }
      }(n),
      s = void 0 !== o ? o.nextSibling : null;
    r.setAttribute(N, "active"), r.setAttribute("data-styled-version", "5.3.6");
    var i = Y();
    return i && r.setAttribute("nonce", i), n.insertBefore(r, s), r;
  },
  H = function () {
    function e(e) {
      var t = this.element = q(e);
      t.appendChild(document.createTextNode("")), this.sheet = function (e) {
        if (e.sheet) return e.sheet;
        for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
          var o = t[n];
          if (o.ownerNode === e) return o;
        }
        D(17);
      }(t), this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
      try {
        return this.sheet.insertRule(t, e), this.length++, !0;
      } catch (e) {
        return !1;
      }
    }, t.deleteRule = function (e) {
      this.sheet.deleteRule(e), this.length--;
    }, t.getRule = function (e) {
      var t = this.sheet.cssRules[e];
      return void 0 !== t && "string" == typeof t.cssText ? t.cssText : "";
    }, e;
  }(),
  $ = function () {
    function e(e) {
      var t = this.element = q(e);
      this.nodes = t.childNodes, this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
      if (e <= this.length && e >= 0) {
        var n = document.createTextNode(t),
          r = this.nodes[e];
        return this.element.insertBefore(n, r || null), this.length++, !0;
      }
      return !1;
    }, t.deleteRule = function (e) {
      this.element.removeChild(this.nodes[e]), this.length--;
    }, t.getRule = function (e) {
      return e < this.length ? this.nodes[e].textContent : "";
    }, e;
  }(),
  W = function () {
    function e(e) {
      this.rules = [], this.length = 0;
    }
    var t = e.prototype;
    return t.insertRule = function (e, t) {
      return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0);
    }, t.deleteRule = function (e) {
      this.rules.splice(e, 1), this.length--;
    }, t.getRule = function (e) {
      return e < this.length ? this.rules[e] : "";
    }, e;
  }(),
  U = C,
  J = {
    isServer: !C,
    useCSSOMInjection: !I
  },
  X = function () {
    function e(e, t, n) {
      void 0 === e && (e = w), void 0 === t && (t = {}), this.options = y({}, J, {}, e), this.gs = t, this.names = new Map(n), this.server = !!e.isServer, !this.server && C && U && (U = !1, function (e) {
        for (var t = document.querySelectorAll(M), n = 0, r = t.length; n < r; n++) {
          var o = t[n];
          o && "active" !== o.getAttribute(N) && (F(e, o), o.parentNode && o.parentNode.removeChild(o));
        }
      }(this));
    }
    e.registerId = function (e) {
      return V(e);
    };
    var t = e.prototype;
    return t.reconstructWithOptions = function (t, n) {
      return void 0 === n && (n = !0), new e(y({}, this.options, {}, t), this.gs, n && this.names || void 0);
    }, t.allocateGSInstance = function (e) {
      return this.gs[e] = (this.gs[e] || 0) + 1;
    }, t.getTag = function () {
      return this.tag || (this.tag = (n = (t = this.options).isServer, r = t.useCSSOMInjection, o = t.target, e = n ? new W(o) : r ? new H(o) : new $(o), new j(e)));
      var e, t, n, r, o;
    }, t.hasNameForId = function (e, t) {
      return this.names.has(e) && this.names.get(e).has(t);
    }, t.registerName = function (e, t) {
      if (V(e), this.names.has(e)) this.names.get(e).add(t);else {
        var n = new Set();
        n.add(t), this.names.set(e, n);
      }
    }, t.insertRules = function (e, t, n) {
      this.registerName(e, t), this.getTag().insertRules(V(e), n);
    }, t.clearNames = function (e) {
      this.names.has(e) && this.names.get(e).clear();
    }, t.clearRules = function (e) {
      this.getTag().clearGroup(V(e)), this.clearNames(e);
    }, t.clearTag = function () {
      this.tag = void 0;
    }, t.toString = function () {
      return function (e) {
        for (var t = e.getTag(), n = t.length, r = "", o = 0; o < n; o++) {
          var s = z(o);
          if (void 0 !== s) {
            var i = e.names.get(s),
              a = t.getGroup(o);
            if (i && a && i.size) {
              var c = N + ".g" + o + '[id="' + s + '"]',
                u = "";
              void 0 !== i && i.forEach(function (e) {
                e.length > 0 && (u += e + ",");
              }), r += "" + a + c + '{content:"' + u + '"}/*!sc*/\n';
            }
          }
        }
        return r;
      }(this);
    }, e;
  }(),
  Z = /(a)(d)/gi,
  K = function (e) {
    return String.fromCharCode(e + (e > 25 ? 39 : 97));
  };
function Q(e) {
  var t,
    n = "";
  for (t = Math.abs(e); t > 52; t = t / 52 | 0) n = K(t % 52) + n;
  return (K(t % 52) + n).replace(Z, "$1-$2");
}
var ee = function (e, t) {
    for (var n = t.length; n;) e = 33 * e ^ t.charCodeAt(--n);
    return e;
  },
  te = function (e) {
    return ee(5381, e);
  };
function ne(e) {
  for (var t = 0; t < e.length; t += 1) {
    var n = e[t];
    if (E(n) && !styled_components_esm_(n)) return !1;
  }
  return !0;
}
var re = te("5.3.6"),
  oe = function () {
    function e(e, t, n) {
      this.rules = e, this.staticRulesId = "", this.isStatic =  true && (void 0 === n || n.isStatic) && ne(e), this.componentId = t, this.baseHash = ee(re, t), this.baseStyle = n, X.registerId(t);
    }
    return e.prototype.generateAndInjectStyles = function (e, t, n) {
      var r = this.componentId,
        o = [];
      if (this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash) {
        if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId)) o.push(this.staticRulesId);else {
          var s = _e(this.rules, e, t, n).join(""),
            i = Q(ee(this.baseHash, s) >>> 0);
          if (!t.hasNameForId(r, i)) {
            var a = n(s, "." + i, void 0, r);
            t.insertRules(r, i, a);
          }
          o.push(i), this.staticRulesId = i;
        }
      } else {
        for (var c = this.rules.length, u = ee(this.baseHash, n.hash), l = "", d = 0; d < c; d++) {
          var h = this.rules[d];
          if ("string" == typeof h) l += h,  false && (0);else if (h) {
            var p = _e(h, e, t, n),
              f = Array.isArray(p) ? p.join("") : p;
            u = ee(u, f + d), l += f;
          }
        }
        if (l) {
          var m = Q(u >>> 0);
          if (!t.hasNameForId(r, m)) {
            var y = n(l, "." + m, void 0, r);
            t.insertRules(r, m, y);
          }
          o.push(m);
        }
      }
      return o.join(" ");
    }, e;
  }(),
  se = /^\s*\/\/.*$/gm,
  ie = [":", "[", ".", "#"];
function ae(e) {
  var t,
    n,
    r,
    o,
    s = void 0 === e ? w : e,
    i = s.options,
    a = void 0 === i ? w : i,
    c = s.plugins,
    u = void 0 === c ? S : c,
    l = new stylis_esm(a),
    d = [],
    p = function (e) {
      function t(t) {
        if (t) try {
          e(t + "}");
        } catch (e) {}
      }
      return function (n, r, o, s, i, a, c, u, l, d) {
        switch (n) {
          case 1:
            if (0 === l && 64 === r.charCodeAt(0)) return e(r + ";"), "";
            break;
          case 2:
            if (0 === u) return r + "/*|*/";
            break;
          case 3:
            switch (u) {
              case 102:
              case 112:
                return e(o[0] + r), "";
              default:
                return r + (0 === d ? "/*|*/" : "");
            }
          case -2:
            r.split("/*|*/}").forEach(t);
        }
      };
    }(function (e) {
      d.push(e);
    }),
    f = function (e, r, s) {
      return 0 === r && -1 !== ie.indexOf(s[n.length]) || s.match(o) ? e : "." + t;
    };
  function m(e, s, i, a) {
    void 0 === a && (a = "&");
    var c = e.replace(se, ""),
      u = s && i ? i + " " + s + " { " + c + " }" : c;
    return t = a, n = s, r = new RegExp("\\" + n + "\\b", "g"), o = new RegExp("(\\" + n + "\\b){2,}"), l(i || !s ? "" : s, u);
  }
  return l.use([].concat(u, [function (e, t, o) {
    2 === e && o.length && o[0].lastIndexOf(n) > 0 && (o[0] = o[0].replace(r, f));
  }, p, function (e) {
    if (-2 === e) {
      var t = d;
      return d = [], t;
    }
  }])), m.hash = u.length ? u.reduce(function (e, t) {
    return t.name || D(15), ee(e, t.name);
  }, 5381).toString() : "", m;
}
var ce = react.createContext(),
  ue = ce.Consumer,
  le = react.createContext(),
  de = (le.Consumer, new X()),
  he = ae();
function pe() {
  return (0,react_production_min.useContext)(ce) || de;
}
function fe() {
  return (0,react_production_min.useContext)(le) || he;
}
function me(e) {
  var t = (0,react_production_min.useState)(e.stylisPlugins),
    n = t[0],
    s = t[1],
    c = pe(),
    u = (0,react_production_min.useMemo)(function () {
      var t = c;
      return e.sheet ? t = e.sheet : e.target && (t = t.reconstructWithOptions({
        target: e.target
      }, !1)), e.disableCSSOMInjection && (t = t.reconstructWithOptions({
        useCSSOMInjection: !1
      })), t;
    }, [e.disableCSSOMInjection, e.sheet, e.target]),
    l = (0,react_production_min.useMemo)(function () {
      return ae({
        options: {
          prefix: !e.disableVendorPrefixes
        },
        plugins: n
      });
    }, [e.disableVendorPrefixes, n]);
  return (0,react_production_min.useEffect)(function () {
    shallowequal_default()(n, e.stylisPlugins) || s(e.stylisPlugins);
  }, [e.stylisPlugins]), react.createElement(ce.Provider, {
    value: u
  }, react.createElement(le.Provider, {
    value: l
  },  false ? 0 : e.children));
}
var ye = function () {
    function e(e, t) {
      var n = this;
      this.inject = function (e, t) {
        void 0 === t && (t = he);
        var r = n.name + t.hash;
        e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, "@keyframes"));
      }, this.toString = function () {
        return D(12, String(n.name));
      }, this.name = e, this.id = "sc-keyframes-" + e, this.rules = t;
    }
    return e.prototype.getName = function (e) {
      return void 0 === e && (e = he), this.name + e.hash;
    }, e;
  }(),
  ve = /([A-Z])/,
  ge = /([A-Z])/g,
  Se = /^ms-/,
  we = function (e) {
    return "-" + e.toLowerCase();
  };
function Ee(e) {
  return ve.test(e) ? e.replace(ge, we).replace(Se, "-ms-") : e;
}
var be = function (e) {
  return null == e || !1 === e || "" === e;
};
function _e(e, n, r, o) {
  if (Array.isArray(e)) {
    for (var s, i = [], a = 0, c = e.length; a < c; a += 1) "" !== (s = _e(e[a], n, r, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s));
    return i;
  }
  if (be(e)) return "";
  if (styled_components_esm_(e)) return "." + e.styledComponentId;
  if (E(e)) {
    if ("function" != typeof (l = e) || l.prototype && l.prototype.isReactComponent || !n) return e;
    var u = e(n);
    return  false && 0, _e(u, n, r, o);
  }
  var l;
  return e instanceof ye ? r ? (e.inject(r, o), e.getName(o)) : e : g(e) ? function e(t, n) {
    var r,
      o,
      s = [];
    for (var i in t) t.hasOwnProperty(i) && !be(t[i]) && (Array.isArray(t[i]) && t[i].isCss || E(t[i]) ? s.push(Ee(i) + ":", t[i], ";") : g(t[i]) ? s.push.apply(s, e(t[i], i)) : s.push(Ee(i) + ": " + (r = i, null == (o = t[i]) || "boolean" == typeof o || "" === o ? "" : "number" != typeof o || 0 === o || r in unitless_esm ? String(o).trim() : o + "px") + ";"));
    return n ? [n + " {"].concat(s, ["}"]) : s;
  }(e) : e.toString();
}
var Ne = function (e) {
  return Array.isArray(e) && (e.isCss = !0), e;
};
function Ae(e) {
  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
  return E(e) || g(e) ? Ne(_e(v(S, [e].concat(n)))) : 0 === n.length && 1 === e.length && "string" == typeof e[0] ? e : Ne(_e(v(e, n)));
}
var Ce = /invalid hook call/i,
  Ie = new Set(),
  Pe = function (e, t) {
    if (false) { var o, n, r; }
  },
  Oe = function (e, t, n) {
    return void 0 === n && (n = w), e.theme !== n.theme && e.theme || t || n.theme;
  },
  Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
  De = /(^-|-$)/g;
function je(e) {
  return e.replace(Re, "-").replace(De, "");
}
var Te = function (e) {
  return Q(te(e) >>> 0);
};
function xe(e) {
  return "string" == typeof e && ( true || 0);
}
var ke = function (e) {
    return "function" == typeof e || "object" == typeof e && null !== e && !Array.isArray(e);
  },
  Ve = function (e) {
    return "__proto__" !== e && "constructor" !== e && "prototype" !== e;
  };
function ze(e, t, n) {
  var r = e[n];
  ke(t) && ke(r) ? Be(r, t) : e[n] = t;
}
function Be(e) {
  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
  for (var o = 0, s = n; o < s.length; o++) {
    var i = s[o];
    if (ke(i)) for (var a in i) Ve(a) && ze(e, i[a], a);
  }
  return e;
}
var Me = react.createContext(),
  Ge = Me.Consumer;
function Le(e) {
  var t = (0,react_production_min.useContext)(Me),
    n = (0,react_production_min.useMemo)(function () {
      return function (e, t) {
        if (!e) return D(14);
        if (E(e)) {
          var n = e(t);
          return  true ? n : 0;
        }
        return Array.isArray(e) || "object" != typeof e ? D(8) : t ? y({}, t, {}, e) : e;
      }(e.theme, t);
    }, [e.theme, t]);
  return e.children ? react.createElement(Me.Provider, {
    value: n
  }, e.children) : null;
}
var Fe = {};
function Ye(e, t, n) {
  var o = styled_components_esm_(e),
    i = !xe(e),
    a = t.attrs,
    c = void 0 === a ? S : a,
    d = t.componentId,
    h = void 0 === d ? function (e, t) {
      var n = "string" != typeof e ? "sc" : je(e);
      Fe[n] = (Fe[n] || 0) + 1;
      var r = n + "-" + Te("5.3.6" + n + Fe[n]);
      return t ? t + "-" + r : r;
    }(t.displayName, t.parentComponentId) : d,
    p = t.displayName,
    v = void 0 === p ? function (e) {
      return xe(e) ? "styled." + e : "Styled(" + b(e) + ")";
    }(e) : p,
    g = t.displayName && t.componentId ? je(t.displayName) + "-" + t.componentId : t.componentId || h,
    N = o && e.attrs ? Array.prototype.concat(e.attrs, c).filter(Boolean) : c,
    A = t.shouldForwardProp;
  o && e.shouldForwardProp && (A = t.shouldForwardProp ? function (n, r, o) {
    return e.shouldForwardProp(n, r, o) && t.shouldForwardProp(n, r, o);
  } : e.shouldForwardProp);
  var C,
    I = new oe(n, g, o ? e.componentStyle : void 0),
    P = I.isStatic && 0 === c.length,
    O = function (e, t) {
      return function (e, t, n, r) {
        var o = e.attrs,
          i = e.componentStyle,
          a = e.defaultProps,
          c = e.foldedComponentIds,
          d = e.shouldForwardProp,
          h = e.styledComponentId,
          p = e.target;
         false && 0;
        var m = function (e, t, n) {
            void 0 === e && (e = w);
            var r = y({}, t, {
                theme: e
              }),
              o = {};
            return n.forEach(function (e) {
              var t,
                n,
                s,
                i = e;
              for (t in E(i) && (i = i(r)), i) r[t] = o[t] = "className" === t ? (n = o[t], s = i[t], n && s ? n + " " + s : n || s) : i[t];
            }), [r, o];
          }(Oe(t, (0,react_production_min.useContext)(Me), a) || w, t, o),
          v = m[0],
          g = m[1],
          S = function (e, t, n, r) {
            var o = pe(),
              s = fe(),
              i = t ? e.generateAndInjectStyles(w, o, s) : e.generateAndInjectStyles(n, o, s);
            return  false && 0,  false && 0, i;
          }(i, r, v,  false ? 0 : void 0),
          b = n,
          _ = g.$as || t.$as || g.as || t.as || p,
          N = xe(_),
          A = g !== t ? y({}, t, {}, g) : t,
          C = {};
        for (var I in A) "$" !== I[0] && "as" !== I && ("forwardedAs" === I ? C.as = A[I] : (d ? d(I, emotion_is_prop_valid_esm, _) : !N || emotion_is_prop_valid_esm(I)) && (C[I] = A[I]));
        return t.style && g.style !== t.style && (C.style = y({}, t.style, {}, g.style)), C.className = Array.prototype.concat(c, h, S !== h ? S : null, t.className, g.className).filter(Boolean).join(" "), C.ref = b, (0,react_production_min.createElement)(_, C);
      }(C, e, t, P);
    };
  return O.displayName = v, (C = react.forwardRef(O)).attrs = N, C.componentStyle = I, C.displayName = v, C.shouldForwardProp = A, C.foldedComponentIds = o ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : S, C.styledComponentId = g, C.target = o ? e.target : e, C.withComponent = function (e) {
    var r = t.componentId,
      o = function (e, t) {
        if (null == e) return {};
        var n,
          r,
          o = {},
          s = Object.keys(e);
        for (r = 0; r < s.length; r++) n = s[r], t.indexOf(n) >= 0 || (o[n] = e[n]);
        return o;
      }(t, ["componentId"]),
      s = r && r + "-" + (xe(e) ? e : je(b(e)));
    return Ye(e, y({}, o, {
      attrs: N,
      componentId: s
    }), n);
  }, Object.defineProperty(C, "defaultProps", {
    get: function () {
      return this._foldedDefaultProps;
    },
    set: function (t) {
      this._foldedDefaultProps = o ? Be({}, e.defaultProps, t) : t;
    }
  }),  false && (0), C.toString = function () {
    return "." + C.styledComponentId;
  }, i && hoist_non_react_statics_cjs_default()(C, e, {
    attrs: !0,
    componentStyle: !0,
    displayName: !0,
    foldedComponentIds: !0,
    shouldForwardProp: !0,
    styledComponentId: !0,
    target: !0,
    withComponent: !0
  }), C;
}
var qe = function (e) {
  return function e(t, r, o) {
    if (void 0 === o && (o = w), !(0,react_is_production_min.isValidElementType)(r)) return D(1, String(r));
    var s = function () {
      return t(r, o, Ae.apply(void 0, arguments));
    };
    return s.withConfig = function (n) {
      return e(t, r, y({}, o, {}, n));
    }, s.attrs = function (n) {
      return e(t, r, y({}, o, {
        attrs: Array.prototype.concat(o.attrs, n).filter(Boolean)
      }));
    }, s;
  }(Ye, e);
};
["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function (e) {
  qe[e] = qe(e);
});
var He = function () {
  function e(e, t) {
    this.rules = e, this.componentId = t, this.isStatic = ne(e), X.registerId(this.componentId + 1);
  }
  var t = e.prototype;
  return t.createStyles = function (e, t, n, r) {
    var o = r(_e(this.rules, t, n, r).join(""), ""),
      s = this.componentId + e;
    n.insertRules(s, s, o);
  }, t.removeStyles = function (e, t) {
    t.clearRules(this.componentId + e);
  }, t.renderStyles = function (e, t, n, r) {
    e > 2 && X.registerId(this.componentId + e), this.removeStyles(e, n), this.createStyles(e, t, n, r);
  }, e;
}();
function $e(e) {
  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) n[o - 1] = arguments[o];
  var i = Ae.apply(void 0, [e].concat(n)),
    a = "sc-global-" + Te(JSON.stringify(i)),
    u = new He(i, a);
  function l(e) {
    var t = pe(),
      n = fe(),
      o = s(Me),
      u = c(t.allocateGSInstance(a)).current;
    return  false && 0,  false && 0, t.server && d(u, e, t, o, n), null;
  }
  function d(e, t, n, r, o) {
    if (u.isStatic) u.renderStyles(e, P, n, o);else {
      var s = y({}, t, {
        theme: Oe(t, r, l.defaultProps)
      });
      u.renderStyles(e, s, n, o);
    }
  }
  return  false && 0, r.memo(l);
}
function We(e) {
   false && 0;
  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
  var o = Ae.apply(void 0, [e].concat(n)).join(""),
    s = Te(o);
  return new ye(s, o);
}
var Ue = /^\s*<\/[a-z]/i,
  Je = function () {
    function e() {
      var e = this;
      this._emitSheetCSS = function () {
        var t = e.instance.toString();
        if (!t) return "";
        var n = Y();
        return "<style " + [n && 'nonce="' + n + '"', N + '="true"', 'data-styled-version="5.3.6"'].filter(Boolean).join(" ") + ">" + t + "</style>";
      }, this.getStyleTags = function () {
        return e.sealed ? D(2) : e._emitSheetCSS();
      }, this.getStyleElement = function () {
        var t;
        if (e.sealed) return D(2);
        var n = ((t = {})[N] = "", t["data-styled-version"] = "5.3.6", t.dangerouslySetInnerHTML = {
            __html: e.instance.toString()
          }, t),
          o = Y();
        return o && (n.nonce = o), [react.createElement("style", y({}, n, {
          key: "sc-0-0"
        }))];
      }, this.seal = function () {
        e.sealed = !0;
      }, this.instance = new X({
        isServer: !0
      }), this.sealed = !1;
    }
    var t = e.prototype;
    return t.collectStyles = function (e) {
      return this.sealed ? D(2) : react.createElement(me, {
        sheet: this.instance
      }, e);
    }, t.interleaveWithNodeStream = function (e) {
      if (C) return D(3);
      if (this.sealed) return D(2);
      this.seal();
      var t = __webpack_require__(2126),
        n = (t.Readable, t.Transform),
        r = e,
        o = this.instance,
        s = this._emitSheetCSS,
        i = new n({
          transform: function (e, t, n) {
            var r = e.toString(),
              i = s();
            if (o.clearTag(), Ue.test(r)) {
              var a = r.indexOf(">") + 1,
                c = r.slice(0, a),
                u = r.slice(a);
              this.push(c + i + u);
            } else this.push(i + r);
            n();
          }
        });
      return r.on("error", function (e) {
        i.emit("error", e);
      }), r.pipe(i);
    }, e;
  }(),
  Xe = function (e) {
    var t = r.forwardRef(function (t, n) {
      var o = s(Me),
        i = e.defaultProps,
        a = Oe(t, o, i);
      return  false && 0, r.createElement(e, y({}, t, {
        theme: a,
        ref: n
      }));
    });
    return m(t, e), t.displayName = "WithTheme(" + b(e) + ")", t;
  },
  Ze = function () {
    return (0,react_production_min.useContext)(Me);
  },
  Ke = {
    StyleSheet: X,
    masterSheet: de
  };
 false && 0,  false && (0);
/* harmony default export */ var styled_components_esm = (qe);

;// CONCATENATED MODULE: ./src/widgets/styles.ts

var WidgetWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__WidgetWrapper",
  componentId: "sc-moiynf-0"
})([""]);
var StandardWidgetWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWidgetWrapper",
  componentId: "sc-moiynf-1"
})(["width:100%;"]);
var StandardWidgetContentWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWidgetContentWrapper",
  componentId: "sc-moiynf-2"
})(["display:flex;flex-wrap:wrap;", ""], function (props) {
  return Ae(["flex-direction:", ";"], props.flexDirection);
});
var StandardWidgetContainer = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWidgetContainer",
  componentId: "sc-moiynf-3"
})(["display:flex;flex-direction:column;flex-basis:50%;padding:20px 20px 0px 20px;box-sizing:border-box;"]);
var StandardWidgetLabelWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWidgetLabelWrapper",
  componentId: "sc-moiynf-4"
})(["padding-bottom:7px;"]);
var StandardWideWidgetWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWideWidgetWrapper",
  componentId: "sc-moiynf-5"
})(["display:grid;grid-template-columns:", ";gap:10px;@media ", "{grid-template-columns:1fr 1fr;}"], function (_ref) {
  var promo = _ref.promo;
  return promo ? "2fr 2fr 3fr 1fr" : "2fr 2fr 1fr";
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.mediaQueries.small;
});
var StandardWideConferenceWidgetWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWideConferenceWidgetWrapper",
  componentId: "sc-moiynf-6"
})(["display:grid;grid-template-columns:", ";gap:10px;@media ", "{grid-template-columns:1fr 1fr;}"], function (_ref3) {
  var promo = _ref3.promo;
  return promo ? "2fr 2fr 2fr 2fr 2fr 1fr" : "2fr 2fr 2fr 2fr 1fr";
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.mediaQueries.small;
});
var LargeWidgetWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__LargeWidgetWrapper",
  componentId: "sc-moiynf-7"
})(["background:", ";display:grid;grid-template-columns:", ";gap:10px;@media ", "{padding:10px;grid-template-columns:1fr 1fr;}"], function (_ref5) {
  var theme = _ref5.theme;
  return theme.css.cardBackground;
}, function (_ref6) {
  var threeColumn = _ref6.threeColumn;
  return threeColumn ? "1fr 1fr 1fr" : "1fr 1fr";
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.mediaQueries.small;
});
var StandardWideWidgetSearchButtonWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWideWidgetSearchButtonWrapper",
  componentId: "sc-moiynf-8"
})(["display:flex;justify-content:flex-end;align-items:flex-end;@media ", "{grid-column:span 2;}"], function (_ref8) {
  var theme = _ref8.theme;
  return theme.mediaQueries.small;
});
var StandardWideConferenceWidgetSearchButtonWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWideConferenceWidgetSearchButtonWrapper",
  componentId: "sc-moiynf-9"
})(["display:flex;justify-content:flex-end;align-items:flex-end;@media ", "{grid-column:span 2;}", ""], function (_ref9) {
  var theme = _ref9.theme;
  return theme.mediaQueries.small;
}, function (_ref10) {
  var promo = _ref10.promo;
  return promo && Ae(["display:flex;justify-content:flex-end;button{height:60px;}"]);
});
var StandardWideWidgetInputWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardWideWidgetInputWrapper",
  componentId: "sc-moiynf-10"
})(["@media ", "{grid-column:span 2;}", ""], function (_ref11) {
  var theme = _ref11.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref12) {
  var promo = _ref12.promo;
  return promo && Ae(["display:flex;justify-content:flex-end;button{height:100%}"]);
});
var LargeWidgetItemWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__LargeWidgetItemWrapper",
  componentId: "sc-moiynf-11"
})(["padding:10px;grid-column:", ";@media ", "{padding:0;grid-column:span 2;}", ""], function (_ref13) {
  var isSearch = _ref13.isSearch;
  return isSearch ? "span 2!important" : "span 1";
}, function (_ref14) {
  var theme = _ref14.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref15) {
  var promo = _ref15.promo;
  return promo && Ae(["button{height:60px;}"]);
});
var LargeWidgetLargeItemWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__LargeWidgetLargeItemWrapper",
  componentId: "sc-moiynf-12"
})(["padding:10px;", " ", ""], function (_ref16) {
  var flex = _ref16.flex;
  return flex && Ae(["display:flex;flex-direction:column;"]);
}, function (_ref17) {
  var gap = _ref17.gap;
  return gap && Ae(["gap:10px;"]);
});
var StandardOneColumnSimplifyWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__StandardOneColumnSimplifyWrapper",
  componentId: "sc-moiynf-13"
})(["display:flex;flex-direction:column;align-items:center;gap:10px;"]);
var LoginLinkWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__LoginLinkWrapper",
  componentId: "sc-moiynf-14"
})(["width:100%;grid-column:1 / -1;text-align:center;padding-top:10px;"]);
var AlmanacCalendarWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__AlmanacCalendarWrapper",
  componentId: "sc-moiynf-15"
})(["display:flex;justify-content:center;align-items:center;height:100%;&:hover{cursor:pointer;}"]);
var LargePromoCodeButtonWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__LargePromoCodeButtonWrapper",
  componentId: "sc-moiynf-16"
})(["", ""], function (_ref18) {
  var isConference = _ref18.isConference;
  return isConference && Ae(["button{height:60px;}"]);
});
var WidgetForm = styled_components_esm.form.withConfig({
  displayName: "styles__WidgetForm",
  componentId: "sc-moiynf-17"
})(["p{margin:0;}"]);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(3123);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/utils.js
var utils = __webpack_require__(2723);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
var inheritsLoose = __webpack_require__(6881);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/notifyManager.js
var notifyManager = __webpack_require__(1165);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/logger.js
var logger = __webpack_require__(438);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/retryer.js
var retryer = __webpack_require__(7085);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/query.js




 // TYPES

// CLASS
var Query = /*#__PURE__*/function () {
  function Query(config) {
    this.abortSignalConsumed = false;
    this.hadObservers = false;
    this.defaultOptions = config.defaultOptions;
    this.setOptions(config.options);
    this.observers = [];
    this.cache = config.cache;
    this.queryKey = config.queryKey;
    this.queryHash = config.queryHash;
    this.initialState = config.state || this.getDefaultState(this.options);
    this.state = this.initialState;
    this.meta = config.meta;
    this.scheduleGc();
  }
  var _proto = Query.prototype;
  _proto.setOptions = function setOptions(options) {
    var _this$options$cacheTi;
    this.options = (0,esm_extends/* default */.Z)({}, this.defaultOptions, options);
    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set

    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);
  };
  _proto.setDefaultOptions = function setDefaultOptions(options) {
    this.defaultOptions = options;
  };
  _proto.scheduleGc = function scheduleGc() {
    var _this = this;
    this.clearGcTimeout();
    if ((0,utils/* isValidTimeout */.PN)(this.cacheTime)) {
      this.gcTimeout = setTimeout(function () {
        _this.optionalRemove();
      }, this.cacheTime);
    }
  };
  _proto.clearGcTimeout = function clearGcTimeout() {
    if (this.gcTimeout) {
      clearTimeout(this.gcTimeout);
      this.gcTimeout = undefined;
    }
  };
  _proto.optionalRemove = function optionalRemove() {
    if (!this.observers.length) {
      if (this.state.isFetching) {
        if (this.hadObservers) {
          this.scheduleGc();
        }
      } else {
        this.cache.remove(this);
      }
    }
  };
  _proto.setData = function setData(updater, options) {
    var _this$options$isDataE, _this$options;
    var prevData = this.state.data; // Get the new data

    var data = (0,utils/* functionalUpdate */.SE)(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`

    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {
      data = prevData;
    } else if (this.options.structuralSharing !== false) {
      // Structurally share data between prev and new data if needed
      data = (0,utils/* replaceEqualDeep */.Q$)(prevData, data);
    } // Set data and mark it as cached

    this.dispatch({
      data: data,
      type: 'success',
      dataUpdatedAt: options == null ? void 0 : options.updatedAt
    });
    return data;
  };
  _proto.setState = function setState(state, setStateOptions) {
    this.dispatch({
      type: 'setState',
      state: state,
      setStateOptions: setStateOptions
    });
  };
  _proto.cancel = function cancel(options) {
    var _this$retryer;
    var promise = this.promise;
    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);
    return promise ? promise.then(utils/* noop */.ZT).catch(utils/* noop */.ZT) : Promise.resolve();
  };
  _proto.destroy = function destroy() {
    this.clearGcTimeout();
    this.cancel({
      silent: true
    });
  };
  _proto.reset = function reset() {
    this.destroy();
    this.setState(this.initialState);
  };
  _proto.isActive = function isActive() {
    return this.observers.some(function (observer) {
      return observer.options.enabled !== false;
    });
  };
  _proto.isFetching = function isFetching() {
    return this.state.isFetching;
  };
  _proto.isStale = function isStale() {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {
      return observer.getCurrentResult().isStale;
    });
  };
  _proto.isStaleByTime = function isStaleByTime(staleTime) {
    if (staleTime === void 0) {
      staleTime = 0;
    }
    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,utils/* timeUntilStale */.Kp)(this.state.dataUpdatedAt, staleTime);
  };
  _proto.onFocus = function onFocus() {
    var _this$retryer2;
    var observer = this.observers.find(function (x) {
      return x.shouldFetchOnWindowFocus();
    });
    if (observer) {
      observer.refetch();
    } // Continue fetch if currently paused

    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();
  };
  _proto.onOnline = function onOnline() {
    var _this$retryer3;
    var observer = this.observers.find(function (x) {
      return x.shouldFetchOnReconnect();
    });
    if (observer) {
      observer.refetch();
    } // Continue fetch if currently paused

    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();
  };
  _proto.addObserver = function addObserver(observer) {
    if (this.observers.indexOf(observer) === -1) {
      this.observers.push(observer);
      this.hadObservers = true; // Stop the query from being garbage collected

      this.clearGcTimeout();
      this.cache.notify({
        type: 'observerAdded',
        query: this,
        observer: observer
      });
    }
  };
  _proto.removeObserver = function removeObserver(observer) {
    if (this.observers.indexOf(observer) !== -1) {
      this.observers = this.observers.filter(function (x) {
        return x !== observer;
      });
      if (!this.observers.length) {
        // If the transport layer does not support cancellation
        // we'll let the query continue so the result can be cached
        if (this.retryer) {
          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {
            this.retryer.cancel({
              revert: true
            });
          } else {
            this.retryer.cancelRetry();
          }
        }
        if (this.cacheTime) {
          this.scheduleGc();
        } else {
          this.cache.remove(this);
        }
      }
      this.cache.notify({
        type: 'observerRemoved',
        query: this,
        observer: observer
      });
    }
  };
  _proto.getObserversCount = function getObserversCount() {
    return this.observers.length;
  };
  _proto.invalidate = function invalidate() {
    if (!this.state.isInvalidated) {
      this.dispatch({
        type: 'invalidate'
      });
    }
  };
  _proto.fetch = function fetch(options, fetchOptions) {
    var _this2 = this,
      _this$options$behavio,
      _context$fetchOptions,
      _abortController$abor;
    if (this.state.isFetching) {
      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {
        // Silently cancel current fetch if the user wants to cancel refetches
        this.cancel({
          silent: true
        });
      } else if (this.promise) {
        var _this$retryer4;

        // make sure that retries that were potentially cancelled due to unmounts can continue
        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching

        return this.promise;
      }
    } // Update config if passed, otherwise the config from the last execution is used

    if (options) {
      this.setOptions(options);
    } // Use the options from the first observer with a query function if no function is found.
    // This can happen when the query is hydrated or created with setQueryData.

    if (!this.options.queryFn) {
      var observer = this.observers.find(function (x) {
        return x.options.queryFn;
      });
      if (observer) {
        this.setOptions(observer.options);
      }
    }
    var queryKey = (0,utils/* ensureQueryKeyArray */.mc)(this.queryKey);
    var abortController = (0,utils/* getAbortController */.G9)(); // Create query function context

    var queryFnContext = {
      queryKey: queryKey,
      pageParam: undefined,
      meta: this.meta
    };
    Object.defineProperty(queryFnContext, 'signal', {
      enumerable: true,
      get: function get() {
        if (abortController) {
          _this2.abortSignalConsumed = true;
          return abortController.signal;
        }
        return undefined;
      }
    }); // Create fetch function

    var fetchFn = function fetchFn() {
      if (!_this2.options.queryFn) {
        return Promise.reject('Missing queryFn');
      }
      _this2.abortSignalConsumed = false;
      return _this2.options.queryFn(queryFnContext);
    }; // Trigger behavior hook

    var context = {
      fetchOptions: fetchOptions,
      options: this.options,
      queryKey: queryKey,
      state: this.state,
      fetchFn: fetchFn,
      meta: this.meta
    };
    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {
      var _this$options$behavio2;
      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);
    } // Store state in case the current fetch needs to be reverted

    this.revertState = this.state; // Set to fetching state if not already in it

    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {
      var _context$fetchOptions2;
      this.dispatch({
        type: 'fetch',
        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta
      });
    } // Try to fetch the data

    this.retryer = new retryer/* Retryer */.m4({
      fn: context.fetchFn,
      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),
      onSuccess: function onSuccess(data) {
        _this2.setData(data); // Notify cache callback

        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0

        if (_this2.cacheTime === 0) {
          _this2.optionalRemove();
        }
      },
      onError: function onError(error) {
        // Optimistically update state if needed
        if (!((0,retryer/* isCancelledError */.DV)(error) && error.silent)) {
          _this2.dispatch({
            type: 'error',
            error: error
          });
        }
        if (!(0,retryer/* isCancelledError */.DV)(error)) {
          // Notify cache callback
          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error

          (0,logger/* getLogger */.j)().error(error);
        } // Remove query after fetching if cache time is 0

        if (_this2.cacheTime === 0) {
          _this2.optionalRemove();
        }
      },
      onFail: function onFail() {
        _this2.dispatch({
          type: 'failed'
        });
      },
      onPause: function onPause() {
        _this2.dispatch({
          type: 'pause'
        });
      },
      onContinue: function onContinue() {
        _this2.dispatch({
          type: 'continue'
        });
      },
      retry: context.options.retry,
      retryDelay: context.options.retryDelay
    });
    this.promise = this.retryer.promise;
    return this.promise;
  };
  _proto.dispatch = function dispatch(action) {
    var _this3 = this;
    this.state = this.reducer(this.state, action);
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this3.observers.forEach(function (observer) {
        observer.onQueryUpdate(action);
      });
      _this3.cache.notify({
        query: _this3,
        type: 'queryUpdated',
        action: action
      });
    });
  };
  _proto.getDefaultState = function getDefaultState(options) {
    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;
    var hasInitialData = typeof options.initialData !== 'undefined';
    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
    var hasData = typeof data !== 'undefined';
    return {
      data: data,
      dataUpdateCount: 0,
      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,
      error: null,
      errorUpdateCount: 0,
      errorUpdatedAt: 0,
      fetchFailureCount: 0,
      fetchMeta: null,
      isFetching: false,
      isInvalidated: false,
      isPaused: false,
      status: hasData ? 'success' : 'idle'
    };
  };
  _proto.reducer = function reducer(state, action) {
    var _action$meta, _action$dataUpdatedAt;
    switch (action.type) {
      case 'failed':
        return (0,esm_extends/* default */.Z)({}, state, {
          fetchFailureCount: state.fetchFailureCount + 1
        });
      case 'pause':
        return (0,esm_extends/* default */.Z)({}, state, {
          isPaused: true
        });
      case 'continue':
        return (0,esm_extends/* default */.Z)({}, state, {
          isPaused: false
        });
      case 'fetch':
        return (0,esm_extends/* default */.Z)({}, state, {
          fetchFailureCount: 0,
          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,
          isFetching: true,
          isPaused: false
        }, !state.dataUpdatedAt && {
          error: null,
          status: 'loading'
        });
      case 'success':
        return (0,esm_extends/* default */.Z)({}, state, {
          data: action.data,
          dataUpdateCount: state.dataUpdateCount + 1,
          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),
          error: null,
          fetchFailureCount: 0,
          isFetching: false,
          isInvalidated: false,
          isPaused: false,
          status: 'success'
        });
      case 'error':
        var error = action.error;
        if ((0,retryer/* isCancelledError */.DV)(error) && error.revert && this.revertState) {
          return (0,esm_extends/* default */.Z)({}, this.revertState);
        }
        return (0,esm_extends/* default */.Z)({}, state, {
          error: error,
          errorUpdateCount: state.errorUpdateCount + 1,
          errorUpdatedAt: Date.now(),
          fetchFailureCount: state.fetchFailureCount + 1,
          isFetching: false,
          isPaused: false,
          status: 'error'
        });
      case 'invalidate':
        return (0,esm_extends/* default */.Z)({}, state, {
          isInvalidated: true
        });
      case 'setState':
        return (0,esm_extends/* default */.Z)({}, state, action.state);
      default:
        return state;
    }
  };
  return Query;
}();
// EXTERNAL MODULE: ./node_modules/react-query/es/core/subscribable.js
var subscribable = __webpack_require__(6280);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/queryCache.js





// CLASS
var QueryCache = /*#__PURE__*/function (_Subscribable) {
  (0,inheritsLoose/* default */.Z)(QueryCache, _Subscribable);
  function QueryCache(config) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.config = config || {};
    _this.queries = [];
    _this.queriesMap = {};
    return _this;
  }
  var _proto = QueryCache.prototype;
  _proto.build = function build(client, options, state) {
    var _options$queryHash;
    var queryKey = options.queryKey;
    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,utils/* hashQueryKeyByOptions */.Rm)(queryKey, options);
    var query = this.get(queryHash);
    if (!query) {
      query = new Query({
        cache: this,
        queryKey: queryKey,
        queryHash: queryHash,
        options: client.defaultQueryOptions(options),
        state: state,
        defaultOptions: client.getQueryDefaults(queryKey),
        meta: options.meta
      });
      this.add(query);
    }
    return query;
  };
  _proto.add = function add(query) {
    if (!this.queriesMap[query.queryHash]) {
      this.queriesMap[query.queryHash] = query;
      this.queries.push(query);
      this.notify({
        type: 'queryAdded',
        query: query
      });
    }
  };
  _proto.remove = function remove(query) {
    var queryInMap = this.queriesMap[query.queryHash];
    if (queryInMap) {
      query.destroy();
      this.queries = this.queries.filter(function (x) {
        return x !== query;
      });
      if (queryInMap === query) {
        delete this.queriesMap[query.queryHash];
      }
      this.notify({
        type: 'queryRemoved',
        query: query
      });
    }
  };
  _proto.clear = function clear() {
    var _this2 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this2.queries.forEach(function (query) {
        _this2.remove(query);
      });
    });
  };
  _proto.get = function get(queryHash) {
    return this.queriesMap[queryHash];
  };
  _proto.getAll = function getAll() {
    return this.queries;
  };
  _proto.find = function find(arg1, arg2) {
    var _parseFilterArgs = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),
      filters = _parseFilterArgs[0];
    if (typeof filters.exact === 'undefined') {
      filters.exact = true;
    }
    return this.queries.find(function (query) {
      return (0,utils/* matchQuery */._x)(filters, query);
    });
  };
  _proto.findAll = function findAll(arg1, arg2) {
    var _parseFilterArgs2 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),
      filters = _parseFilterArgs2[0];
    return Object.keys(filters).length > 0 ? this.queries.filter(function (query) {
      return (0,utils/* matchQuery */._x)(filters, query);
    }) : this.queries;
  };
  _proto.notify = function notify(event) {
    var _this3 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this3.listeners.forEach(function (listener) {
        listener(event);
      });
    });
  };
  _proto.onFocus = function onFocus() {
    var _this4 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this4.queries.forEach(function (query) {
        query.onFocus();
      });
    });
  };
  _proto.onOnline = function onOnline() {
    var _this5 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this5.queries.forEach(function (query) {
        query.onOnline();
      });
    });
  };
  return QueryCache;
}(subscribable/* Subscribable */.l);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/mutation.js
var core_mutation = __webpack_require__(9187);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/mutationCache.js




 // TYPES

// CLASS
var MutationCache = /*#__PURE__*/function (_Subscribable) {
  (0,inheritsLoose/* default */.Z)(MutationCache, _Subscribable);
  function MutationCache(config) {
    var _this;
    _this = _Subscribable.call(this) || this;
    _this.config = config || {};
    _this.mutations = [];
    _this.mutationId = 0;
    return _this;
  }
  var _proto = MutationCache.prototype;
  _proto.build = function build(client, options, state) {
    var mutation = new core_mutation/* Mutation */.m({
      mutationCache: this,
      mutationId: ++this.mutationId,
      options: client.defaultMutationOptions(options),
      state: state,
      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,
      meta: options.meta
    });
    this.add(mutation);
    return mutation;
  };
  _proto.add = function add(mutation) {
    this.mutations.push(mutation);
    this.notify(mutation);
  };
  _proto.remove = function remove(mutation) {
    this.mutations = this.mutations.filter(function (x) {
      return x !== mutation;
    });
    mutation.cancel();
    this.notify(mutation);
  };
  _proto.clear = function clear() {
    var _this2 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this2.mutations.forEach(function (mutation) {
        _this2.remove(mutation);
      });
    });
  };
  _proto.getAll = function getAll() {
    return this.mutations;
  };
  _proto.find = function find(filters) {
    if (typeof filters.exact === 'undefined') {
      filters.exact = true;
    }
    return this.mutations.find(function (mutation) {
      return (0,utils/* matchMutation */.X7)(filters, mutation);
    });
  };
  _proto.findAll = function findAll(filters) {
    return this.mutations.filter(function (mutation) {
      return (0,utils/* matchMutation */.X7)(filters, mutation);
    });
  };
  _proto.notify = function notify(mutation) {
    var _this3 = this;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      _this3.listeners.forEach(function (listener) {
        listener(mutation);
      });
    });
  };
  _proto.onFocus = function onFocus() {
    this.resumePausedMutations();
  };
  _proto.onOnline = function onOnline() {
    this.resumePausedMutations();
  };
  _proto.resumePausedMutations = function resumePausedMutations() {
    var pausedMutations = this.mutations.filter(function (x) {
      return x.state.isPaused;
    });
    return notifyManager/* notifyManager.batch */.V.batch(function () {
      return pausedMutations.reduce(function (promise, mutation) {
        return promise.then(function () {
          return mutation.continue().catch(utils/* noop */.ZT);
        });
      }, Promise.resolve());
    });
  };
  return MutationCache;
}(subscribable/* Subscribable */.l);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/focusManager.js
var focusManager = __webpack_require__(1758);
// EXTERNAL MODULE: ./node_modules/react-query/es/core/onlineManager.js
var onlineManager = __webpack_require__(7664);
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/infiniteQueryBehavior.js


function infiniteQueryBehavior() {
  return {
    onFetch: function onFetch(context) {
      context.fetchFn = function () {
        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;
        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;
        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;
        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;
        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';
        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';
        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];
        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];
        var abortController = (0,utils/* getAbortController */.G9)();
        var abortSignal = abortController == null ? void 0 : abortController.signal;
        var newPageParams = oldPageParams;
        var cancelled = false; // Get query function

        var queryFn = context.options.queryFn || function () {
          return Promise.reject('Missing queryFn');
        };
        var buildNewPages = function buildNewPages(pages, param, page, previous) {
          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);
          return previous ? [page].concat(pages) : [].concat(pages, [page]);
        }; // Create function to fetch a page

        var fetchPage = function fetchPage(pages, manual, param, previous) {
          if (cancelled) {
            return Promise.reject('Cancelled');
          }
          if (typeof param === 'undefined' && !manual && pages.length) {
            return Promise.resolve(pages);
          }
          var queryFnContext = {
            queryKey: context.queryKey,
            signal: abortSignal,
            pageParam: param,
            meta: context.meta
          };
          var queryFnResult = queryFn(queryFnContext);
          var promise = Promise.resolve(queryFnResult).then(function (page) {
            return buildNewPages(pages, param, page, previous);
          });
          if ((0,retryer/* isCancelable */.LE)(queryFnResult)) {
            var promiseAsAny = promise;
            promiseAsAny.cancel = queryFnResult.cancel;
          }
          return promise;
        };
        var promise; // Fetch first page?

        if (!oldPages.length) {
          promise = fetchPage([]);
        } // Fetch next page?
        else if (isFetchingNextPage) {
          var manual = typeof pageParam !== 'undefined';
          var param = manual ? pageParam : getNextPageParam(context.options, oldPages);
          promise = fetchPage(oldPages, manual, param);
        } // Fetch previous page?
        else if (isFetchingPreviousPage) {
          var _manual = typeof pageParam !== 'undefined';
          var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);
          promise = fetchPage(oldPages, _manual, _param, true);
        } // Refetch pages
        else {
          (function () {
            newPageParams = [];
            var manual = typeof context.options.getNextPageParam === 'undefined';
            var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page

            promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages

            var _loop = function _loop(i) {
              promise = promise.then(function (pages) {
                var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;
                if (shouldFetchNextPage) {
                  var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);
                  return fetchPage(pages, manual, _param2);
                }
                return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));
              });
            };
            for (var i = 1; i < oldPages.length; i++) {
              _loop(i);
            }
          })();
        }
        var finalPromise = promise.then(function (pages) {
          return {
            pages: pages,
            pageParams: newPageParams
          };
        });
        var finalPromiseAsAny = finalPromise;
        finalPromiseAsAny.cancel = function () {
          cancelled = true;
          abortController == null ? void 0 : abortController.abort();
          if ((0,retryer/* isCancelable */.LE)(promise)) {
            promise.cancel();
          }
        };
        return finalPromise;
      };
    }
  };
}
function getNextPageParam(options, pages) {
  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);
}
function getPreviousPageParam(options, pages) {
  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);
}
/**
 * Checks if there is a next page.
 * Returns `undefined` if it cannot be determined.
 */

function hasNextPage(options, pages) {
  if (options.getNextPageParam && Array.isArray(pages)) {
    var nextPageParam = getNextPageParam(options, pages);
    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;
  }
}
/**
 * Checks if there is a previous page.
 * Returns `undefined` if it cannot be determined.
 */

function hasPreviousPage(options, pages) {
  if (options.getPreviousPageParam && Array.isArray(pages)) {
    var previousPageParam = getPreviousPageParam(options, pages);
    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;
  }
}
;// CONCATENATED MODULE: ./node_modules/react-query/es/core/queryClient.js








// CLASS
var QueryClient = /*#__PURE__*/function () {
  function QueryClient(config) {
    if (config === void 0) {
      config = {};
    }
    this.queryCache = config.queryCache || new QueryCache();
    this.mutationCache = config.mutationCache || new MutationCache();
    this.defaultOptions = config.defaultOptions || {};
    this.queryDefaults = [];
    this.mutationDefaults = [];
  }
  var _proto = QueryClient.prototype;
  _proto.mount = function mount() {
    var _this = this;
    this.unsubscribeFocus = focusManager/* focusManager.subscribe */.j.subscribe(function () {
      if (focusManager/* focusManager.isFocused */.j.isFocused() && onlineManager/* onlineManager.isOnline */.N.isOnline()) {
        _this.mutationCache.onFocus();
        _this.queryCache.onFocus();
      }
    });
    this.unsubscribeOnline = onlineManager/* onlineManager.subscribe */.N.subscribe(function () {
      if (focusManager/* focusManager.isFocused */.j.isFocused() && onlineManager/* onlineManager.isOnline */.N.isOnline()) {
        _this.mutationCache.onOnline();
        _this.queryCache.onOnline();
      }
    });
  };
  _proto.unmount = function unmount() {
    var _this$unsubscribeFocu, _this$unsubscribeOnli;
    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);
    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);
  };
  _proto.isFetching = function isFetching(arg1, arg2) {
    var _parseFilterArgs = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),
      filters = _parseFilterArgs[0];
    filters.fetching = true;
    return this.queryCache.findAll(filters).length;
  };
  _proto.isMutating = function isMutating(filters) {
    return this.mutationCache.findAll((0,esm_extends/* default */.Z)({}, filters, {
      fetching: true
    })).length;
  };
  _proto.getQueryData = function getQueryData(queryKey, filters) {
    var _this$queryCache$find;
    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;
  };
  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {
    return this.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {
      var queryKey = _ref.queryKey,
        state = _ref.state;
      var data = state.data;
      return [queryKey, data];
    });
  };
  _proto.setQueryData = function setQueryData(queryKey, updater, options) {
    var parsedOptions = (0,utils/* parseQueryArgs */._v)(queryKey);
    var defaultedOptions = this.defaultQueryOptions(parsedOptions);
    return this.queryCache.build(this, defaultedOptions).setData(updater, options);
  };
  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {
    var _this2 = this;
    return notifyManager/* notifyManager.batch */.V.batch(function () {
      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref2) {
        var queryKey = _ref2.queryKey;
        return [queryKey, _this2.setQueryData(queryKey, updater, options)];
      });
    });
  };
  _proto.getQueryState = function getQueryState(queryKey, filters) {
    var _this$queryCache$find2;
    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;
  };
  _proto.removeQueries = function removeQueries(arg1, arg2) {
    var _parseFilterArgs2 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2),
      filters = _parseFilterArgs2[0];
    var queryCache = this.queryCache;
    notifyManager/* notifyManager.batch */.V.batch(function () {
      queryCache.findAll(filters).forEach(function (query) {
        queryCache.remove(query);
      });
    });
  };
  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {
    var _this3 = this;
    var _parseFilterArgs3 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),
      filters = _parseFilterArgs3[0],
      options = _parseFilterArgs3[1];
    var queryCache = this.queryCache;
    var refetchFilters = (0,esm_extends/* default */.Z)({}, filters, {
      active: true
    });
    return notifyManager/* notifyManager.batch */.V.batch(function () {
      queryCache.findAll(filters).forEach(function (query) {
        query.reset();
      });
      return _this3.refetchQueries(refetchFilters, options);
    });
  };
  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {
    var _this4 = this;
    var _parseFilterArgs4 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),
      filters = _parseFilterArgs4[0],
      _parseFilterArgs4$ = _parseFilterArgs4[1],
      cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;
    if (typeof cancelOptions.revert === 'undefined') {
      cancelOptions.revert = true;
    }
    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {
      return _this4.queryCache.findAll(filters).map(function (query) {
        return query.cancel(cancelOptions);
      });
    });
    return Promise.all(promises).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);
  };
  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {
    var _ref3,
      _filters$refetchActiv,
      _filters$refetchInact,
      _this5 = this;
    var _parseFilterArgs5 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),
      filters = _parseFilterArgs5[0],
      options = _parseFilterArgs5[1];
    var refetchFilters = (0,esm_extends/* default */.Z)({}, filters, {
      // if filters.refetchActive is not provided and filters.active is explicitly false,
      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries
      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,
      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false
    });
    return notifyManager/* notifyManager.batch */.V.batch(function () {
      _this5.queryCache.findAll(filters).forEach(function (query) {
        query.invalidate();
      });
      return _this5.refetchQueries(refetchFilters, options);
    });
  };
  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {
    var _this6 = this;
    var _parseFilterArgs6 = (0,utils/* parseFilterArgs */.I6)(arg1, arg2, arg3),
      filters = _parseFilterArgs6[0],
      options = _parseFilterArgs6[1];
    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {
      return _this6.queryCache.findAll(filters).map(function (query) {
        return query.fetch(undefined, (0,esm_extends/* default */.Z)({}, options, {
          meta: {
            refetchPage: filters == null ? void 0 : filters.refetchPage
          }
        }));
      });
    });
    var promise = Promise.all(promises).then(utils/* noop */.ZT);
    if (!(options == null ? void 0 : options.throwOnError)) {
      promise = promise.catch(utils/* noop */.ZT);
    }
    return promise;
  };
  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {
    var parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);
    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652

    if (typeof defaultedOptions.retry === 'undefined') {
      defaultedOptions.retry = false;
    }
    var query = this.queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
  };
  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {
    return this.fetchQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);
  };
  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {
    var parsedOptions = (0,utils/* parseQueryArgs */._v)(arg1, arg2, arg3);
    parsedOptions.behavior = infiniteQueryBehavior();
    return this.fetchQuery(parsedOptions);
  };
  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {
    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);
  };
  _proto.cancelMutations = function cancelMutations() {
    var _this7 = this;
    var promises = notifyManager/* notifyManager.batch */.V.batch(function () {
      return _this7.mutationCache.getAll().map(function (mutation) {
        return mutation.cancel();
      });
    });
    return Promise.all(promises).then(utils/* noop */.ZT).catch(utils/* noop */.ZT);
  };
  _proto.resumePausedMutations = function resumePausedMutations() {
    return this.getMutationCache().resumePausedMutations();
  };
  _proto.executeMutation = function executeMutation(options) {
    return this.mutationCache.build(this, options).execute();
  };
  _proto.getQueryCache = function getQueryCache() {
    return this.queryCache;
  };
  _proto.getMutationCache = function getMutationCache() {
    return this.mutationCache;
  };
  _proto.getDefaultOptions = function getDefaultOptions() {
    return this.defaultOptions;
  };
  _proto.setDefaultOptions = function setDefaultOptions(options) {
    this.defaultOptions = options;
  };
  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {
    var result = this.queryDefaults.find(function (x) {
      return (0,utils/* hashQueryKey */.yF)(queryKey) === (0,utils/* hashQueryKey */.yF)(x.queryKey);
    });
    if (result) {
      result.defaultOptions = options;
    } else {
      this.queryDefaults.push({
        queryKey: queryKey,
        defaultOptions: options
      });
    }
  };
  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {
    var _this$queryDefaults$f;
    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {
      return (0,utils/* partialMatchKey */.to)(queryKey, x.queryKey);
    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;
  };
  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {
    var result = this.mutationDefaults.find(function (x) {
      return (0,utils/* hashQueryKey */.yF)(mutationKey) === (0,utils/* hashQueryKey */.yF)(x.mutationKey);
    });
    if (result) {
      result.defaultOptions = options;
    } else {
      this.mutationDefaults.push({
        mutationKey: mutationKey,
        defaultOptions: options
      });
    }
  };
  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {
    var _this$mutationDefault;
    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {
      return (0,utils/* partialMatchKey */.to)(mutationKey, x.mutationKey);
    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;
  };
  _proto.defaultQueryOptions = function defaultQueryOptions(options) {
    if (options == null ? void 0 : options._defaulted) {
      return options;
    }
    var defaultedOptions = (0,esm_extends/* default */.Z)({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {
      _defaulted: true
    });
    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {
      defaultedOptions.queryHash = (0,utils/* hashQueryKeyByOptions */.Rm)(defaultedOptions.queryKey, defaultedOptions);
    }
    return defaultedOptions;
  };
  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {
    return this.defaultQueryOptions(options);
  };
  _proto.defaultMutationOptions = function defaultMutationOptions(options) {
    if (options == null ? void 0 : options._defaulted) {
      return options;
    }
    return (0,esm_extends/* default */.Z)({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {
      _defaulted: true
    });
  };
  _proto.clear = function clear() {
    this.queryCache.clear();
    this.mutationCache.clear();
  };
  return QueryClient;
}();
// EXTERNAL MODULE: ./node_modules/react-query/es/index.js
var es = __webpack_require__(6098);
// EXTERNAL MODULE: ./node_modules/lodash/lodash.js
var lodash = __webpack_require__(3974);
var lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);
;// CONCATENATED MODULE: ./src/api_context.ts



var APIContext = (0,react_production_min.createContext)({});
var useAPIContext = function useAPIContext() {
  var apiContext = (0,react_production_min.useContext)(APIContext);
  if ((0,lodash.isEmpty)(apiContext)) {
    throw new Error("TRIED TO ACCESS APICONTEXT OUTSIDE OF APICONTEXTPROVIDER");
  }
  return apiContext;
};
;// CONCATENATED MODULE: ./src/hooks/translations/index.ts






var fetchTranslations = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(apiUrl, jwtToken, translationKeys) {
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", fetch("".concat(apiUrl, "/Localization/Translations"), {
            method: 'post',
            body: JSON.stringify(translationKeys),
            headers: {
              'Authorization': "Bearer ".concat(jwtToken),
              "Content-Type": "application/json"
            },
            credentials: "include",
            mode: 'cors'
          }).then(function (x) {
            return x.json();
          }));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function fetchTranslations(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
var useTranslations = function useTranslations(queryKey, translationKeys) {
  var apiContext = (0,react_production_min.useContext)(APIContext);
  return (0,es.useQuery)("translations_".concat(queryKey), function () {
    return fetchTranslations(apiContext.apiUrl, apiContext.token, translationKeys);
  }, {
    staleTime: Infinity,
    refetchOnWindowFocus: false,
    suspense: true,
    enabled: !(0,lodash.isEmpty)(apiContext)
  });
};
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function classCallCheck_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
function typeof_typeof(obj) {
  "@babel/helpers - typeof";

  return typeof_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, typeof_typeof(obj);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function _toPrimitive(input, hint) {
  if (typeof_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof_typeof(key) === "symbol" ? key : String(key);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function createClass_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js

function defineProperty_defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
var setPrototypeOf = __webpack_require__(2717);
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/construct.js


function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) (0,setPrototypeOf/* default */.Z)(instance, Class.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return (0,setPrototypeOf/* default */.Z)(Wrapper, Class);
  };
  return _wrapNativeSuper(Class);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) (0,setPrototypeOf/* default */.Z)(subClass, superClass);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (typeof_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
;// CONCATENATED MODULE: ./src/authorized_api_base.ts



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/**
 * Configuration class needed in base class.
 * The config is provided to the API client at initialization time.
 * API clients inherit from #AuthorizedApiBase and provide the config.
 */
var IConfig = /*#__PURE__*/(/* unused pure expression or super */ null && (_createClass(function IConfig() {
  _classCallCheck(this, IConfig);
  _defineProperty(this, "getAuthorization", void 0);
})));
var AuthorizedApiBase = /*#__PURE__*/createClass_createClass(function AuthorizedApiBase(config) {
  var _this = this;
  classCallCheck_classCallCheck(this, AuthorizedApiBase);
  defineProperty_defineProperty(this, "config", void 0);
  defineProperty_defineProperty(this, "transformOptions", function (options) {
    options.headers = _objectSpread(_objectSpread({}, options.headers), {}, {
      Authorization: _this.config.getAuthorization()
    });
    return Promise.resolve(options);
  });
  this.config = config;
});
;// CONCATENATED MODULE: ./src/generated_api.ts








function _createSuper(Derived) { var hasNativeReflectConstruct = generated_api_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function generated_api_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
 /* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.8.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

var Client = /*#__PURE__*/function (_AuthorizedApiBase) {
  _inherits(Client, _AuthorizedApiBase);
  var _super = _createSuper(Client);
  function Client(configuration, baseUrl, http) {
    var _this;
    classCallCheck_classCallCheck(this, Client);
    _this = _super.call(this, configuration);
    defineProperty_defineProperty(_assertThisInitialized(_this), "http", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this), "baseUrl", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this), "jsonParseReviver", undefined);
    _this.http = http ? http : window;
    _this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    return _this;
  }

  /**
   * Send the search link with search parameters to the specified email
   * @param body (optional) 
   * @return Success
   */
  createClass_createClass(Client, [{
    key: "accommodationSendSaveYourSearchLinkV1",
    value: function accommodationSendSaveYourSearchLinkV1(body, signal) {
      var _this2 = this;
      var url_ = this.baseUrl + "/accommodation/send-save-your-search-link-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this2.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this2.processAccommodationSendSaveYourSearchLinkV1(_response);
      });
    }
  }, {
    key: "processAccommodationSendSaveYourSearchLinkV1",
    value: function processAccommodationSendSaveYourSearchLinkV1(response) {
      var _this3 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this3.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this3.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this3.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Save a customer enquiry. Limited to one room per enquiry.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationCustomerEnquiryV1",
    value: function accommodationCustomerEnquiryV1(body, signal) {
      var _this4 = this;
      var url_ = this.baseUrl + "/accommodation/customer-enquiry-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this4.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this4.processAccommodationCustomerEnquiryV1(_response);
      });
    }
  }, {
    key: "processAccommodationCustomerEnquiryV1",
    value: function processAccommodationCustomerEnquiryV1(response) {
      var _this5 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this5.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this5.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this5.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a list of all points of interest connected to your channel.
    Use GET /accommodation/points-of-interest instead
     * @param channelId The id of the channel
     * @return Success
     * @deprecated
     */
  }, {
    key: "accommodationPointsofinterestV1",
    value: function accommodationPointsofinterestV1(channelId, signal) {
      var _this6 = this;
      var url_ = this.baseUrl + "/accommodation/pointsofinterest-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this6.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this6.processAccommodationPointsofinterestV1(_response);
      });
    }
  }, {
    key: "processAccommodationPointsofinterestV1",
    value: function processAccommodationPointsofinterestV1(response) {
      var _this7 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this7.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this7.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this7.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a list of all points of interest connected to your channel.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "accommodationPointsOfInterestV1",
    value: function accommodationPointsOfInterestV1(channelId, signal) {
      var _this8 = this;
      var url_ = this.baseUrl + "/accommodation/points-of-interest-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this8.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this8.processAccommodationPointsOfInterestV1(_response);
      });
    }
  }, {
    key: "processAccommodationPointsOfInterestV1",
    value: function processAccommodationPointsOfInterestV1(response) {
      var _this9 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this9.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this9.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this9.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get availability information for a whole calendar month.
     * @param year What year to use in the search.
     * @param month What month to use in the search.
     * @param packageCategoryId (optional) Use this to only check availability for packages in a certain category.
     * @param packageId (optional) Use this to only check availability for a certain package.
     * @param roomId (optional) Use this to only check availability for a certain roomtype.
     * @param campaignId (optional) The id of the campaign if you want a calendar only for a specific campaign
     * @param firstDayOfWeek (optional) This will help to get the full weeks in the calendar month
     * @param cancellationPolicyId (optional) The id of the cancellation policy if you want a calendar only for a specific cancellation policy
     * @param adults (optional) Number of adults the search will be valid for
     * @param childAges (optional) Ages if the children the search should be valid for
     * @param bookingCode (optional) The basketId being edit
     * @param internalRoomIdBeingEdit (optional) The internal room id being edit, will use it to restore inventory for search majorly
     * @param ratePlanAndPackageIdsFilter (optional) Only populate this if you want to filter the availability in the calendar.
    This will limit the availability in the calendar. All rate plans not matching any id provided will be
    excluded. All package not matching any id will be excluded.
     * @param promoCode (optional) Use this to only check availability for a certain promotion code
     * @param accommodationTypes (optional) Selected accommodation types
     * @param typeOfSearch (optional) Type of search, default is All
     * @param allowCalendarToMoveForward (optional) If set to true, the calendar will have the month and year that contains the next available alternative.
     * @param availabilityCalendarForProducts (optional) If set to true, get a calendar for each room or package depending on the TypeOfSearch
    that contains the cheapest price and available stay lengths per day.
     * @param agentCode (optional) Traveller agent code that unlocks rate plans that are valid
    for traveller agent to book
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "accommodationCalendarV1",
    value: function accommodationCalendarV1(year, month, packageCategoryId, packageId, roomId, campaignId, firstDayOfWeek, cancellationPolicyId, adults, childAges, bookingCode, internalRoomIdBeingEdit, ratePlanAndPackageIdsFilter, promoCode, accommodationTypes, typeOfSearch, allowCalendarToMoveForward, availabilityCalendarForProducts, agentCode, channelId, signal) {
      var _this10 = this;
      var url_ = this.baseUrl + "/accommodation/calendar-v1?";
      if (year === undefined || year === null) throw new Error("The parameter 'year' must be defined and cannot be null.");else url_ += "Year=" + encodeURIComponent("" + year) + "&";
      if (month === undefined || month === null) throw new Error("The parameter 'month' must be defined and cannot be null.");else url_ += "Month=" + encodeURIComponent("" + month) + "&";
      if (packageCategoryId === null) throw new Error("The parameter 'packageCategoryId' cannot be null.");else if (packageCategoryId !== undefined) url_ += "PackageCategoryId=" + encodeURIComponent("" + packageCategoryId) + "&";
      if (packageId === null) throw new Error("The parameter 'packageId' cannot be null.");else if (packageId !== undefined) url_ += "PackageId=" + encodeURIComponent("" + packageId) + "&";
      if (roomId === null) throw new Error("The parameter 'roomId' cannot be null.");else if (roomId !== undefined) url_ += "RoomId=" + encodeURIComponent("" + roomId) + "&";
      if (campaignId === null) throw new Error("The parameter 'campaignId' cannot be null.");else if (campaignId !== undefined) url_ += "CampaignId=" + encodeURIComponent("" + campaignId) + "&";
      if (firstDayOfWeek === null) throw new Error("The parameter 'firstDayOfWeek' cannot be null.");else if (firstDayOfWeek !== undefined) url_ += "FirstDayOfWeek=" + encodeURIComponent("" + firstDayOfWeek) + "&";
      if (cancellationPolicyId === null) throw new Error("The parameter 'cancellationPolicyId' cannot be null.");else if (cancellationPolicyId !== undefined) url_ += "CancellationPolicyId=" + encodeURIComponent("" + cancellationPolicyId) + "&";
      if (adults === null) throw new Error("The parameter 'adults' cannot be null.");else if (adults !== undefined) url_ += "Adults=" + encodeURIComponent("" + adults) + "&";
      if (childAges === null) throw new Error("The parameter 'childAges' cannot be null.");else if (childAges !== undefined) childAges && childAges.forEach(function (item) {
        url_ += "ChildAges=" + encodeURIComponent("" + item) + "&";
      });
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (internalRoomIdBeingEdit === null) throw new Error("The parameter 'internalRoomIdBeingEdit' cannot be null.");else if (internalRoomIdBeingEdit !== undefined) url_ += "InternalRoomIdBeingEdit=" + encodeURIComponent("" + internalRoomIdBeingEdit) + "&";
      if (ratePlanAndPackageIdsFilter === null) throw new Error("The parameter 'ratePlanAndPackageIdsFilter' cannot be null.");else if (ratePlanAndPackageIdsFilter !== undefined) ratePlanAndPackageIdsFilter && ratePlanAndPackageIdsFilter.forEach(function (item) {
        url_ += "RatePlanAndPackageIdsFilter=" + encodeURIComponent("" + item) + "&";
      });
      if (promoCode === null) throw new Error("The parameter 'promoCode' cannot be null.");else if (promoCode !== undefined) url_ += "PromoCode=" + encodeURIComponent("" + promoCode) + "&";
      if (accommodationTypes === null) throw new Error("The parameter 'accommodationTypes' cannot be null.");else if (accommodationTypes !== undefined) url_ += "AccommodationTypes=" + encodeURIComponent("" + accommodationTypes) + "&";
      if (typeOfSearch === null) throw new Error("The parameter 'typeOfSearch' cannot be null.");else if (typeOfSearch !== undefined) url_ += "TypeOfSearch=" + encodeURIComponent("" + typeOfSearch) + "&";
      if (allowCalendarToMoveForward === null) throw new Error("The parameter 'allowCalendarToMoveForward' cannot be null.");else if (allowCalendarToMoveForward !== undefined) url_ += "AllowCalendarToMoveForward=" + encodeURIComponent("" + allowCalendarToMoveForward) + "&";
      if (availabilityCalendarForProducts === null) throw new Error("The parameter 'availabilityCalendarForProducts' cannot be null.");else if (availabilityCalendarForProducts !== undefined) url_ += "AvailabilityCalendarForProducts=" + encodeURIComponent("" + availabilityCalendarForProducts) + "&";
      if (agentCode === null) throw new Error("The parameter 'agentCode' cannot be null.");else if (agentCode !== undefined) url_ += "AgentCode=" + encodeURIComponent("" + agentCode) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this10.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this10.processAccommodationCalendarV1(_response);
      });
    }
  }, {
    key: "processAccommodationCalendarV1",
    value: function processAccommodationCalendarV1(response) {
      var _this11 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this11.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this11.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this11.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Searches for available accommodations between two specific dates.
    You need to specify search dates and at least one room configuration for the search.
    You may also use the different filters.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationSearchV1",
    value: function accommodationSearchV1(body, signal) {
      var _this12 = this;
      var url_ = this.baseUrl + "/accommodation/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this12.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this12.processAccommodationSearchV1(_response);
      });
    }
  }, {
    key: "processAccommodationSearchV1",
    value: function processAccommodationSearchV1(response) {
      var _this13 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this13.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this13.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this13.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this13.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Validate search codes (promotion code, corporation code and IATA code).
    Set valid codes to user session
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationSearchCodesValidateAndSubmitV1",
    value: function accommodationSearchCodesValidateAndSubmitV1(body, signal) {
      var _this14 = this;
      var url_ = this.baseUrl + "/accommodation/search-codes/validate-and-submit-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this14.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this14.processAccommodationSearchCodesValidateAndSubmitV1(_response);
      });
    }
  }, {
    key: "processAccommodationSearchCodesValidateAndSubmitV1",
    value: function processAccommodationSearchCodesValidateAndSubmitV1(response) {
      var _this15 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this15.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this15.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this15.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Returns custom online message for requested keys.
     * @param onlineMessageKeys (optional) List of online message keys
     * @param languageId (optional) Optionally provide a language id for use when translating the response data
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "accommodationCustomOnlineMessageV1",
    value: function accommodationCustomOnlineMessageV1(onlineMessageKeys, languageId, channelId, signal) {
      var _this16 = this;
      var url_ = this.baseUrl + "/accommodation/custom-online-message-v1?";
      if (onlineMessageKeys === null) throw new Error("The parameter 'onlineMessageKeys' cannot be null.");else if (onlineMessageKeys !== undefined) onlineMessageKeys && onlineMessageKeys.forEach(function (item) {
        url_ += "OnlineMessageKeys=" + encodeURIComponent("" + item) + "&";
      });
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this16.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this16.processAccommodationCustomOnlineMessageV1(_response);
      });
    }
  }, {
    key: "processAccommodationCustomOnlineMessageV1",
    value: function processAccommodationCustomOnlineMessageV1(response) {
      var _this17 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this17.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this17.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this17.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Returns a list of sister hotels that are bookable for the same search period 
    that already is searched for
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationSearchBookableSisterHotelsV1",
    value: function accommodationSearchBookableSisterHotelsV1(body, signal) {
      var _this18 = this;
      var url_ = this.baseUrl + "/accommodation/search-bookable-sister-hotels-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this18.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this18.processAccommodationSearchBookableSisterHotelsV1(_response);
      });
    }
  }, {
    key: "processAccommodationSearchBookableSisterHotelsV1",
    value: function processAccommodationSearchBookableSisterHotelsV1(response) {
      var _this19 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this19.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this19.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this19.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * For hotels that have activated the waiting list feature, add to waiting list
    let's a customer add information about what product they are waiting for availability
    for so that they can be contacted by the hotel once product is available again
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationWaitingListV1",
    value: function accommodationWaitingListV1(body, signal) {
      var _this20 = this;
      var url_ = this.baseUrl + "/accommodation/waiting-list-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this20.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this20.processAccommodationWaitingListV1(_response);
      });
    }
  }, {
    key: "processAccommodationWaitingListV1",
    value: function processAccommodationWaitingListV1(response) {
      var _this21 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this21.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this21.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this21.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a list of properties. If SearchParameters is omitted bookability will not be validated.
    Results will be returned in the order of the channel ids sent in.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "accommodationMultipropertySearchV1",
    value: function accommodationMultipropertySearchV1(body, signal) {
      var _this22 = this;
      var url_ = this.baseUrl + "/accommodation/multiproperty/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this22.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this22.processAccommodationMultipropertySearchV1(_response);
      });
    }
  }, {
    key: "processAccommodationMultipropertySearchV1",
    value: function processAccommodationMultipropertySearchV1(response) {
      var _this23 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this23.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this23.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this23.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all add-on categories and all add-ons/ add-on packages within those categories.
     * @param addonId (optional) If supplied only the specific add-on will be supplied and its add-on category if any
     * @param categoryId (optional) If supplied only the specific add-on category and its add-ons will be supplied
     * @param addOnPackageId (optional) If supplied only the specific add-on package will be supplied and its add-on category if any
     * @param languageId (optional) Optionally provide a translation id to use for translating the response data.
    Defaults to the language id of your current user session.
     * @param includeAllAddOns (optional) If set to true all add-ons for the supplier will be returned, otherwise only the ones that are
    sold as standalone add-ons
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "addonsV1",
    value: function addonsV1(addonId, categoryId, addOnPackageId, languageId, includeAllAddOns, channelId, signal) {
      var _this24 = this;
      var url_ = this.baseUrl + "/addons/v1?";
      if (addonId === null) throw new Error("The parameter 'addonId' cannot be null.");else if (addonId !== undefined) url_ += "AddonId=" + encodeURIComponent("" + addonId) + "&";
      if (categoryId === null) throw new Error("The parameter 'categoryId' cannot be null.");else if (categoryId !== undefined) url_ += "CategoryId=" + encodeURIComponent("" + categoryId) + "&";
      if (addOnPackageId === null) throw new Error("The parameter 'addOnPackageId' cannot be null.");else if (addOnPackageId !== undefined) url_ += "AddOnPackageId=" + encodeURIComponent("" + addOnPackageId) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (includeAllAddOns === null) throw new Error("The parameter 'includeAllAddOns' cannot be null.");else if (includeAllAddOns !== undefined) url_ += "IncludeAllAddOns=" + encodeURIComponent("" + includeAllAddOns) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this24.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this24.processAddonsV1(_response);
      });
    }
  }, {
    key: "processAddonsV1",
    value: function processAddonsV1(response) {
      var _this25 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this25.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this25.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this25.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Exchange an API key for a Json Web Token.
    We also add the Expires ticks as a response header so that caller can easily see
    if the token is expired without inspecting the token body.
     * @param apiKey (optional) The api key that is used for signing in
     * @param organizationId (optional) This id is used for organization specific translations.
     * @param languageId (optional) Language Id to use in responses (default is 2/english)
     * @param sessionId (optional) Add this if you want to sign in to a specific session
     * @param json (optional) If you want the returned token to be serialized as json (xxx / "xxx"). Some generated clients might wish to use this for simplicity.
     * @return Success
     */
  }, {
    key: "apiAuthenticationTokenV1",
    value: function apiAuthenticationTokenV1(apiKey, organizationId, languageId, sessionId, json, signal) {
      var _this26 = this;
      var url_ = this.baseUrl + "/api/authentication/token-v1?";
      if (apiKey === null) throw new Error("The parameter 'apiKey' cannot be null.");else if (apiKey !== undefined) url_ += "apiKey=" + encodeURIComponent("" + apiKey) + "&";
      if (organizationId === null) throw new Error("The parameter 'organizationId' cannot be null.");else if (organizationId !== undefined) url_ += "organizationId=" + encodeURIComponent("" + organizationId) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "languageId=" + encodeURIComponent("" + languageId) + "&";
      if (sessionId === null) throw new Error("The parameter 'sessionId' cannot be null.");else if (sessionId !== undefined) url_ += "sessionId=" + encodeURIComponent("" + sessionId) + "&";
      if (json === null) throw new Error("The parameter 'json' cannot be null.");else if (json !== undefined) url_ += "json=" + encodeURIComponent("" + json) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this26.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this26.processApiAuthenticationTokenV1(_response);
      });
    }
  }, {
    key: "processApiAuthenticationTokenV1",
    value: function processApiAuthenticationTokenV1(response) {
      var _this27 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this27.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this27.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this27.jsonParseReviver);
          return result200;
        });
      } else if (status === 401) {
        return response.text().then(function (_responseText) {
          var result401 = null;
          result401 = _responseText === "" ? null : JSON.parse(_responseText, _this27.jsonParseReviver);
          return throwException("Unauthorized", status, _responseText, _headers, result401);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Same as "api/authentication/token", with "BV Online" key is supplied.
    This method should be used by Online React
     * @param apiKey (optional) The api key that is used for signing in
     * @param languageId (optional) Language Id to use in responses (default is 2/english)
     * @param sessionId (optional) Add this if you want to sign in to a specific session
     * @param json (optional) If you want the returned token to be serialized as json (xxx / "xxx").
    Some generated clients might wish to use this for simplicity.
     * @param organizationId (optional) This org id is ONLY used for org specific translations.
     * @return Success
     */
  }, {
    key: "apiAuthenticationOnlineTokenV1",
    value: function apiAuthenticationOnlineTokenV1(apiKey, languageId, sessionId, json, organizationId, signal) {
      var _this28 = this;
      var url_ = this.baseUrl + "/api/authentication/online-token-v1?";
      if (apiKey === null) throw new Error("The parameter 'apiKey' cannot be null.");else if (apiKey !== undefined) url_ += "ApiKey=" + encodeURIComponent("" + apiKey) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (sessionId === null) throw new Error("The parameter 'sessionId' cannot be null.");else if (sessionId !== undefined) url_ += "SessionId=" + encodeURIComponent("" + sessionId) + "&";
      if (json === null) throw new Error("The parameter 'json' cannot be null.");else if (json !== undefined) url_ += "Json=" + encodeURIComponent("" + json) + "&";
      if (organizationId === null) throw new Error("The parameter 'organizationId' cannot be null.");else if (organizationId !== undefined) url_ += "OrganizationId=" + encodeURIComponent("" + organizationId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this28.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this28.processApiAuthenticationOnlineTokenV1(_response);
      });
    }
  }, {
    key: "processApiAuthenticationOnlineTokenV1",
    value: function processApiAuthenticationOnlineTokenV1(response) {
      var _this29 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this29.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this29.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this29.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Exchange an API key for a Json Web Token.
    We also add the Expires ticks as a response header so that caller can easily see
    if the token is expired without inspecting the token body.
     * @param apiKey (optional) The api key that is used for signing in
     * @param languageId (optional) Language Id to use in responses (default is 2/english)
     * @param sessionId (optional) Add this if you want to sign in to a specific session
     * @param json (optional) If you want the returned token to be serialized as json (xxx / "xxx").
    Some generated clients might wish to use this for simplicity.
     * @param organizationId (optional) This org id is ONLY used for org specific translations.
     * @return Success
     */
  }, {
    key: "apiAuthenticationTokenV2",
    value: function apiAuthenticationTokenV2(apiKey, languageId, sessionId, json, organizationId, signal) {
      var _this30 = this;
      var url_ = this.baseUrl + "/api/authentication/token-v2?";
      if (apiKey === null) throw new Error("The parameter 'apiKey' cannot be null.");else if (apiKey !== undefined) url_ += "ApiKey=" + encodeURIComponent("" + apiKey) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (sessionId === null) throw new Error("The parameter 'sessionId' cannot be null.");else if (sessionId !== undefined) url_ += "SessionId=" + encodeURIComponent("" + sessionId) + "&";
      if (json === null) throw new Error("The parameter 'json' cannot be null.");else if (json !== undefined) url_ += "Json=" + encodeURIComponent("" + json) + "&";
      if (organizationId === null) throw new Error("The parameter 'organizationId' cannot be null.");else if (organizationId !== undefined) url_ += "OrganizationId=" + encodeURIComponent("" + organizationId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this30.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this30.processApiAuthenticationTokenV2(_response);
      });
    }
  }, {
    key: "processApiAuthenticationTokenV2",
    value: function processApiAuthenticationTokenV2(response) {
      var _this31 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this31.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this31.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this31.jsonParseReviver);
          return result200;
        });
      } else if (status === 401) {
        return response.text().then(function (_responseText) {
          var result401 = null;
          result401 = _responseText === "" ? null : JSON.parse(_responseText, _this31.jsonParseReviver);
          return throwException("Unauthorized", status, _responseText, _headers, result401);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Add a bookable alternative (accommodation room, conference room) to a basket.
    If you do not specify a basketId, a new basket will be created.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsRoomsAddV1",
    value: function basketsRoomsAddV1(body, signal) {
      var _this32 = this;
      var url_ = this.baseUrl + "/baskets/rooms/add-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PATCH",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this32.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this32.processBasketsRoomsAddV1(_response);
      });
    }
  }, {
    key: "processBasketsRoomsAddV1",
    value: function processBasketsRoomsAddV1(response) {
      var _this33 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this33.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this33.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this33.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Add a list of bookable alternatives to the same basket.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsBatchV1",
    value: function basketsBatchV1(body, signal) {
      var _this34 = this;
      var url_ = this.baseUrl + "/baskets/batch-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PATCH",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this34.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this34.processBasketsBatchV1(_response);
      });
    }
  }, {
    key: "processBasketsBatchV1",
    value: function processBasketsBatchV1(response) {
      var _this35 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this35.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this35.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this35.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Create a basket for an existing booking (edit reservation).
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsEditV1Post",
    value: function basketsEditV1Post(body, signal) {
      var _this36 = this;
      var url_ = this.baseUrl + "/baskets/edit-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this36.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this36.processBasketsEditV1Post(_response);
      });
    }
  }, {
    key: "processBasketsEditV1Post",
    value: function processBasketsEditV1Post(response) {
      var _this37 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this37.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this37.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this37.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Add a bookable alternative to a basket for an existing booking.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsEditV1Patch",
    value: function basketsEditV1Patch(body, signal) {
      var _this38 = this;
      var url_ = this.baseUrl + "/baskets/edit-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PATCH",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this38.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this38.processBasketsEditV1Patch(_response);
      });
    }
  }, {
    key: "processBasketsEditV1Patch",
    value: function processBasketsEditV1Patch(response) {
      var _this39 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this39.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this39.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this39.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Delete the current basket in the user session.
     * @return Success
     */
  }, {
    key: "basketsEditV1Delete",
    value: function basketsEditV1Delete(body, signal) {
      var _this40 = this;
      var url_ = this.baseUrl + "/baskets/edit-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "DELETE",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this40.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this40.processBasketsEditV1Delete(_response);
      });
    }
  }, {
    key: "processBasketsEditV1Delete",
    value: function processBasketsEditV1Delete(response) {
      var _this41 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this41.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this41.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this41.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get available optional cancellation insurance add-ons.
     * @param languageId (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsCancellationInsuranceV1Get",
    value: function basketsCancellationInsuranceV1Get(languageId, channelId, signal) {
      var _this42 = this;
      var url_ = this.baseUrl + "/baskets/cancellation-insurance-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this42.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this42.processBasketsCancellationInsuranceV1Get(_response);
      });
    }
  }, {
    key: "processBasketsCancellationInsuranceV1Get",
    value: function processBasketsCancellationInsuranceV1Get(response) {
      var _this43 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this43.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this43.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this43.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Update the selected optional cancellation insurance add-on.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsCancellationInsuranceV1Put",
    value: function basketsCancellationInsuranceV1Put(body, signal) {
      var _this44 = this;
      var url_ = this.baseUrl + "/baskets/cancellation-insurance-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PUT",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this44.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this44.processBasketsCancellationInsuranceV1Put(_response);
      });
    }
  }, {
    key: "processBasketsCancellationInsuranceV1Put",
    value: function processBasketsCancellationInsuranceV1Put(response) {
      var _this45 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this45.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this45.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this45.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Remove rooms and related add-ons from the current basket in the user session.
     * @return Success
     */
  }, {
    key: "basketsRoomsRemoveV1",
    value: function basketsRoomsRemoveV1(body, signal) {
      var _this46 = this;
      var url_ = this.baseUrl + "/baskets/rooms/remove-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "DELETE",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this46.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this46.processBasketsRoomsRemoveV1(_response);
      });
    }
  }, {
    key: "processBasketsRoomsRemoveV1",
    value: function processBasketsRoomsRemoveV1(response) {
      var _this47 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this47.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this47.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this47.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get the basket with basket id in the user session.
     * @param includePaymentHistory (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsBasketV1",
    value: function basketsBasketV1(includePaymentHistory, channelId, signal) {
      var _this48 = this;
      var url_ = this.baseUrl + "/baskets/basket-v1?";
      if (includePaymentHistory === null) throw new Error("The parameter 'includePaymentHistory' cannot be null.");else if (includePaymentHistory !== undefined) url_ += "IncludePaymentHistory=" + encodeURIComponent("" + includePaymentHistory) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this48.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this48.processBasketsBasketV1(_response);
      });
    }
  }, {
    key: "processBasketsBasketV1",
    value: function processBasketsBasketV1(response) {
      var _this49 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this49.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this49.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this49.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Update an existing basket version or create a new basket (if the basketId is null).
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsUpdateBasketV1",
    value: function basketsUpdateBasketV1(body, signal) {
      var _this50 = this;
      var url_ = this.baseUrl + "/baskets/update-basket-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PUT",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this50.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this50.processBasketsUpdateBasketV1(_response);
      });
    }
  }, {
    key: "processBasketsUpdateBasketV1",
    value: function processBasketsUpdateBasketV1(response) {
      var _this51 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this51.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this51.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this51.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Apply promotion code and update discount to the current basket in the user session.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsDiscountV1",
    value: function basketsDiscountV1(body, signal) {
      var _this52 = this;
      var url_ = this.baseUrl + "/baskets/discount-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PUT",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this52.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this52.processBasketsDiscountV1(_response);
      });
    }
  }, {
    key: "processBasketsDiscountV1",
    value: function processBasketsDiscountV1(response) {
      var _this53 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this53.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this53.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this53.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Clear all items in the current basket in the user session.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsClearBasketV1",
    value: function basketsClearBasketV1(body, signal) {
      var _this54 = this;
      var url_ = this.baseUrl + "/baskets/clear-basket-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "DELETE",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this54.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this54.processBasketsClearBasketV1(_response);
      });
    }
  }, {
    key: "processBasketsClearBasketV1",
    value: function processBasketsClearBasketV1(response) {
      var _this55 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this55.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this55.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this55.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get check-out conditions.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsCheckoutConditionsV1",
    value: function basketsCheckoutConditionsV1(channelId, signal) {
      var _this56 = this;
      var url_ = this.baseUrl + "/baskets/checkout-conditions-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this56.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this56.processBasketsCheckoutConditionsV1(_response);
      });
    }
  }, {
    key: "processBasketsCheckoutConditionsV1",
    value: function processBasketsCheckoutConditionsV1(response) {
      var _this57 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this57.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this57.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this57.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all supported online payment methods for the current basket in the user session.
     * @param hostUrl (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsOnlinePaymentMethodsV1",
    value: function basketsOnlinePaymentMethodsV1(hostUrl, channelId, signal) {
      var _this58 = this;
      var url_ = this.baseUrl + "/baskets/online-payment-methods-v1?";
      if (hostUrl === null) throw new Error("The parameter 'hostUrl' cannot be null.");else if (hostUrl !== undefined) url_ += "HostUrl=" + encodeURIComponent("" + hostUrl) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this58.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this58.processBasketsOnlinePaymentMethodsV1(_response);
      });
    }
  }, {
    key: "processBasketsOnlinePaymentMethodsV1",
    value: function processBasketsOnlinePaymentMethodsV1(response) {
      var _this59 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this59.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this59.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this59.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get mandatory add-on packages from the current basket.
     * @param internalRoomIds (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsMandatoryDynamicAddonPackagesV1",
    value: function basketsMandatoryDynamicAddonPackagesV1(internalRoomIds, channelId, signal) {
      var _this60 = this;
      var url_ = this.baseUrl + "/baskets/mandatory-dynamic-addon-packages-v1?";
      if (internalRoomIds === null) throw new Error("The parameter 'internalRoomIds' cannot be null.");else if (internalRoomIds !== undefined) internalRoomIds && internalRoomIds.forEach(function (item) {
        url_ += "InternalRoomIds=" + encodeURIComponent("" + item) + "&";
      });
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this60.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this60.processBasketsMandatoryDynamicAddonPackagesV1(_response);
      });
    }
  }, {
    key: "processBasketsMandatoryDynamicAddonPackagesV1",
    value: function processBasketsMandatoryDynamicAddonPackagesV1(response) {
      var _this61 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this61.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this61.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this61.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get mandatory add-on timeslot info from the current basket in the user session.
     * @param internalBookingId (optional) 
     * @param internalRoomIds (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsMandatoryAddonTimeslotsV1",
    value: function basketsMandatoryAddonTimeslotsV1(internalBookingId, internalRoomIds, channelId, signal) {
      var _this62 = this;
      var url_ = this.baseUrl + "/baskets/mandatory-addon-timeslots-v1?";
      if (internalBookingId === null) throw new Error("The parameter 'internalBookingId' cannot be null.");else if (internalBookingId !== undefined) url_ += "InternalBookingId=" + encodeURIComponent("" + internalBookingId) + "&";
      if (internalRoomIds === null) throw new Error("The parameter 'internalRoomIds' cannot be null.");else if (internalRoomIds !== undefined) internalRoomIds && internalRoomIds.forEach(function (item) {
        url_ += "InternalRoomIds=" + encodeURIComponent("" + item) + "&";
      });
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this62.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this62.processBasketsMandatoryAddonTimeslotsV1(_response);
      });
    }
  }, {
    key: "processBasketsMandatoryAddonTimeslotsV1",
    value: function processBasketsMandatoryAddonTimeslotsV1(response) {
      var _this63 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this63.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this63.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this63.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get optional add-on timeslots from the current basket in the user session.
     * @param addOnId (optional) 
     * @param numberOfPersons (optional) 
     * @param availableDates (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "basketsOptionalAddonTimeslotsV1",
    value: function basketsOptionalAddonTimeslotsV1(addOnId, numberOfPersons, availableDates, channelId, signal) {
      var _this64 = this;
      var url_ = this.baseUrl + "/baskets/optional-addon-timeslots-v1?";
      if (addOnId === null) throw new Error("The parameter 'addOnId' cannot be null.");else if (addOnId !== undefined) url_ += "AddOnId=" + encodeURIComponent("" + addOnId) + "&";
      if (numberOfPersons === null) throw new Error("The parameter 'numberOfPersons' cannot be null.");else if (numberOfPersons !== undefined) url_ += "NumberOfPersons=" + encodeURIComponent("" + numberOfPersons) + "&";
      if (availableDates === null) throw new Error("The parameter 'availableDates' cannot be null.");else if (availableDates !== undefined) availableDates && availableDates.forEach(function (item_) {
        url_ += "AvailableDates=" + encodeURIComponent(item_ ? "" + item_.toJSON() : "null") + "&";
      });
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this64.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this64.processBasketsOptionalAddonTimeslotsV1(_response);
      });
    }
  }, {
    key: "processBasketsOptionalAddonTimeslotsV1",
    value: function processBasketsOptionalAddonTimeslotsV1(response) {
      var _this65 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this65.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this65.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this65.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Clean applied gift vouchers for this basket, also re-apply them into basket again
    to make sure the amount used from gift vouchers are correct.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "basketsReapplyGiftVouchersInBasketV1",
    value: function basketsReapplyGiftVouchersInBasketV1(body, signal) {
      var _this66 = this;
      var url_ = this.baseUrl + "/baskets/reapply-gift-vouchers-in-basket-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "PUT",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this66.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this66.processBasketsReapplyGiftVouchersInBasketV1(_response);
      });
    }
  }, {
    key: "processBasketsReapplyGiftVouchersInBasketV1",
    value: function processBasketsReapplyGiftVouchersInBasketV1(response) {
      var _this67 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this67.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this67.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this67.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a booking by a booking code. Use GET /bookings instead.
     * @param bookingCode (optional) 
     * @param languageId (optional) Optionally provide a language id used for when translating booking data in the response
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "bookingsBookingV1",
    value: function bookingsBookingV1(bookingCode, languageId, channelId, signal) {
      var _this68 = this;
      var url_ = this.baseUrl + "/bookings/booking-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this68.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this68.processBookingsBookingV1(_response);
      });
    }
  }, {
    key: "processBookingsBookingV1",
    value: function processBookingsBookingV1(response) {
      var _this69 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this69.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this69.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this69.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all booking versions by a booking code. Use GET /bookings/all-versions instead.
     * @param bookingCode (optional) 
     * @param languageId (optional) Optionally provide a language id used for when translating booking data in the response
     * @param channelId The id of the channel
     * @return Success
     * @deprecated
     */
  }, {
    key: "bookingsBookingAllversionsV1",
    value: function bookingsBookingAllversionsV1(bookingCode, languageId, channelId, signal) {
      var _this70 = this;
      var url_ = this.baseUrl + "/bookings/booking/allversions-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this70.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this70.processBookingsBookingAllversionsV1(_response);
      });
    }
  }, {
    key: "processBookingsBookingAllversionsV1",
    value: function processBookingsBookingAllversionsV1(response) {
      var _this71 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this71.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this71.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this71.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all booking versions by a booking code.
     * @param bookingCode (optional) 
     * @param languageId (optional) Optionally provide a language id used for when translating booking data in the response
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "bookingsAllVersionsV1",
    value: function bookingsAllVersionsV1(bookingCode, languageId, channelId, signal) {
      var _this72 = this;
      var url_ = this.baseUrl + "/bookings/all-versions-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this72.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this72.processBookingsAllVersionsV1(_response);
      });
    }
  }, {
    key: "processBookingsAllVersionsV1",
    value: function processBookingsAllVersionsV1(response) {
      var _this73 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this73.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this73.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this73.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get booking codes. Use GET /bookings/booking-codes instead.
     * @param updatedSinceFilter (optional) Optionally provide a date/time that will be used
    to filter the result and only include booking codes
    that has been updated since this date/time
     * @param channelId The id of the channel
     * @return Success
     * @deprecated
     */
  }, {
    key: "bookingsBookingcodesV1",
    value: function bookingsBookingcodesV1(updatedSinceFilter, channelId, signal) {
      var _this74 = this;
      var url_ = this.baseUrl + "/bookings/bookingcodes-v1?";
      if (updatedSinceFilter === null) throw new Error("The parameter 'updatedSinceFilter' cannot be null.");else if (updatedSinceFilter !== undefined) url_ += "UpdatedSinceFilter=" + encodeURIComponent(updatedSinceFilter ? "" + updatedSinceFilter.toISOString() : "") + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this74.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this74.processBookingsBookingcodesV1(_response);
      });
    }
  }, {
    key: "processBookingsBookingcodesV1",
    value: function processBookingsBookingcodesV1(response) {
      var _this75 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this75.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this75.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this75.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get booking codes.
     * @param updatedSinceFilter (optional) Optionally provide a date/time that will be used
    to filter the result and only include booking codes
    that has been updated since this date/time
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "bookingsBookingCodesV1",
    value: function bookingsBookingCodesV1(updatedSinceFilter, channelId, signal) {
      var _this76 = this;
      var url_ = this.baseUrl + "/bookings/booking-codes-v1?";
      if (updatedSinceFilter === null) throw new Error("The parameter 'updatedSinceFilter' cannot be null.");else if (updatedSinceFilter !== undefined) url_ += "UpdatedSinceFilter=" + encodeURIComponent(updatedSinceFilter ? "" + updatedSinceFilter.toISOString() : "") + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this76.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this76.processBookingsBookingCodesV1(_response);
      });
    }
  }, {
    key: "processBookingsBookingCodesV1",
    value: function processBookingsBookingCodesV1(response) {
      var _this77 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this77.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this77.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this77.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all optional add-ons that can be added to the booking.
     * @param bookingCode (optional) 
     * @param includeImageUrls (optional) 
     * @param isInEditMode (optional) 
     * @param roomIds (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "bookingsAvailableAddonsV1",
    value: function bookingsAvailableAddonsV1(bookingCode, includeImageUrls, isInEditMode, roomIds, channelId, signal) {
      var _this78 = this;
      var url_ = this.baseUrl + "/bookings/available-addons-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (includeImageUrls === null) throw new Error("The parameter 'includeImageUrls' cannot be null.");else if (includeImageUrls !== undefined) url_ += "IncludeImageUrls=" + encodeURIComponent("" + includeImageUrls) + "&";
      if (isInEditMode === null) throw new Error("The parameter 'isInEditMode' cannot be null.");else if (isInEditMode !== undefined) url_ += "IsInEditMode=" + encodeURIComponent("" + isInEditMode) + "&";
      if (roomIds === null) throw new Error("The parameter 'roomIds' cannot be null.");else if (roomIds !== undefined) roomIds && roomIds.forEach(function (item) {
        url_ += "RoomIds=" + encodeURIComponent("" + item) + "&";
      });
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this78.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this78.processBookingsAvailableAddonsV1(_response);
      });
    }
  }, {
    key: "processBookingsAvailableAddonsV1",
    value: function processBookingsAvailableAddonsV1(response) {
      var _this79 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this79.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this79.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this79.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all room upgrades that are available.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "bookingsAvailableRoomUpgradesV1",
    value: function bookingsAvailableRoomUpgradesV1(body, signal) {
      var _this80 = this;
      var url_ = this.baseUrl + "/bookings/available-room-upgrades-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this80.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this80.processBookingsAvailableRoomUpgradesV1(_response);
      });
    }
  }, {
    key: "processBookingsAvailableRoomUpgradesV1",
    value: function processBookingsAvailableRoomUpgradesV1(response) {
      var _this81 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this81.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this81.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this81.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Cancel the current booking.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "bookingsCancelReservationV1",
    value: function bookingsCancelReservationV1(body, signal) {
      var _this82 = this;
      var url_ = this.baseUrl + "/bookings/cancel-reservation-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "DELETE",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this82.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this82.processBookingsCancelReservationV1(_response);
      });
    }
  }, {
    key: "processBookingsCancelReservationV1",
    value: function processBookingsCancelReservationV1(response) {
      var _this83 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this83.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this83.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this83.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Commit the current booking.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "bookingsCommitV1",
    value: function bookingsCommitV1(body, signal) {
      var _this84 = this;
      var url_ = this.baseUrl + "/bookings/commit-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this84.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this84.processBookingsCommitV1(_response);
      });
    }
  }, {
    key: "processBookingsCommitV1",
    value: function processBookingsCommitV1(response) {
      var _this85 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this85.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this85.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this85.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get edit url of a booking. Use GET /bookings/edit-url instead.
     * @param bookingCode (optional) 
     * @return Success
     * @deprecated
     */
  }, {
    key: "bookingsBookingEditurlV1",
    value: function bookingsBookingEditurlV1(bookingCode, signal) {
      var _this86 = this;
      var url_ = this.baseUrl + "/bookings/booking/editurl-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this86.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this86.processBookingsBookingEditurlV1(_response);
      });
    }
  }, {
    key: "processBookingsBookingEditurlV1",
    value: function processBookingsBookingEditurlV1(response) {
      var _this87 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this87.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this87.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this87.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get edit url of a booking.
     * @param bookingCode (optional) 
     * @return Success
     */
  }, {
    key: "bookingsEditUrlV1",
    value: function bookingsEditUrlV1(bookingCode, signal) {
      var _this88 = this;
      var url_ = this.baseUrl + "/bookings/edit-url-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this88.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this88.processBookingsEditUrlV1(_response);
      });
    }
  }, {
    key: "processBookingsEditUrlV1",
    value: function processBookingsEditUrlV1(response) {
      var _this89 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this89.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this89.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this89.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Save cc info from pcibooking on a bookingcustomer in a basket.
     * @param cardToken (optional) 
     * @param cardType (optional) 
     * @param cardNumber (optional) 
     * @param expiration (optional) 
     * @param cardHolderName (optional) 
     * @param basketId (optional) 
     * @param voucherBasketInfoId (optional) 
     * @param bookingRequestId (optional) 
     * @return Success
     */
  }, {
    key: "bookingsSetCreditcardInfoV1",
    value: function bookingsSetCreditcardInfoV1(cardToken, cardType, cardNumber, expiration, cardHolderName, basketId, voucherBasketInfoId, bookingRequestId, signal) {
      var _this90 = this;
      var url_ = this.baseUrl + "/bookings/set-creditcard-info-v1?";
      if (cardToken === null) throw new Error("The parameter 'cardToken' cannot be null.");else if (cardToken !== undefined) url_ += "CardToken=" + encodeURIComponent("" + cardToken) + "&";
      if (cardType === null) throw new Error("The parameter 'cardType' cannot be null.");else if (cardType !== undefined) url_ += "CardType=" + encodeURIComponent("" + cardType) + "&";
      if (cardNumber === null) throw new Error("The parameter 'cardNumber' cannot be null.");else if (cardNumber !== undefined) url_ += "CardNumber=" + encodeURIComponent("" + cardNumber) + "&";
      if (expiration === null) throw new Error("The parameter 'expiration' cannot be null.");else if (expiration !== undefined) url_ += "Expiration=" + encodeURIComponent("" + expiration) + "&";
      if (cardHolderName === null) throw new Error("The parameter 'cardHolderName' cannot be null.");else if (cardHolderName !== undefined) url_ += "CardHolderName=" + encodeURIComponent("" + cardHolderName) + "&";
      if (basketId === null) throw new Error("The parameter 'basketId' cannot be null.");else if (basketId !== undefined) url_ += "BasketId=" + encodeURIComponent("" + basketId) + "&";
      if (voucherBasketInfoId === null) throw new Error("The parameter 'voucherBasketInfoId' cannot be null.");else if (voucherBasketInfoId !== undefined) url_ += "VoucherBasketInfoId=" + encodeURIComponent("" + voucherBasketInfoId) + "&";
      if (bookingRequestId === null) throw new Error("The parameter 'bookingRequestId' cannot be null.");else if (bookingRequestId !== undefined) url_ += "BookingRequestId=" + encodeURIComponent("" + bookingRequestId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {}
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this90.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this90.processBookingsSetCreditcardInfoV1(_response);
      });
    }
  }, {
    key: "processBookingsSetCreditcardInfoV1",
    value: function processBookingsSetCreditcardInfoV1(response) {
      var _this91 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this91.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this91.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          return;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get identifiers for all campaigns.
     * @param isHighlighted (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "campaignsV1",
    value: function campaignsV1(isHighlighted, channelId, signal) {
      var _this92 = this;
      var url_ = this.baseUrl + "/campaigns/v1?";
      if (isHighlighted === null) throw new Error("The parameter 'isHighlighted' cannot be null.");else if (isHighlighted !== undefined) url_ += "IsHighlighted=" + encodeURIComponent("" + isHighlighted) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this92.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this92.processCampaignsV1(_response);
      });
    }
  }, {
    key: "processCampaignsV1",
    value: function processCampaignsV1(response) {
      var _this93 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this93.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this93.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this93.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Unlock a campaign with one or more methods: Promotion Code, Email/Password, Authentication Service.
     * @return Success
     */
  }, {
    key: "campaignsUnlockV1",
    value: function campaignsUnlockV1(body, signal) {
      var _this94 = this;
      var url_ = this.baseUrl + "/campaigns/unlock-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this94.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this94.processCampaignsUnlockV1(_response);
      });
    }
  }, {
    key: "processCampaignsUnlockV1",
    value: function processCampaignsUnlockV1(response) {
      var _this95 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this95.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this95.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this95.jsonParseReviver);
          return result200;
        });
      } else if (status === 400) {
        return response.text().then(function (_responseText) {
          var result400 = null;
          result400 = _responseText === "" ? null : JSON.parse(_responseText, _this95.jsonParseReviver);
          return throwException("Bad Request", status, _responseText, _headers, result400);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get Dan Hostel discounted card types.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "campaignsUnlockCardTypesDanhostelV1",
    value: function campaignsUnlockCardTypesDanhostelV1(channelId, signal) {
      var _this96 = this;
      var url_ = this.baseUrl + "/campaigns/unlock/card-types/danhostel-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this96.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this96.processCampaignsUnlockCardTypesDanhostelV1(_response);
      });
    }
  }, {
    key: "processCampaignsUnlockCardTypesDanhostelV1",
    value: function processCampaignsUnlockCardTypesDanhostelV1(response) {
      var _this97 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this97.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this97.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this97.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get info of all channels owned by an organization. Use GET /channel/organization-channels instead.
     * @param channelId The id of the channel
     * @return Success
     * @deprecated
     */
  }, {
    key: "channelOrganizationchannelsV1",
    value: function channelOrganizationchannelsV1(channelId, signal) {
      var _this98 = this;
      var url_ = this.baseUrl + "/channel/organizationchannels-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this98.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this98.processChannelOrganizationchannelsV1(_response);
      });
    }
  }, {
    key: "processChannelOrganizationchannelsV1",
    value: function processChannelOrganizationchannelsV1(response) {
      var _this99 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this99.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this99.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this99.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get info of all channels owned by an organization.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "channelOrganizationChannelsV1",
    value: function channelOrganizationChannelsV1(channelId, signal) {
      var _this100 = this;
      var url_ = this.baseUrl + "/channel/organization-channels-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this100.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this100.processChannelOrganizationChannelsV1(_response);
      });
    }
  }, {
    key: "processChannelOrganizationChannelsV1",
    value: function processChannelOrganizationChannelsV1(response) {
      var _this101 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this101.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this101.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this101.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Returns the custom style of a channel.
     * @param channelId (optional) 
     * @return Success
     */
  }, {
    key: "channelStyleV1",
    value: function channelStyleV1(channelId, signal) {
      var _this102 = this;
      var url_ = this.baseUrl + "/channel/style-v1?";
      if (channelId === null) throw new Error("The parameter 'channelId' cannot be null.");else if (channelId !== undefined) url_ += "channelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this102.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this102.processChannelStyleV1(_response);
      });
    }
  }, {
    key: "processChannelStyleV1",
    value: function processChannelStyleV1(response) {
      var _this103 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this103.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this103.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this103.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Returns info about a channel.
     * @param channelId (optional) 
     * @return Success
     */
  }, {
    key: "channelInfoV1",
    value: function channelInfoV1(channelId, signal) {
      var _this104 = this;
      var url_ = this.baseUrl + "/channel/info-v1?";
      if (channelId === null) throw new Error("The parameter 'channelId' cannot be null.");else if (channelId !== undefined) url_ += "channelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this104.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this104.processChannelInfoV1(_response);
      });
    }
  }, {
    key: "processChannelInfoV1",
    value: function processChannelInfoV1(response) {
      var _this105 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this105.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this105.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this105.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Returns the seo mappings of one organization.
     * @param channelId (optional) 
     * @return Success
     */
  }, {
    key: "channelSeoMappingsV1",
    value: function channelSeoMappingsV1(channelId, signal) {
      var _this106 = this;
      var url_ = this.baseUrl + "/channel/seo-mappings-v1?";
      if (channelId === null) throw new Error("The parameter 'channelId' cannot be null.");else if (channelId !== undefined) url_ += "channelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this106.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this106.processChannelSeoMappingsV1(_response);
      });
    }
  }, {
    key: "processChannelSeoMappingsV1",
    value: function processChannelSeoMappingsV1(response) {
      var _this107 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this107.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this107.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this107.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Gets the checkout configuration for the active basket.
     * @param languageId (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "checkoutV1",
    value: function checkoutV1(languageId, channelId, signal) {
      var _this108 = this;
      var url_ = this.baseUrl + "/checkout/v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this108.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this108.processCheckoutV1(_response);
      });
    }
  }, {
    key: "processCheckoutV1",
    value: function processCheckoutV1(response) {
      var _this109 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this109.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this109.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this109.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Add a voucher number as payment to the active basket.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "checkoutVoucherNumberV1Post",
    value: function checkoutVoucherNumberV1Post(body, signal) {
      var _this110 = this;
      var url_ = this.baseUrl + "/checkout/voucher-number-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this110.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this110.processCheckoutVoucherNumberV1Post(_response);
      });
    }
  }, {
    key: "processCheckoutVoucherNumberV1Post",
    value: function processCheckoutVoucherNumberV1Post(response) {
      var _this111 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this111.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this111.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this111.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Remove a voucher number as payment to the active basket.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "checkoutVoucherNumberV1Delete",
    value: function checkoutVoucherNumberV1Delete(body, signal) {
      var _this112 = this;
      var url_ = this.baseUrl + "/checkout/voucher-number-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "DELETE",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this112.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this112.processCheckoutVoucherNumberV1Delete(_response);
      });
    }
  }, {
    key: "processCheckoutVoucherNumberV1Delete",
    value: function processCheckoutVoucherNumberV1Delete(response) {
      var _this113 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this113.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this113.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this113.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Validate that an email address can be used to sign up a new member.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "checkoutValidateNewMemberV1",
    value: function checkoutValidateNewMemberV1(body, signal) {
      var _this114 = this;
      var url_ = this.baseUrl + "/checkout/validate-new-member-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this114.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this114.processCheckoutValidateNewMemberV1(_response);
      });
    }
  }, {
    key: "processCheckoutValidateNewMemberV1",
    value: function processCheckoutValidateNewMemberV1(response) {
      var _this115 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this115.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this115.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this115.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get availability information for a whole conference calendar month.
     * @param year What year to use in the search.
     * @param month What month to use in the search.
     * @param withAccommodation (optional) Conference search with or without accommodation, default is without accommodation
     * @param firstDayOfWeek (optional) This will help to get the full weeks in the calendar month
     * @param conferenceRoomId (optional) The id of the conference room id if you want a calendar only for a specific conference room
     * @param allowCalendarToMoveForward (optional) If set to true, the calendar will have the month and year that contains the next available alternative.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "conferenceConferenceCalendarV1",
    value: function conferenceConferenceCalendarV1(year, month, withAccommodation, firstDayOfWeek, conferenceRoomId, allowCalendarToMoveForward, channelId, signal) {
      var _this116 = this;
      var url_ = this.baseUrl + "/conference/conference-calendar-v1?";
      if (year === undefined || year === null) throw new Error("The parameter 'year' must be defined and cannot be null.");else url_ += "Year=" + encodeURIComponent("" + year) + "&";
      if (month === undefined || month === null) throw new Error("The parameter 'month' must be defined and cannot be null.");else url_ += "Month=" + encodeURIComponent("" + month) + "&";
      if (withAccommodation === null) throw new Error("The parameter 'withAccommodation' cannot be null.");else if (withAccommodation !== undefined) url_ += "WithAccommodation=" + encodeURIComponent("" + withAccommodation) + "&";
      if (firstDayOfWeek === null) throw new Error("The parameter 'firstDayOfWeek' cannot be null.");else if (firstDayOfWeek !== undefined) url_ += "FirstDayOfWeek=" + encodeURIComponent("" + firstDayOfWeek) + "&";
      if (conferenceRoomId === null) throw new Error("The parameter 'conferenceRoomId' cannot be null.");else if (conferenceRoomId !== undefined) url_ += "ConferenceRoomId=" + encodeURIComponent("" + conferenceRoomId) + "&";
      if (allowCalendarToMoveForward === null) throw new Error("The parameter 'allowCalendarToMoveForward' cannot be null.");else if (allowCalendarToMoveForward !== undefined) url_ += "AllowCalendarToMoveForward=" + encodeURIComponent("" + allowCalendarToMoveForward) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this116.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this116.processConferenceConferenceCalendarV1(_response);
      });
    }
  }, {
    key: "processConferenceConferenceCalendarV1",
    value: function processConferenceConferenceCalendarV1(response) {
      var _this117 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this117.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this117.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this117.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all available conference rooms.
     * @param id (optional) The id of a specific conference room.
     * @param languageId (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "conferenceRoomsV1",
    value: function conferenceRoomsV1(id, languageId, channelId, signal) {
      var _this118 = this;
      var url_ = this.baseUrl + "/conference/rooms-v1?";
      if (id === null) throw new Error("The parameter 'id' cannot be null.");else if (id !== undefined) url_ += "Id=" + encodeURIComponent("" + id) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this118.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this118.processConferenceRoomsV1(_response);
      });
    }
  }, {
    key: "processConferenceRoomsV1",
    value: function processConferenceRoomsV1(response) {
      var _this119 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this119.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this119.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this119.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Search for available conference rooms from a specific date with a number of days.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "conferenceSearchV1",
    value: function conferenceSearchV1(body, signal) {
      var _this120 = this;
      var url_ = this.baseUrl + "/conference/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this120.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this120.processConferenceSearchV1(_response);
      });
    }
  }, {
    key: "processConferenceSearchV1",
    value: function processConferenceSearchV1(response) {
      var _this121 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this121.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this121.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this121.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this121.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Search for conference properties on a multi-property
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "conferenceMultipropertySearchV1",
    value: function conferenceMultipropertySearchV1(body, signal) {
      var _this122 = this;
      var url_ = this.baseUrl + "/conference/multiproperty/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this122.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this122.processConferenceMultipropertySearchV1(_response);
      });
    }
  }, {
    key: "processConferenceMultipropertySearchV1",
    value: function processConferenceMultipropertySearchV1(response) {
      var _this123 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this123.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this123.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this123.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this123.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Search for available accommodation rooms with search parameters from session
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "conferenceAccommodationSearchV1",
    value: function conferenceAccommodationSearchV1(body, signal) {
      var _this124 = this;
      var url_ = this.baseUrl + "/conference/accommodation/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this124.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this124.processConferenceAccommodationSearchV1(_response);
      });
    }
  }, {
    key: "processConferenceAccommodationSearchV1",
    value: function processConferenceAccommodationSearchV1(response) {
      var _this125 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this125.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this125.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this125.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this125.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Search for optional-extras which can be added to a conference basket
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "conferenceOptionalExtrasSearchV1",
    value: function conferenceOptionalExtrasSearchV1(body, signal) {
      var _this126 = this;
      var url_ = this.baseUrl + "/conference/optional-extras/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this126.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this126.processConferenceOptionalExtrasSearchV1(_response);
      });
    }
  }, {
    key: "processConferenceOptionalExtrasSearchV1",
    value: function processConferenceOptionalExtrasSearchV1(response) {
      var _this127 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this127.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this127.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this127.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this127.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Register an user account.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "devportalRegisterV1",
    value: function devportalRegisterV1(body, signal) {
      var _this128 = this;
      var url_ = this.baseUrl + "/devportal/register-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this128.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this128.processDevportalRegisterV1(_response);
      });
    }
  }, {
    key: "processDevportalRegisterV1",
    value: function processDevportalRegisterV1(response) {
      var _this129 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this129.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this129.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this129.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Verify an user account by user id.
     * @param id (optional) 
     * @return Success
     */
  }, {
    key: "devportalVerifyV1",
    value: function devportalVerifyV1(id, signal) {
      var _this130 = this;
      var url_ = this.baseUrl + "/devportal/verify-v1?";
      if (id === null) throw new Error("The parameter 'id' cannot be null.");else if (id !== undefined) url_ += "id=" + encodeURIComponent("" + id) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "POST",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this130.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this130.processDevportalVerifyV1(_response);
      });
    }
  }, {
    key: "processDevportalVerifyV1",
    value: function processDevportalVerifyV1(response) {
      var _this131 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this131.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this131.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this131.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get online template from an url.
     * @param url (optional) 
     * @return Success
     */
  }, {
    key: "devportalGetOnlineHeaderV1",
    value: function devportalGetOnlineHeaderV1(url, signal) {
      var _this132 = this;
      var url_ = this.baseUrl + "/devportal/get-online-header-v1?";
      if (url === null) throw new Error("The parameter 'url' cannot be null.");else if (url !== undefined) url_ += "url=" + encodeURIComponent("" + url) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this132.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this132.processDevportalGetOnlineHeaderV1(_response);
      });
    }
  }, {
    key: "processDevportalGetOnlineHeaderV1",
    value: function processDevportalGetOnlineHeaderV1(response) {
      var _this133 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this133.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this133.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this133.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Login with email.
     * @param email (optional) 
     * @return Success
     */
  }, {
    key: "devportalLoginV1",
    value: function devportalLoginV1(email, signal) {
      var _this134 = this;
      var url_ = this.baseUrl + "/devportal/login-v1?";
      if (email === null) throw new Error("The parameter 'email' cannot be null.");else if (email !== undefined) url_ += "email=" + encodeURIComponent("" + email) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "POST",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this134.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this134.processDevportalLoginV1(_response);
      });
    }
  }, {
    key: "processDevportalLoginV1",
    value: function processDevportalLoginV1(response) {
      var _this135 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this135.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this135.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this135.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get hotel information.
     * @param languageId (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "hotelInfoV1",
    value: function hotelInfoV1(languageId, channelId, signal) {
      var _this136 = this;
      var url_ = this.baseUrl + "/hotel/info-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this136.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this136.processHotelInfoV1(_response);
      });
    }
  }, {
    key: "processHotelInfoV1",
    value: function processHotelInfoV1(response) {
      var _this137 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this137.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this137.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this137.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all image albums.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "imagesAlbumsV1",
    value: function imagesAlbumsV1(channelId, signal) {
      var _this138 = this;
      var url_ = this.baseUrl + "/images/albums-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this138.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this138.processImagesAlbumsV1(_response);
      });
    }
  }, {
    key: "processImagesAlbumsV1",
    value: function processImagesAlbumsV1(response) {
      var _this139 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this139.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this139.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this139.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all images that either isn't connected to any album or
    is connected to a specific album if album id is supplied.
     * @param albumId (optional) The id of the album to get.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "imagesV1",
    value: function imagesV1(albumId, channelId, signal) {
      var _this140 = this;
      var url_ = this.baseUrl + "/images/v1?";
      if (albumId === null) throw new Error("The parameter 'albumId' cannot be null.");else if (albumId !== undefined) url_ += "AlbumId=" + encodeURIComponent("" + albumId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this140.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this140.processImagesV1(_response);
      });
    }
  }, {
    key: "processImagesV1",
    value: function processImagesV1(response) {
      var _this141 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this141.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this141.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this141.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a list of all articles.
     * @param languageId (optional) Optionally provide a language id to be used when translating
    the result data in the response object. Defaults to your current
    user session language id.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "instantwebArticlesV1",
    value: function instantwebArticlesV1(languageId, channelId, signal) {
      var _this142 = this;
      var url_ = this.baseUrl + "/instantweb/articles-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this142.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this142.processInstantwebArticlesV1(_response);
      });
    }
  }, {
    key: "processInstantwebArticlesV1",
    value: function processInstantwebArticlesV1(response) {
      var _this143 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this143.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this143.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this143.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get current instant web settings.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "instantwebSettingsV1",
    value: function instantwebSettingsV1(channelId, signal) {
      var _this144 = this;
      var url_ = this.baseUrl + "/instantweb/settings-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this144.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this144.processInstantwebSettingsV1(_response);
      });
    }
  }, {
    key: "processInstantwebSettingsV1",
    value: function processInstantwebSettingsV1(response) {
      var _this145 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this145.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this145.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this145.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all images connected to instant web.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "instantwebImagesV1",
    value: function instantwebImagesV1(channelId, signal) {
      var _this146 = this;
      var url_ = this.baseUrl + "/instantweb/images-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this146.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this146.processInstantwebImagesV1(_response);
      });
    }
  }, {
    key: "processInstantwebImagesV1",
    value: function processInstantwebImagesV1(response) {
      var _this147 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this147.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this147.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this147.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * List all active languages on a specific channel.
     * @param languageId (optional) Optionally provide a language id used for translating the response object.
    If you do not provide an id here, the default id of your session is used.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "localizationLanguagesV1",
    value: function localizationLanguagesV1(languageId, channelId, signal) {
      var _this148 = this;
      var url_ = this.baseUrl + "/localization/languages-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this148.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this148.processLocalizationLanguagesV1(_response);
      });
    }
  }, {
    key: "processLocalizationLanguagesV1",
    value: function processLocalizationLanguagesV1(response) {
      var _this149 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this149.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this149.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this149.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * List all countries.
     * @param languageId (optional) Optionally provide a language id used for translating the response object.
    If you do not provide an id here, the default id of your session is used.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "localizationCountriesV1",
    value: function localizationCountriesV1(languageId, channelId, signal) {
      var _this150 = this;
      var url_ = this.baseUrl + "/localization/countries-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this150.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this150.processLocalizationCountriesV1(_response);
      });
    }
  }, {
    key: "processLocalizationCountriesV1",
    value: function processLocalizationCountriesV1(response) {
      var _this151 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this151.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this151.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this151.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get translation phrases of the provided translation keys.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "localizationTranslationsV1",
    value: function localizationTranslationsV1(body, signal) {
      var _this152 = this;
      var url_ = this.baseUrl + "/localization/translations-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this152.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this152.processLocalizationTranslationsV1(_response);
      });
    }
  }, {
    key: "processLocalizationTranslationsV1",
    value: function processLocalizationTranslationsV1(response) {
      var _this153 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this153.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this153.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this153.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Create a log message.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "logV1",
    value: function logV1(body, signal) {
      var _this154 = this;
      var url_ = this.baseUrl + "/log/v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this154.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this154.processLogV1(_response);
      });
    }
  }, {
    key: "processLogV1",
    value: function processLogV1(response) {
      var _this155 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this155.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this155.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this155.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Searches for available accommodations on multiple channels between two specific dates.
    You need to specify search dates and at least one room configuration for the search.
    You may also use the different filters.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "multichannelSearchV1",
    value: function multichannelSearchV1(body, signal) {
      var _this156 = this;
      var url_ = this.baseUrl + "/multichannel/search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this156.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this156.processMultichannelSearchV1(_response);
      });
    }
  }, {
    key: "processMultichannelSearchV1",
    value: function processMultichannelSearchV1(response) {
      var _this157 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this157.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this157.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this157.jsonParseReviver);
          return result200;
        });
      } else if (status === 422) {
        return response.text().then(function (_responseText) {
          var result422 = null;
          result422 = _responseText === "" ? null : JSON.parse(_responseText, _this157.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result422);
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get information of hotels connected to a multi-property.
     * @param packageCategoryId (optional) The id of the multi property package category.
     * @param campaignId (optional) The id of the multi property campaign.
     * @param languageId (optional) Optionally provide a language id to be used for translating the response where available.
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesPropertiesV1",
    value: function multipropertiesPropertiesV1(packageCategoryId, campaignId, languageId, multiPropertyId, signal) {
      var _this158 = this;
      var url_ = this.baseUrl + "/multiproperties/properties-v1?";
      if (packageCategoryId === null) throw new Error("The parameter 'packageCategoryId' cannot be null.");else if (packageCategoryId !== undefined) url_ += "PackageCategoryId=" + encodeURIComponent("" + packageCategoryId) + "&";
      if (campaignId === null) throw new Error("The parameter 'campaignId' cannot be null.");else if (campaignId !== undefined) url_ += "CampaignId=" + encodeURIComponent("" + campaignId) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this158.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this158.processMultipropertiesPropertiesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesPropertiesV1",
    value: function processMultipropertiesPropertiesV1(response) {
      var _this159 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this159.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this159.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this159.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get booking codes of a multi-property. Use GET /multiproperties/booking-codes instead.
     * @param updatedSinceFilter (optional) Optionally provide a date/time that will be used
    to filter the result and only include booking codes
    that has been updated since this date/time
     * @param multiPropertyId The id of the multi property.
     * @return Success
     * @deprecated
     */
  }, {
    key: "multipropertiesBookingcodesV1",
    value: function multipropertiesBookingcodesV1(updatedSinceFilter, multiPropertyId, signal) {
      var _this160 = this;
      var url_ = this.baseUrl + "/multiproperties/bookingcodes-v1?";
      if (updatedSinceFilter === null) throw new Error("The parameter 'updatedSinceFilter' cannot be null.");else if (updatedSinceFilter !== undefined) url_ += "UpdatedSinceFilter=" + encodeURIComponent(updatedSinceFilter ? "" + updatedSinceFilter.toISOString() : "") + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this160.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this160.processMultipropertiesBookingcodesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesBookingcodesV1",
    value: function processMultipropertiesBookingcodesV1(response) {
      var _this161 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this161.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this161.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this161.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get style of a multi-property.
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesMultipropertyStyleV1",
    value: function multipropertiesMultipropertyStyleV1(multiPropertyId, signal) {
      var _this162 = this;
      var url_ = this.baseUrl + "/multiproperties/multiproperty-style-v1?";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this162.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this162.processMultipropertiesMultipropertyStyleV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesMultipropertyStyleV1",
    value: function processMultipropertiesMultipropertyStyleV1(response) {
      var _this163 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this163.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this163.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this163.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get info for a multi-property.
     * @param languageId (optional) Optionally provide a language id to be used when translating
    the result data in the response object. Defaults to your current
    user session language id.
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesMultipropertyInfoV1",
    value: function multipropertiesMultipropertyInfoV1(languageId, multiPropertyId, signal) {
      var _this164 = this;
      var url_ = this.baseUrl + "/multiproperties/multiproperty-info-v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this164.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this164.processMultipropertiesMultipropertyInfoV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesMultipropertyInfoV1",
    value: function processMultipropertiesMultipropertyInfoV1(response) {
      var _this165 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this165.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this165.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this165.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get booking codes of a multi-property.
     * @param updatedSinceFilter (optional) Optionally provide a date/time that will be used
    to filter the result and only include booking codes
    that has been updated since this date/time
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesBookingCodesV1",
    value: function multipropertiesBookingCodesV1(updatedSinceFilter, multiPropertyId, signal) {
      var _this166 = this;
      var url_ = this.baseUrl + "/multiproperties/booking-codes-v1?";
      if (updatedSinceFilter === null) throw new Error("The parameter 'updatedSinceFilter' cannot be null.");else if (updatedSinceFilter !== undefined) url_ += "UpdatedSinceFilter=" + encodeURIComponent(updatedSinceFilter ? "" + updatedSinceFilter.toISOString() : "") + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this166.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this166.processMultipropertiesBookingCodesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesBookingCodesV1",
    value: function processMultipropertiesBookingCodesV1(response) {
      var _this167 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this167.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this167.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this167.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get detail of a multi-property booking.
     * @param bookingCode (optional) 
     * @param languageId (optional) Optionally provide a language id used for when translating booking data in the response
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesBookingV1",
    value: function multipropertiesBookingV1(bookingCode, languageId, multiPropertyId, signal) {
      var _this168 = this;
      var url_ = this.baseUrl + "/multiproperties/booking-v1?";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this168.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this168.processMultipropertiesBookingV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesBookingV1",
    value: function processMultipropertiesBookingV1(response) {
      var _this169 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this169.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this169.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this169.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get a list of available package categories on a multi-property.
     * @param packageCategories (optional) 
     * @param languageId (optional) Optionally provide a language id to use when translating data in the response
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesPackageCategoriesV1",
    value: function multipropertiesPackageCategoriesV1(packageCategories, languageId, multiPropertyId, signal) {
      var _this170 = this;
      var url_ = this.baseUrl + "/multiproperties/package-categories-v1?";
      if (packageCategories === null) throw new Error("The parameter 'packageCategories' cannot be null.");else if (packageCategories !== undefined) packageCategories && packageCategories.forEach(function (item, index) {
        for (var attr in item) if (item.hasOwnProperty(attr)) {
          url_ += "PackageCategories[" + index + "]." + attr + "=" + encodeURIComponent("" + item[attr]) + "&";
        }
      });
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this170.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this170.processMultipropertiesPackageCategoriesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesPackageCategoriesV1",
    value: function processMultipropertiesPackageCategoriesV1(response) {
      var _this171 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this171.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this171.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this171.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get information of properties connected to a multi-property.
     * @param forConference (optional) true for conference properties
    false for accommodation only properties
     * @param languageId (optional) 
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesPropertiesListV1",
    value: function multipropertiesPropertiesListV1(forConference, languageId, multiPropertyId, signal) {
      var _this172 = this;
      var url_ = this.baseUrl + "/multiproperties/properties-list-v1?";
      if (forConference === null) throw new Error("The parameter 'forConference' cannot be null.");else if (forConference !== undefined) url_ += "ForConference=" + encodeURIComponent("" + forConference) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this172.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this172.processMultipropertiesPropertiesListV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesPropertiesListV1",
    value: function processMultipropertiesPropertiesListV1(response) {
      var _this173 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this173.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this173.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this173.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get places (destinations or hotels) connected to a multi-property.
     * @param forConference (optional) true for conference properties
    false for accommodation only properties
     * @param languageId (optional) 
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "multipropertiesPlacesV1",
    value: function multipropertiesPlacesV1(forConference, languageId, multiPropertyId, signal) {
      var _this174 = this;
      var url_ = this.baseUrl + "/multiproperties/places-v1?";
      if (forConference === null) throw new Error("The parameter 'forConference' cannot be null.");else if (forConference !== undefined) url_ += "ForConference=" + encodeURIComponent("" + forConference) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this174.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this174.processMultipropertiesPlacesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesPlacesV1",
    value: function processMultipropertiesPlacesV1(response) {
      var _this175 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this175.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this175.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this175.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Apply corp code / promo code in multi property online search.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "multipropertiesApplyCodesV1",
    value: function multipropertiesApplyCodesV1(body, signal) {
      var _this176 = this;
      var url_ = this.baseUrl + "/multiproperties/apply-codes-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this176.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this176.processMultipropertiesApplyCodesV1(_response);
      });
    }
  }, {
    key: "processMultipropertiesApplyCodesV1",
    value: function processMultipropertiesApplyCodesV1(response) {
      var _this177 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this177.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this177.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this177.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @param username (optional) 
     * @param password (optional) 
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "mypageSignInMultipropertyV1",
    value: function mypageSignInMultipropertyV1(username, password, multiPropertyId, signal) {
      var _this178 = this;
      var url_ = this.baseUrl + "/mypage/sign-in-multiproperty-v1?";
      if (username === null) throw new Error("The parameter 'username' cannot be null.");else if (username !== undefined) url_ += "Username=" + encodeURIComponent("" + username) + "&";
      if (password === null) throw new Error("The parameter 'password' cannot be null.");else if (password !== undefined) url_ += "Password=" + encodeURIComponent("" + password) + "&";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this178.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this178.processMypageSignInMultipropertyV1(_response);
      });
    }
  }, {
    key: "processMypageSignInMultipropertyV1",
    value: function processMypageSignInMultipropertyV1(response) {
      var _this179 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this179.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this179.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this179.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @param multiPropertyId The id of the multi property.
     * @return Success
     */
  }, {
    key: "mypageProfileMultipropertyV1",
    value: function mypageProfileMultipropertyV1(multiPropertyId, signal) {
      var _this180 = this;
      var url_ = this.baseUrl + "/mypage/profile-multiproperty-v1?";
      if (multiPropertyId === undefined || multiPropertyId === null) throw new Error("The parameter 'multiPropertyId' must be defined and cannot be null.");else url_ += "MultiPropertyId=" + encodeURIComponent("" + multiPropertyId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this180.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this180.processMypageProfileMultipropertyV1(_response);
      });
    }
  }, {
    key: "processMypageProfileMultipropertyV1",
    value: function processMypageProfileMultipropertyV1(response) {
      var _this181 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this181.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this181.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this181.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @param username (optional) 
     * @param password (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "mypageSignInV1",
    value: function mypageSignInV1(username, password, channelId, signal) {
      var _this182 = this;
      var url_ = this.baseUrl + "/mypage/sign-in-v1?";
      if (username === null) throw new Error("The parameter 'username' cannot be null.");else if (username !== undefined) url_ += "Username=" + encodeURIComponent("" + username) + "&";
      if (password === null) throw new Error("The parameter 'password' cannot be null.");else if (password !== undefined) url_ += "Password=" + encodeURIComponent("" + password) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this182.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this182.processMypageSignInV1(_response);
      });
    }
  }, {
    key: "processMypageSignInV1",
    value: function processMypageSignInV1(response) {
      var _this183 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this183.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this183.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this183.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "mypageProfileV1",
    value: function mypageProfileV1(channelId, signal) {
      var _this184 = this;
      var url_ = this.baseUrl + "/mypage/profile-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this184.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this184.processMypageProfileV1(_response);
      });
    }
  }, {
    key: "processMypageProfileV1",
    value: function processMypageProfileV1(response) {
      var _this185 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this185.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this185.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this185.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get all packages.
     * @param packageId (optional) Id of the package.
     * @param languageId (optional) Optionally provide a language id for use when translating package data in the response
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "packagesV1",
    value: function packagesV1(packageId, languageId, channelId, signal) {
      var _this186 = this;
      var url_ = this.baseUrl + "/packages/v1?";
      if (packageId === null) throw new Error("The parameter 'packageId' cannot be null.");else if (packageId !== undefined) url_ += "PackageId=" + encodeURIComponent("" + packageId) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this186.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this186.processPackagesV1(_response);
      });
    }
  }, {
    key: "processPackagesV1",
    value: function processPackagesV1(response) {
      var _this187 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this187.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this187.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this187.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get detailed information about a property.
     * @param languageId (optional) Optionally provide a language id to be used for translating the response where available.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "propertiesV1",
    value: function propertiesV1(languageId, channelId, signal) {
      var _this188 = this;
      var url_ = this.baseUrl + "/properties/v1?";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this188.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this188.processPropertiesV1(_response);
      });
    }
  }, {
    key: "processPropertiesV1",
    value: function processPropertiesV1(response) {
      var _this189 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this189.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this189.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this189.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get information about room groups by the provided room group ids.
     * @param roomTypeGroupIds (optional) 
     * @param languageId (optional) 
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "roomgroupsV1",
    value: function roomgroupsV1(roomTypeGroupIds, languageId, channelId, signal) {
      var _this190 = this;
      var url_ = this.baseUrl + "/roomgroups/v1?";
      if (roomTypeGroupIds === null) throw new Error("The parameter 'roomTypeGroupIds' cannot be null.");else if (roomTypeGroupIds !== undefined) roomTypeGroupIds && roomTypeGroupIds.forEach(function (item) {
        url_ += "RoomTypeGroupIds=" + encodeURIComponent("" + item) + "&";
      });
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this190.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this190.processRoomgroupsV1(_response);
      });
    }
  }, {
    key: "processRoomgroupsV1",
    value: function processRoomgroupsV1(response) {
      var _this191 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this191.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this191.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this191.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get detail information of one or more rooms.
     * @param roomId (optional) The id of the room
     * @param getRoomConfig (optional) 
     * @param languageId (optional) Optionally provide a language id for use when translating the response data
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "roomsV1",
    value: function roomsV1(roomId, getRoomConfig, languageId, channelId, signal) {
      var _this192 = this;
      var url_ = this.baseUrl + "/rooms/v1?";
      if (roomId === null) throw new Error("The parameter 'roomId' cannot be null.");else if (roomId !== undefined) url_ += "RoomId=" + encodeURIComponent("" + roomId) + "&";
      if (getRoomConfig === null) throw new Error("The parameter 'getRoomConfig' cannot be null.");else if (getRoomConfig !== undefined) url_ += "GetRoomConfig=" + encodeURIComponent("" + getRoomConfig) + "&";
      if (languageId === null) throw new Error("The parameter 'languageId' cannot be null.");else if (languageId !== undefined) url_ += "LanguageId=" + encodeURIComponent("" + languageId) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this192.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this192.processRoomsV1(_response);
      });
    }
  }, {
    key: "processRoomsV1",
    value: function processRoomsV1(response) {
      var _this193 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this193.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this193.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this193.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Get room configuration of the channel.
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "roomsConfigV1",
    value: function roomsConfigV1(channelId, signal) {
      var _this194 = this;
      var url_ = this.baseUrl + "/rooms/config-v1?";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this194.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this194.processRoomsConfigV1(_response);
      });
    }
  }, {
    key: "processRoomsConfigV1",
    value: function processRoomsConfigV1(response) {
      var _this195 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this195.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this195.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this195.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @param c_PHONE (optional) 
     * @return Success
     */
  }, {
    key: "tempEssV1Get",
    value: function tempEssV1Get(c_PHONE, signal) {
      var _this196 = this;
      var url_ = this.baseUrl + "/temp/ess/v1?";
      if (c_PHONE === null) throw new Error("The parameter 'c_PHONE' cannot be null.");else if (c_PHONE !== undefined) url_ += "C_PHONE=" + encodeURIComponent("" + c_PHONE) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this196.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this196.processTempEssV1Get(_response);
      });
    }
  }, {
    key: "processTempEssV1Get",
    value: function processTempEssV1Get(response) {
      var _this197 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this197.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this197.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this197.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * @return Success
     */
  }, {
    key: "tempEssV1Put",
    value: function tempEssV1Put(signal) {
      var _this198 = this;
      var url_ = this.baseUrl + "/temp/ess/v1";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "PUT",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this198.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this198.processTempEssV1Put(_response);
      });
    }
  }, {
    key: "processTempEssV1Put",
    value: function processTempEssV1Put(response) {
      var _this199 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this199.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this199.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this199.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Validate voucher number.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "voucherValidateVoucherNumberV1",
    value: function voucherValidateVoucherNumberV1(body, signal) {
      var _this200 = this;
      var url_ = this.baseUrl + "/voucher/validate-voucher-number-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this200.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this200.processVoucherValidateVoucherNumberV1(_response);
      });
    }
  }, {
    key: "processVoucherValidateVoucherNumberV1",
    value: function processVoucherValidateVoucherNumberV1(response) {
      var _this201 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this201.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this201.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this201.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Redeem voucher number.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "voucherRedeemVoucherV1",
    value: function voucherRedeemVoucherV1(body, signal) {
      var _this202 = this;
      var url_ = this.baseUrl + "/voucher/redeem-voucher-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this202.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this202.processVoucherRedeemVoucherV1(_response);
      });
    }
  }, {
    key: "processVoucherRedeemVoucherV1",
    value: function processVoucherRedeemVoucherV1(response) {
      var _this203 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this203.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this203.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this203.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Fetch list of voucher bookings in the specified period or with a booking code.
    Use GET /voucher/bookings instead.
     * @param min (optional) Minimum date (yyyy-mm-dd)
     * @param max (optional) Maximum date (yyyy-mm-dd)
     * @param bookingCode (optional) Booking code
     * @param channelId The id of the channel
     * @return Success
     * @deprecated
     */
  }, {
    key: "voucherGetvoucherbookingsV1",
    value: function voucherGetvoucherbookingsV1(min, max, bookingCode, channelId, signal) {
      var _this204 = this;
      var url_ = this.baseUrl + "/voucher/getvoucherbookings-v1?";
      if (min === null) throw new Error("The parameter 'min' cannot be null.");else if (min !== undefined) url_ += "Min=" + encodeURIComponent(min ? "" + min.toISOString() : "") + "&";
      if (max === null) throw new Error("The parameter 'max' cannot be null.");else if (max !== undefined) url_ += "Max=" + encodeURIComponent(max ? "" + max.toISOString() : "") + "&";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this204.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this204.processVoucherGetvoucherbookingsV1(_response);
      });
    }
  }, {
    key: "processVoucherGetvoucherbookingsV1",
    value: function processVoucherGetvoucherbookingsV1(response) {
      var _this205 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this205.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this205.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this205.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * Fetch list of voucher bookings in the specified period or with a booking code.
     * @param min (optional) Minimum date (yyyy-mm-dd)
     * @param max (optional) Maximum date (yyyy-mm-dd)
     * @param bookingCode (optional) Booking code
     * @param channelId The id of the channel
     * @return Success
     */
  }, {
    key: "voucherBookingsV1",
    value: function voucherBookingsV1(min, max, bookingCode, channelId, signal) {
      var _this206 = this;
      var url_ = this.baseUrl + "/voucher/bookings-v1?";
      if (min === null) throw new Error("The parameter 'min' cannot be null.");else if (min !== undefined) url_ += "Min=" + encodeURIComponent(min ? "" + min.toISOString() : "") + "&";
      if (max === null) throw new Error("The parameter 'max' cannot be null.");else if (max !== undefined) url_ += "Max=" + encodeURIComponent(max ? "" + max.toISOString() : "") + "&";
      if (bookingCode === null) throw new Error("The parameter 'bookingCode' cannot be null.");else if (bookingCode !== undefined) url_ += "BookingCode=" + encodeURIComponent("" + bookingCode) + "&";
      if (channelId === undefined || channelId === null) throw new Error("The parameter 'channelId' must be defined and cannot be null.");else url_ += "ChannelId=" + encodeURIComponent("" + channelId) + "&";
      url_ = url_.replace(/[?&]$/, "");
      var options_ = {
        method: "GET",
        signal: signal,
        headers: {
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this206.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this206.processVoucherBookingsV1(_response);
      });
    }
  }, {
    key: "processVoucherBookingsV1",
    value: function processVoucherBookingsV1(response) {
      var _this207 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this207.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this207.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this207.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * MultiProperty Widget search.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "widgetMultipropertyWidgetSearchV1",
    value: function widgetMultipropertyWidgetSearchV1(body, signal) {
      var _this208 = this;
      var url_ = this.baseUrl + "/widget/multiproperty-widget-search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this208.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this208.processWidgetMultipropertyWidgetSearchV1(_response);
      });
    }
  }, {
    key: "processWidgetMultipropertyWidgetSearchV1",
    value: function processWidgetMultipropertyWidgetSearchV1(response) {
      var _this209 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this209.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this209.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this209.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }

    /**
     * SingleProperty Widget search.
     * @param body (optional) 
     * @return Success
     */
  }, {
    key: "widgetWidgetSearchV1",
    value: function widgetWidgetSearchV1(body, signal) {
      var _this210 = this;
      var url_ = this.baseUrl + "/widget/widget-search-v1";
      url_ = url_.replace(/[?&]$/, "");
      var content_ = JSON.stringify(body);
      var options_ = {
        body: content_,
        method: "POST",
        signal: signal,
        headers: {
          "Content-Type": "application/json-patch+json",
          "Accept": "text/plain"
        }
      };
      return this.transformOptions(options_).then(function (transformedOptions_) {
        return _this210.http.fetch(url_, transformedOptions_);
      }).then(function (_response) {
        return _this210.processWidgetWidgetSearchV1(_response);
      });
    }
  }, {
    key: "processWidgetWidgetSearchV1",
    value: function processWidgetWidgetSearchV1(response) {
      var _this211 = this;
      var status = response.status;
      var _headers = {};
      if (response.headers && response.headers.forEach) {
        response.headers.forEach(function (v, k) {
          return _headers[k] = v;
        });
      }
      ;
      if (status === 500) {
        return response.text().then(function (_responseText) {
          var result500 = null;
          result500 = _responseText === "" ? null : JSON.parse(_responseText, _this211.jsonParseReviver);
          return throwException("Server Error", status, _responseText, _headers, result500);
        });
      } else if (status === 429) {
        return response.text().then(function (_responseText) {
          var result429 = null;
          result429 = _responseText === "" ? null : JSON.parse(_responseText, _this211.jsonParseReviver);
          return throwException("Client Error", status, _responseText, _headers, result429);
        });
      } else if (status === 200) {
        return response.text().then(function (_responseText) {
          var result200 = null;
          result200 = _responseText === "" ? null : JSON.parse(_responseText, _this211.jsonParseReviver);
          return result200;
        });
      } else if (status !== 200 && status !== 204) {
        return response.text().then(function (_responseText) {
          return throwException("An unexpected server error occurred.", status, _responseText, _headers);
        });
      }
      return Promise.resolve(null);
    }
  }]);
  return Client;
}(AuthorizedApiBase);
var GoogleAnalyticsVersion;
(function (GoogleAnalyticsVersion) {
  GoogleAnalyticsVersion["Classic"] = "Classic";
  GoogleAnalyticsVersion["Universal"] = "Universal";
  GoogleAnalyticsVersion["Gtag"] = "Gtag";
  GoogleAnalyticsVersion["Ga4"] = "Ga4";
})(GoogleAnalyticsVersion || (GoogleAnalyticsVersion = {}));
var HotelSystemAttributeType;
(function (HotelSystemAttributeType) {
  HotelSystemAttributeType["General"] = "General";
  HotelSystemAttributeType["Activities"] = "Activities";
  HotelSystemAttributeType["Services"] = "Services";
  HotelSystemAttributeType["HotelTheme"] = "HotelTheme";
  HotelSystemAttributeType["Parking"] = "Parking";
  HotelSystemAttributeType["Internet"] = "Internet";
  HotelSystemAttributeType["Location"] = "Location";
})(HotelSystemAttributeType || (HotelSystemAttributeType = {}));
var MultiPropertyType;
(function (MultiPropertyType) {
  MultiPropertyType["All"] = "All";
  MultiPropertyType["Accommodation"] = "Accommodation";
  MultiPropertyType["Conference"] = "Conference";
})(MultiPropertyType || (MultiPropertyType = {}));
var MyPageCrsSettings;
(function (MyPageCrsSettings) {
  MyPageCrsSettings["OnlyForCrs"] = "OnlyForCrs";
  MyPageCrsSettings["CrsPlusAllMyProperties"] = "CrsPlusAllMyProperties";
})(MyPageCrsSettings || (MyPageCrsSettings = {}));
/** Use 'Full' to populate the AddOnContent property in the response. */
var AddOnContentType;
(function (AddOnContentType) {
  AddOnContentType["None"] = "None";
  AddOnContentType["Full"] = "Full";
})(AddOnContentType || (AddOnContentType = {}));
/** Use 'Full' to populate the PackageContent property in the response. */
var PackageContentType;
(function (PackageContentType) {
  PackageContentType["None"] = "None";
  PackageContentType["Full"] = "Full";
})(PackageContentType || (PackageContentType = {}));
/** Use 'Full' to get a full RoomContent response. Using the 'Basic' setting will give you everything except 'Images' and 'RoomDetailedContent' */
var RoomContentType;
(function (RoomContentType) {
  RoomContentType["None"] = "None";
  RoomContentType["Full"] = "Full";
  RoomContentType["Basic"] = "Basic";
})(RoomContentType || (RoomContentType = {}));
var SearchResultSortOrder;
(function (SearchResultSortOrder) {
  SearchResultSortOrder["Price"] = "Price";
  SearchResultSortOrder["Rank"] = "Rank";
})(SearchResultSortOrder || (SearchResultSortOrder = {}));
var RoomType;
(function (RoomType) {
  RoomType["Accommodation"] = "Accommodation";
  RoomType["Conference"] = "Conference";
})(RoomType || (RoomType = {}));
var AccommodationType;
(function (AccommodationType) {
  AccommodationType["Hotel"] = "Hotel";
  AccommodationType["Hostel"] = "Hostel";
  AccommodationType["Cabin"] = "Cabin";
  AccommodationType["Apartment"] = "Apartment";
  AccommodationType["Camping"] = "Camping";
  AccommodationType["Berth"] = "Berth";
  AccommodationType["DormitoryBed"] = "DormitoryBed";
  AccommodationType["Villa"] = "Villa";
  AccommodationType["VacationRental"] = "VacationRental";
  AccommodationType["Caravan"] = "Caravan";
  AccommodationType["Motorhome"] = "Motorhome";
  AccommodationType["Tent"] = "Tent";
  AccommodationType["GlampingTent"] = "GlampingTent";
  AccommodationType["Pension"] = "Pension";
})(AccommodationType || (AccommodationType = {}));
var AddOnPriceTimeUnit;
(function (AddOnPriceTimeUnit) {
  AddOnPriceTimeUnit["FixedPrice"] = "FixedPrice";
  AddOnPriceTimeUnit["PricePerDay"] = "PricePerDay";
})(AddOnPriceTimeUnit || (AddOnPriceTimeUnit = {}));
var AddOnType;
(function (AddOnType) {
  AddOnType["Unknown"] = "Unknown";
  AddOnType["Room"] = "Room";
  AddOnType["FoodAndBeverage"] = "FoodAndBeverage";
  AddOnType["ConferenceOrMeeting"] = "ConferenceOrMeeting";
  AddOnType["Other"] = "Other";
  AddOnType["Breakfast"] = "Breakfast";
  AddOnType["CancellationInsurance"] = "CancellationInsurance";
  AddOnType["Food"] = "Food";
  AddOnType["Beverage"] = "Beverage";
  AddOnType["AlcoholicBeverage"] = "AlcoholicBeverage";
  AddOnType["Cleaning"] = "Cleaning";
  AddOnType["Ticket"] = "Ticket";
  AddOnType["EarlyCheckIn"] = "EarlyCheckIn";
  AddOnType["LateCheckOut"] = "LateCheckOut";
})(AddOnType || (AddOnType = {}));
var DistanceUnit;
(function (DistanceUnit) {
  DistanceUnit["Meter"] = "Meter";
  DistanceUnit["Kilometer"] = "Kilometer";
  DistanceUnit["Mile"] = "Mile";
})(DistanceUnit || (DistanceUnit = {}));
var HotelAttributeType;
(function (HotelAttributeType) {
  HotelAttributeType["General"] = "General";
  HotelAttributeType["Activities"] = "Activities";
  HotelAttributeType["Services"] = "Services";
  HotelAttributeType["HotelTheme"] = "HotelTheme";
  HotelAttributeType["Parking"] = "Parking";
  HotelAttributeType["Internet"] = "Internet";
  HotelAttributeType["Location"] = "Location";
})(HotelAttributeType || (HotelAttributeType = {}));
var generated_api_ItemStatus;
(function (ItemStatus) {
  ItemStatus["NotChanged"] = "NotChanged";
  ItemStatus["New"] = "New";
  ItemStatus["Removed"] = "Removed";
})(generated_api_ItemStatus || (generated_api_ItemStatus = {}));
var OptionalAddOnApplicableFromOption;
(function (OptionalAddOnApplicableFromOption) {
  OptionalAddOnApplicableFromOption["ArrivalDate"] = "ArrivalDate";
  OptionalAddOnApplicableFromOption["DayAfterArrivalDate"] = "DayAfterArrivalDate";
})(OptionalAddOnApplicableFromOption || (OptionalAddOnApplicableFromOption = {}));
var generated_api_OptionalAddOnChargeUnit;
(function (OptionalAddOnChargeUnit) {
  OptionalAddOnChargeUnit["OptionalNumberOfUnits"] = "OptionalNumberOfUnits";
  OptionalAddOnChargeUnit["OnePerBooking"] = "OnePerBooking";
  OptionalAddOnChargeUnit["OnePerRoom"] = "OnePerRoom";
  OptionalAddOnChargeUnit["OnePerRoomAndDay"] = "OnePerRoomAndDay";
  OptionalAddOnChargeUnit["OnePerGuest"] = "OnePerGuest";
  OptionalAddOnChargeUnit["OnePerGuestAndDay"] = "OnePerGuestAndDay";
  OptionalAddOnChargeUnit["OptionalOnePerRoom"] = "OptionalOnePerRoom";
})(generated_api_OptionalAddOnChargeUnit || (generated_api_OptionalAddOnChargeUnit = {}));
var generated_api_PaymentPolicyOption;
(function (PaymentPolicyOption) {
  PaymentPolicyOption["NoGuaranteeRequired"] = "NoGuaranteeRequired";
  PaymentPolicyOption["GuaranteeRequired"] = "GuaranteeRequired";
  PaymentPolicyOption["PrePaidAtTheTimeOfTheBooking"] = "PrePaidAtTheTimeOfTheBooking";
})(generated_api_PaymentPolicyOption || (generated_api_PaymentPolicyOption = {}));
var PointOfInterestType;
(function (PointOfInterestType) {
  PointOfInterestType["Airport"] = "Airport";
  PointOfInterestType["BusStop"] = "BusStop";
  PointOfInterestType["CityCentre"] = "CityCentre";
  PointOfInterestType["Harbour"] = "Harbour";
  PointOfInterestType["TrainStation"] = "TrainStation";
  PointOfInterestType["TramStation"] = "TramStation";
  PointOfInterestType["Other"] = "Other";
})(PointOfInterestType || (PointOfInterestType = {}));
var PSPType;
(function (PSPType) {
  PSPType["None"] = "None";
  PSPType["DIBS"] = "DIBS";
  PSPType["Ogone"] = "Ogone";
  PSPType["PayEx"] = "PayEx";
  PSPType["Paypal"] = "Paypal";
  PSPType["Nets"] = "Nets";
  PSPType["Klarna"] = "Klarna";
  PSPType["Ingenico"] = "Ingenico";
  PSPType["TMT"] = "TMT";
  PSPType["NetsEasy"] = "NetsEasy";
  PSPType["Swedbank"] = "Swedbank";
  PSPType["Paybox"] = "Paybox";
})(PSPType || (PSPType = {}));
var TransactionPaymentType;
(function (TransactionPaymentType) {
  TransactionPaymentType["Unknown"] = "Unknown";
  TransactionPaymentType["Cash"] = "Cash";
  TransactionPaymentType["Check"] = "Check";
  TransactionPaymentType["GiftCertificate"] = "GiftCertificate";
  TransactionPaymentType["CreditCard"] = "CreditCard";
  TransactionPaymentType["BankTransfer"] = "BankTransfer";
  TransactionPaymentType["BankDeposit"] = "BankDeposit";
  TransactionPaymentType["Invoice"] = "Invoice";
  TransactionPaymentType["DownPayment"] = "DownPayment";
  TransactionPaymentType["ExternalInvoiceDownPayment"] = "ExternalInvoiceDownPayment";
  TransactionPaymentType["Refunded"] = "Refunded";
})(TransactionPaymentType || (TransactionPaymentType = {}));
var TransactionStatus;
(function (TransactionStatus) {
  TransactionStatus["Unknown"] = "Unknown";
  TransactionStatus["Preliminary"] = "Preliminary";
  TransactionStatus["Confirmed"] = "Confirmed";
  TransactionStatus["Reconciliated"] = "Reconciliated";
  TransactionStatus["Failed"] = "Failed";
  TransactionStatus["Cancelled"] = "Cancelled";
})(TransactionStatus || (TransactionStatus = {}));
var TypeOfAgeGroup;
(function (TypeOfAgeGroup) {
  TypeOfAgeGroup["OwnDefined"] = "OwnDefined";
  TypeOfAgeGroup["Infant"] = "Infant";
  TypeOfAgeGroup["Child"] = "Child";
  TypeOfAgeGroup["Youth"] = "Youth";
  TypeOfAgeGroup["Senior"] = "Senior";
  TypeOfAgeGroup["Military"] = "Military";
})(TypeOfAgeGroup || (TypeOfAgeGroup = {}));
var UnlockCampaignErrorCode;
(function (UnlockCampaignErrorCode) {
  UnlockCampaignErrorCode["BadRequest"] = "BadRequest";
  UnlockCampaignErrorCode["InvalidCode"] = "InvalidCode";
  UnlockCampaignErrorCode["InvalidEmail"] = "InvalidEmail";
  UnlockCampaignErrorCode["InvalidMyPageAccountDetails"] = "InvalidMyPageAccountDetails";
  UnlockCampaignErrorCode["InvalidAuthService"] = "InvalidAuthService";
  UnlockCampaignErrorCode["WrongUserInformation"] = "WrongUserInformation";
  UnlockCampaignErrorCode["WrongCardNumber"] = "WrongCardNumber";
  UnlockCampaignErrorCode["InvalidPhoneNumberFormat"] = "InvalidPhoneNumberFormat";
})(UnlockCampaignErrorCode || (UnlockCampaignErrorCode = {}));
var AccountType;
(function (AccountType) {
  AccountType["Basic"] = "Basic";
  AccountType["Premium"] = "Premium";
  AccountType["Extranet"] = "Extranet";
})(AccountType || (AccountType = {}));
var SeoMappingType;
(function (SeoMappingType) {
  SeoMappingType["Unknown"] = "Unknown";
  SeoMappingType["RoomName"] = "RoomName";
  SeoMappingType["PackageName"] = "PackageName";
  SeoMappingType["CampaignName"] = "CampaignName";
  SeoMappingType["HotelNameToChannelId"] = "HotelNameToChannelId";
  SeoMappingType["LandingPage"] = "LandingPage";
})(SeoMappingType || (SeoMappingType = {}));
var BecomeMemberErrorType;
(function (BecomeMemberErrorType) {
  BecomeMemberErrorType["UnknownError"] = "UnknownError";
  BecomeMemberErrorType["AlreadyMember"] = "AlreadyMember";
})(BecomeMemberErrorType || (BecomeMemberErrorType = {}));
var LogLevel;
(function (LogLevel) {
  LogLevel["Warning"] = "Warning";
  LogLevel["Error"] = "Error";
})(LogLevel || (LogLevel = {}));
var CommitReservationStatus;
(function (CommitReservationStatus) {
  CommitReservationStatus["Unknown"] = "Unknown";
  CommitReservationStatus["Failed"] = "Failed";
  CommitReservationStatus["Succeeded"] = "Succeeded";
  CommitReservationStatus["NoChangesMade"] = "NoChangesMade";
})(CommitReservationStatus || (CommitReservationStatus = {}));
var OnlineMessageKey;
(function (OnlineMessageKey) {
  OnlineMessageKey["NoRoomsSearchResultInfo"] = "NoRoomsSearchResultInfo";
  OnlineMessageKey["NoRoomsAvailableInfo"] = "NoRoomsAvailableInfo";
  OnlineMessageKey["ConferenceRoomIntro"] = "ConferenceRoomIntro";
  OnlineMessageKey["GuestRoomIntro"] = "GuestRoomIntro";
  OnlineMessageKey["AddOnIntro"] = "AddOnIntro";
  OnlineMessageKey["CustomerInformationIntro"] = "CustomerInformationIntro";
  OnlineMessageKey["StandaloneExtrasIntro"] = "StandaloneExtrasIntro";
  OnlineMessageKey["StandaloneExtrasTitle"] = "StandaloneExtrasTitle";
  OnlineMessageKey["VouchersIntro"] = "VouchersIntro";
  OnlineMessageKey["SeeAll"] = "SeeAll";
  OnlineMessageKey["SeeAllOtherHotels"] = "SeeAllOtherHotels";
  OnlineMessageKey["LiveRateBestPriceInfo"] = "LiveRateBestPriceInfo";
  OnlineMessageKey["CustomerCustomConfirmationInfo"] = "CustomerCustomConfirmationInfo";
  OnlineMessageKey["BVWebConferenceIntro"] = "BVWebConferenceIntro";
  OnlineMessageKey["BVWebQuote"] = "BVWebQuote";
  OnlineMessageKey["BVWebPackageIntro"] = "BVWebPackageIntro";
  OnlineMessageKey["BVWebRoomIntro"] = "BVWebRoomIntro";
  OnlineMessageKey["BlockCancellationOnline"] = "BlockCancellationOnline";
  OnlineMessageKey["StoreCreditVoucherPrepaidCancelPolicyCancelNOTOK"] = "StoreCreditVoucherPrepaidCancelPolicyCancelNOTOK";
  OnlineMessageKey["StoreCreditVoucherPrepaidCancelPolicyCancelOK"] = "StoreCreditVoucherPrepaidCancelPolicyCancelOK";
  OnlineMessageKey["StoreCreditVoucherCCGuaranteeReservation"] = "StoreCreditVoucherCCGuaranteeReservation";
  OnlineMessageKey["SaveYourSearch"] = "SaveYourSearch";
  OnlineMessageKey["AddToWaitingList"] = "AddToWaitingList";
})(OnlineMessageKey || (OnlineMessageKey = {}));
var AccommodationType2;
(function (AccommodationType2) {
  AccommodationType2["Hotel"] = "Hotel";
  AccommodationType2["Hostel"] = "Hostel";
  AccommodationType2["Cabin"] = "Cabin";
  AccommodationType2["Apartment"] = "Apartment";
  AccommodationType2["Camping"] = "Camping";
  AccommodationType2["Berth"] = "Berth";
  AccommodationType2["DormitoryBed"] = "DormitoryBed";
  AccommodationType2["Villa"] = "Villa";
  AccommodationType2["VacationRental"] = "VacationRental";
  AccommodationType2["Caravan"] = "Caravan";
  AccommodationType2["Motorhome"] = "Motorhome";
  AccommodationType2["Tent"] = "Tent";
  AccommodationType2["GlampingTent"] = "GlampingTent";
  AccommodationType2["Pension"] = "Pension";
})(AccommodationType2 || (AccommodationType2 = {}));
var AnalyticsConversionLevel;
(function (AnalyticsConversionLevel) {
  AnalyticsConversionLevel["Product"] = "Product";
  AnalyticsConversionLevel["Supplier"] = "Supplier";
})(AnalyticsConversionLevel || (AnalyticsConversionLevel = {}));
var BasedOnType;
(function (BasedOnType) {
  BasedOnType["ArrivalDate"] = "ArrivalDate";
  BasedOnType["BookingDate"] = "BookingDate";
})(BasedOnType || (BasedOnType = {}));
var BedType;
(function (BedType) {
  BedType["Double"] = "Double";
  BedType["Futon"] = "Futon";
  BedType["King"] = "King";
  BedType["MurphyBed"] = "MurphyBed";
  BedType["Queen"] = "Queen";
  BedType["SofaBed"] = "SofaBed";
  BedType["TatamiMats"] = "TatamiMats";
  BedType["Twin"] = "Twin";
  BedType["Single"] = "Single";
  BedType["BunkBed"] = "BunkBed";
  BedType["FrenchBed"] = "FrenchBed";
})(BedType || (BedType = {}));
var BookingEngineLayout;
(function (BookingEngineLayout) {
  BookingEngineLayout["NewWindow"] = "NewWindow";
  BookingEngineLayout["Lightbox"] = "Lightbox";
  BookingEngineLayout["Custom"] = "Custom";
})(BookingEngineLayout || (BookingEngineLayout = {}));
var BookingStatus;
(function (BookingStatus) {
  BookingStatus["Unknown"] = "Unknown";
  BookingStatus["New"] = "New";
  BookingStatus["Changed"] = "Changed";
  BookingStatus["Cancelled"] = "Cancelled";
  BookingStatus["NoShow"] = "NoShow";
})(BookingStatus || (BookingStatus = {}));
var CampaignLockOption;
(function (CampaignLockOption) {
  CampaignLockOption["NoLock"] = "NoLock";
  CampaignLockOption["TravellerAuthService"] = "TravellerAuthService";
  CampaignLockOption["PromoCode"] = "PromoCode";
  CampaignLockOption["Facebook"] = "Facebook";
  CampaignLockOption["Email"] = "Email";
  CampaignLockOption["LiveRate"] = "LiveRate";
  CampaignLockOption["MyPage"] = "MyPage";
})(CampaignLockOption || (CampaignLockOption = {}));
var CampaignPresentationType;
(function (CampaignPresentationType) {
  CampaignPresentationType["CampaignDetailsPage"] = "CampaignDetailsPage";
  CampaignPresentationType["SeparateDescriptionInSearchResult"] = "SeparateDescriptionInSearchResult";
  CampaignPresentationType["AsARateCodeInSearchResult"] = "AsARateCodeInSearchResult";
  CampaignPresentationType["HighlightedOnline"] = "HighlightedOnline";
})(CampaignPresentationType || (CampaignPresentationType = {}));
var CancellationChargeType;
(function (CancellationChargeType) {
  CancellationChargeType["Nights"] = "Nights";
  CancellationChargeType["FixedAmount"] = "FixedAmount";
  CancellationChargeType["Percent"] = "Percent";
  CancellationChargeType["PerGuest"] = "PerGuest";
})(CancellationChargeType || (CancellationChargeType = {}));
var ChannelStyleBodyText;
(function (ChannelStyleBodyText) {
  ChannelStyleBodyText["Arial"] = "Arial";
  ChannelStyleBodyText["Georgia"] = "Georgia";
  ChannelStyleBodyText["TrebuchetMS"] = "TrebuchetMS";
})(ChannelStyleBodyText || (ChannelStyleBodyText = {}));
var ChannelStyleColorTheme;
(function (ChannelStyleColorTheme) {
  ChannelStyleColorTheme["Color0"] = "Color0";
  ChannelStyleColorTheme["Color1"] = "Color1";
  ChannelStyleColorTheme["Color2"] = "Color2";
  ChannelStyleColorTheme["Color3"] = "Color3";
  ChannelStyleColorTheme["Color4"] = "Color4";
  ChannelStyleColorTheme["Color5"] = "Color5";
  ChannelStyleColorTheme["Color6"] = "Color6";
  ChannelStyleColorTheme["Color7"] = "Color7";
  ChannelStyleColorTheme["Color8"] = "Color8";
  ChannelStyleColorTheme["Color9"] = "Color9";
  ChannelStyleColorTheme["Color10"] = "Color10";
  ChannelStyleColorTheme["Color11"] = "Color11";
  ChannelStyleColorTheme["Color12"] = "Color12";
  ChannelStyleColorTheme["Color13"] = "Color13";
  ChannelStyleColorTheme["Color14"] = "Color14";
  ChannelStyleColorTheme["Color15"] = "Color15";
})(ChannelStyleColorTheme || (ChannelStyleColorTheme = {}));
var ChannelStyleHeadLineFont;
(function (ChannelStyleHeadLineFont) {
  ChannelStyleHeadLineFont["RobotoSlab"] = "RobotoSlab";
  ChannelStyleHeadLineFont["RobotoCondensed"] = "RobotoCondensed";
  ChannelStyleHeadLineFont["DroidSerif"] = "DroidSerif";
  ChannelStyleHeadLineFont["Arial"] = "Arial";
  ChannelStyleHeadLineFont["Georgia"] = "Georgia";
})(ChannelStyleHeadLineFont || (ChannelStyleHeadLineFont = {}));
var CheckoutFieldType;
(function (CheckoutFieldType) {
  CheckoutFieldType["Apartment"] = "Apartment";
  CheckoutFieldType["City"] = "City";
  CheckoutFieldType["PhoneNumber"] = "PhoneNumber";
  CheckoutFieldType["PostalCode"] = "PostalCode";
  CheckoutFieldType["Street"] = "Street";
  CheckoutFieldType["IsCorporateCustomer"] = "IsCorporateCustomer";
  CheckoutFieldType["CompanyName"] = "CompanyName";
  CheckoutFieldType["Department"] = "Department";
  CheckoutFieldType["OrganizationNumber"] = "OrganizationNumber";
  CheckoutFieldType["AllowEmailAdvertising"] = "AllowEmailAdvertising";
  CheckoutFieldType["SpecialRequest"] = "SpecialRequest";
  CheckoutFieldType["TravellingForWork"] = "TravellingForWork";
  CheckoutFieldType["AskForGuestNames"] = "AskForGuestNames";
})(CheckoutFieldType || (CheckoutFieldType = {}));
var ConferenceRoomAttribute;
(function (ConferenceRoomAttribute) {
  ConferenceRoomAttribute["ElectricalOutlet220_240Volt"] = "ElectricalOutlet220_240Volt";
  ConferenceRoomAttribute["ElectricalOutlet380Volt"] = "ElectricalOutlet380Volt";
  ConferenceRoomAttribute["Broadband"] = "Broadband";
  ConferenceRoomAttribute["WiFi"] = "WiFi";
  ConferenceRoomAttribute["SlopingRoom"] = "SlopingRoom";
  ConferenceRoomAttribute["SceneInTheRoom"] = "SceneInTheRoom";
  ConferenceRoomAttribute["WindowsInTheRoom"] = "WindowsInTheRoom";
  ConferenceRoomAttribute["LCDProjector"] = "LCDProjector";
  ConferenceRoomAttribute["DataProjector"] = "DataProjector";
  ConferenceRoomAttribute["Wlan"] = "Wlan";
  ConferenceRoomAttribute["OH"] = "OH";
  ConferenceRoomAttribute["Telephone"] = "Telephone";
  ConferenceRoomAttribute["TV"] = "TV";
  ConferenceRoomAttribute["DVD"] = "DVD";
  ConferenceRoomAttribute["Microphone"] = "Microphone";
  ConferenceRoomAttribute["Loudspeaker"] = "Loudspeaker";
  ConferenceRoomAttribute["Whitebord"] = "Whitebord";
  ConferenceRoomAttribute["Flipboard"] = "Flipboard";
  ConferenceRoomAttribute["Pens"] = "Pens";
  ConferenceRoomAttribute["Notepads"] = "Notepads";
  ConferenceRoomAttribute["WebCamera"] = "WebCamera";
  ConferenceRoomAttribute["Speakerphone"] = "Speakerphone";
  ConferenceRoomAttribute["InteractiveScreen"] = "InteractiveScreen";
  ConferenceRoomAttribute["TechnicianAvailable"] = "TechnicianAvailable";
})(ConferenceRoomAttribute || (ConferenceRoomAttribute = {}));
var ConferenceRoomSeatingType;
(function (ConferenceRoomSeatingType) {
  ConferenceRoomSeatingType["TheatreStyle"] = "TheatreStyle";
  ConferenceRoomSeatingType["ClassRoom"] = "ClassRoom";
  ConferenceRoomSeatingType["UShapedTable"] = "UShapedTable";
  ConferenceRoomSeatingType["BoardMeeting"] = "BoardMeeting";
  ConferenceRoomSeatingType["Islands"] = "Islands";
  ConferenceRoomSeatingType["CircleOfChairs"] = "CircleOfChairs";
})(ConferenceRoomSeatingType || (ConferenceRoomSeatingType = {}));
var ConferenceRoomType;
(function (ConferenceRoomType) {
  ConferenceRoomType["ConferenceRoom"] = "ConferenceRoom";
  ConferenceRoomType["MeetingRoom"] = "MeetingRoom";
})(ConferenceRoomType || (ConferenceRoomType = {}));
var CreditCardType;
(function (CreditCardType) {
  CreditCardType["Visa"] = "Visa";
  CreditCardType["MasterCard"] = "MasterCard";
  CreditCardType["AmericanExpress"] = "AmericanExpress";
  CreditCardType["DinersClub"] = "DinersClub";
  CreditCardType["Discover"] = "Discover";
  CreditCardType["JCB"] = "JCB";
  CreditCardType["ChinaUnionPay"] = "ChinaUnionPay";
  CreditCardType["Swish"] = "Swish";
  CreditCardType["Dankort"] = "Dankort";
  CreditCardType["Vipps"] = "Vipps";
  CreditCardType["MobilePay"] = "MobilePay";
  CreditCardType["Invoice"] = "Invoice";
  CreditCardType["Trustly"] = "Trustly";
  CreditCardType["SEB"] = "SEB";
  CreditCardType["Handelsbanken"] = "Handelsbanken";
  CreditCardType["Swedbank"] = "Swedbank";
  CreditCardType["Nordea"] = "Nordea";
  CreditCardType["Luminor"] = "Luminor";
  CreditCardType["Citadele"] = "Citadele";
  CreditCardType["LHVPank"] = "LHVPank";
  CreditCardType["CoopPank"] = "CoopPank";
  CreditCardType["Unknown"] = "Unknown";
})(CreditCardType || (CreditCardType = {}));
var CustomAuthServiceType;
(function (CustomAuthServiceType) {
  CustomAuthServiceType["NoAuthserviceType"] = "NoAuthserviceType";
  CustomAuthServiceType["Nozio"] = "Nozio";
  CustomAuthServiceType["EssGroup"] = "EssGroup";
  CustomAuthServiceType["Danhostel"] = "Danhostel";
  CustomAuthServiceType["CampingKeyEurope"] = "CampingKeyEurope";
  CustomAuthServiceType["Loyall"] = "Loyall";
})(CustomAuthServiceType || (CustomAuthServiceType = {}));
var DistanceUnit2;
(function (DistanceUnit2) {
  DistanceUnit2["Meter"] = "Meter";
  DistanceUnit2["Kilometer"] = "Kilometer";
  DistanceUnit2["Mile"] = "Mile";
})(DistanceUnit2 || (DistanceUnit2 = {}));
var GoogleAnalyticsVersion2;
(function (GoogleAnalyticsVersion2) {
  GoogleAnalyticsVersion2["Classic"] = "Classic";
  GoogleAnalyticsVersion2["Universal"] = "Universal";
  GoogleAnalyticsVersion2["Gtag"] = "Gtag";
  GoogleAnalyticsVersion2["Ga4"] = "Ga4";
})(GoogleAnalyticsVersion2 || (GoogleAnalyticsVersion2 = {}));
var HotelCondition;
(function (HotelCondition) {
  HotelCondition["Main"] = "Main";
  HotelCondition["Other"] = "Other";
  HotelCondition["Unavailable"] = "Unavailable";
})(HotelCondition || (HotelCondition = {}));
var IconType;
(function (IconType) {
  IconType["Calendar"] = "Calendar";
  IconType["List"] = "List";
  IconType["User"] = "User";
  IconType["Close"] = "Close";
  IconType["ArrowLeft"] = "ArrowLeft";
  IconType["ArrowRight"] = "ArrowRight";
  IconType["Prev"] = "Prev";
  IconType["Next"] = "Next";
  IconType["PhotoCoverflow"] = "PhotoCoverflow";
  IconType["PhotoStack"] = "PhotoStack";
  IconType["PhotoTiles"] = "PhotoTiles";
  IconType["Search"] = "Search";
  IconType["Lock"] = "Lock";
  IconType["Share"] = "Share";
  IconType["Users"] = "Users";
  IconType["Trash"] = "Trash";
  IconType["Gear"] = "Gear";
  IconType["Battery"] = "Battery";
  IconType["Plus"] = "Plus";
  IconType["Minus"] = "Minus";
  IconType["Checkbox"] = "Checkbox";
  IconType["CheckboxUnchecked"] = "CheckboxUnchecked";
  IconType["Check"] = "Check";
  IconType["Bed"] = "Bed";
  IconType["Wifi"] = "Wifi";
  IconType["Coffee"] = "Coffee";
  IconType["Restaurant"] = "Restaurant";
  IconType["InternetWired"] = "InternetWired";
  IconType["Gym"] = "Gym";
  IconType["Flatscreen"] = "Flatscreen";
  IconType["Parking"] = "Parking";
  IconType["Ticket"] = "Ticket";
  IconType["Tv"] = "Tv";
  IconType["Radio"] = "Radio";
  IconType["Hr24"] = "Hr24";
  IconType["SuitecaseLock"] = "SuitecaseLock";
  IconType["Pool"] = "Pool";
  IconType["ClothesHanger"] = "ClothesHanger";
  IconType["Shirt"] = "Shirt";
  IconType["Newspaper"] = "Newspaper";
  IconType["Fireplace"] = "Fireplace";
  IconType["Bar"] = "Bar";
  IconType["Elevator"] = "Elevator";
  IconType["RoomService"] = "RoomService";
  IconType["Hotel"] = "Hotel";
  IconType["SkiLift"] = "SkiLift";
  IconType["Bus"] = "Bus";
  IconType["StopWatch"] = "StopWatch";
  IconType["Smoking"] = "Smoking";
  IconType["NoSmoking"] = "NoSmoking";
  IconType["Washer"] = "Washer";
  IconType["Dryer"] = "Dryer";
  IconType["Fridge"] = "Fridge";
  IconType["Freezer"] = "Freezer";
  IconType["Package"] = "Package";
  IconType["Umbrella"] = "Umbrella";
})(IconType || (IconType = {}));
var ImageCategory;
(function (ImageCategory) {
  ImageCategory["FloorPlan"] = "FloorPlan";
  ImageCategory["OutsideView"] = "OutsideView";
  ImageCategory["RoomView"] = "RoomView";
})(ImageCategory || (ImageCategory = {}));
var MultiPropertyType2;
(function (MultiPropertyType2) {
  MultiPropertyType2["All"] = "All";
  MultiPropertyType2["Accommodation"] = "Accommodation";
  MultiPropertyType2["Conference"] = "Conference";
})(MultiPropertyType2 || (MultiPropertyType2 = {}));
var NoAvailabilityOption;
(function (NoAvailabilityOption) {
  NoAvailabilityOption["Include"] = "Include";
  NoAvailabilityOption["Exclude"] = "Exclude";
  NoAvailabilityOption["None"] = "None";
})(NoAvailabilityOption || (NoAvailabilityOption = {}));
var PackageFromPriceType;
(function (PackageFromPriceType) {
  PackageFromPriceType["PerStay"] = "PerStay";
  PackageFromPriceType["PerNight"] = "PerNight";
  PackageFromPriceType["PerGuestPerNight"] = "PerGuestPerNight";
})(PackageFromPriceType || (PackageFromPriceType = {}));
var PaymentPolicyOption2;
(function (PaymentPolicyOption2) {
  PaymentPolicyOption2["NoGuaranteeRequired"] = "NoGuaranteeRequired";
  PaymentPolicyOption2["GuaranteeRequired"] = "GuaranteeRequired";
  PaymentPolicyOption2["PrePaidAtTheTimeOfTheBooking"] = "PrePaidAtTheTimeOfTheBooking";
})(PaymentPolicyOption2 || (PaymentPolicyOption2 = {}));
var PaymentTypeOption;
(function (PaymentTypeOption) {
  PaymentTypeOption["PayLater"] = "PayLater";
  PaymentTypeOption["DownPayment"] = "DownPayment";
  PaymentTypeOption["FullPayment"] = "FullPayment";
})(PaymentTypeOption || (PaymentTypeOption = {}));
var PointOfInterestType2;
(function (PointOfInterestType2) {
  PointOfInterestType2["Airport"] = "Airport";
  PointOfInterestType2["BusStop"] = "BusStop";
  PointOfInterestType2["CityCentre"] = "CityCentre";
  PointOfInterestType2["Harbour"] = "Harbour";
  PointOfInterestType2["TrainStation"] = "TrainStation";
  PointOfInterestType2["TramStation"] = "TramStation";
  PointOfInterestType2["Other"] = "Other";
})(PointOfInterestType2 || (PointOfInterestType2 = {}));
var PresentationType;
(function (PresentationType) {
  PresentationType["List"] = "List";
  PresentationType["Tiles"] = "Tiles";
})(PresentationType || (PresentationType = {}));
var ReasonForCancellation;
(function (ReasonForCancellation) {
  ReasonForCancellation["FoundOtherHotel"] = "FoundOtherHotel";
  ReasonForCancellation["FoundCheaperHotel"] = "FoundCheaperHotel";
  ReasonForCancellation["CancelledTrip"] = "CancelledTrip";
  ReasonForCancellation["Personal"] = "Personal";
  ReasonForCancellation["NotWannaTell"] = "NotWannaTell";
  ReasonForCancellation["Other"] = "Other";
})(ReasonForCancellation || (ReasonForCancellation = {}));
var SearchResultPresentationType;
(function (SearchResultPresentationType) {
  SearchResultPresentationType["Classic"] = "Classic";
  SearchResultPresentationType["Tile"] = "Tile";
  SearchResultPresentationType["Plate"] = "Plate";
  SearchResultPresentationType["TileLarge"] = "TileLarge";
})(SearchResultPresentationType || (SearchResultPresentationType = {}));
var StyleTheme;
(function (StyleTheme) {
  StyleTheme["Default"] = "Default";
  StyleTheme["NoSidebar"] = "NoSidebar";
  StyleTheme["SeparateSidebar"] = "SeparateSidebar";
})(StyleTheme || (StyleTheme = {}));
var TypeOfSearch;
(function (TypeOfSearch) {
  TypeOfSearch["All"] = "All";
  TypeOfSearch["PackageOnly"] = "PackageOnly";
  TypeOfSearch["RoomOnly"] = "RoomOnly";
})(TypeOfSearch || (TypeOfSearch = {}));
var UnitType;
(function (UnitType) {
  UnitType["Days"] = "Days";
  UnitType["Hours"] = "Hours";
})(UnitType || (UnitType = {}));
var VoucherPresentationType;
(function (VoucherPresentationType) {
  VoucherPresentationType["List"] = "List";
  VoucherPresentationType["Tiles"] = "Tiles";
  VoucherPresentationType["Merchandise"] = "Merchandise";
})(VoucherPresentationType || (VoucherPresentationType = {}));
var DayOfWeek;
(function (DayOfWeek) {
  DayOfWeek["Sunday"] = "Sunday";
  DayOfWeek["Monday"] = "Monday";
  DayOfWeek["Tuesday"] = "Tuesday";
  DayOfWeek["Wednesday"] = "Wednesday";
  DayOfWeek["Thursday"] = "Thursday";
  DayOfWeek["Friday"] = "Friday";
  DayOfWeek["Saturday"] = "Saturday";
})(DayOfWeek || (DayOfWeek = {}));
var ApiException = /*#__PURE__*/function (_Error) {
  _inherits(ApiException, _Error);
  var _super2 = _createSuper(ApiException);
  function ApiException(message, status, response, headers, result) {
    var _this212;
    classCallCheck_classCallCheck(this, ApiException);
    _this212 = _super2.call(this);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "message", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "status", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "response", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "headers", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "result", void 0);
    defineProperty_defineProperty(_assertThisInitialized(_this212), "isApiException", true);
    _this212.message = message;
    _this212.status = status;
    _this212.response = response;
    _this212.headers = headers;
    _this212.result = result;
    return _this212;
  }
  createClass_createClass(ApiException, null, [{
    key: "isApiException",
    value: function isApiException(obj) {
      return obj.isApiException === true;
    }
  }]);
  return ApiException;
}( /*#__PURE__*/_wrapNativeSuper(Error));
function throwException(message, status, response, headers, result) {
  if (result !== null && result !== undefined) throw result;else throw new ApiException(message, status, response, headers, null);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
;// CONCATENATED MODULE: ./src/translations/accommodation.ts
var accommodation_AccommodationTranslations;
(function (AccommodationTranslations) {
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Yes"] = 0] = "EA4H.General.Yes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Step{0}Of{1}StepSelect{2}"] = 1] = "EA4H.General.Step{0}Of{1}StepSelect{2}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseRoomType"] = 2] = "EA4H.General.ChooseRoomType";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfRooms"] = 3] = "EA4H.General.NumberOfRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RoomLOWER"] = 4] = "EA4H.General.RoomLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RoomsLower"] = 5] = "EA4H.General.RoomsLower";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Accommodation"] = 6] = "EA4H.General.Accommodation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Accommodation_LOWER"] = 7] = "EA4H.General.Accommodation_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Accommodations_LOWER"] = 8] = "EA4H.General.Accommodations_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Guest_LOWER"] = 9] = "EA4H.General.Guest_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Guests_LOWER"] = 10] = "EA4H.General.Guests_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerNight"] = 11] = "EA4H.General.PerNight";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerGuest"] = 12] = "EA4H.General.PerGuest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerStay"] = 13] = "EA4H.General.PerStay";
  AccommodationTranslations[AccommodationTranslations["EA4H.Package.PerGuestPerNight"] = 14] = "EA4H.Package.PerGuestPerNight";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouHaveSearchedFor"] = 15] = "EA4H.General.YouHaveSearchedFor";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouHaventSelectedAnyDates"] = 16] = "EA4H.General.YouHaventSelectedAnyDates";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfNights"] = 17] = "EA4H.General.NumberOfNights";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Night"] = 18] = "EA4H.General.Night";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Nights"] = 19] = "EA4H.General.Nights";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Night_LOWER"] = 20] = "EA4H.General.Night_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Nights_LOWER"] = 21] = "EA4H.General.Nights_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Welcome{0}"] = 22] = "EA4H.General.Welcome{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SearchAndBookRooms"] = 23] = "EA4H.General.SearchAndBookRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SundayThreeLetters"] = 24] = "EA4H.General.SundayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SaturdayThreeLetters"] = 25] = "EA4H.General.SaturdayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FridayThreeLetters"] = 26] = "EA4H.General.FridayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ThursdayThreeLetters"] = 27] = "EA4H.General.ThursdayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.WednesdayThreeLetters"] = 28] = "EA4H.General.WednesdayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TuesdayThreeLetters"] = 29] = "EA4H.General.TuesdayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MondayThreeLetters"] = 30] = "EA4H.General.MondayThreeLetters";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Sunday"] = 31] = "EA4H.General.Sunday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Saturday"] = 32] = "EA4H.General.Saturday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Friday"] = 33] = "EA4H.General.Friday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Thursday"] = 34] = "EA4H.General.Thursday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Wednesday"] = 35] = "EA4H.General.Wednesday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Tuesday"] = 36] = "EA4H.General.Tuesday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Monday"] = 37] = "EA4H.General.Monday";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.January"] = 38] = "EA4H.General.January";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.February"] = 39] = "EA4H.General.February";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.March"] = 40] = "EA4H.General.March";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.April"] = 41] = "EA4H.General.April";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.May"] = 42] = "EA4H.General.May";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.June"] = 43] = "EA4H.General.June";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.July"] = 44] = "EA4H.General.July";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.August"] = 45] = "EA4H.General.August";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.September"] = 46] = "EA4H.General.September";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.October"] = 47] = "EA4H.General.October";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.November"] = 48] = "EA4H.General.November";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.December"] = 49] = "EA4H.General.December";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseDate"] = 50] = "EA4H.General.ChooseDate";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PleaseChooseADateInTheCalendar"] = 51] = "EA4H.General.PleaseChooseADateInTheCalendar";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoCheckedIn"] = 52] = "EA4H.General.NoCheckedIn";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoCheckedInFor{0}"] = 53] = "EA4H.General.NoCheckedInFor{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CrossSaleOrWaitingList"] = 54] = "EA4H.General.CrossSaleOrWaitingList";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.WaitingList"] = 55] = "EA4H.General.WaitingList";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowAll"] = 56] = "EA4H.General.ShowAll";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowAllPackages"] = 57] = "EA4H.General.ShowAllPackages";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Calendar"] = 58] = "EA4H.General.Calendar";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.IncorrectPromoCode"] = 59] = "EA4H.General.IncorrectPromoCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.IncorrectCorporationCode"] = 60] = "EA4H.General.IncorrectCorporationCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.IncorrectIATACode"] = 61] = "EA4H.General.Error.IncorrectIATACode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PromoCodeApplied"] = 62] = "EA4H.General.PromoCodeApplied";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CorporationCodeApplied"] = 63] = "EA4H.General.CorporationCodeApplied";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AgentCodeApplied"] = 64] = "EA4H.General.AgentCodeApplied";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SearchButton"] = 65] = "EA4H.General.SearchButton";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AvailableLengthOfStay"] = 66] = "EA4H.General.AvailableLengthOfStay";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PromoOrCorporationCodeTitle"] = 67] = "EA4H.Online.PromoOrCorporationCodeTitle";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.IHaveACodeTitle"] = 68] = "EA4H.Online.IHaveACodeTitle";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.EnterPromoOrCorporationCodeDescription"] = 69] = "EA4H.Online.EnterPromoOrCorporationCodeDescription";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PromoCode"] = 70] = "EA4H.General.PromoCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CorporationCode"] = 71] = "EA4H.General.CorporationCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AgentCode"] = 72] = "EA4H.General.AgentCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.VerifyCode"] = 73] = "EA4H.General.VerifyCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MaxNoPers{0}"] = 74] = "EA4H.General.MaxNoPers{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.DoYouWantInfantToShareBed{0}"] = 75] = "EA4H.Online.DoYouWantInfantToShareBed{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.DouYouWant0YrsOldChildToShareBed"] = 76] = "EA4H.Online.DouYouWant0YrsOldChildToShareBed";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NoOfRoomsAndGuests_Hotel"] = 77] = "EA4H.Online.NoOfRoomsAndGuests_Hotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ChooseNoOfRoomsAndGuests_Hotel"] = 78] = "EA4H.Online.ChooseNoOfRoomsAndGuests_Hotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Rooms"] = 79] = "EA4H.General.Rooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Room"] = 80] = "EA4H.General.Room";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Room{0}"] = 81] = "EA4H.Online.Room{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Adult"] = 82] = "EA4H.General.Adult";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Child"] = 83] = "EA4H.General.Child";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AgesOfChildren"] = 84] = "EA4H.Online.AgesOfChildren";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YearsLOWER"] = 85] = "EA4H.General.YearsLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AddAnAdditionalRoom_Hotel"] = 86] = "EA4H.Online.AddAnAdditionalRoom_Hotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UnavailableForSelectedNumberOfGuests"] = 87] = "EA4H.General.UnavailableForSelectedNumberOfGuests";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TryAdjustingNumberOfGuestsPerRoom"] = 88] = "EA4H.General.TryAdjustingNumberOfGuestsPerRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NotAvailableForSelectedDates"] = 89] = "EA4H.General.NotAvailableForSelectedDates";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ViewAvailableDates"] = 90] = "EA4H.General.ViewAvailableDates";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NothingMatchingPackageFilter"] = 91] = "EA4H.Online.NothingMatchingPackageFilter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NothingAvailable"] = 92] = "EA4H.General.NothingAvailable";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Adults"] = 93] = "EA4H.General.Adults";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Children"] = 94] = "EA4H.General.Children";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YearsShortLowCaps"] = 95] = "EA4H.General.YearsShortLowCaps";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.For"] = 96] = "EA4H.General.For";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.WithOneXBed"] = 97] = "EA4H.General.WithOneXBed";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.With{0}XBeds"] = 98] = "EA4H.General.With{0}XBeds";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NonFreeCancellation"] = 99] = "EA4H.General.NonFreeCancellation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FreeCancellation"] = 100] = "EA4H.General.FreeCancellation";
  AccommodationTranslations[AccommodationTranslations["EA4H.GeneralTermsAndConditions"] = 101] = "EA4H.GeneralTermsAndConditions";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Until"] = 102] = "EA4H.General.Until";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CheckPolicy"] = 103] = "EA4H.General.CheckPolicy";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PackageLength"] = 104] = "EA4H.Online.PackageLength";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PackageOpenForSale"] = 105] = "EA4H.Online.PackageOpenForSale";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ValidDaysForArrival"] = 106] = "EA4H.Online.ValidDaysForArrival";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PackageIncludes"] = 107] = "EA4H.Online.PackageIncludes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Day_LOWER"] = 108] = "EA4H.General.Day_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Days_LOWER"] = 109] = "EA4H.General.Days_LOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.From"] = 110] = "EA4H.General.From";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AccommodationTypeFilter"] = 111] = "EA4H.Online.AccommodationTypeFilter";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NoOfNights"] = 112] = "EA4H.Online.NoOfNights";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoOfRooms"] = 113] = "EA4H.General.NoOfRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NoOfGuests"] = 114] = "EA4H.Online.NoOfGuests";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ShowAllRooms"] = 115] = "EA4H.Online.ShowAllRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NewSearch"] = 116] = "EA4H.Online.NewSearch";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PromoCodeRemoved"] = 117] = "EA4H.General.PromoCodeRemoved";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CorporationCodeRemoved"] = 118] = "EA4H.General.CorporationCodeRemoved";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailablePriceConditions"] = 119] = "EA4H.Online.AvailablePriceConditions";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Terms"] = 120] = "EA4H.Online.Terms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.TodayPrice"] = 121] = "EA4H.Online.TodayPrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Close"] = 122] = "EA4H.General.Close";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AgentCodeRemoved"] = 123] = "EA4H.General.AgentCodeRemoved";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForOneNight"] = 124] = "EA4H.General.ForOneNight";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.YouSave"] = 125] = "EA4H.Online.YouSave";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SaveSearch"] = 126] = "EA4H.General.SaveSearch";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SaveYourSearch"] = 127] = "EA4H.General.SaveYourSearch";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.SendAsEmail"] = 128] = "EA4H.Confirmation.SendAsEmail";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Email"] = 129] = "EA4H.General.Email";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Send"] = 130] = "EA4H.General.Send";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailSent"] = 131] = "EA4H.General.EmailSent";
  AccommodationTranslations[AccommodationTranslations["EA4H.Frontdesk.SomethingWentWrongTryAgainLater"] = 132] = "EA4H.Frontdesk.SomethingWentWrongTryAgainLater";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.InvalidEmailAddress"] = 133] = "EA4H.General.Error.InvalidEmailAddress";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Size"] = 134] = "EA4H.General.Size";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PersonsInRegularBeds"] = 135] = "EA4H.Online.PersonsInRegularBeds";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MaxNoExtraBeds"] = 136] = "EA4H.General.MaxNoExtraBeds";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoOfPersons"] = 137] = "EA4H.General.NoOfPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MinNoPersons"] = 138] = "EA4H.General.MinNoPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MaxNoPersons"] = 139] = "EA4H.General.MaxNoPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowingAvailableRateCodesFor"] = 140] = "EA4H.General.ShowingAvailableRateCodesFor";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Facilities"] = 141] = "EA4H.Online.Facilities";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RoomInfo"] = 142] = "EA4H.General.RoomInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Error.SomethingWentWrongTryAgain"] = 143] = "EA4H.Online.Error.SomethingWentWrongTryAgain";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BestRateGuaranteed"] = 144] = "EA4H.General.BestRateGuaranteed";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SecurePayment"] = 145] = "EA4H.General.SecurePayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TotalPrice"] = 146] = "EA4H.General.TotalPrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.VATIncluded"] = 147] = "EA4H.General.VATIncluded";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Continue"] = 148] = "EA4H.General.Continue";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SelectedOffer"] = 149] = "EA4H.General.SelectedOffer";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SelectOffer"] = 150] = "EA4H.General.SelectOffer";
  AccommodationTranslations[AccommodationTranslations["EA4H.Calendar.MoreNights"] = 151] = "EA4H.Calendar.MoreNights";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Unlock"] = 152] = "EA4H.General.Unlock";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Confirm"] = 153] = "EA4H.General.Confirm";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailRequiredInfo"] = 154] = "EA4H.General.EmailRequiredInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Email"] = 155] = "EA4H.Online.Email";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Password"] = 156] = "EA4H.General.Password";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PromoCodeRequiredInfo"] = 157] = "EA4H.General.PromoCodeRequiredInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CardType"] = 158] = "EA4H.General.CardType";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CardNumber"] = 159] = "EA4H.General.CardNumber";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PostalCode"] = 160] = "EA4H.General.PostalCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SecurityCode"] = 161] = "EA4H.General.SecurityCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PhoneNumber"] = 162] = "EA4H.General.PhoneNumber";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UserName"] = 163] = "EA4H.General.UserName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BecomeMember"] = 164] = "EA4H.General.BecomeMember";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForgotPassword"] = 165] = "EA4H.General.ForgotPassword";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UnlockWithMobilePhoneNumber"] = 166] = "EA4H.General.UnlockWithMobilePhoneNumber";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.OnlyOneLeft"] = 167] = "EA4H.Online.OnlyOneLeft";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FewLeft"] = 168] = "EA4H.General.FewLeft";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Included"] = 169] = "EA4H.General.Included";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.IncludedInPrice"] = 170] = "EA4H.General.IncludedInPrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Book"] = 171] = "EA4H.General.Book";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.UnlockAndBook"] = 172] = "EA4H.Online.UnlockAndBook";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.GreatOffer"] = 173] = "EA4H.Online.GreatOffer";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseHowMany"] = 174] = "EA4H.General.ChooseHowMany";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Choose"] = 175] = "EA4H.General.Choose";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Select"] = 176] = "EA4H.General.Select";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailableRateCodes"] = 177] = "EA4H.Online.AvailableRateCodes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Terms"] = 178] = "EA4H.General.Terms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MoreInformation"] = 179] = "EA4H.General.MoreInformation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ArrivalDate"] = 180] = "EA4H.General.ArrivalDate";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CheckOut"] = 181] = "EA4H.General.CheckOut";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Check-In"] = 182] = "EA4H.General.Check-In";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Filter"] = 183] = "EA4H.General.Filter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Show"] = 184] = "EA4H.General.Show";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.TryingToBookDifferentPaymentPolicy"] = 185] = "EA4H.General.Error.TryingToBookDifferentPaymentPolicy";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.SearchAndBookPackagesAndOffers"] = 186] = "EA4H.Online.SearchAndBookPackagesAndOffers";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BookPackageDetailInfo{0}{1}"] = 187] = "EA4H.General.BookPackageDetailInfo{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowAllRooms"] = 188] = "EA4H.General.ShowAllRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Manage.Reservations.SearchReservations.MoreSearchOptions"] = 189] = "EA4H.Manage.Reservations.SearchReservations.MoreSearchOptions";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AndYouSaveXPercent"] = 190] = "EA4H.General.AndYouSaveXPercent";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MoreInfo"] = 191] = "EA4H.General.MoreInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailablePrices"] = 192] = "EA4H.Online.AvailablePrices";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TodaysPrice"] = 193] = "EA4H.General.TodaysPrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PersonPrice"] = 194] = "EA4H.General.PersonPrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UnavailableRoomConfig"] = 195] = "EA4H.General.UnavailableRoomConfig";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Min1Adult"] = 196] = "EA4H.General.Min1Adult";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Min1Child"] = 197] = "EA4H.General.Min1Child";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Max1Adult"] = 198] = "EA4H.General.Max1Adult";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Max1Child"] = 199] = "EA4H.General.Max1Child";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Min{0}Adults"] = 200] = "EA4H.General.Min{0}Adults";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Min{0}Children"] = 201] = "EA4H.General.Min{0}Children";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Max{0}Adults"] = 202] = "EA4H.General.Max{0}Adults";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Max{0}Children"] = 203] = "EA4H.General.Max{0}Children";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Min{0}Persons"] = 204] = "EA4H.General.Min{0}Persons";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Max{0}Persons"] = 205] = "EA4H.General.Max{0}Persons";
  AccommodationTranslations[AccommodationTranslations["EA4H.Manage.Rates.Rates"] = 206] = "EA4H.Manage.Rates.Rates";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Rate"] = 207] = "EA4H.General.Rate";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailableRates"] = 208] = "EA4H.Online.AvailableRates";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Policies"] = 209] = "EA4H.General.Policies";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Capacity"] = 210] = "EA4H.Online.Capacity";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Amenities"] = 211] = "EA4H.Online.Amenities";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Beds"] = 212] = "EA4H.General.Beds";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.Unavailable"] = 213] = "EA4H.Online.Unavailable";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.ThePackageIncludes"] = 214] = "EA4H.Confirmation.ThePackageIncludes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseRoomTypeFor"] = 215] = "EA4H.General.ChooseRoomTypeFor";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseAddOnFor"] = 216] = "EA4H.General.ChooseAddOnFor";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouMightAlsoBeInterestedIn"] = 217] = "EA4H.General.YouMightAlsoBeInterestedIn";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TryingToBookMoreRoomsThanThereIsAvailabilityRooms{0}"] = 218] = "EA4H.General.TryingToBookMoreRoomsThanThereIsAvailabilityRooms{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Ages"] = 219] = "EA4H.General.Ages";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Includes"] = 220] = "EA4H.General.Includes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Age"] = 221] = "EA4H.General.Age";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CloseAndGoBack"] = 222] = "EA4H.General.CloseAndGoBack";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NoDateSelected"] = 223] = "EA4H.Online.NoDateSelected";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ViewTermsAndConditions"] = 224] = "EA4H.General.ViewTermsAndConditions";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AndYouSave"] = 225] = "EA4H.General.AndYouSave";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.SpecialDealSave{0}"] = 226] = "EA4H.Online.SpecialDealSave{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ValidPeriods"] = 227] = "EA4H.Online.ValidPeriods";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FreeCancellation "] = 228] = "EA4H.General.FreeCancellation ";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.IncludingVAT"] = 229] = "EA4H.General.IncludingVAT";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BookingSummary"] = 230] = "EA4H.General.BookingSummary";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Booking"] = 231] = "EA4H.General.Booking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Guests"] = 232] = "EA4H.General.Guests";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Extras"] = 233] = "EA4H.General.Extras";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Edit"] = 234] = "EA4H.General.Edit";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Remove"] = 235] = "EA4H.General.Remove";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Subtotal"] = 236] = "EA4H.General.Subtotal";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseAlternative"] = 237] = "EA4H.General.ChooseAlternative";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AddToYourRoom"] = 238] = "EA4H.Online.AddToYourRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChangeSearch"] = 239] = "EA4H.General.ChangeSearch";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FullyBooked"] = 240] = "EA4H.General.FullyBooked";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Uncategorized"] = 241] = "EA4H.General.Uncategorized";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GoToCheckout"] = 242] = "EA4H.General.GoToCheckout";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ContinueShopping"] = 243] = "EA4H.General.ContinueShopping";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MyCart"] = 244] = "EA4H.General.MyCart";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForRoom{0}"] = 245] = "EA4H.General.ForRoom{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SelectAnAlternativeFor{0}"] = 246] = "EA4H.General.SelectAnAlternativeFor{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AddOns"] = 247] = "EA4H.General.AddOns";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OptionalAddOns"] = 248] = "EA4H.General.OptionalAddOns";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.FullyBooked"] = 249] = "EA4H.Online.FullyBooked";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ReadMoreAndAdd"] = 250] = "EA4H.General.ReadMoreAndAdd";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AddToBooking"] = 251] = "EA4H.General.AddToBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Selected"] = 252] = "EA4H.General.Selected";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PersonsLOWER"] = 253] = "EA4H.General.PersonsLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MessageToRestaurant"] = 254] = "EA4H.General.MessageToRestaurant";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PersonLOWER"] = 255] = "EA4H.General.PersonLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AndMore"] = 256] = "EA4H.General.AndMore";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForNightLOWER"] = 257] = "EA4H.General.ForNightLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForNightsLOWER"] = 258] = "EA4H.General.ForNightsLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YourReservationWithUsAt{0}IsAlmostCompleted"] = 259] = "EA4H.General.YourReservationWithUsAt{0}IsAlmostCompleted";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YourDetailsAndPayment"] = 260] = "EA4H.General.YourDetailsAndPayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailRequired"] = 261] = "EA4H.General.EmailRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailInvalid"] = 262] = "EA4H.General.EmailInvalid";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailMatch"] = 263] = "EA4H.General.EmailMatch";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EmailConfirm"] = 264] = "EA4H.General.EmailConfirm";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.COAddress"] = 265] = "EA4H.General.COAddress";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CompanyName"] = 266] = "EA4H.General.CompanyName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.LowerOptional"] = 267] = "EA4H.General.LowerOptional";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AreYouTravellingForWork"] = 268] = "EA4H.General.AreYouTravellingForWork";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CustomerInformation"] = 269] = "EA4H.General.CustomerInformation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ReferencetName"] = 270] = "EA4H.General.ReferencetName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GuestInformation"] = 271] = "EA4H.General.GuestInformation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GuestInRoom{0}{1}"] = 272] = "EA4H.General.GuestInRoom{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EnterAllGuestNames"] = 273] = "EA4H.General.EnterAllGuestNames";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PrimaryGuestSameAsCustomer"] = 274] = "EA4H.General.PrimaryGuestSameAsCustomer";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SocialLoginDescription"] = 275] = "EA4H.General.SocialLoginDescription";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.LogInWithSocialProvider{0}"] = 276] = "EA4H.General.LogInWithSocialProvider{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentInformation"] = 277] = "EA4H.General.PaymentInformation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BecomeMemberGet{0}{1}Discount"] = 278] = "EA4H.General.BecomeMemberGet{0}{1}Discount";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Get{0}{1}Discount"] = 279] = "EA4H.General.Get{0}{1}Discount";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.IsSocialLogin"] = 280] = "EA4H.Online.IsSocialLogin";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OptionsForYouBooking"] = 281] = "EA4H.General.OptionsForYouBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AddToCart"] = 282] = "EA4H.General.AddToCart";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NotInterested"] = 283] = "EA4H.General.NotInterested";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.HowWouldYouLikeToPay"] = 284] = "EA4H.Online.HowWouldYouLikeToPay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ContinueToPayment"] = 285] = "EA4H.General.ContinueToPayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ConfirmBooking"] = 286] = "EA4H.General.ConfirmBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AbortBooking"] = 287] = "EA4H.General.AbortBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ILikeToSubscribeToNewsletter"] = 288] = "EA4H.General.ILikeToSubscribeToNewsletter";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PayLaterInfoText{0}{1}"] = 289] = "EA4H.Online.PayLaterInfoText{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.DibsEasyPaymentInfoText"] = 290] = "EA4H.Online.DibsEasyPaymentInfoText";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.DownPaymentInfoText{0}{1}"] = 291] = "EA4H.Online.DownPaymentInfoText{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.FullPaymentInfoText{0}"] = 292] = "EA4H.Online.FullPaymentInfoText{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PayWithYourGiftCard"] = 293] = "EA4H.General.PayWithYourGiftCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GiftCardPaymentInfo"] = 294] = "EA4H.General.GiftCardPaymentInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.VoucherNumber"] = 295] = "EA4H.General.VoucherNumber";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AreYouAMember"] = 296] = "EA4H.General.AreYouAMember";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouWillReceive{0}StampsAfterYour{1}NightStay"] = 297] = "EA4H.General.YouWillReceive{0}StampsAfterYour{1}NightStay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Login"] = 298] = "EA4H.General.Login";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.HowItWorks"] = 299] = "EA4H.General.HowItWorks";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.TermsAndConditionsPrivacyFullLink{0}{1}{2}"] = 300] = "EA4H.Conference.TermsAndConditionsPrivacyFullLink{0}{1}{2}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.TermsAndConditionsPrivacyFull{0}{1}"] = 301] = "EA4H.Conference.TermsAndConditionsPrivacyFull{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.TermsAndConditionsFull{0}"] = 302] = "EA4H.Conference.TermsAndConditionsFull{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.MPPrivacyFullLink{0}{1}"] = 303] = "EA4H.Online.MPPrivacyFullLink{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.MPPrivacyPrivacyFull{0}"] = 304] = "EA4H.Online.MPPrivacyPrivacyFull{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.FirstNameIsRequired"] = 305] = "EA4H.Conference.Error.FirstNameIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.LastNameIsRequired"] = 306] = "EA4H.Conference.Error.LastNameIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.PhoneNumberIsRequired"] = 307] = "EA4H.Conference.Error.PhoneNumberIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.PhoneCountryCodeIsRequired"] = 308] = "EA4H.Conference.Error.PhoneCountryCodeIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.EmailIsRequired"] = 309] = "EA4H.Conference.Error.EmailIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.CountryIsRequired"] = 310] = "EA4H.Conference.Error.CountryIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.COAddressIsRequired"] = 311] = "EA4H.Conference.Error.COAddressIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.CompanyIsRequired"] = 312] = "EA4H.Conference.Error.CompanyIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.CityIsRequired"] = 313] = "EA4H.Conference.Error.CityIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.DepartmentIsRequired"] = 314] = "EA4H.Conference.Error.DepartmentIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.OrgnumberIsRequired"] = 315] = "EA4H.Conference.Error.OrgnumberIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.PostalCodeIsRequired"] = 316] = "EA4H.Conference.Error.PostalCodeIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.StreetAddressIsRequired"] = 317] = "EA4H.Conference.Error.StreetAddressIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.InformationForRequiredFieldsAreMissing"] = 318] = "EA4H.Conference.Error.InformationForRequiredFieldsAreMissing";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Error.VerifyEmailIsRequired"] = 319] = "EA4H.Conference.Error.VerifyEmailIsRequired";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.TimesForMeetingRooms"] = 320] = "EA4H.Conference.TimesForMeetingRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.MeetingLength"] = 321] = "EA4H.Conference.MeetingLength";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.DayConference"] = 322] = "EA4H.Conference.DayConference";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ConferenceWithAccommodation"] = 323] = "EA4H.Conference.ConferenceWithAccommodation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.TypeOfBooking"] = 324] = "EA4H.Conference.TypeOfBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.PlaceOrFacility"] = 325] = "EA4H.Conference.PlaceOrFacility";
  AccommodationTranslations[AccommodationTranslations["EA4H.Checkout.Error.InformationForConfirmTermsAndCondtions"] = 326] = "EA4H.Checkout.Error.InformationForConfirmTermsAndCondtions";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CreditCard"] = 327] = "EA4H.General.CreditCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ChooseYourCreditCard"] = 328] = "EA4H.Online.ChooseYourCreditCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AmountToPay"] = 329] = "EA4H.Online.AmountToPay";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ConfirmChangesAndGetForwardedToPaymentPartner"] = 330] = "EA4H.EditReservation.ConfirmChangesAndGetForwardedToPaymentPartner";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.VISA"] = 331] = "EA4H.General.VISA";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MasterCard"] = 332] = "EA4H.General.MasterCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AMEX"] = 333] = "EA4H.General.AMEX";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PaypalOrCreditCardPayment"] = 334] = "EA4H.Online.PaypalOrCreditCardPayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouHaveSelected"] = 335] = "EA4H.General.YouHaveSelected";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithNetsEasy"] = 336] = "EA4H.General.PaymentWithNetsEasy";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithNexi"] = 337] = "EA4H.General.PaymentWithNexi";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SecurePaymentOptions"] = 338] = "EA4H.General.SecurePaymentOptions";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.KlarnaPageInfoText"] = 339] = "EA4H.Online.KlarnaPageInfoText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CompletedPayments"] = 340] = "EA4H.General.CompletedPayments";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.Paid{0}with{1}"] = 341] = "EA4H.EditReservation.Paid{0}with{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Unknown"] = 342] = "EA4H.General.Unknown";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Cash"] = 343] = "EA4H.General.Cash";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Check"] = 344] = "EA4H.General.Check";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GiftCard"] = 345] = "EA4H.General.GiftCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BankTransfer"] = 346] = "EA4H.General.BankTransfer";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BankDeposit"] = 347] = "EA4H.General.BankDeposit";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Invoice"] = 348] = "EA4H.General.Invoice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.DownPayment"] = 349] = "EA4H.General.DownPayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ExternalInvoiceDownPayment"] = 350] = "EA4H.General.ExternalInvoiceDownPayment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Refunded"] = 351] = "EA4H.General.Refunded";
  AccommodationTranslations[AccommodationTranslations["EA4H.Manage.Reservations.ThereAreNoPaymentTransactionForThisReservationYet"] = 352] = "EA4H.Manage.Reservations.ThereAreNoPaymentTransactionForThisReservationYet";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentSummary"] = 353] = "EA4H.General.PaymentSummary";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Total"] = 354] = "EA4H.General.Total";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AlreadyPaid"] = 355] = "EA4H.General.AlreadyPaid";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BalanceDue"] = 356] = "EA4H.General.BalanceDue";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NewAmount"] = 357] = "EA4H.General.NewAmount";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PreviousAmount"] = 358] = "EA4H.General.PreviousAmount";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ConfirmChanges"] = 359] = "EA4H.General.ConfirmChanges";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Cancel"] = 360] = "EA4H.General.Cancel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Next"] = 361] = "EA4H.General.Next";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Done"] = 362] = "EA4H.General.Done";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.TotalForAlternatives"] = 363] = "EA4H.EditReservation.TotalForAlternatives";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RoomType_Hotel"] = 364] = "EA4H.General.RoomType_Hotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UpdateAddOnTimeSlots"] = 365] = "EA4H.General.UpdateAddOnTimeSlots";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ExtrasToPackage"] = 366] = "EA4H.EditReservation.ExtrasToPackage";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ExtrasToRoom"] = 367] = "EA4H.EditReservation.ExtrasToRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseAlternativeForYourPackage"] = 368] = "EA4H.General.ChooseAlternativeForYourPackage";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeExtrasToYourPackage"] = 369] = "EA4H.EditReservation.ChangeExtrasToYourPackage";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.CurrentlySelectedExtrasInfoText"] = 370] = "EA4H.EditReservation.CurrentlySelectedExtrasInfoText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UnknownName"] = 371] = "EA4H.General.UnknownName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChangeExtras"] = 372] = "EA4H.General.ChangeExtras";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.StepX"] = 373] = "EA4H.General.StepX";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TheRoomHasBeenReconfigured"] = 374] = "EA4H.General.TheRoomHasBeenReconfigured";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TotalForAddOns"] = 375] = "EA4H.General.TotalForAddOns";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Add"] = 376] = "EA4H.General.Add";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Save"] = 377] = "EA4H.General.Save";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Update"] = 378] = "EA4H.General.Update";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AddToYourRoomInfo1"] = 379] = "EA4H.Online.AddToYourRoomInfo1";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AddToYourRoomInfo2"] = 380] = "EA4H.Online.AddToYourRoomInfo2";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PleaseSelectTimeForYourTableReservations"] = 381] = "EA4H.General.PleaseSelectTimeForYourTableReservations";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.No"] = 382] = "EA4H.General.No";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CancelBookingAndReturnToStartPage"] = 383] = "EA4H.General.CancelBookingAndReturnToStartPage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CancelBooking"] = 384] = "EA4H.General.CancelBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChangeBooking"] = 385] = "EA4H.General.ChangeBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OnePerBooking"] = 386] = "EA4H.General.OnePerBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OnePerGuest"] = 387] = "EA4H.General.OnePerGuest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OnePerGuestAndDay"] = 388] = "EA4H.General.OnePerGuestAndDay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OnePerRoom"] = 389] = "EA4H.General.OnePerRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OnePerRoomAndDay"] = 390] = "EA4H.General.OnePerRoomAndDay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OptionalNumberOfUnits"] = 391] = "EA4H.General.OptionalNumberOfUnits";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OptionalOnePerRoom"] = 392] = "EA4H.General.OptionalOnePerRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoTimeslotsAvailable"] = 393] = "EA4H.General.NoTimeslotsAvailable";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Added"] = 394] = "EA4H.General.Added";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RulesForPaymentAndCancellation"] = 395] = "EA4H.General.RulesForPaymentAndCancellation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowMore"] = 396] = "EA4H.General.ShowMore";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowLess"] = 397] = "EA4H.General.ShowLess";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AreYouSureYouWantToUndoAllYourChanges"] = 398] = "EA4H.General.AreYouSureYouWantToUndoAllYourChanges";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ThisReservationHasBeenCancelled"] = 399] = "EA4H.EditReservation.ThisReservationHasBeenCancelled";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ThisBookingWasConfirmed"] = 400] = "EA4H.General.ThisBookingWasConfirmed";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ThisIsAConferenceReservationContactUsToChange"] = 401] = "EA4H.EditReservation.ThisIsAConferenceReservationContactUsToChange";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ThisReservationIsPaidWithVoucherConnectedToPackageContactUsToChange"] = 402] = "EA4H.EditReservation.ThisReservationIsPaidWithVoucherConnectedToPackageContactUsToChange";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouAreCurrentlyChangingYourBooking"] = 403] = "EA4H.General.YouAreCurrentlyChangingYourBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ViewEditAndCancellationTermsForYourBooking"] = 404] = "EA4H.General.ViewEditAndCancellationTermsForYourBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouHave{0}LeftToPay"] = 405] = "EA4H.General.YouHave{0}LeftToPay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UndoAllChanges"] = 406] = "EA4H.General.UndoAllChanges";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Departure"] = 407] = "EA4H.General.Departure";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Arrival"] = 408] = "EA4H.General.Arrival";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.LeftToPay"] = 409] = "EA4H.General.LeftToPay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ResponsibleForBooking"] = 410] = "EA4H.General.ResponsibleForBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Phone"] = 411] = "EA4H.General.Phone";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.IAmACorporateCustomer"] = 412] = "EA4H.General.IAmACorporateCustomer";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.MustBeAnEmail"] = 413] = "EA4H.General.Error.MustBeAnEmail";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Corporation"] = 414] = "EA4H.General.Corporation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FirstName"] = 415] = "EA4H.General.FirstName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.LastName"] = 416] = "EA4H.General.LastName";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseCountry"] = 417] = "EA4H.General.ChooseCountry";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CountryCode"] = 418] = "EA4H.General.CountryCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.City"] = 419] = "EA4H.General.City";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CoAddress"] = 420] = "EA4H.General.CoAddress";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.StreetAddress"] = 421] = "EA4H.General.StreetAddress";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.DepartmentReference"] = 422] = "EA4H.General.DepartmentReference";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OrganizationNumber"] = 423] = "EA4H.General.OrganizationNumber";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OptionalLOWER"] = 424] = "EA4H.General.OptionalLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.MessageAndSpecialRequest"] = 425] = "EA4H.EditReservation.MessageAndSpecialRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TypeYourRequest"] = 426] = "EA4H.General.TypeYourRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouHaveNotAddedAnyMessage"] = 427] = "EA4H.General.YouHaveNotAddedAnyMessage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Payment"] = 428] = "EA4H.General.Payment";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaidAmountText"] = 429] = "EA4H.General.PaidAmountText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoTransactions"] = 430] = "EA4H.General.NoTransactions";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.RoomNameHasStandardBeds{0}{1}"] = 431] = "EA4H.EditReservation.RoomNameHasStandardBeds{0}{1}";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.MayContainExtraBeds{0}"] = 432] = "EA4H.EditReservation.MayContainExtraBeds{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.AndTakesAMaximumOfPersons{0}"] = 433] = "EA4H.EditReservation.AndTakesAMaximumOfPersons{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YouCanChangeGuestBelow"] = 434] = "EA4H.EditReservation.YouCanChangeGuestBelow";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.TheRoomIsNotBookableForTheSelectedDates"] = 435] = "EA4H.EditReservation.TheRoomIsNotBookableForTheSelectedDates";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeNumberOfGuests"] = 436] = "EA4H.EditReservation.ChangeNumberOfGuests";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YouHaveNotMadeAnyChangesYet"] = 437] = "EA4H.EditReservation.YouHaveNotMadeAnyChangesYet";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.SelectedGuestsAre"] = 438] = "EA4H.EditReservation.SelectedGuestsAre";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.RoomIsNotAvailableForNewGuestConfigInfo"] = 439] = "EA4H.EditReservation.RoomIsNotAvailableForNewGuestConfigInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YourPriceWillIncreaseByInfo{0}"] = 440] = "EA4H.EditReservation.YourPriceWillIncreaseByInfo{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YourPriceWillDecreaseByInfo{0}"] = 441] = "EA4H.EditReservation.YourPriceWillDecreaseByInfo{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YourPriceWillStayTheSame"] = 442] = "EA4H.EditReservation.YourPriceWillStayTheSame";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YourNewDatesAre"] = 443] = "EA4H.EditReservation.YourNewDatesAre";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.NotAllowedToMakeCheaper"] = 444] = "EA4H.EditReservation.NotAllowedToMakeCheaper";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.NothingAvailableToBookTheseDates"] = 445] = "EA4H.EditReservation.NothingAvailableToBookTheseDates";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.RoomIsNotAvailableForNewDatesInfo"] = 446] = "EA4H.EditReservation.RoomIsNotAvailableForNewDatesInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.NotAvailableForCurrentSearchConfig"] = 447] = "EA4H.EditReservation.NotAvailableForCurrentSearchConfig";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ExtrasWillBeRemovedInfo"] = 448] = "EA4H.EditReservation.ExtrasWillBeRemovedInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeDatesOrNumberOfNights"] = 449] = "EA4H.EditReservation.ChangeDatesOrNumberOfNights";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.YourCurrentSelectedDatesAre"] = 450] = "EA4H.EditReservation.YourCurrentSelectedDatesAre";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowDatesAndPricesFor{0}"] = 451] = "EA4H.General.ShowDatesAndPricesFor{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowAllAvailableAlternatives"] = 452] = "EA4H.General.ShowAllAvailableAlternatives";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.SelectYourDesiredDatesInTheCalendar"] = 453] = "EA4H.EditReservation.SelectYourDesiredDatesInTheCalendar";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Searching"] = 454] = "EA4H.General.Searching";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.RoomDatesHaveChangedChooseAlternativesForPackageAgain"] = 455] = "EA4H.EditReservation.RoomDatesHaveChangedChooseAlternativesForPackageAgain";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.EditRoomTitle"] = 456] = "EA4H.EditReservation.EditRoomTitle";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.EditRoomSubtitle"] = 457] = "EA4H.EditReservation.EditRoomSubtitle";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeRoomTypeTitle"] = 458] = "EA4H.EditReservation.ChangeRoomTypeTitle";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeRoomTypeInformation"] = 459] = "EA4H.EditReservation.ChangeRoomTypeInformation";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeExtrasToYourRoom"] = 460] = "EA4H.EditReservation.ChangeExtrasToYourRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Change"] = 461] = "EA4H.General.Change";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.AddMoreExtras"] = 462] = "EA4H.EditReservation.AddMoreExtras";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.CurrentlySelectedTimeSlotsInfoText"] = 463] = "EA4H.EditReservation.CurrentlySelectedTimeSlotsInfoText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.ThereAreNoTimeSlotsForTheSearchDatesFromWaiterAidForTheMandatoryAddOnsUnderRoom"] = 464] = "EA4H.General.Error.ThereAreNoTimeSlotsForTheSearchDatesFromWaiterAidForTheMandatoryAddOnsUnderRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.BasketHasBeenRemovedErrorMessage"] = 465] = "EA4H.EditReservation.BasketHasBeenRemovedErrorMessage";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ThisRoomCanNotBeUpgraded"] = 466] = "EA4H.EditReservation.ThisRoomCanNotBeUpgraded";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ChangeRoomTypeContent"] = 467] = "EA4H.EditReservation.ChangeRoomTypeContent";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Personal"] = 468] = "EA4H.General.Personal";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.YourReservationHasBeenCancelled"] = 469] = "EA4H.Online.YourReservationHasBeenCancelled";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.ThisReservationIsEitherPassedReservationOrNotAllowedToCancelOnline"] = 470] = "EA4H.Confirmation.ThisReservationIsEitherPassedReservationOrNotAllowedToCancelOnline";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.PleaseConfirmYourCancellation"] = 471] = "EA4H.Confirmation.PleaseConfirmYourCancellation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.PleaseConfirmYourCancellationInfoText"] = 472] = "EA4H.Confirmation.PleaseConfirmYourCancellationInfoText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CancellationCost"] = 473] = "EA4H.General.CancellationCost";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.TotalPriceBeforeCancellation"] = 474] = "EA4H.Online.TotalPriceBeforeCancellation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.TotalRefund"] = 475] = "EA4H.Online.TotalRefund";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CancelledTrip"] = 476] = "EA4H.General.CancelledTrip";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FoundCheaperHotel"] = 477] = "EA4H.General.FoundCheaperHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FoundOtherHotel"] = 478] = "EA4H.General.FoundOtherHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NotWannaTell"] = 479] = "EA4H.General.NotWannaTell";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Other"] = 480] = "EA4H.General.Other";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.ReasonForCancellationExplanation"] = 481] = "EA4H.Confirmation.ReasonForCancellationExplanation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.SupportYourFavoriteHotel"] = 482] = "EA4H.Online.SupportYourFavoriteHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.CancelReservationAndRefundWithExtraAmountOfVoucher"] = 483] = "EA4H.Online.CancelReservationAndRefundWithExtraAmountOfVoucher";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.JustCancelMyReservationAndGetRefundWithAmount"] = 484] = "EA4H.Online.JustCancelMyReservationAndGetRefundWithAmount";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AgeOfChildBrackets"] = 485] = "EA4H.Online.AgeOfChildBrackets";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.Keep"] = 486] = "EA4H.EditReservation.Keep";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseRoom"] = 487] = "EA4H.General.ChooseRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.UpgradeYourRoom"] = 488] = "EA4H.General.UpgradeYourRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ViewRoomTypes"] = 489] = "EA4H.General.ViewRoomTypes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GreatAdditionsForYourStay"] = 490] = "EA4H.General.GreatAdditionsForYourStay";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.AddOnSectionDisabledBecauseOfTimeGapInBooking"] = 491] = "EA4H.EditReservation.AddOnSectionDisabledBecauseOfTimeGapInBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.UnKnownError"] = 492] = "EA4H.General.Error.UnKnownError";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PleaseReloadThePageAndTryAgain"] = 493] = "EA4H.General.PleaseReloadThePageAndTryAgain";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ReloadPage"] = 494] = "EA4H.General.ReloadPage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SearchTimeSlot"] = 495] = "EA4H.General.SearchTimeSlot";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.ContactHotelToUpdateAddOn"] = 496] = "EA4H.EditReservation.ContactHotelToUpdateAddOn";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerRoomOrNight"] = 497] = "EA4H.General.PerRoomOrNight";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BookFrom"] = 498] = "EA4H.General.BookFrom";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SpecialRequest"] = 499] = "EA4H.General.SpecialRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Or"] = 500] = "EA4H.General.Or";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SelectRoomType"] = 501] = "EA4H.General.SelectRoomType";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SelectOccupancy"] = 502] = "EA4H.General.SelectOccupancy";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CheckInDateAndRoomRequest"] = 503] = "EA4H.General.CheckInDateAndRoomRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ChooseCountry"] = 504] = "EA4H.Conference.ChooseCountry";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YourDetails"] = 505] = "EA4H.General.YourDetails";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PleaseLeaveYourMessage"] = 506] = "EA4H.General.PleaseLeaveYourMessage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.EnquireNow"] = 507] = "EA4H.General.EnquireNow";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ThankYouForContactingUsRequestHasBeenSentToHotel"] = 508] = "EA4H.General.ThankYouForContactingUsRequestHasBeenSentToHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OurRoomTypes"] = 509] = "EA4H.General.OurRoomTypes";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NextWeek"] = 510] = "EA4H.General.NextWeek";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PreviousWeek"] = 511] = "EA4H.General.PreviousWeek";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.OurPackages"] = 512] = "EA4H.Online.OurPackages";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SignUpToWaitingList"] = 513] = "EA4H.General.SignUpToWaitingList";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailableSisterHotel"] = 514] = "EA4H.Online.AvailableSisterHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.AvailableSisterHotels"] = 515] = "EA4H.Online.AvailableSisterHotels";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AddToWaitingListDescription"] = 516] = "EA4H.General.AddToWaitingListDescription";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GetInTouchWithRequest"] = 517] = "EA4H.General.GetInTouchWithRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChangeSearchDatesMessage"] = 518] = "EA4H.General.ChangeSearchDatesMessage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NoAvailabilityMessage"] = 519] = "EA4H.General.NoAvailabilityMessage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AddedToWaitingList"] = 520] = "EA4H.General.AddedToWaitingList";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.JanuaryThreeLetter"] = 521] = "EA4H.General.JanuaryThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.FebruaryThreeLetter"] = 522] = "EA4H.General.FebruaryThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MarchThreeLetter"] = 523] = "EA4H.General.MarchThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AprilThreeLetter"] = 524] = "EA4H.General.AprilThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MayThreeLetter"] = 525] = "EA4H.General.MayThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.JuneThreeLetter"] = 526] = "EA4H.General.JuneThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.JulyThreeLetter"] = 527] = "EA4H.General.JulyThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AugustThreeLetter"] = 528] = "EA4H.General.AugustThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SeptemberThreeLetter"] = 529] = "EA4H.General.SeptemberThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.OctoberThreeLetter"] = 530] = "EA4H.General.OctoberThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NovemberThreeLetter"] = 531] = "EA4H.General.NovemberThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.DecemberThreeLetter"] = 532] = "EA4H.General.DecemberThreeLetter";
  AccommodationTranslations[AccommodationTranslations["EA4H.EditReservation.TheseAddonsWereRemoved"] = 533] = "EA4H.EditReservation.TheseAddonsWereRemoved";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CreditCardGuaranteeExplanation{0}"] = 534] = "EA4H.General.CreditCardGuaranteeExplanation{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PleaseLeaveYourCardDetails"] = 535] = "EA4H.General.PleaseLeaveYourCardDetails";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CreditCardGuarantee"] = 536] = "EA4H.General.CreditCardGuarantee";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PayNowCreditCard"] = 537] = "EA4H.Online.PayNowCreditCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.SecurePaymentInfo"] = 538] = "EA4H.Online.SecurePaymentInfo";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithMakeCommerce"] = 539] = "EA4H.General.PaymentWithMakeCommerce";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithMakeCommerce{0}"] = 540] = "EA4H.General.PaymentWithMakeCommerce{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithNetsEasy{0}"] = 541] = "EA4H.General.PaymentWithNetsEasy{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerBooking"] = 542] = "EA4H.General.PerBooking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Loyall.Login"] = 543] = "EA4H.General.Loyall.Login";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ForgotUserNameOrPassword?"] = 544] = "EA4H.General.ForgotUserNameOrPassword?";
  AccommodationTranslations[AccommodationTranslations["EA4H.MyPage.AcceptedTermsAndConditions"] = 545] = "EA4H.MyPage.AcceptedTermsAndConditions";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Error.MemberWithThisEmailAlreadyExists"] = 546] = "EA4H.General.Error.MemberWithThisEmailAlreadyExists";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AccountWillBeCreatedAndEmailSent"] = 547] = "EA4H.General.AccountWillBeCreatedAndEmailSent";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CreditCardSuccessfullyValidated"] = 548] = "EA4H.General.CreditCardSuccessfullyValidated";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.CreditCardFailedValidation"] = 549] = "EA4H.General.CreditCardFailedValidation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AfterPurchaseGet{0}Stamps{1}StampsGives{2}{3}ForFree"] = 550] = "EA4H.General.AfterPurchaseGet{0}Stamps{1}StampsGives{2}{3}ForFree";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.{0}Of{1}StampsCollected"] = 551] = "EA4H.General.{0}Of{1}StampsCollected";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GiftCardAmountNotLargeEnoughTitle{0}"] = 552] = "EA4H.General.GiftCardAmountNotLargeEnoughTitle{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GiftCardAmountLeftToPayDescription{0}"] = 553] = "EA4H.General.GiftCardAmountLeftToPayDescription{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.CreditCard"] = 554] = "EA4H.Online.CreditCard";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GiftCardAmountLargeEnoughTitle{0}"] = 555] = "EA4H.General.GiftCardAmountLargeEnoughTitle{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AmountLeftOnGiftCardDescription{0}"] = 556] = "EA4H.General.AmountLeftOnGiftCardDescription{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.Manage.Settings.Checkout.Translations.AlreadyMemberText"] = 557] = "EA4H.Manage.Settings.Checkout.Translations.AlreadyMemberText";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Search"] = 558] = "EA4H.General.Search";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.MeetingRoom"] = 559] = "EA4H.Conference.MeetingRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ChooseMeetingRoom"] = 560] = "EA4H.Conference.ChooseMeetingRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ChooseAccommodation"] = 561] = "EA4H.Conference.ChooseAccommodation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ChooseAddOns"] = 562] = "EA4H.Conference.ChooseAddOns";
  AccommodationTranslations[AccommodationTranslations["EA4H.Confirmation.BookingConfirmation"] = 563] = "EA4H.Confirmation.BookingConfirmation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PaymentWithNexi{0}"] = 564] = "EA4H.General.PaymentWithNexi{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerUnit"] = 565] = "EA4H.General.PerUnit";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.PerEach"] = 566] = "EA4H.General.PerEach";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfSingleRooms"] = 567] = "EA4H.General.NumberOfSingleRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfDoubleRooms"] = 568] = "EA4H.General.NumberOfDoubleRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.TotalNumberOfBeds"] = 569] = "EA4H.General.TotalNumberOfBeds";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfBars"] = 570] = "EA4H.General.NumberOfBars";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfRestaurants"] = 571] = "EA4H.General.NumberOfRestaurants";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.NumberOfConferenceRooms"] = 572] = "EA4H.Online.NumberOfConferenceRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BuildYear"] = 573] = "EA4H.General.BuildYear";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RenovatedYear"] = 574] = "EA4H.General.RenovatedYear";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MaxNumberConference"] = 575] = "EA4H.General.MaxNumberConference";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfMeetingRooms"] = 576] = "EA4H.General.NumberOfMeetingRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.MapAndDirections"] = 577] = "EA4H.General.MapAndDirections";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.24HrsReception"] = 578] = "EA4H.HotelAttributes.General.24HrsReception";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.AirConditioning"] = 579] = "EA4H.HotelAttributes.General.AirConditioning";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.AllergyFreeRoom"] = 580] = "EA4H.HotelAttributes.General.AllergyFreeRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Bar"] = 581] = "EA4H.HotelAttributes.General.Bar";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.BeachForDogs"] = 582] = "EA4H.HotelAttributes.General.BeachForDogs";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.BreakfastBuffet"] = 583] = "EA4H.HotelAttributes.General.BreakfastBuffet";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.CableSateliteTV"] = 584] = "EA4H.HotelAttributes.General.CableSateliteTV";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Defibrillator"] = 585] = "EA4H.HotelAttributes.General.Defibrillator";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.DogsAllowed"] = 586] = "EA4H.HotelAttributes.General.DogsAllowed";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Dogshower"] = 587] = "EA4H.HotelAttributes.General.Dogshower";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Elevator"] = 588] = "EA4H.HotelAttributes.General.Elevator";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.EnginePreHeater"] = 589] = "EA4H.HotelAttributes.General.EnginePreHeater";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.EVChargeStation"] = 590] = "EA4H.HotelAttributes.General.EVChargeStation";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.ExpressCheckInCheckOut"] = 591] = "EA4H.HotelAttributes.General.ExpressCheckInCheckOut";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.FamilyShowerWC"] = 592] = "EA4H.HotelAttributes.General.FamilyShowerWC";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.LaundryFacilities"] = 593] = "EA4H.HotelAttributes.General.LaundryFacilities";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.LuggageStorage"] = 594] = "EA4H.HotelAttributes.General.LuggageStorage";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.NewsPapers"] = 595] = "EA4H.HotelAttributes.General.NewsPapers";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.NonSmokingHotel"] = 596] = "EA4H.HotelAttributes.General.NonSmokingHotel";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.NonSmokingRooms"] = 597] = "EA4H.HotelAttributes.General.NonSmokingRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.PadelCourt"] = 598] = "EA4H.HotelAttributes.General.PadelCourt";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.PrivateBeachArea"] = 599] = "EA4H.HotelAttributes.General.PrivateBeachArea";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.PumbOutFOrWastetank"] = 600] = "EA4H.HotelAttributes.General.PumbOutFOrWastetank";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Restaurant"] = 601] = "EA4H.HotelAttributes.General.Restaurant";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.RestaurantALaCarte"] = 602] = "EA4H.HotelAttributes.General.RestaurantALaCarte";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.RestaurantBuffet"] = 603] = "EA4H.HotelAttributes.General.RestaurantBuffet";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.RoomsFacilitiesForDisabled"] = 604] = "EA4H.HotelAttributes.General.RoomsFacilitiesForDisabled";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.SafetyDepositBoxes"] = 605] = "EA4H.HotelAttributes.General.SafetyDepositBoxes";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.SkiStorage"] = 606] = "EA4H.HotelAttributes.General.SkiStorage";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.Snackbar"] = 607] = "EA4H.HotelAttributes.General.Snackbar";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.SoundproofRoom"] = 608] = "EA4H.HotelAttributes.General.SoundproofRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.SunTerrace"] = 609] = "EA4H.HotelAttributes.General.SunTerrace";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.General.WaterSewageSonnection"] = 610] = "EA4H.HotelAttributes.General.WaterSewageSonnection";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.AdventureGolf"] = 611] = "EA4H.HotelAttributes.Activities.AdventureGolf";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Angling"] = 612] = "EA4H.HotelAttributes.Activities.Angling";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Barbecue"] = 613] = "EA4H.HotelAttributes.Activities.Barbecue";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.BikeRental"] = 614] = "EA4H.HotelAttributes.Activities.BikeRental";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.BoatRental"] = 615] = "EA4H.HotelAttributes.Activities.BoatRental";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Bowling"] = 616] = "EA4H.HotelAttributes.Activities.Bowling";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Canoeing"] = 617] = "EA4H.HotelAttributes.Activities.Canoeing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.CanoeRental"] = 618] = "EA4H.HotelAttributes.Activities.CanoeRental";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Casino"] = 619] = "EA4H.HotelAttributes.Activities.Casino";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Cross-countrySkiing"] = 620] = "EA4H.HotelAttributes.Activities.Cross-countrySkiing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Cycling"] = 621] = "EA4H.HotelAttributes.Activities.Cycling";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Dart"] = 622] = "EA4H.HotelAttributes.Activities.Dart";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Diving"] = 623] = "EA4H.HotelAttributes.Activities.Diving";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.DownhillSkiing"] = 624] = "EA4H.HotelAttributes.Activities.DownhillSkiing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.ExcercisePath"] = 625] = "EA4H.HotelAttributes.Activities.ExcercisePath";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Fishing"] = 626] = "EA4H.HotelAttributes.Activities.Fishing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.FitnessCenter"] = 627] = "EA4H.HotelAttributes.Activities.FitnessCenter";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.GamingRoom"] = 628] = "EA4H.HotelAttributes.Activities.GamingRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Golf"] = 629] = "EA4H.HotelAttributes.Activities.Golf";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.GolfCourseWithin3Km"] = 630] = "EA4H.HotelAttributes.Activities.GolfCourseWithin3Km";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Hiking"] = 631] = "EA4H.HotelAttributes.Activities.Hiking";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.HikingTrail"] = 632] = "EA4H.HotelAttributes.Activities.HikingTrail";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.HorsebackRiding"] = 633] = "EA4H.HotelAttributes.Activities.HorsebackRiding";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.IndoorSwimmingPool"] = 634] = "EA4H.HotelAttributes.Activities.IndoorSwimmingPool";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Jacuzzi/Hottub"] = 635] = "EA4H.HotelAttributes.Activities.Jacuzzi/Hottub";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Karaoke"] = 636] = "EA4H.HotelAttributes.Activities.Karaoke";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Leader-ledActivities"] = 637] = "EA4H.HotelAttributes.Activities.Leader-ledActivities";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Library"] = 638] = "EA4H.HotelAttributes.Activities.Library";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Massage"] = 639] = "EA4H.HotelAttributes.Activities.Massage";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.MiniatureGolf"] = 640] = "EA4H.HotelAttributes.Activities.MiniatureGolf";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.OutdoorSwimmingPool"] = 641] = "EA4H.HotelAttributes.Activities.OutdoorSwimmingPool";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Playground"] = 642] = "EA4H.HotelAttributes.Activities.Playground";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Playroom"] = 643] = "EA4H.HotelAttributes.Activities.Playroom";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Pool"] = 644] = "EA4H.HotelAttributes.Activities.Pool";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Sauna"] = 645] = "EA4H.HotelAttributes.Activities.Sauna";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Skiing"] = 646] = "EA4H.HotelAttributes.Activities.Skiing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.SkiSchool"] = 647] = "EA4H.HotelAttributes.Activities.SkiSchool";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Snorkeling"] = 648] = "EA4H.HotelAttributes.Activities.Snorkeling";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Solarium"] = 649] = "EA4H.HotelAttributes.Activities.Solarium";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.SpaWellnessCentre"] = 650] = "EA4H.HotelAttributes.Activities.SpaWellnessCentre";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Squash"] = 651] = "EA4H.HotelAttributes.Activities.Squash";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.TableTennis"] = 652] = "EA4H.HotelAttributes.Activities.TableTennis";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.TennisCourt"] = 653] = "EA4H.HotelAttributes.Activities.TennisCourt";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Activities.Windsurfing"] = 654] = "EA4H.HotelAttributes.Activities.Windsurfing";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.BabysittingService"] = 655] = "EA4H.HotelAttributes.Services.BabysittingService";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.BarberBeautyShop"] = 656] = "EA4H.HotelAttributes.Services.BarberBeautyShop";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.BicycleRental"] = 657] = "EA4H.HotelAttributes.Services.BicycleRental";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.BicyclesAvailableForFree"] = 658] = "EA4H.HotelAttributes.Services.BicyclesAvailableForFree";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Breakfast"] = 659] = "EA4H.HotelAttributes.Services.Breakfast";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Cafe"] = 660] = "EA4H.HotelAttributes.Services.Cafe";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.CampingKeyEurope"] = 661] = "EA4H.HotelAttributes.Services.CampingKeyEurope";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.CarRental"] = 662] = "EA4H.HotelAttributes.Services.CarRental";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.ChargingSiteForElectricCar"] = 663] = "EA4H.HotelAttributes.Services.ChargingSiteForElectricCar";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.ChildrensPool"] = 664] = "EA4H.HotelAttributes.Services.ChildrensPool";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.CurrencyExchange"] = 665] = "EA4H.HotelAttributes.Services.CurrencyExchange";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Dishwasher"] = 666] = "EA4H.HotelAttributes.Services.Dishwasher";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.DryCleaning"] = 667] = "EA4H.HotelAttributes.Services.DryCleaning";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.GiftShop"] = 668] = "EA4H.HotelAttributes.Services.GiftShop";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.GroceryStore"] = 669] = "EA4H.HotelAttributes.Services.GroceryStore";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.HoneymoonSuite"] = 670] = "EA4H.HotelAttributes.Services.HoneymoonSuite";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Kiosk"] = 671] = "EA4H.HotelAttributes.Services.Kiosk";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.LaundryService"] = 672] = "EA4H.HotelAttributes.Services.LaundryService";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Microwave"] = 673] = "EA4H.HotelAttributes.Services.Microwave";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Nightclub"] = 674] = "EA4H.HotelAttributes.Services.Nightclub";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Oven"] = 675] = "EA4H.HotelAttributes.Services.Oven";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Pub"] = 676] = "EA4H.HotelAttributes.Services.Pub";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.Restaurant"] = 677] = "EA4H.HotelAttributes.Services.Restaurant";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.RoomService"] = 678] = "EA4H.HotelAttributes.Services.RoomService";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.ShoShine"] = 679] = "EA4H.HotelAttributes.Services.ShoShine";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.TransferServiceAdditionalCost"] = 680] = "EA4H.HotelAttributes.Services.TransferServiceAdditionalCost";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Services.TransferServiceFree"] = 681] = "EA4H.HotelAttributes.Services.TransferServiceFree";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.BeachAndSwimming"] = 682] = "EA4H.HotelAttributes.HotelTheme.BeachAndSwimming";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.BedAndBreakfast"] = 683] = "EA4H.HotelAttributes.HotelTheme.BedAndBreakfast";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Boutique"] = 684] = "EA4H.HotelAttributes.HotelTheme.Boutique";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Budget"] = 685] = "EA4H.HotelAttributes.HotelTheme.Budget";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.ConferenceFacilities"] = 686] = "EA4H.HotelAttributes.HotelTheme.ConferenceFacilities";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.GuestHouse"] = 687] = "EA4H.HotelAttributes.HotelTheme.GuestHouse";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Luxury"] = 688] = "EA4H.HotelAttributes.HotelTheme.Luxury";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Meadows"] = 689] = "EA4H.HotelAttributes.HotelTheme.Meadows";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.MixedForest"] = 690] = "EA4H.HotelAttributes.HotelTheme.MixedForest";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Quickstop"] = 691] = "EA4H.HotelAttributes.HotelTheme.Quickstop";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Resort"] = 692] = "EA4H.HotelAttributes.HotelTheme.Resort";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.HotelTheme.Spa"] = 693] = "EA4H.HotelAttributes.HotelTheme.Spa";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Parking.ParkingNearBy"] = 694] = "EA4H.HotelAttributes.Parking.ParkingNearBy";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Parking.ParkingOnSite"] = 695] = "EA4H.HotelAttributes.Parking.ParkingOnSite";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Parking.ValetParking"] = 696] = "EA4H.HotelAttributes.Parking.ValetParking";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Internet.FreeWiFi"] = 697] = "EA4H.HotelAttributes.Internet.FreeWiFi";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Internet.InternetInRoom"] = 698] = "EA4H.HotelAttributes.Internet.InternetInRoom";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Internet.WiFiAdditionalCost"] = 699] = "EA4H.HotelAttributes.Internet.WiFiAdditionalCost";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Airport"] = 700] = "EA4H.HotelAttributes.Location.Airport";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Beach"] = 701] = "EA4H.HotelAttributes.Location.Beach";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Beachfront"] = 702] = "EA4H.HotelAttributes.Location.Beachfront";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.City"] = 703] = "EA4H.HotelAttributes.Location.City";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Countryside"] = 704] = "EA4H.HotelAttributes.Location.Countryside";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Downtown"] = 705] = "EA4H.HotelAttributes.Location.Downtown";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Lake"] = 706] = "EA4H.HotelAttributes.Location.Lake";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Mountain"] = 707] = "EA4H.HotelAttributes.Location.Mountain";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Oceanfront"] = 708] = "EA4H.HotelAttributes.Location.Oceanfront";
  AccommodationTranslations[AccommodationTranslations["EA4H.HotelAttributes.Location.Suburban"] = 709] = "EA4H.HotelAttributes.Location.Suburban";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.General"] = 710] = "EA4H.General.General";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Activities"] = 711] = "EA4H.General.Activities";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Services"] = 712] = "EA4H.General.Services";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.HotelTheme"] = 713] = "EA4H.General.HotelTheme";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Parking"] = 714] = "EA4H.General.Parking";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Internet"] = 715] = "EA4H.General.Internet";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Location"] = 716] = "EA4H.General.Location";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Address"] = 717] = "EA4H.General.Address";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.HomePage"] = 718] = "EA4H.General.HomePage";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.E-mail"] = 719] = "EA4H.General.E-mail";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.GPSCoordinates"] = 720] = "EA4H.General.GPSCoordinates";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ContactDetails"] = 721] = "EA4H.Online.ContactDetails";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Classification"] = 722] = "EA4H.General.Classification";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ConferenceRooms"] = 723] = "EA4H.General.ConferenceRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Participants"] = 724] = "EA4H.General.Participants";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SingleRooms"] = 725] = "EA4H.General.SingleRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.Manage.RoomType.NumberOfStandardBeds"] = 726] = "EA4H.Manage.RoomType.NumberOfStandardBeds";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.DoubleRooms"] = 727] = "EA4H.General.DoubleRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfFloors"] = 728] = "EA4H.General.NumberOfFloors";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfCabins"] = 729] = "EA4H.General.NumberOfCabins";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NumberOfPitches"] = 730] = "EA4H.General.NumberOfPitches";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.LastRenovatedYear"] = 731] = "EA4H.Online.LastRenovatedYear";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Property"] = 732] = "EA4H.General.Property";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.HotelLocation"] = 733] = "EA4H.General.HotelLocation";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YouWillReceive1StampAfterYour{0}NightStay"] = 734] = "EA4H.General.YouWillReceive1StampAfterYour{0}NightStay";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Name"] = 735] = "EA4H.General.Name";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.VAT"] = 736] = "EA4H.General.VAT";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RatesExcludeVAT"] = 737] = "EA4H.General.RatesExcludeVAT";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Lenght"] = 738] = "EA4H.General.Lenght";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.MinXMaxXPersons"] = 739] = "EA4H.Conference.MinXMaxXPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ChooseFurnishing"] = 740] = "EA4H.Conference.ChooseFurnishing";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AvailableBookingAlternatives"] = 741] = "EA4H.General.AvailableBookingAlternatives";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ForXPersons"] = 742] = "EA4H.Conference.ForXPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Period"] = 743] = "EA4H.General.Period";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.RatePlan"] = 744] = "EA4H.General.RatePlan";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.Furnishing"] = 745] = "EA4H.Conference.Furnishing";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.PerPerson"] = 746] = "EA4H.Conference.PerPerson";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ExclVAT"] = 747] = "EA4H.General.ExclVAT";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.ViewPriceCalculation"] = 748] = "EA4H.Conference.ViewPriceCalculation";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.WhatsIncludedInThePrice"] = 749] = "EA4H.Conference.WhatsIncludedInThePrice";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Day"] = 750] = "EA4H.General.Day";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.NrParticipants"] = 751] = "EA4H.General.NrParticipants";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.DesiredNrOfRooms"] = 752] = "EA4H.General.DesiredNrOfRooms";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AlternativeLOWER"] = 753] = "EA4H.General.AlternativeLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.AlternativesLOWER"] = 754] = "EA4H.General.AlternativesLOWER";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.Map"] = 755] = "EA4H.General.Map";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ViewMap"] = 756] = "EA4H.General.ViewMap";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.SeveralConferenceRooms{0}"] = 757] = "EA4H.General.SeveralConferenceRooms{0}";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ShowOnMap"] = 758] = "EA4H.General.ShowOnMap";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ChooseLater"] = 759] = "EA4H.General.ChooseLater";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.ByRequest"] = 760] = "EA4H.General.ByRequest";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.XPersons"] = 761] = "EA4H.Conference.XPersons";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.IfYouHaveACorporationCode"] = 762] = "EA4H.Conference.IfYouHaveACorporationCode";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.NotSelected"] = 763] = "EA4H.Conference.NotSelected";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.NewSearch"] = 764] = "EA4H.Conference.NewSearch";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.YourBasketWillBeCleared"] = 765] = "EA4H.Conference.YourBasketWillBeCleared";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.YourChoice"] = 766] = "EA4H.General.YourChoice";
  AccommodationTranslations[AccommodationTranslations["EA4H.Conference.DateForConference"] = 767] = "EA4H.Conference.DateForConference";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.ChooseNoOfRoomsAndGuests"] = 768] = "EA4H.Online.ChooseNoOfRoomsAndGuests";
  AccommodationTranslations[AccommodationTranslations["EA4H.Online.PromoOrAgentCodeTitleShort"] = 769] = "EA4H.Online.PromoOrAgentCodeTitleShort";
  AccommodationTranslations[AccommodationTranslations["EA4H.General.BookRoom"] = 770] = "EA4H.General.BookRoom";
})(accommodation_AccommodationTranslations || (accommodation_AccommodationTranslations = {}));
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faBedFront.js
var faBedFront = __webpack_require__(1583);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faDoorOpen.js
var faDoorOpen = __webpack_require__(9868);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faUserGroup.js
var faUserGroup = __webpack_require__(4693);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/toDate/index.js
function toDate_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    toDate_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    toDate_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return toDate_typeof(obj);
}

/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */

function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || toDate_typeof(argument) === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/addDays/index.js



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} - the new date with the days added
 * @throws {TypeError} - 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/addMonths/index.js



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * const result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 months, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
  // want except that dates will wrap around the end of a month, meaning that
  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
  // we'll default to the end of the desired month by adding 1 to the desired
  // month and using a date of 0 to back up one day to the end of the desired
  // month.

  var endOfDesiredMonth = new Date(date.getTime());
  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    // If we're already at the end of the month, then this is the correct date
    // and we're done.
    return endOfDesiredMonth;
  } else {
    // Otherwise, we now know that setting the original day-of-month value won't
    // cause an overflow, so set the desired day-of-month. Note that we can't
    // just set the date of `endOfDesiredMonth` because that object may have had
    // its time changed in the unusual case where where a DST transition was on
    // the last day of the month and its local time was in the hour skipped or
    // repeated next to a DST transition.  So we use `date` instead which is
    // guaranteed to still have the original time.
    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date;
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/add/index.js
function add_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    add_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    add_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return add_typeof(obj);
}






/**
 * @name add
 * @category Common Helpers
 * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @description
 * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 *
 * | Key            | Description                        |
 * |----------------|------------------------------------|
 * | years          | Amount of years to be added        |
 * | months         | Amount of months to be added       |
 * | weeks          | Amount of weeks to be added        |
 * | days           | Amount of days to be added         |
 * | hours          | Amount of hours to be added        |
 * | minutes        | Amount of minutes to be added      |
 * | seconds        | Amount of seconds to be added      |
 *
 * All values default to 0
 *
 * @returns {Date} the new date with the seconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add the following duration to 1 September 2014, 10:19:50
 * const result = add(new Date(2014, 8, 1, 10, 19, 50), {
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30,
 * })
 * //=> Thu Jun 15 2017 15:29:20
 */
function add(dirtyDate, duration) {
  requiredArgs(2, arguments);
  if (!duration || add_typeof(duration) !== 'object') return new Date(NaN);
  var years = duration.years ? toInteger(duration.years) : 0;
  var months = duration.months ? toInteger(duration.months) : 0;
  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;
  var days = duration.days ? toInteger(duration.days) : 0;
  var hours = duration.hours ? toInteger(duration.hours) : 0;
  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;
  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Add years and months

  var date = toDate(dirtyDate);
  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days

  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds

  var minutesToAdd = minutes + hours * 60;
  var secondsToAdd = seconds + minutesToAdd * 60;
  var msToAdd = secondsToAdd * 1000;
  var finalDate = new Date(dateWithDays.getTime() + msToAdd);
  return finalDate;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/eachDayOfInterval/index.js


/**
 * @name eachDayOfInterval
 * @category Interval Helpers
 * @summary Return the array of dates within the specified time interval.
 *
 * @description
 * Return the array of dates within the specified time interval.
 *
 * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
 * @param {Object} [options] - an object with options.
 * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
 * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.step` must be a number greater than 1
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // Each day between 6 October 2014 and 10 October 2014:
 * const result = eachDayOfInterval({
 *   start: new Date(2014, 9, 6),
 *   end: new Date(2014, 9, 10)
 * })
 * //=> [
 * //   Mon Oct 06 2014 00:00:00,
 * //   Tue Oct 07 2014 00:00:00,
 * //   Wed Oct 08 2014 00:00:00,
 * //   Thu Oct 09 2014 00:00:00,
 * //   Fri Oct 10 2014 00:00:00
 * // ]
 */

function eachDayOfInterval(dirtyInterval, options) {
  var _options$step;
  requiredArgs(1, arguments);
  var interval = dirtyInterval || {};
  var startDate = toDate(interval.start);
  var endDate = toDate(interval.end);
  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

  if (!(startDate.getTime() <= endTime)) {
    throw new RangeError('Invalid interval');
  }
  var dates = [];
  var currentDate = startDate;
  currentDate.setHours(0, 0, 0, 0);
  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);
  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');
  while (currentDate.getTime() <= endTime) {
    dates.push(toDate(currentDate));
    currentDate.setDate(currentDate.getDate() + step);
    currentDate.setHours(0, 0, 0, 0);
  }
  return dates;
}
;// CONCATENATED MODULE: ./src/lib/utilities.tsx












function getDiscountPercentage(originalPrice, newPrice) {
  if (!originalPrice || !newPrice) {
    return 0;
  }
  return (originalPrice - newPrice) / originalPrice * 100;
}
function getFromPrice(priceFormatter, translations, searchResult, priceInfo, nrNightsColor) {
  var _priceInfo$rateAltern;
  var allAlternatives = priceInfo === null || priceInfo === void 0 ? void 0 : (_priceInfo$rateAltern = priceInfo.rateAlternatives) === null || _priceInfo$rateAltern === void 0 ? void 0 : _priceInfo$rateAltern.filter(function (x) {
    return x.ratesPerRoomConfig !== undefined;
  }).flatMap(function (x) {
    return x.ratesPerRoomConfig;
  });
  var discount = allAlternatives === null || allAlternatives === void 0 ? void 0 : allAlternatives.find(function (x) {
    var _x$totalPrice, _x$totalPrice2;
    return ((_x$totalPrice = x.totalPrice) === null || _x$totalPrice === void 0 ? void 0 : _x$totalPrice.priceInclVAT) !== ((_x$totalPrice2 = x.totalPrice) === null || _x$totalPrice2 === void 0 ? void 0 : _x$totalPrice2.originalPriceInclVAT);
  });
  if (discount) {
    var _discount$totalPrice, _discount$totalPrice2, _searchResult$accommo;
    var discountPercent = getDiscountPercentage((_discount$totalPrice = discount.totalPrice) === null || _discount$totalPrice === void 0 ? void 0 : _discount$totalPrice.originalPriceInclVAT, (_discount$totalPrice2 = discount.totalPrice) === null || _discount$totalPrice2 === void 0 ? void 0 : _discount$totalPrice2.priceInclVAT);
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("p", {
      style: {
        color: "#b30000",
        margin: 0,
        fontSize: "13px",
        fontWeight: 700
      }
    }, translations(accommodation_AccommodationTranslations["EA4H.Online.YouSave"]), " ", Math.ceil(discountPercent), "%"), /*#__PURE__*/react.createElement("p", {
      style: {
        color: "#b30000",
        fontWeight: 700,
        margin: 0,
        fontSize: "14px"
      }
    }, translations(accommodation_AccommodationTranslations["EA4H.General.From"]), " ", priceFormatter.format(discount.totalPrice.priceInclVAT)), /*#__PURE__*/react.createElement("p", {
      style: {
        color: nrNightsColor !== null && nrNightsColor !== void 0 ? nrNightsColor : "#000000aa",
        margin: 0,
        fontSize: "13px",
        opacity: 0.7
      }
    }, translations(accommodation_AccommodationTranslations["EA4H.General.For"]), " ", searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$accommo = searchResult.accommodationSearch) === null || _searchResult$accommo === void 0 ? void 0 : _searchResult$accommo.numberOfNights, " ", translations(accommodation_AccommodationTranslations["EA4H.General.Nights"])));
  } else {
    var _searchResult$accommo2;
    var showPriceAlternative = allAlternatives === null || allAlternatives === void 0 ? void 0 : allAlternatives.filter(function (x) {
      return !x.isLocked && x.totalPrice !== undefined;
    });
    if (!showPriceAlternative || (showPriceAlternative === null || showPriceAlternative === void 0 ? void 0 : showPriceAlternative.length) === 0) {
      return /*#__PURE__*/react.createElement(react.Fragment, null);
    }
    var cheapestPrice = Math.min.apply(Math, _toConsumableArray(showPriceAlternative.map(function (x) {
      var _priceInclVAT;
      return (_priceInclVAT = x.totalPrice.priceInclVAT) !== null && _priceInclVAT !== void 0 ? _priceInclVAT : 0;
    })));
    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("p", {
      style: {
        color: "##ffffff",
        fontWeight: 700,
        margin: 0,
        fontSize: "14px"
      }
    }, translations(accommodation_AccommodationTranslations["EA4H.General.From"]), " ", priceFormatter.format(cheapestPrice)), /*#__PURE__*/react.createElement("p", {
      style: {
        color: nrNightsColor !== null && nrNightsColor !== void 0 ? nrNightsColor : "#000000aa",
        margin: 0,
        fontSize: "13px",
        opacity: 0.7
      }
    }, translations(accommodation_AccommodationTranslations["EA4H.General.For"]), " ", searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$accommo2 = searchResult.accommodationSearch) === null || _searchResult$accommo2 === void 0 ? void 0 : _searchResult$accommo2.numberOfNights, " ", translations(accommodation_AccommodationTranslations["EA4H.General.Nights"])));
  }
}
function getDayName(translations, date, fullName) {
  if (date) {
    switch (date.getDay()) {
      case 0:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Sunday"] : accommodation_AccommodationTranslations["EA4H.General.SundayThreeLetters"]);
      case 1:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Monday"] : accommodation_AccommodationTranslations["EA4H.General.MondayThreeLetters"]);
      case 2:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Tuesday"] : accommodation_AccommodationTranslations["EA4H.General.TuesdayThreeLetters"]);
      case 3:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Wednesday"] : accommodation_AccommodationTranslations["EA4H.General.WednesdayThreeLetters"]);
      case 4:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Thursday"] : accommodation_AccommodationTranslations["EA4H.General.ThursdayThreeLetters"]);
      case 5:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Friday"] : accommodation_AccommodationTranslations["EA4H.General.FridayThreeLetters"]);
      case 6:
        return translations(fullName ? accommodation_AccommodationTranslations["EA4H.General.Saturday"] : accommodation_AccommodationTranslations["EA4H.General.SaturdayThreeLetters"]);
    }
  } else {
    return " ";
  }
}
function getMonthName(translations, date, threeLetterNames) {
  if (date) {
    switch (date.getMonth()) {
      case 0:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.JanuaryThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.January"]);
      case 1:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.FebruaryThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.February"]);
      case 2:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.MarchThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.March"]);
      case 3:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.AprilThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.April"]);
      case 4:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.MayThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.May"]);
      case 5:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.JuneThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.June"]);
      case 6:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.JulyThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.July"]);
      case 7:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.AugustThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.August"]);
      case 8:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.SeptemberThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.September"]);
      case 9:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.OctoberThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.October"]);
      case 10:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.NovemberThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.November"]);
      case 11:
        return translations(threeLetterNames ? accommodation_AccommodationTranslations["EA4H.General.DecemberThreeLetter"] : accommodation_AccommodationTranslations["EA4H.General.December"]);
    }
  } else {
    return " ";
  }
}
function getNumberOfGuests(roomConfigs) {
  var _roomConfigs$map$redu, _roomConfigs$map, _roomConfigs$filter, _roomConfigs$filter$l, _roomConfigs$filter2;
  if ((roomConfigs !== null && roomConfigs !== void 0 ? roomConfigs : []).length === 0) {
    return undefined;
  }
  var nrOfAdults = (_roomConfigs$map$redu = (_roomConfigs$map = roomConfigs.map(function (x) {
    return x.adults;
  })) === null || _roomConfigs$map === void 0 ? void 0 : _roomConfigs$map.reduce(function (a, b) {
    return a + b;
  }, 0)) !== null && _roomConfigs$map$redu !== void 0 ? _roomConfigs$map$redu : 0;
  var nrOfChildrenList = (_roomConfigs$filter = roomConfigs.filter(function (x) {
    return x.childAges;
  })) === null || _roomConfigs$filter === void 0 ? void 0 : _roomConfigs$filter.map(function (x) {
    return x.childAges.length;
  });
  var nrOfChildren = 0;
  if (nrOfChildrenList.length) {
    var _nrOfChildrenList$red;
    nrOfChildren = (_nrOfChildrenList$red = nrOfChildrenList === null || nrOfChildrenList === void 0 ? void 0 : nrOfChildrenList.reduce(function (a, b) {
      return a + b;
    }, 0)) !== null && _nrOfChildrenList$red !== void 0 ? _nrOfChildrenList$red : 0;
  }
  var sharers = (_roomConfigs$filter$l = (_roomConfigs$filter2 = roomConfigs.filter(function (x) {
    var _x$sharerAge;
    return ((_x$sharerAge = x.sharerAge) !== null && _x$sharerAge !== void 0 ? _x$sharerAge : 0) > 0;
  })) === null || _roomConfigs$filter2 === void 0 ? void 0 : _roomConfigs$filter2.length) !== null && _roomConfigs$filter$l !== void 0 ? _roomConfigs$filter$l : 0;
  return {
    adults: nrOfAdults,
    children: nrOfChildren,
    childAges: roomConfigs.flatMap(function (x) {
      return x.childAges;
    }),
    total: nrOfAdults + nrOfChildren + sharers
  };
}
function getSubHeaderText(dateFormatter, translations, searchResults, pathName, channelInfo) {
  if (pathName === "/checkout") {
    return {
      newText: translations(accommodation_AccommodationTranslations["EA4H.General.YourReservationWithUsAt{0}IsAlmostCompleted"], channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.hotelName)
    };
  }
  if (pathName && pathName !== null && pathName !== void 0 && pathName.toLowerCase().includes("addons")) {
    return {
      newText: translations(accommodation_AccommodationTranslations["EA4H.Online.AddToYourRoomInfo1"])
    };
  }
  if (searchResults !== null && searchResults !== void 0 && searchResults.accommodationSearch) {
    var _searchResults$accomm, _searchResults$accomm2, _getNumberOfGuests;
    var nrOfRooms = (_searchResults$accomm = (_searchResults$accomm2 = searchResults.accommodationSearch.roomConfigs) === null || _searchResults$accomm2 === void 0 ? void 0 : _searchResults$accomm2.length) !== null && _searchResults$accomm !== void 0 ? _searchResults$accomm : 0;
    var nrOfGuests = (_getNumberOfGuests = getNumberOfGuests(searchResults.accommodationSearch.roomConfigs)) === null || _getNumberOfGuests === void 0 ? void 0 : _getNumberOfGuests.total;
    var arrivalDay = toUTCDate(searchResults.accommodationSearch.arrivalDate);
    var departureDay = add(arrivalDay, {
      days: searchResults.accommodationSearch.numberOfNights
    });
    var nrOfNights = eachDayOfInterval({
      start: arrivalDay,
      end: departureDay
    }).length - 1;
    var roomNumberLabel = nrOfRooms === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.RoomLOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.RoomsLower"]);
    var guestsNumberLabel = nrOfGuests === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Guest_LOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Guests_LOWER"]);
    var nightsLabel = nrOfNights > 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Nights_LOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Night_LOWER"]);
    var arrivalDateString = dateFormatter.format(arrivalDay).replace(".", "");
    var departureDateString = dateFormatter.format(departureDay).replace(".", "");
    return {
      newText: "".concat(translations(accommodation_AccommodationTranslations["EA4H.General.YouHaveSearchedFor"]), " ").concat(arrivalDateString, " - ").concat(departureDateString, ",\n                ").concat(nrOfNights, " ").concat(nightsLabel, ", \n                ").concat(nrOfRooms, " ").concat(roomNumberLabel, ", \n                ").concat(nrOfGuests, " ").concat(guestsNumberLabel),
      showSaveYourSearchButton: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.allowSaveYourSearch,
      stayBetweenString: "".concat(arrivalDateString, " - ").concat(departureDateString),
      nightsString: "".concat(nrOfNights, " ").concat(nightsLabel),
      roomsString: "".concat(nrOfRooms, " ").concat(roomNumberLabel),
      guestsString: "".concat(nrOfGuests, " ").concat(guestsNumberLabel)
    };
  }
  return {
    newText: translations(accommodation_AccommodationTranslations["EA4H.General.YouHaventSelectedAnyDates"])
  };
}
function getSearchResultDateString(searchResults, dateFormatterShort) {
  var _searchResults$accomm3;
  if (searchResults !== null && searchResults !== void 0 && (_searchResults$accomm3 = searchResults.accommodationSearch) !== null && _searchResults$accomm3 !== void 0 && _searchResults$accomm3.arrivalDate) {
    var _searchResults$accomm4, _searchResults$accomm5, _searchResults$accomm6;
    var d = new Date(searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$accomm4 = searchResults.accommodationSearch) === null || _searchResults$accomm4 === void 0 ? void 0 : _searchResults$accomm4.arrivalDate);
    var arrival = dateFormatterShort.format(d).split(".").join("");
    var endDate = new Date(d);
    var stayLength = (_searchResults$accomm5 = searchResults === null || searchResults === void 0 ? void 0 : (_searchResults$accomm6 = searchResults.accommodationSearch) === null || _searchResults$accomm6 === void 0 ? void 0 : _searchResults$accomm6.numberOfNights) !== null && _searchResults$accomm5 !== void 0 ? _searchResults$accomm5 : 1;
    endDate.setDate(endDate.getDate() + stayLength);
    var departure = dateFormatterShort.format(endDate).split(".").join("");
    return replaceAll("".concat(arrival, " - ").concat(departure), ",", "");
  }
}
function replaceAll(str, find, replace) {
  return str.replace(new RegExp(find, "ig"), replace);
}
var prefetchAddonTimeslots = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(API, channelId, addOn, queryClient) {
    var _addOn$addOnPriceInfo, _addOn$addOnPriceInfo2;
    var dates, queryKey, cachedData, newData;
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          dates = (_addOn$addOnPriceInfo = (_addOn$addOnPriceInfo2 = addOn.addOnPriceInfo) === null || _addOn$addOnPriceInfo2 === void 0 ? void 0 : _addOn$addOnPriceInfo2.map(function (x) {
            return new Date(x.date);
          })) !== null && _addOn$addOnPriceInfo !== void 0 ? _addOn$addOnPriceInfo : [];
          queryKey = ["optionaladdontimeslots", addOn.addOnId, 1, JSON.stringify(dates)];
          cachedData = queryClient.getQueryData(queryKey);
          if (cachedData) {
            _context.next = 8;
            break;
          }
          _context.next = 6;
          return API === null || API === void 0 ? void 0 : API.basketsOptionalAddonTimeslotsV1(addOn.addOnId, 1, dates, channelId);
        case 6:
          newData = _context.sent;
          queryClient.setQueryData(queryKey, newData);
        case 8:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function prefetchAddonTimeslots(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();
var getRoomSize = function getRoomSize(guestRoom) {
  if (!guestRoom) {
    return "";
  }
  if (!isNaN(guestRoom.roomSize)) {
    return "".concat(guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.roomSize, "m2");
  }
  return guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.roomSize;
};
var getRoomAttributes = function getRoomAttributes(Room, translations) {
  var _Room$translatedBedTy;
  var strs = [];
  if ((_Room$translatedBedTy = Room.translatedBedTypes) !== null && _Room$translatedBedTy !== void 0 && _Room$translatedBedTy[0]) {
    var _Room$translatedBedTy2;
    strs.push({
      displayName: (_Room$translatedBedTy2 = Room.translatedBedTypes) === null || _Room$translatedBedTy2 === void 0 ? void 0 : _Room$translatedBedTy2[0],
      icon: faBedFront/* faBedFront */.V1
    });
  }
  if (Room.roomSize) {
    strs.push({
      displayName: getRoomSize(Room),
      icon: faDoorOpen/* faDoorOpen */.TE
    });
  }
  if (Room.maxOccupancy) {
    strs.push({
      displayName: translations(accommodation_AccommodationTranslations["EA4H.General.MaxNoPers{0}"], Room.maxOccupancy),
      icon: faUserGroup/* faUserGroup */.Nd
    });
  }
  return strs;
};
var getOptionalAddonPrice = function getOptionalAddonPrice(Addon) {
  var _Addon$addOnPriceInfo, _Addon$addOnPriceInfo2;
  var allPrices = (_Addon$addOnPriceInfo = Addon === null || Addon === void 0 ? void 0 : (_Addon$addOnPriceInfo2 = Addon.addOnPriceInfo) === null || _Addon$addOnPriceInfo2 === void 0 ? void 0 : _Addon$addOnPriceInfo2.map(function (x) {
    return x.price;
  })) !== null && _Addon$addOnPriceInfo !== void 0 ? _Addon$addOnPriceInfo : [];
  var added = allPrices.reduce(function (a, b) {
    return a + b;
  }, 0);
  if ((Addon === null || Addon === void 0 ? void 0 : Addon.addOnChargeUnit) === generated_api_OptionalAddOnChargeUnit.OnePerRoom) {
    return added;
  }
  return allPrices[0];
};
var getOptionalAddonPackagePrice = function getOptionalAddonPackagePrice(AddonPackage) {
  var _AddonPackage$connect, _AddonPackage$connect2;
  var allPrices = (_AddonPackage$connect = AddonPackage === null || AddonPackage === void 0 ? void 0 : (_AddonPackage$connect2 = AddonPackage.connectedAddOns) === null || _AddonPackage$connect2 === void 0 ? void 0 : _AddonPackage$connect2.flatMap(function (x) {
    var _x$addOnPriceInfo$map, _x$addOnPriceInfo;
    return (_x$addOnPriceInfo$map = (_x$addOnPriceInfo = x.addOnPriceInfo) === null || _x$addOnPriceInfo === void 0 ? void 0 : _x$addOnPriceInfo.map(function (y) {
      return y.price;
    })) !== null && _x$addOnPriceInfo$map !== void 0 ? _x$addOnPriceInfo$map : [];
  })) !== null && _AddonPackage$connect !== void 0 ? _AddonPackage$connect : [];
  var added = allPrices.reduce(function (a, b) {
    return a + b;
  }, 0);
  var sortedByCheapest = lodash_default().orderBy(allPrices, function (x) {
    return x;
  });
  if ((AddonPackage === null || AddonPackage === void 0 ? void 0 : AddonPackage.chargeUnit) === generated_api_OptionalAddOnChargeUnit.OnePerRoom) {
    return added;
  } else if (AddonPackage.dynamic === false) {
    return added;
  }
  return sortedByCheapest[0];
};
var filterRoomRates = function filterRoomRates(accommodationSearchResult, roomId) {
  var _accommodationSearchR, _accommodationSearchR2, _allRates$filter;
  var allRates = (_accommodationSearchR = accommodationSearchResult === null || accommodationSearchResult === void 0 ? void 0 : (_accommodationSearchR2 = accommodationSearchResult.roomsResult) === null || _accommodationSearchR2 === void 0 ? void 0 : _accommodationSearchR2.filter(function (x) {
    return x !== undefined && x.nrAvailable && x.nrAvailable > 0 && x.roomId === roomId;
  }).flatMap(function (x) {
    return x.rateAlternatives;
  })) !== null && _accommodationSearchR !== void 0 ? _accommodationSearchR : [];
  return (_allRates$filter = allRates === null || allRates === void 0 ? void 0 : allRates.filter(function (rateAlternative) {
    if (Boolean(rateAlternative === null || rateAlternative === void 0 ? void 0 : rateAlternative.packageId)) {
      var _accommodationSearchR3;
      var packageDetails = accommodationSearchResult === null || accommodationSearchResult === void 0 ? void 0 : (_accommodationSearchR3 = accommodationSearchResult.packageContent) === null || _accommodationSearchR3 === void 0 ? void 0 : _accommodationSearchR3.find(function (pkg) {
        return pkg.id === (rateAlternative === null || rateAlternative === void 0 ? void 0 : rateAlternative.packageId);
      });
      if (packageDetails && !packageDetails.displayAsRatePlanHitInRoomSearchResult) {
        return false;
      }
    }
    return true;
  })) !== null && _allRates$filter !== void 0 ? _allRates$filter : [];
};
var fadeOut = function fadeOut() {
  var outerDiv = document.getElementById("outer_div");
  var basketContainer = document.getElementById("basket_container");
  if (outerDiv) {
    outerDiv.style.opacity = "0";
  }
  if (basketContainer) {
    basketContainer.style.opacity = "0";
  }
};
var isNotNullOrUndefined = function isNotNullOrUndefined(value) {
  return value !== undefined && value !== null;
};
var arrayHasItems = function arrayHasItems(value, atLeastNrOfItems) {
  return Array.isArray(value !== null && value !== void 0 ? value : []) && (value !== null && value !== void 0 ? value : []).length > (atLeastNrOfItems !== null && atLeastNrOfItems !== void 0 ? atLeastNrOfItems : 0);
};
var numberHigherThan = function numberHigherThan(value, higherThan) {
  return (0,lodash.isNumber)(value) && value > higherThan;
};
var isSomeNotNullOrUndefined = function isSomeNotNullOrUndefined(value) {
  return value.some(function (x) {
    return x !== null && x !== undefined;
  });
};
var getSaveAmountOrPercentage = function getSaveAmountOrPercentage(price, currency, showDiscountAsFixedAmount) {
  var diff = (price === null || price === void 0 ? void 0 : price.originalPriceInclVAT) - (price === null || price === void 0 ? void 0 : price.priceInclVAT);
  return showDiscountAsFixedAmount ? "".concat(Math.round(diff), " ").concat(currency) : "".concat(Math.round(diff / (price === null || price === void 0 ? void 0 : price.originalPriceInclVAT) * 100), "%");
};

//Edit reservation
var hasMandatoryDynamicAddOnPackages = function hasMandatoryDynamicAddOnPackages(internalRoomBookingId, bookingData) {
  var _bookingData$rooms, _room$mandatoryAddOnP, _room$mandatoryAddOnP2;
  var room = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms = bookingData.rooms) === null || _bookingData$rooms === void 0 ? void 0 : _bookingData$rooms.find(function (x) {
    return x.internalBookingId === internalRoomBookingId;
  });
  var nrDynamicAddOnPackages = room === null || room === void 0 ? void 0 : (_room$mandatoryAddOnP = room.mandatoryAddOnPackages) === null || _room$mandatoryAddOnP === void 0 ? void 0 : (_room$mandatoryAddOnP2 = _room$mandatoryAddOnP.filter(function (x) {
    return x.dynamic;
  })) === null || _room$mandatoryAddOnP2 === void 0 ? void 0 : _room$mandatoryAddOnP2.length;
  return nrDynamicAddOnPackages !== undefined && nrDynamicAddOnPackages > 0;
};
var hasMandatoryAddOnTimeSlots = function hasMandatoryAddOnTimeSlots(internalRoomBookingId, bookingData) {
  var _bookingData$rooms2, _room$mandatoryAddOns, _room$mandatoryAddOns2;
  var room = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms2 = bookingData.rooms) === null || _bookingData$rooms2 === void 0 ? void 0 : _bookingData$rooms2.find(function (x) {
    return x.internalBookingId === internalRoomBookingId;
  });
  var nrDynamicAddOnTimeSlots = room === null || room === void 0 ? void 0 : (_room$mandatoryAddOns = room.mandatoryAddOns) === null || _room$mandatoryAddOns === void 0 ? void 0 : (_room$mandatoryAddOns2 = _room$mandatoryAddOns.filter(function (x) {
    return x.timeSlotInfo !== undefined && x.timeSlotInfo !== null;
  })) === null || _room$mandatoryAddOns2 === void 0 ? void 0 : _room$mandatoryAddOns2.length;
  return nrDynamicAddOnTimeSlots !== undefined && nrDynamicAddOnTimeSlots > 0;
};
var hasOptionalAddOns = function hasOptionalAddOns(removedAddonIds, removedAddonPackageIds, bookingData, internalRoomBookingId) {
  if (removedAddonIds && removedAddonIds.length > 0 || removedAddonPackageIds && removedAddonPackageIds.length > 0) {
    var allAddonsExistInBasket = true;
    var allAddonPackagesExistInBasket = true;
    removedAddonIds.forEach(function (addon) {
      var _bookingData$optional, _bookingData$rooms3;
      var existsAsOptionalAddon = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$optional = bookingData.optionalAddOns) === null || _bookingData$optional === void 0 ? void 0 : _bookingData$optional.some(function (x) {
        return x.addOnId === addon && (x.internalRoomBookingId === internalRoomBookingId || x.internalRoomBookingId === undefined) && x.status !== generated_api_ItemStatus.Removed;
      });
      var existsAsMandatoryAddon = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms3 = bookingData.rooms) === null || _bookingData$rooms3 === void 0 ? void 0 : _bookingData$rooms3.some(function (x) {
        var _x$mandatoryAddOns;
        return x.internalBookingId === internalRoomBookingId && x.status !== generated_api_ItemStatus.Removed && ((_x$mandatoryAddOns = x.mandatoryAddOns) === null || _x$mandatoryAddOns === void 0 ? void 0 : _x$mandatoryAddOns.some(function (x) {
          return x.addOnId === addon && x.internalRoomBookingId === internalRoomBookingId && x.status !== generated_api_ItemStatus.Removed;
        }));
      });
      if (!existsAsOptionalAddon && !existsAsMandatoryAddon) {
        allAddonsExistInBasket = false;
      }
    });
    removedAddonPackageIds.forEach(function (addOnPackage) {
      var _bookingData$optional2, _bookingData$rooms4;
      var existsAsOptionalAddonPackage = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$optional2 = bookingData.optionalAddOnPackages) === null || _bookingData$optional2 === void 0 ? void 0 : _bookingData$optional2.some(function (x) {
        return x.addOnPackageId === addOnPackage && (x.internalRoomId === internalRoomBookingId || x.internalRoomId === undefined) && x.status !== generated_api_ItemStatus.Removed;
      });
      var existsAsMandatoryAddonPackage = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms4 = bookingData.rooms) === null || _bookingData$rooms4 === void 0 ? void 0 : _bookingData$rooms4.some(function (x) {
        var _x$mandatoryAddOnPack;
        return x.internalBookingId === internalRoomBookingId && x.status !== generated_api_ItemStatus.Removed && ((_x$mandatoryAddOnPack = x.mandatoryAddOnPackages) === null || _x$mandatoryAddOnPack === void 0 ? void 0 : _x$mandatoryAddOnPack.some(function (x) {
          return x.addOnPackageId === addOnPackage && (x.internalRoomId === internalRoomBookingId || x.internalRoomId === undefined) && x.status !== generated_api_ItemStatus.Removed;
        }));
      });
      if (!existsAsOptionalAddonPackage && !existsAsMandatoryAddonPackage) {
        allAddonPackagesExistInBasket = false;
      }
    });
    return !allAddonsExistInBasket || !allAddonPackagesExistInBasket;
  }
  return false;
};
var getInitialStepperState = function getInitialStepperState(startIndex, internalRoomBookingIds, bookingData) {
  var index = startIndex;
  if (index > 3) {
    index = 3;
  }
  if (index === 1 && !internalRoomBookingIds.some(function (x) {
    return utilities_utilities.hasMandatoryAddOnTimeSlots(x, bookingData);
  })) {
    index = 2;
  }
  if (index === 2 && !internalRoomBookingIds.some(function (x) {
    return utilities_utilities.hasMandatoryDynamicAddOnPackages(x, bookingData);
  })) {
    index = 3;
  }
  return index;
};
var getGuestsAmount = function getGuestsAmount(guests, translations) {
  var adults = guests.filter(function (guest) {
    return !guest.isChild;
  });
  var children = guests.filter(function (guest) {
    return guest.isChild;
  });
  return "".concat(adults.length, " ").concat(adults.length > 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Adults"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Adult"]), " ").concat(children.length > 0 ? "".concat(children.length, " ").concat(children.length > 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Children"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Child"])) : "");
};
var getNightsString = function getNightsString(startDate, endDate, translations) {
  var amountOfNights = GetAmountOfDaysBetweenDates(startDate, endDate);
  return "".concat(amountOfNights, " ").concat(amountOfNights > 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Nights"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Night"]));
};
var getLeftToPay = function getLeftToPay(currencyFormatter, alreadyPayed, totalPrice) {
  return alreadyPayed !== undefined && totalPrice !== undefined ? currencyFormatter.format(totalPrice - alreadyPayed) : currencyFormatter.format(totalPrice);
};
var isSameRoomConfig = function isSameRoomConfig(roomConfig, roomConfig2) {
  var _roomConfig$childAges, _roomConfig2$childAge;
  return roomConfig.adults === roomConfig2.adults && ((_roomConfig$childAges = roomConfig.childAges) !== null && _roomConfig$childAges !== void 0 ? _roomConfig$childAges : []).length === ((_roomConfig2$childAge = roomConfig2.childAges) !== null && _roomConfig2$childAge !== void 0 ? _roomConfig2$childAge : []).length && roomConfig.sharerAge === roomConfig2.sharerAge && roomConfig.ageGroupDescription === roomConfig2.ageGroupDescription;
};
var rateAlternativeHasSameAddonsAsRoom = function rateAlternativeHasSameAddonsAsRoom(rateAlternative, room) {
  var _room$mandatoryAddOns3, _room$mandatoryAddOnP3;
  var hasSameAddons;
  var hasSameAddonPackages;
  if (((_room$mandatoryAddOns3 = room.mandatoryAddOns) !== null && _room$mandatoryAddOns3 !== void 0 ? _room$mandatoryAddOns3 : []).length > 0) {
    var _rateAlternative$incl2;
    hasSameAddons = room.mandatoryAddOns.every(function (roomAddon) {
      var _rateAlternative$incl;
      return (_rateAlternative$incl = rateAlternative.includedAddOns) === null || _rateAlternative$incl === void 0 ? void 0 : _rateAlternative$incl.find(function (x) {
        return x === roomAddon.addOnId;
      });
    }) && ((_rateAlternative$incl2 = rateAlternative.includedAddOns) !== null && _rateAlternative$incl2 !== void 0 ? _rateAlternative$incl2 : []).every(function (x) {
      var _room$mandatoryAddOns4;
      return (_room$mandatoryAddOns4 = room.mandatoryAddOns) === null || _room$mandatoryAddOns4 === void 0 ? void 0 : _room$mandatoryAddOns4.find(function (y) {
        return y.addOnId === x;
      });
    });
  } else {
    var _rateAlternative$incl3;
    hasSameAddons = ((_rateAlternative$incl3 = rateAlternative.includedAddOns) !== null && _rateAlternative$incl3 !== void 0 ? _rateAlternative$incl3 : []).length === 0;
  }
  if (((_room$mandatoryAddOnP3 = room.mandatoryAddOnPackages) !== null && _room$mandatoryAddOnP3 !== void 0 ? _room$mandatoryAddOnP3 : []).length > 0) {
    var _rateAlternative$incl5;
    hasSameAddonPackages = room.mandatoryAddOnPackages.every(function (roomAddonPkg) {
      var _rateAlternative$incl4;
      return (_rateAlternative$incl4 = rateAlternative.includedAddonPackages) === null || _rateAlternative$incl4 === void 0 ? void 0 : _rateAlternative$incl4.find(function (x) {
        return x === roomAddonPkg.addOnPackageId;
      });
    }) && ((_rateAlternative$incl5 = rateAlternative.includedAddonPackages) !== null && _rateAlternative$incl5 !== void 0 ? _rateAlternative$incl5 : []).every(function (x) {
      var _room$mandatoryAddOnP4;
      return (_room$mandatoryAddOnP4 = room.mandatoryAddOnPackages) === null || _room$mandatoryAddOnP4 === void 0 ? void 0 : _room$mandatoryAddOnP4.find(function (y) {
        return y.addOnPackageId === x;
      });
    });
  } else {
    var _rateAlternative$incl6;
    hasSameAddonPackages = ((_rateAlternative$incl6 = rateAlternative.includedAddonPackages) !== null && _rateAlternative$incl6 !== void 0 ? _rateAlternative$incl6 : []).length === 0;
  }
  return hasSameAddons && hasSameAddonPackages;
};
var getFilteredProperties = function getFilteredProperties(properties, filterState) {
  return properties.filter(function (property) {
    return filterState.every(function (filter) {
      if (!property.displayAttributes) return false;
      return property.displayAttributes.some(function (attr) {
        if (!attr) return false;
        return attr.id === filter.attribute.id && attr.name === filter.attribute.name;
      });
    });
  });
};
var imageIdsToImageInfo = function imageIdsToImageInfo(imageIds, maxWidth, maxHeight, mode) {
  if (!imageIds) return [];
  var params = new URLSearchParams();
  maxWidth && params.append("maxwidth", "".concat(maxWidth));
  maxHeight && params.append("maxheight", "".concat(maxHeight));
  mode && params.append("mode", "".concat(mode));
  var stringParams = params.toString();
  return imageIds.map(function (id) {
    return {
      url: "https://images.bookvisit.com/img/".concat(id, ".jpg").concat(stringParams && "?" + stringParams),
      id: id
    };
  });
};
var getUniqueFacilities = function getUniqueFacilities(properties, hotelAttributesToShow) {
  if (!hotelAttributesToShow || (hotelAttributesToShow === null || hotelAttributesToShow === void 0 ? void 0 : hotelAttributesToShow.length) === 0) return [];
  var facilitiesMap = properties.flatMap(function (mpAlternative) {
    var _mpAlternative$displa;
    return (_mpAlternative$displa = mpAlternative.displayAttributes) !== null && _mpAlternative$displa !== void 0 ? _mpAlternative$displa : [];
  }).reduce(function (map, curr) {
    var key = curr.name;
    if (!key) {
      return map;
    }
    var detail = map.get(key);
    if (detail) {
      detail.numberOfProperties++;
    } else {
      map.set(key, {
        attribute: curr,
        numberOfProperties: 1
      });
    }
    return map;
  }, new Map());
  var facilities = Array.from(facilitiesMap.values());
  return Object.values(HotelSystemAttributeType).map(function (typeOfFacility) {
    return {
      typeOfFacility: typeOfFacility,
      facilities: facilities.filter(function (detail) {
        return detail.attribute.attributeType === typeOfFacility && hotelAttributesToShow.find(function (hotelAttr) {
          return hotelAttr.name === detail.attribute.name;
        });
      })
    };
  });
};

//GA4
var prepareGA4BeginCheckoutData = function prepareGA4BeginCheckoutData(bookingData) {
  var _bookingData$rooms5, _bookingData$optional3, _bookingData$rooms6, _bookingData$rooms7;
  var ga4Items = [];
  var roomsToAdd = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms5 = bookingData.rooms) === null || _bookingData$rooms5 === void 0 ? void 0 : _bookingData$rooms5.map(function (room) {
    var _bookingData$roomDesc, _bookingData$roomDesc2;
    return {
      item_id: room.roomId,
      item_name: bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$roomDesc = bookingData.roomDescriptions) === null || _bookingData$roomDesc === void 0 ? void 0 : (_bookingData$roomDesc2 = _bookingData$roomDesc.find(function (x) {
        return x.id === room.roomId;
      })) === null || _bookingData$roomDesc2 === void 0 ? void 0 : _bookingData$roomDesc2.name,
      price: room.totalPrice,
      quantity: 1,
      item_category: "Room"
    };
  });
  ga4Items.concat(roomsToAdd);
  var optionalAddOnsToAdd = bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$optional3 = bookingData.optionalAddOns) === null || _bookingData$optional3 === void 0 ? void 0 : _bookingData$optional3.map(function (optionalAddOn) {
    var _bookingData$addOnDes, _bookingData$addOnDes2;
    return {
      item_id: optionalAddOn.addOnId,
      item_name: bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$addOnDes = bookingData.addOnDescriptions) === null || _bookingData$addOnDes === void 0 ? void 0 : (_bookingData$addOnDes2 = _bookingData$addOnDes.find(function (x) {
        return x.id === optionalAddOn.addOnId;
      })) === null || _bookingData$addOnDes2 === void 0 ? void 0 : _bookingData$addOnDes2.name,
      price: optionalAddOn.price,
      item_category: "Addon"
    };
  });
  ga4Items.concat(optionalAddOnsToAdd);
  var includedAddOnsToAdd = [];
  bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms6 = bookingData.rooms) === null || _bookingData$rooms6 === void 0 ? void 0 : _bookingData$rooms6.forEach(function (room) {
    var _room$mandatoryAddOns5;
    (_room$mandatoryAddOns5 = room.mandatoryAddOns) === null || _room$mandatoryAddOns5 === void 0 ? void 0 : _room$mandatoryAddOns5.forEach(function (mandatoryAddOn) {
      var _bookingData$addOnDes3, _bookingData$addOnDes4;
      includedAddOnsToAdd === null || includedAddOnsToAdd === void 0 ? void 0 : includedAddOnsToAdd.push({
        item_id: mandatoryAddOn.addOnId,
        item_name: bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$addOnDes3 = bookingData.addOnDescriptions) === null || _bookingData$addOnDes3 === void 0 ? void 0 : (_bookingData$addOnDes4 = _bookingData$addOnDes3.find(function (x) {
          return x.id === mandatoryAddOn.addOnId;
        })) === null || _bookingData$addOnDes4 === void 0 ? void 0 : _bookingData$addOnDes4.name,
        price: mandatoryAddOn.price,
        item_category: "Addon"
      });
    });
  });
  ga4Items.concat(includedAddOnsToAdd);
  var includedAddOnPackagesToAdd = [];
  bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$rooms7 = bookingData.rooms) === null || _bookingData$rooms7 === void 0 ? void 0 : _bookingData$rooms7.forEach(function (room) {
    var _room$mandatoryAddOnP5;
    (_room$mandatoryAddOnP5 = room.mandatoryAddOnPackages) === null || _room$mandatoryAddOnP5 === void 0 ? void 0 : _room$mandatoryAddOnP5.forEach(function (mandatoryAddOnPackage) {
      var _bookingData$addOnPac, _bookingData$addOnPac2, _mandatoryAddOnPackag;
      includedAddOnPackagesToAdd === null || includedAddOnPackagesToAdd === void 0 ? void 0 : includedAddOnPackagesToAdd.push({
        item_id: mandatoryAddOnPackage.addOnPackageId,
        item_name: bookingData === null || bookingData === void 0 ? void 0 : (_bookingData$addOnPac = bookingData.addOnPackageDescriptions) === null || _bookingData$addOnPac === void 0 ? void 0 : (_bookingData$addOnPac2 = _bookingData$addOnPac.find(function (x) {
          return x.id === mandatoryAddOnPackage.addOnPackageId;
        })) === null || _bookingData$addOnPac2 === void 0 ? void 0 : _bookingData$addOnPac2.name,
        price: (_mandatoryAddOnPackag = mandatoryAddOnPackage.basketAddOnPriceInfos) === null || _mandatoryAddOnPackag === void 0 ? void 0 : _mandatoryAddOnPackag.reduce(function (a, b) {
          return a + b.price;
        }, 0),
        item_category: "AddonPackage"
      });
    });
  });
  ga4Items.concat(includedAddOnPackagesToAdd);
  return ga4Items;
};
var prepareGA4ViewItemListRoomsData = function prepareGA4ViewItemListRoomsData(rooms, accommodationSearchResult, isDetail) {
  var GA4Items = rooms.map(function (room) {
    var _rates$, _rates$$ratesPerRoomC, _rates$$ratesPerRoomC2, _rates$$ratesPerRoomC3;
    var rates = filterRoomRates(accommodationSearchResult, room.id);
    var rate = rates === null || rates === void 0 ? void 0 : (_rates$ = rates[0]) === null || _rates$ === void 0 ? void 0 : (_rates$$ratesPerRoomC = _rates$.ratesPerRoomConfig) === null || _rates$$ratesPerRoomC === void 0 ? void 0 : (_rates$$ratesPerRoomC2 = _rates$$ratesPerRoomC[0]) === null || _rates$$ratesPerRoomC2 === void 0 ? void 0 : (_rates$$ratesPerRoomC3 = _rates$$ratesPerRoomC2.totalPrice) === null || _rates$$ratesPerRoomC3 === void 0 ? void 0 : _rates$$ratesPerRoomC3.priceInclVAT;
    var roomPrice = !rate ? "N/A" : parseFloat(rate.toString().replace(",", "."));
    return {
      item_id: room.id,
      item_name: room.name,
      item_category: "Room",
      price: roomPrice,
      quantity: 1
    };
  });
  if (isDetail) {
    return {
      items: GA4Items
    };
  } else {
    return {
      item_list_id: "room_list",
      item_list_name: "Room list",
      items: GA4Items
    };
  }
};
var prepareGA4ViewItemListPackagesData = function prepareGA4ViewItemListPackagesData(packages, isDetail) {
  var GA4Items = packages.map(function (pkg) {
    var pkgPrice = pkg.fromPrice !== null && pkg.fromPrice !== undefined ? parseFloat(pkg.fromPrice.toString().replace(",", ".")) : "N/A";
    return {
      item_id: pkg.id,
      item_name: pkg.name,
      item_category: "Package",
      price: pkgPrice,
      quantity: 1
    };
  });
  if (isDetail) {
    return {
      items: GA4Items
    };
  } else {
    return {
      item_list_id: isDetail ? "package" : "package_list",
      item_list_name: isDetail ? "Package" : "Package list",
      items: GA4Items
    };
  }
};

/** Returns true if the input-string is a valid GUID <format></format> */
var isValidGUID = function isValidGUID(str) {
  var regex = new RegExp(/^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/);
  if (str !== undefined && str !== null && regex.test(str) == true) {
    return true;
  }
  return false;
};
var utilities_utilities = {
  isNotNullOrUndefined: isNotNullOrUndefined,
  isSomeNotNullOrUndefined: isSomeNotNullOrUndefined,
  getSaveAmountOrPercentage: getSaveAmountOrPercentage,
  replaceAll: replaceAll,
  fadeOut: fadeOut,
  arrayHasItems: arrayHasItems,
  numberHigherThan: numberHigherThan,
  //Accommodation
  getSearchResultDateString: getSearchResultDateString,
  getDiscountPercentage: getDiscountPercentage,
  getDayName: getDayName,
  getMonthName: getMonthName,
  getSubHeaderText: getSubHeaderText,
  getFromPrice: getFromPrice,
  getRoomSize: getRoomSize,
  getRoomAttributes: getRoomAttributes,
  getOptionalAddonPrice: getOptionalAddonPrice,
  getOptionalAddonPackagePrice: getOptionalAddonPackagePrice,
  prefetchAddonTimeslots: prefetchAddonTimeslots,
  getNumberOfGuests: getNumberOfGuests,
  filterRoomRates: filterRoomRates,
  //Edit reservation
  hasMandatoryDynamicAddOnPackages: hasMandatoryDynamicAddOnPackages,
  hasMandatoryAddOnTimeSlots: hasMandatoryAddOnTimeSlots,
  hasOptionalAddOns: hasOptionalAddOns,
  getInitialStepperState: getInitialStepperState,
  getGuestsAmount: getGuestsAmount,
  getNightsString: getNightsString,
  getLeftToPay: getLeftToPay,
  //Rate selector
  isSameRoomConfig: isSameRoomConfig,
  rateAlternativeHasSameAddonsAsRoom: rateAlternativeHasSameAddonsAsRoom,
  // Multiproperty filters
  getFilteredProperties: getFilteredProperties,
  //GA4
  prepareGA4BeginCheckoutData: prepareGA4BeginCheckoutData,
  prepareGA4ViewItemListRoomsData: prepareGA4ViewItemListRoomsData,
  prepareGA4ViewItemListPackagesData: prepareGA4ViewItemListPackagesData,
  getUniqueFacilities: getUniqueFacilities,
  // Temporary imageId to imageInfo func
  imageIdsToImageInfo: imageIdsToImageInfo
};
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }
  return result;
};
/* harmony default export */ var _lib_formatDistance = (formatDistance);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ var _lib_formatLong = (formatLong);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
/* harmony default export */ var _lib_formatRelative = (formatRelative);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function (dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';
    var valuesArray;
    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!

    return valuesArray[index];
  };
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
}; // Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.

var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';
      case 2:
        return number + 'nd';
      case 3:
        return number + 'rd';
    }
  }
  return number + 'th';
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ var _lib_localize = (localize);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return undefined;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match_match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function valueCallback(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ var _lib_match = (match_match);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/locale/en-US/index.js






/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: _lib_formatDistance,
  formatLong: _lib_formatLong,
  formatRelative: _lib_formatRelative,
  localize: _lib_localize,
  match: _lib_match,
  options: {
    weekStartsOn: 0
    /* Sunday */,

    firstWeekContainsDate: 1
  }
};
/* harmony default export */ var en_US = (locale);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/defaultLocale/index.js

/* harmony default export */ var defaultLocale = (en_US);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/addMilliseconds/index.js



/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/subMilliseconds/index.js



/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/assign/index.js
function assign_assign(target, object) {
  if (target == null) {
    throw new TypeError('assign requires that input parameter not be null or undefined');
  }
  for (var property in object) {
    if (Object.prototype.hasOwnProperty.call(object, property)) {
      ;
      target[property] = object[property];
    }
  }
  return target;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });
    case 'PP':
      return formatLong.date({
        width: 'medium'
      });
    case 'PPP':
      return formatLong.date({
        width: 'long'
      });
    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
};
var timeLongFormatter = function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });
    case 'pp':
      return formatLong.time({
        width: 'medium'
      });
    case 'ppp':
      return formatLong.time({
        width: 'long'
      });
    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;
    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;
    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;
    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }
  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ var format_longFormatters = (longFormatters);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/Setter.js
function Setter_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    Setter_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    Setter_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return Setter_typeof(obj);
}
function Setter_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function Setter_createSuper(Derived) {
  var hasNativeReflectConstruct = Setter_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Setter_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = Setter_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return Setter_possibleConstructorReturn(this, result);
  };
}
function Setter_possibleConstructorReturn(self, call) {
  if (call && (Setter_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return Setter_assertThisInitialized(self);
}
function Setter_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function Setter_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function Setter_getPrototypeOf(o) {
  Setter_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return Setter_getPrototypeOf(o);
}
function Setter_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Setter_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Setter_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Setter_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Setter_defineProperties(Constructor, staticProps);
  return Constructor;
}
function Setter_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = /*#__PURE__*/function () {
  function Setter() {
    Setter_classCallCheck(this, Setter);
    Setter_defineProperty(this, "subPriority", 0);
  }
  Setter_createClass(Setter, [{
    key: "validate",
    value: function validate(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter;
}();
var ValueSetter = /*#__PURE__*/function (_Setter) {
  Setter_inherits(ValueSetter, _Setter);
  var _super = Setter_createSuper(ValueSetter);
  function ValueSetter(value, validateValue, setValue, priority, subPriority) {
    var _this;
    Setter_classCallCheck(this, ValueSetter);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  Setter_createClass(ValueSetter, [{
    key: "validate",
    value: function validate(utcDate, options) {
      return this.validateValue(utcDate, this.value, options);
    }
  }, {
    key: "set",
    value: function set(utcDate, flags, options) {
      return this.setValue(utcDate, flags, this.value, options);
    }
  }]);
  return ValueSetter;
}(Setter);
var DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {
  Setter_inherits(DateToSystemTimezoneSetter, _Setter2);
  var _super2 = Setter_createSuper(DateToSystemTimezoneSetter);
  function DateToSystemTimezoneSetter() {
    var _this2;
    Setter_classCallCheck(this, DateToSystemTimezoneSetter);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    Setter_defineProperty(Setter_assertThisInitialized(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    Setter_defineProperty(Setter_assertThisInitialized(_this2), "subPriority", -1);
    return _this2;
  }
  Setter_createClass(DateToSystemTimezoneSetter, [{
    key: "set",
    value: function set(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter;
}(Setter);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/Parser.js
function Parser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Parser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Parser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Parser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Parser_defineProperties(Constructor, staticProps);
  return Constructor;
}

var Parser = /*#__PURE__*/function () {
  function Parser() {
    Parser_classCallCheck(this, Parser);
  }
  Parser_createClass(Parser, [{
    key: "run",
    value: function run(dateString, token, match, options) {
      var result = this.parse(dateString, token, match, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser;
}();
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js
function EraParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    EraParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    EraParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return EraParser_typeof(obj);
}
function EraParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function EraParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function EraParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) EraParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) EraParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function EraParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) EraParser_setPrototypeOf(subClass, superClass);
}
function EraParser_setPrototypeOf(o, p) {
  EraParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return EraParser_setPrototypeOf(o, p);
}
function EraParser_createSuper(Derived) {
  var hasNativeReflectConstruct = EraParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = EraParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = EraParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return EraParser_possibleConstructorReturn(this, result);
  };
}
function EraParser_possibleConstructorReturn(self, call) {
  if (call && (EraParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return EraParser_assertThisInitialized(self);
}
function EraParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function EraParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function EraParser_getPrototypeOf(o) {
  EraParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return EraParser_getPrototypeOf(o);
}
function EraParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

var EraParser = /*#__PURE__*/function (_Parser) {
  EraParser_inherits(EraParser, _Parser);
  var _super = EraParser_createSuper(EraParser);
  function EraParser() {
    var _this;
    EraParser_classCallCheck(this, EraParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    EraParser_defineProperty(EraParser_assertThisInitialized(_this), "priority", 140);
    EraParser_defineProperty(EraParser_assertThisInitialized(_this), "incompatibleTokens", ['R', 'u', 't', 'T']);
    return _this;
  }
  EraParser_createClass(EraParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // AD, BC
        case 'G':
        case 'GG':
        case 'GGG':
          return match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
        // A, B

        case 'GGGGG':
          return match.era(dateString, {
            width: 'narrow'
          });
        // Anno Domini, Before Christ

        case 'GGGG':
        default:
          return match.era(dateString, {
            width: 'wide'
          }) || match.era(dateString, {
            width: 'abbreviated'
          }) || match.era(dateString, {
            width: 'narrow'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      flags.era = value;
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return EraParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/constants/index.js
/**
 * Days in 1 week.
 *
 * @name daysInWeek
 * @constant
 * @type {number}
 * @default
 */
var daysInWeek = 7;
/**
 * Days in 1 year
 * One years equals 365.2425 days according to the formula:
 *
 * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
 * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
 *
 * @name daysInYear
 * @constant
 * @type {number}
 * @default
 */

var daysInYear = 365.2425;
/**
 * Maximum allowed time.
 *
 * @name maxTime
 * @constant
 * @type {number}
 * @default
 */

var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
/**
 * Milliseconds in 1 minute
 *
 * @name millisecondsInMinute
 * @constant
 * @type {number}
 * @default
 */

var millisecondsInMinute = 60000;
/**
 * Milliseconds in 1 hour
 *
 * @name millisecondsInHour
 * @constant
 * @type {number}
 * @default
 */

var millisecondsInHour = 3600000;
/**
 * Milliseconds in 1 second
 *
 * @name millisecondsInSecond
 * @constant
 * @type {number}
 * @default
 */

var millisecondsInSecond = 1000;
/**
 * Minimum allowed time.
 *
 * @name minTime
 * @constant
 * @type {number}
 * @default
 */

var minTime = -maxTime;
/**
 * Minutes in 1 hour
 *
 * @name minutesInHour
 * @constant
 * @type {number}
 * @default
 */

var minutesInHour = 60;
/**
 * Months in 1 quarter
 *
 * @name monthsInQuarter
 * @constant
 * @type {number}
 * @default
 */

var monthsInQuarter = 3;
/**
 * Months in 1 year
 *
 * @name monthsInYear
 * @constant
 * @type {number}
 * @default
 */

var monthsInYear = 12;
/**
 * Quarters in 1 year
 *
 * @name quartersInYear
 * @constant
 * @type {number}
 * @default
 */

var quartersInYear = 4;
/**
 * Seconds in 1 hour
 *
 * @name secondsInHour
 * @constant
 * @type {number}
 * @default
 */

var secondsInHour = 3600;
/**
 * Seconds in 1 minute
 *
 * @name secondsInMinute
 * @constant
 * @type {number}
 * @default
 */

var secondsInMinute = 60;
/**
 * Seconds in 1 day
 *
 * @name secondsInDay
 * @constant
 * @type {number}
 * @default
 */

var secondsInDay = secondsInHour * 24;
/**
 * Seconds in 1 week
 *
 * @name secondsInWeek
 * @constant
 * @type {number}
 * @default
 */

var secondsInWeek = secondsInDay * 7;
/**
 * Seconds in 1 year
 *
 * @name secondsInYear
 * @constant
 * @type {number}
 * @default
 */

var secondsInYear = secondsInDay * daysInYear;
/**
 * Seconds in 1 month
 *
 * @name secondsInMonth
 * @constant
 * @type {number}
 * @default
 */

var secondsInMonth = secondsInYear / 12;
/**
 * Seconds in 1 quarter
 *
 * @name secondsInQuarter
 * @constant
 * @type {number}
 * @default
 */

var secondsInQuarter = secondsInMonth * 3;
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59
  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
};

var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/utils.js


function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  } // Input is 'Z'

  if (matchResult[0] === 'Z') {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign = matchResult[1] === '+' ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case 'morning':
      return 4;
    case 'evening':
      return 17;
    case 'pm':
    case 'noon':
    case 'afternoon':
      return 12;
    case 'am':
    case 'midnight':
    case 'night':
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0; // Absolute number of the current year:
  // 1 -> 1 AC
  // 0 -> 1 BC
  // -1 -> 2 BC

  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js
function YearParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    YearParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    YearParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return YearParser_typeof(obj);
}
function YearParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function YearParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function YearParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) YearParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) YearParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function YearParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) YearParser_setPrototypeOf(subClass, superClass);
}
function YearParser_setPrototypeOf(o, p) {
  YearParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return YearParser_setPrototypeOf(o, p);
}
function YearParser_createSuper(Derived) {
  var hasNativeReflectConstruct = YearParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = YearParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = YearParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return YearParser_possibleConstructorReturn(this, result);
  };
}
function YearParser_possibleConstructorReturn(self, call) {
  if (call && (YearParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return YearParser_assertThisInitialized(self);
}
function YearParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function YearParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function YearParser_getPrototypeOf(o) {
  YearParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return YearParser_getPrototypeOf(o);
}
function YearParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
// | Year     |     y | yy |   yyy |  yyyy | yyyyy |
// |----------|-------|----|-------|-------|-------|
// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
var YearParser = /*#__PURE__*/function (_Parser) {
  YearParser_inherits(YearParser, _Parser);
  var _super = YearParser_createSuper(YearParser);
  function YearParser() {
    var _this;
    YearParser_classCallCheck(this, YearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    YearParser_defineProperty(YearParser_assertThisInitialized(_this), "priority", 130);
    YearParser_defineProperty(YearParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  YearParser_createClass(YearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'yy'
        };
      };
      switch (token) {
        case 'y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      var currentYear = date.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date.setUTCHours(0, 0, 0, 0);
        return date;
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return YearParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function setDefaultOptions(newOptions) {
  defaultOptions = newOptions;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js




function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js





function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js
function LocalWeekYearParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    LocalWeekYearParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    LocalWeekYearParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return LocalWeekYearParser_typeof(obj);
}
function LocalWeekYearParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function LocalWeekYearParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function LocalWeekYearParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) LocalWeekYearParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) LocalWeekYearParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function LocalWeekYearParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) LocalWeekYearParser_setPrototypeOf(subClass, superClass);
}
function LocalWeekYearParser_setPrototypeOf(o, p) {
  LocalWeekYearParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return LocalWeekYearParser_setPrototypeOf(o, p);
}
function LocalWeekYearParser_createSuper(Derived) {
  var hasNativeReflectConstruct = LocalWeekYearParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = LocalWeekYearParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = LocalWeekYearParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return LocalWeekYearParser_possibleConstructorReturn(this, result);
  };
}
function LocalWeekYearParser_possibleConstructorReturn(self, call) {
  if (call && (LocalWeekYearParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return LocalWeekYearParser_assertThisInitialized(self);
}
function LocalWeekYearParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function LocalWeekYearParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function LocalWeekYearParser_getPrototypeOf(o) {
  LocalWeekYearParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return LocalWeekYearParser_getPrototypeOf(o);
}
function LocalWeekYearParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}




// Local week-numbering year
var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {
  LocalWeekYearParser_inherits(LocalWeekYearParser, _Parser);
  var _super = LocalWeekYearParser_createSuper(LocalWeekYearParser);
  function LocalWeekYearParser() {
    var _this;
    LocalWeekYearParser_classCallCheck(this, LocalWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    LocalWeekYearParser_defineProperty(LocalWeekYearParser_assertThisInitialized(_this), "priority", 130);
    LocalWeekYearParser_defineProperty(LocalWeekYearParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  LocalWeekYearParser_createClass(LocalWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(year) {
        return {
          year: year,
          isTwoDigitYear: token === 'YY'
        };
      };
      switch (token) {
        case 'Y':
          return mapValue(parseNDigits(4, dateString), valueCallback);
        case 'Yo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'year'
          }), valueCallback);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set(date, flags, value, options) {
      var currentYear = getUTCWeekYear(date, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date, options);
      }
      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek(date, options);
    }
  }]);
  return LocalWeekYearParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js


function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js
function ISOWeekYearParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ISOWeekYearParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ISOWeekYearParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ISOWeekYearParser_typeof(obj);
}
function ISOWeekYearParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ISOWeekYearParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ISOWeekYearParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ISOWeekYearParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ISOWeekYearParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ISOWeekYearParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ISOWeekYearParser_setPrototypeOf(subClass, superClass);
}
function ISOWeekYearParser_setPrototypeOf(o, p) {
  ISOWeekYearParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ISOWeekYearParser_setPrototypeOf(o, p);
}
function ISOWeekYearParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ISOWeekYearParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ISOWeekYearParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ISOWeekYearParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ISOWeekYearParser_possibleConstructorReturn(this, result);
  };
}
function ISOWeekYearParser_possibleConstructorReturn(self, call) {
  if (call && (ISOWeekYearParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ISOWeekYearParser_assertThisInitialized(self);
}
function ISOWeekYearParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ISOWeekYearParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ISOWeekYearParser_getPrototypeOf(o) {
  ISOWeekYearParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ISOWeekYearParser_getPrototypeOf(o);
}
function ISOWeekYearParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // ISO week-numbering year

var ISOWeekYearParser = /*#__PURE__*/function (_Parser) {
  ISOWeekYearParser_inherits(ISOWeekYearParser, _Parser);
  var _super = ISOWeekYearParser_createSuper(ISOWeekYearParser);
  function ISOWeekYearParser() {
    var _this;
    ISOWeekYearParser_classCallCheck(this, ISOWeekYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ISOWeekYearParser_defineProperty(ISOWeekYearParser_assertThisInitialized(_this), "priority", 130);
    ISOWeekYearParser_defineProperty(ISOWeekYearParser_assertThisInitialized(_this), "incompatibleTokens", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  ISOWeekYearParser_createClass(ISOWeekYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'R') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js
function ExtendedYearParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ExtendedYearParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ExtendedYearParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ExtendedYearParser_typeof(obj);
}
function ExtendedYearParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ExtendedYearParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ExtendedYearParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ExtendedYearParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ExtendedYearParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ExtendedYearParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ExtendedYearParser_setPrototypeOf(subClass, superClass);
}
function ExtendedYearParser_setPrototypeOf(o, p) {
  ExtendedYearParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ExtendedYearParser_setPrototypeOf(o, p);
}
function ExtendedYearParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ExtendedYearParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ExtendedYearParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ExtendedYearParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ExtendedYearParser_possibleConstructorReturn(this, result);
  };
}
function ExtendedYearParser_possibleConstructorReturn(self, call) {
  if (call && (ExtendedYearParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ExtendedYearParser_assertThisInitialized(self);
}
function ExtendedYearParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ExtendedYearParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ExtendedYearParser_getPrototypeOf(o) {
  ExtendedYearParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ExtendedYearParser_getPrototypeOf(o);
}
function ExtendedYearParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var ExtendedYearParser = /*#__PURE__*/function (_Parser) {
  ExtendedYearParser_inherits(ExtendedYearParser, _Parser);
  var _super = ExtendedYearParser_createSuper(ExtendedYearParser);
  function ExtendedYearParser() {
    var _this;
    ExtendedYearParser_classCallCheck(this, ExtendedYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ExtendedYearParser_defineProperty(ExtendedYearParser_assertThisInitialized(_this), "priority", 130);
    ExtendedYearParser_defineProperty(ExtendedYearParser_assertThisInitialized(_this), "incompatibleTokens", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  ExtendedYearParser_createClass(ExtendedYearParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      if (token === 'u') {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCFullYear(value, 0, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ExtendedYearParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js
function QuarterParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    QuarterParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    QuarterParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return QuarterParser_typeof(obj);
}
function QuarterParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function QuarterParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function QuarterParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) QuarterParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) QuarterParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function QuarterParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) QuarterParser_setPrototypeOf(subClass, superClass);
}
function QuarterParser_setPrototypeOf(o, p) {
  QuarterParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return QuarterParser_setPrototypeOf(o, p);
}
function QuarterParser_createSuper(Derived) {
  var hasNativeReflectConstruct = QuarterParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = QuarterParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = QuarterParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return QuarterParser_possibleConstructorReturn(this, result);
  };
}
function QuarterParser_possibleConstructorReturn(self, call) {
  if (call && (QuarterParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return QuarterParser_assertThisInitialized(self);
}
function QuarterParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function QuarterParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function QuarterParser_getPrototypeOf(o) {
  QuarterParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return QuarterParser_getPrototypeOf(o);
}
function QuarterParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var QuarterParser = /*#__PURE__*/function (_Parser) {
  QuarterParser_inherits(QuarterParser, _Parser);
  var _super = QuarterParser_createSuper(QuarterParser);
  function QuarterParser() {
    var _this;
    QuarterParser_classCallCheck(this, QuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    QuarterParser_defineProperty(QuarterParser_assertThisInitialized(_this), "priority", 120);
    QuarterParser_defineProperty(QuarterParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  QuarterParser_createClass(QuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'Q':
        case 'QQ':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th

        case 'Qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4

        case 'QQQ':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)

        case 'QQQQQ':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // 1st quarter, 2nd quarter, ...

        case 'QQQQ':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return QuarterParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js
function StandAloneQuarterParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    StandAloneQuarterParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    StandAloneQuarterParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return StandAloneQuarterParser_typeof(obj);
}
function StandAloneQuarterParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function StandAloneQuarterParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function StandAloneQuarterParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) StandAloneQuarterParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) StandAloneQuarterParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function StandAloneQuarterParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) StandAloneQuarterParser_setPrototypeOf(subClass, superClass);
}
function StandAloneQuarterParser_setPrototypeOf(o, p) {
  StandAloneQuarterParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return StandAloneQuarterParser_setPrototypeOf(o, p);
}
function StandAloneQuarterParser_createSuper(Derived) {
  var hasNativeReflectConstruct = StandAloneQuarterParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = StandAloneQuarterParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = StandAloneQuarterParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return StandAloneQuarterParser_possibleConstructorReturn(this, result);
  };
}
function StandAloneQuarterParser_possibleConstructorReturn(self, call) {
  if (call && (StandAloneQuarterParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return StandAloneQuarterParser_assertThisInitialized(self);
}
function StandAloneQuarterParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function StandAloneQuarterParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function StandAloneQuarterParser_getPrototypeOf(o) {
  StandAloneQuarterParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return StandAloneQuarterParser_getPrototypeOf(o);
}
function StandAloneQuarterParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {
  StandAloneQuarterParser_inherits(StandAloneQuarterParser, _Parser);
  var _super = StandAloneQuarterParser_createSuper(StandAloneQuarterParser);
  function StandAloneQuarterParser() {
    var _this;
    StandAloneQuarterParser_classCallCheck(this, StandAloneQuarterParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    StandAloneQuarterParser_defineProperty(StandAloneQuarterParser_assertThisInitialized(_this), "priority", 120);
    StandAloneQuarterParser_defineProperty(StandAloneQuarterParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  StandAloneQuarterParser_createClass(StandAloneQuarterParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // 1, 2, 3, 4
        case 'q':
        case 'qq':
          // 01, 02, 03, 04
          return parseNDigits(token.length, dateString);
        // 1st, 2nd, 3rd, 4th

        case 'qo':
          return match.ordinalNumber(dateString, {
            unit: 'quarter'
          });
        // Q1, Q2, Q3, Q4

        case 'qqq':
          return match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1, 2, 3, 4 (narrow quarter; could be not numerical)

        case 'qqqqq':
          return match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // 1st quarter, 2nd quarter, ...

        case 'qqqq':
        default:
          return match.quarter(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.quarter(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth((value - 1) * 3, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneQuarterParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js
function MonthParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    MonthParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    MonthParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return MonthParser_typeof(obj);
}
function MonthParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function MonthParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function MonthParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) MonthParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) MonthParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function MonthParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) MonthParser_setPrototypeOf(subClass, superClass);
}
function MonthParser_setPrototypeOf(o, p) {
  MonthParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return MonthParser_setPrototypeOf(o, p);
}
function MonthParser_createSuper(Derived) {
  var hasNativeReflectConstruct = MonthParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = MonthParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = MonthParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return MonthParser_possibleConstructorReturn(this, result);
  };
}
function MonthParser_possibleConstructorReturn(self, call) {
  if (call && (MonthParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return MonthParser_assertThisInitialized(self);
}
function MonthParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function MonthParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function MonthParser_getPrototypeOf(o) {
  MonthParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return MonthParser_getPrototypeOf(o);
}
function MonthParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var MonthParser = /*#__PURE__*/function (_Parser) {
  MonthParser_inherits(MonthParser, _Parser);
  var _super = MonthParser_createSuper(MonthParser);
  function MonthParser() {
    var _this;
    MonthParser_classCallCheck(this, MonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    MonthParser_defineProperty(MonthParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    MonthParser_defineProperty(MonthParser_assertThisInitialized(_this), "priority", 110);
    return _this;
  }
  MonthParser_createClass(MonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'M':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12

        case 'MM':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th

        case 'Mo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec

        case 'MMM':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // J, F, ..., D

        case 'MMMMM':
          return match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // January, February, ..., December

        case 'MMMM':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return MonthParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js
function StandAloneMonthParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    StandAloneMonthParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    StandAloneMonthParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return StandAloneMonthParser_typeof(obj);
}
function StandAloneMonthParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function StandAloneMonthParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function StandAloneMonthParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) StandAloneMonthParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) StandAloneMonthParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function StandAloneMonthParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) StandAloneMonthParser_setPrototypeOf(subClass, superClass);
}
function StandAloneMonthParser_setPrototypeOf(o, p) {
  StandAloneMonthParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return StandAloneMonthParser_setPrototypeOf(o, p);
}
function StandAloneMonthParser_createSuper(Derived) {
  var hasNativeReflectConstruct = StandAloneMonthParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = StandAloneMonthParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = StandAloneMonthParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return StandAloneMonthParser_possibleConstructorReturn(this, result);
  };
}
function StandAloneMonthParser_possibleConstructorReturn(self, call) {
  if (call && (StandAloneMonthParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return StandAloneMonthParser_assertThisInitialized(self);
}
function StandAloneMonthParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function StandAloneMonthParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function StandAloneMonthParser_getPrototypeOf(o) {
  StandAloneMonthParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return StandAloneMonthParser_getPrototypeOf(o);
}
function StandAloneMonthParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var StandAloneMonthParser = /*#__PURE__*/function (_Parser) {
  StandAloneMonthParser_inherits(StandAloneMonthParser, _Parser);
  var _super = StandAloneMonthParser_createSuper(StandAloneMonthParser);
  function StandAloneMonthParser() {
    var _this;
    StandAloneMonthParser_classCallCheck(this, StandAloneMonthParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    StandAloneMonthParser_defineProperty(StandAloneMonthParser_assertThisInitialized(_this), "priority", 110);
    StandAloneMonthParser_defineProperty(StandAloneMonthParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  StandAloneMonthParser_createClass(StandAloneMonthParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        return value - 1;
      };
      switch (token) {
        // 1, 2, ..., 12
        case 'L':
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);
        // 01, 02, ..., 12

        case 'LL':
          return mapValue(parseNDigits(2, dateString), valueCallback);
        // 1st, 2nd, ..., 12th

        case 'Lo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'month'
          }), valueCallback);
        // Jan, Feb, ..., Dec

        case 'LLL':
          return match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // J, F, ..., D

        case 'LLLLL':
          return match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // January, February, ..., December

        case 'LLLL':
        default:
          return match.month(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.month(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(value, 1);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneMonthParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js





function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js




var MILLISECONDS_IN_WEEK = 604800000;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCWeek/index.js




function setUTCWeek(dirtyDate, dirtyWeek, options) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var week = toInteger(dirtyWeek);
  var diff = getUTCWeek(date, options) - week;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js
function LocalWeekParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    LocalWeekParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    LocalWeekParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return LocalWeekParser_typeof(obj);
}
function LocalWeekParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function LocalWeekParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function LocalWeekParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) LocalWeekParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) LocalWeekParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function LocalWeekParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) LocalWeekParser_setPrototypeOf(subClass, superClass);
}
function LocalWeekParser_setPrototypeOf(o, p) {
  LocalWeekParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return LocalWeekParser_setPrototypeOf(o, p);
}
function LocalWeekParser_createSuper(Derived) {
  var hasNativeReflectConstruct = LocalWeekParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = LocalWeekParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = LocalWeekParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return LocalWeekParser_possibleConstructorReturn(this, result);
  };
}
function LocalWeekParser_possibleConstructorReturn(self, call) {
  if (call && (LocalWeekParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return LocalWeekParser_assertThisInitialized(self);
}
function LocalWeekParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function LocalWeekParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function LocalWeekParser_getPrototypeOf(o) {
  LocalWeekParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return LocalWeekParser_getPrototypeOf(o);
}
function LocalWeekParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}




 // Local week of year

var LocalWeekParser = /*#__PURE__*/function (_Parser) {
  LocalWeekParser_inherits(LocalWeekParser, _Parser);
  var _super = LocalWeekParser_createSuper(LocalWeekParser);
  function LocalWeekParser() {
    var _this;
    LocalWeekParser_classCallCheck(this, LocalWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    LocalWeekParser_defineProperty(LocalWeekParser_assertThisInitialized(_this), "priority", 100);
    LocalWeekParser_defineProperty(LocalWeekParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);
    return _this;
  }
  LocalWeekParser_createClass(LocalWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'w':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'wo':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      return startOfUTCWeek(setUTCWeek(date, value, options), options);
    }
  }]);
  return LocalWeekParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js



function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js



function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js




var getUTCISOWeek_MILLISECONDS_IN_WEEK = 604800000;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / getUTCISOWeek_MILLISECONDS_IN_WEEK) + 1;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js




function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var isoWeek = toInteger(dirtyISOWeek);
  var diff = getUTCISOWeek(date) - isoWeek;
  date.setUTCDate(date.getUTCDate() - diff * 7);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js
function ISOWeekParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ISOWeekParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ISOWeekParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ISOWeekParser_typeof(obj);
}
function ISOWeekParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ISOWeekParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ISOWeekParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ISOWeekParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ISOWeekParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ISOWeekParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ISOWeekParser_setPrototypeOf(subClass, superClass);
}
function ISOWeekParser_setPrototypeOf(o, p) {
  ISOWeekParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ISOWeekParser_setPrototypeOf(o, p);
}
function ISOWeekParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ISOWeekParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ISOWeekParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ISOWeekParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ISOWeekParser_possibleConstructorReturn(this, result);
  };
}
function ISOWeekParser_possibleConstructorReturn(self, call) {
  if (call && (ISOWeekParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ISOWeekParser_assertThisInitialized(self);
}
function ISOWeekParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ISOWeekParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ISOWeekParser_getPrototypeOf(o) {
  ISOWeekParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ISOWeekParser_getPrototypeOf(o);
}
function ISOWeekParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}




 // ISO week of year

var ISOWeekParser = /*#__PURE__*/function (_Parser) {
  ISOWeekParser_inherits(ISOWeekParser, _Parser);
  var _super = ISOWeekParser_createSuper(ISOWeekParser);
  function ISOWeekParser() {
    var _this;
    ISOWeekParser_classCallCheck(this, ISOWeekParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ISOWeekParser_defineProperty(ISOWeekParser_assertThisInitialized(_this), "priority", 100);
    ISOWeekParser_defineProperty(ISOWeekParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);
    return _this;
  }
  ISOWeekParser_createClass(ISOWeekParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'I':
          return parseNumericPattern(numericPatterns.week, dateString);
        case 'Io':
          return match.ordinalNumber(dateString, {
            unit: 'week'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      return startOfUTCISOWeek(setUTCISOWeek(date, value));
    }
  }]);
  return ISOWeekParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js
function DateParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    DateParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    DateParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return DateParser_typeof(obj);
}
function DateParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function DateParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function DateParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) DateParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) DateParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function DateParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) DateParser_setPrototypeOf(subClass, superClass);
}
function DateParser_setPrototypeOf(o, p) {
  DateParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return DateParser_setPrototypeOf(o, p);
}
function DateParser_createSuper(Derived) {
  var hasNativeReflectConstruct = DateParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = DateParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = DateParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return DateParser_possibleConstructorReturn(this, result);
  };
}
function DateParser_possibleConstructorReturn(self, call) {
  if (call && (DateParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return DateParser_assertThisInitialized(self);
}
function DateParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function DateParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function DateParser_getPrototypeOf(o) {
  DateParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return DateParser_getPrototypeOf(o);
}
function DateParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Day of the month

var DateParser = /*#__PURE__*/function (_Parser) {
  DateParser_inherits(DateParser, _Parser);
  var _super = DateParser_createSuper(DateParser);
  function DateParser() {
    var _this;
    DateParser_classCallCheck(this, DateParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    DateParser_defineProperty(DateParser_assertThisInitialized(_this), "priority", 90);
    DateParser_defineProperty(DateParser_assertThisInitialized(_this), "subPriority", 1);
    DateParser_defineProperty(DateParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  DateParser_createClass(DateParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'd':
          return parseNumericPattern(numericPatterns.date, dateString);
        case 'do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      var month = date.getUTCMonth();
      if (isLeapYear) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCDate(value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DateParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js
function DayOfYearParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    DayOfYearParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    DayOfYearParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return DayOfYearParser_typeof(obj);
}
function DayOfYearParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function DayOfYearParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function DayOfYearParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) DayOfYearParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) DayOfYearParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function DayOfYearParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) DayOfYearParser_setPrototypeOf(subClass, superClass);
}
function DayOfYearParser_setPrototypeOf(o, p) {
  DayOfYearParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return DayOfYearParser_setPrototypeOf(o, p);
}
function DayOfYearParser_createSuper(Derived) {
  var hasNativeReflectConstruct = DayOfYearParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = DayOfYearParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = DayOfYearParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return DayOfYearParser_possibleConstructorReturn(this, result);
  };
}
function DayOfYearParser_possibleConstructorReturn(self, call) {
  if (call && (DayOfYearParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return DayOfYearParser_assertThisInitialized(self);
}
function DayOfYearParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function DayOfYearParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function DayOfYearParser_getPrototypeOf(o) {
  DayOfYearParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return DayOfYearParser_getPrototypeOf(o);
}
function DayOfYearParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var DayOfYearParser = /*#__PURE__*/function (_Parser) {
  DayOfYearParser_inherits(DayOfYearParser, _Parser);
  var _super = DayOfYearParser_createSuper(DayOfYearParser);
  function DayOfYearParser() {
    var _this;
    DayOfYearParser_classCallCheck(this, DayOfYearParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    DayOfYearParser_defineProperty(DayOfYearParser_assertThisInitialized(_this), "priority", 90);
    DayOfYearParser_defineProperty(DayOfYearParser_assertThisInitialized(_this), "subpriority", 1);
    DayOfYearParser_defineProperty(DayOfYearParser_assertThisInitialized(_this), "incompatibleTokens", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  DayOfYearParser_createClass(DayOfYearParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'D':
        case 'DD':
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case 'Do':
          return match.ordinalNumber(dateString, {
            unit: 'date'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(date, value) {
      var year = date.getUTCFullYear();
      var isLeapYear = isLeapYearIndex(year);
      if (isLeapYear) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMonth(0, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayOfYearParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCDay/index.js




function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(2, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = toInteger(dirtyDay);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js
function DayParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    DayParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    DayParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return DayParser_typeof(obj);
}
function DayParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function DayParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function DayParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) DayParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) DayParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function DayParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) DayParser_setPrototypeOf(subClass, superClass);
}
function DayParser_setPrototypeOf(o, p) {
  DayParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return DayParser_setPrototypeOf(o, p);
}
function DayParser_createSuper(Derived) {
  var hasNativeReflectConstruct = DayParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = DayParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = DayParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return DayParser_possibleConstructorReturn(this, result);
  };
}
function DayParser_possibleConstructorReturn(self, call) {
  if (call && (DayParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return DayParser_assertThisInitialized(self);
}
function DayParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function DayParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function DayParser_getPrototypeOf(o) {
  DayParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return DayParser_getPrototypeOf(o);
}
function DayParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

 // Day of week

var DayParser = /*#__PURE__*/function (_Parser) {
  DayParser_inherits(DayParser, _Parser);
  var _super = DayParser_createSuper(DayParser);
  function DayParser() {
    var _this;
    DayParser_classCallCheck(this, DayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    DayParser_defineProperty(DayParser_assertThisInitialized(_this), "priority", 90);
    DayParser_defineProperty(DayParser_assertThisInitialized(_this), "incompatibleTokens", ['D', 'i', 'e', 'c', 't', 'T']);
    return _this;
  }
  DayParser_createClass(DayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        // Tue
        case 'E':
        case 'EE':
        case 'EEE':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T

        case 'EEEEE':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu

        case 'EEEEEE':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday

        case 'EEEE':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return DayParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js
function LocalDayParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    LocalDayParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    LocalDayParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return LocalDayParser_typeof(obj);
}
function LocalDayParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function LocalDayParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function LocalDayParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) LocalDayParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) LocalDayParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function LocalDayParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) LocalDayParser_setPrototypeOf(subClass, superClass);
}
function LocalDayParser_setPrototypeOf(o, p) {
  LocalDayParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return LocalDayParser_setPrototypeOf(o, p);
}
function LocalDayParser_createSuper(Derived) {
  var hasNativeReflectConstruct = LocalDayParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = LocalDayParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = LocalDayParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return LocalDayParser_possibleConstructorReturn(this, result);
  };
}
function LocalDayParser_possibleConstructorReturn(self, call) {
  if (call && (LocalDayParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return LocalDayParser_assertThisInitialized(self);
}
function LocalDayParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function LocalDayParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function LocalDayParser_getPrototypeOf(o) {
  LocalDayParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return LocalDayParser_getPrototypeOf(o);
}
function LocalDayParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // Local day of week

var LocalDayParser = /*#__PURE__*/function (_Parser) {
  LocalDayParser_inherits(LocalDayParser, _Parser);
  var _super = LocalDayParser_createSuper(LocalDayParser);
  function LocalDayParser() {
    var _this;
    LocalDayParser_classCallCheck(this, LocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    LocalDayParser_defineProperty(LocalDayParser_assertThisInitialized(_this), "priority", 90);
    LocalDayParser_defineProperty(LocalDayParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);
    return _this;
  }
  LocalDayParser_createClass(LocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'e':
        case 'ee':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd

        case 'eo':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue

        case 'eee':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // T

        case 'eeeee':
          return match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tu

        case 'eeeeee':
          return match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        // Tuesday

        case 'eeee':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return LocalDayParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js
function StandAloneLocalDayParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    StandAloneLocalDayParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    StandAloneLocalDayParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return StandAloneLocalDayParser_typeof(obj);
}
function StandAloneLocalDayParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function StandAloneLocalDayParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function StandAloneLocalDayParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) StandAloneLocalDayParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) StandAloneLocalDayParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function StandAloneLocalDayParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) StandAloneLocalDayParser_setPrototypeOf(subClass, superClass);
}
function StandAloneLocalDayParser_setPrototypeOf(o, p) {
  StandAloneLocalDayParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return StandAloneLocalDayParser_setPrototypeOf(o, p);
}
function StandAloneLocalDayParser_createSuper(Derived) {
  var hasNativeReflectConstruct = StandAloneLocalDayParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = StandAloneLocalDayParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = StandAloneLocalDayParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return StandAloneLocalDayParser_possibleConstructorReturn(this, result);
  };
}
function StandAloneLocalDayParser_possibleConstructorReturn(self, call) {
  if (call && (StandAloneLocalDayParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return StandAloneLocalDayParser_assertThisInitialized(self);
}
function StandAloneLocalDayParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function StandAloneLocalDayParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function StandAloneLocalDayParser_getPrototypeOf(o) {
  StandAloneLocalDayParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return StandAloneLocalDayParser_getPrototypeOf(o);
}
function StandAloneLocalDayParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // Stand-alone local day of week

var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {
  StandAloneLocalDayParser_inherits(StandAloneLocalDayParser, _Parser);
  var _super = StandAloneLocalDayParser_createSuper(StandAloneLocalDayParser);
  function StandAloneLocalDayParser() {
    var _this;
    StandAloneLocalDayParser_classCallCheck(this, StandAloneLocalDayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    StandAloneLocalDayParser_defineProperty(StandAloneLocalDayParser_assertThisInitialized(_this), "priority", 90);
    StandAloneLocalDayParser_defineProperty(StandAloneLocalDayParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);
    return _this;
  }
  StandAloneLocalDayParser_createClass(StandAloneLocalDayParser, [{
    key: "parse",
    value: function parse(dateString, token, match, options) {
      var valueCallback = function valueCallback(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        // 3
        case 'c':
        case 'cc':
          // 03
          return mapValue(parseNDigits(token.length, dateString), valueCallback);
        // 3rd

        case 'co':
          return mapValue(match.ordinalNumber(dateString, {
            unit: 'day'
          }), valueCallback);
        // Tue

        case 'ccc':
          return match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // T

        case 'ccccc':
          return match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tu

        case 'cccccc':
          return match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
        // Tuesday

        case 'cccc':
        default:
          return match.day(dateString, {
            width: 'wide',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'short',
            context: 'standalone'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'standalone'
          });
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value, options) {
      date = setUTCDay(date, value, options);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return StandAloneLocalDayParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/setUTCISODay/index.js



function setUTCISODay(dirtyDate, dirtyDay) {
  requiredArgs(2, arguments);
  var day = toInteger(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var currentDay = date.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js
function ISODayParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ISODayParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ISODayParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ISODayParser_typeof(obj);
}
function ISODayParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ISODayParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ISODayParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ISODayParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ISODayParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ISODayParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ISODayParser_setPrototypeOf(subClass, superClass);
}
function ISODayParser_setPrototypeOf(o, p) {
  ISODayParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ISODayParser_setPrototypeOf(o, p);
}
function ISODayParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ISODayParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ISODayParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ISODayParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ISODayParser_possibleConstructorReturn(this, result);
  };
}
function ISODayParser_possibleConstructorReturn(self, call) {
  if (call && (ISODayParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ISODayParser_assertThisInitialized(self);
}
function ISODayParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ISODayParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ISODayParser_getPrototypeOf(o) {
  ISODayParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ISODayParser_getPrototypeOf(o);
}
function ISODayParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // ISO day of week

var ISODayParser = /*#__PURE__*/function (_Parser) {
  ISODayParser_inherits(ISODayParser, _Parser);
  var _super = ISODayParser_createSuper(ISODayParser);
  function ISODayParser() {
    var _this;
    ISODayParser_classCallCheck(this, ISODayParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ISODayParser_defineProperty(ISODayParser_assertThisInitialized(_this), "priority", 90);
    ISODayParser_defineProperty(ISODayParser_assertThisInitialized(_this), "incompatibleTokens", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);
    return _this;
  }
  ISODayParser_createClass(ISODayParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      var valueCallback = function valueCallback(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        // 2
        case 'i':
        case 'ii':
          // 02
          return parseNDigits(token.length, dateString);
        // 2nd

        case 'io':
          return match.ordinalNumber(dateString, {
            unit: 'day'
          });
        // Tue

        case 'iii':
          return mapValue(match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // T

        case 'iiiii':
          return mapValue(match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tu

        case 'iiiiii':
          return mapValue(match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
        // Tuesday

        case 'iiii':
        default:
          return mapValue(match.day(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'short',
            context: 'formatting'
          }) || match.day(dateString, {
            width: 'narrow',
            context: 'formatting'
          }), valueCallback);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date = setUTCISODay(date, value);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
  }]);
  return ISODayParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js
function AMPMParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    AMPMParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    AMPMParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return AMPMParser_typeof(obj);
}
function AMPMParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function AMPMParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function AMPMParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) AMPMParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) AMPMParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function AMPMParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) AMPMParser_setPrototypeOf(subClass, superClass);
}
function AMPMParser_setPrototypeOf(o, p) {
  AMPMParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return AMPMParser_setPrototypeOf(o, p);
}
function AMPMParser_createSuper(Derived) {
  var hasNativeReflectConstruct = AMPMParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = AMPMParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = AMPMParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return AMPMParser_possibleConstructorReturn(this, result);
  };
}
function AMPMParser_possibleConstructorReturn(self, call) {
  if (call && (AMPMParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return AMPMParser_assertThisInitialized(self);
}
function AMPMParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function AMPMParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function AMPMParser_getPrototypeOf(o) {
  AMPMParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return AMPMParser_getPrototypeOf(o);
}
function AMPMParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var AMPMParser = /*#__PURE__*/function (_Parser) {
  AMPMParser_inherits(AMPMParser, _Parser);
  var _super = AMPMParser_createSuper(AMPMParser);
  function AMPMParser() {
    var _this;
    AMPMParser_classCallCheck(this, AMPMParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    AMPMParser_defineProperty(AMPMParser_assertThisInitialized(_this), "priority", 80);
    AMPMParser_defineProperty(AMPMParser_assertThisInitialized(_this), "incompatibleTokens", ['b', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  AMPMParser_createClass(AMPMParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'a':
        case 'aa':
        case 'aaa':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaaa':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'aaaa':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js
function AMPMMidnightParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    AMPMMidnightParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    AMPMMidnightParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return AMPMMidnightParser_typeof(obj);
}
function AMPMMidnightParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function AMPMMidnightParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function AMPMMidnightParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) AMPMMidnightParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) AMPMMidnightParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function AMPMMidnightParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) AMPMMidnightParser_setPrototypeOf(subClass, superClass);
}
function AMPMMidnightParser_setPrototypeOf(o, p) {
  AMPMMidnightParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return AMPMMidnightParser_setPrototypeOf(o, p);
}
function AMPMMidnightParser_createSuper(Derived) {
  var hasNativeReflectConstruct = AMPMMidnightParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = AMPMMidnightParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = AMPMMidnightParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return AMPMMidnightParser_possibleConstructorReturn(this, result);
  };
}
function AMPMMidnightParser_possibleConstructorReturn(self, call) {
  if (call && (AMPMMidnightParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return AMPMMidnightParser_assertThisInitialized(self);
}
function AMPMMidnightParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function AMPMMidnightParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function AMPMMidnightParser_getPrototypeOf(o) {
  AMPMMidnightParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return AMPMMidnightParser_getPrototypeOf(o);
}
function AMPMMidnightParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var AMPMMidnightParser = /*#__PURE__*/function (_Parser) {
  AMPMMidnightParser_inherits(AMPMMidnightParser, _Parser);
  var _super = AMPMMidnightParser_createSuper(AMPMMidnightParser);
  function AMPMMidnightParser() {
    var _this;
    AMPMMidnightParser_classCallCheck(this, AMPMMidnightParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    AMPMMidnightParser_defineProperty(AMPMMidnightParser_assertThisInitialized(_this), "priority", 80);
    AMPMMidnightParser_defineProperty(AMPMMidnightParser_assertThisInitialized(_this), "incompatibleTokens", ['a', 'B', 'H', 'k', 't', 'T']);
    return _this;
  }
  AMPMMidnightParser_createClass(AMPMMidnightParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'b':
        case 'bb':
        case 'bbb':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbbb':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'bbbb':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return AMPMMidnightParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js
function DayPeriodParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    DayPeriodParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    DayPeriodParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return DayPeriodParser_typeof(obj);
}
function DayPeriodParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function DayPeriodParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function DayPeriodParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) DayPeriodParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) DayPeriodParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function DayPeriodParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) DayPeriodParser_setPrototypeOf(subClass, superClass);
}
function DayPeriodParser_setPrototypeOf(o, p) {
  DayPeriodParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return DayPeriodParser_setPrototypeOf(o, p);
}
function DayPeriodParser_createSuper(Derived) {
  var hasNativeReflectConstruct = DayPeriodParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = DayPeriodParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = DayPeriodParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return DayPeriodParser_possibleConstructorReturn(this, result);
  };
}
function DayPeriodParser_possibleConstructorReturn(self, call) {
  if (call && (DayPeriodParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return DayPeriodParser_assertThisInitialized(self);
}
function DayPeriodParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function DayPeriodParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function DayPeriodParser_getPrototypeOf(o) {
  DayPeriodParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return DayPeriodParser_getPrototypeOf(o);
}
function DayPeriodParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

 // in the morning, in the afternoon, in the evening, at night

var DayPeriodParser = /*#__PURE__*/function (_Parser) {
  DayPeriodParser_inherits(DayPeriodParser, _Parser);
  var _super = DayPeriodParser_createSuper(DayPeriodParser);
  function DayPeriodParser() {
    var _this;
    DayPeriodParser_classCallCheck(this, DayPeriodParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    DayPeriodParser_defineProperty(DayPeriodParser_assertThisInitialized(_this), "priority", 80);
    DayPeriodParser_defineProperty(DayPeriodParser_assertThisInitialized(_this), "incompatibleTokens", ['a', 'b', 't', 'T']);
    return _this;
  }
  DayPeriodParser_createClass(DayPeriodParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'B':
        case 'BB':
        case 'BBB':
          return match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBBB':
          return match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
        case 'BBBB':
        default:
          return match.dayPeriod(dateString, {
            width: 'wide',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'abbreviated',
            context: 'formatting'
          }) || match.dayPeriod(dateString, {
            width: 'narrow',
            context: 'formatting'
          });
      }
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date;
    }
  }]);
  return DayPeriodParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js
function Hour1to12Parser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    Hour1to12Parser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    Hour1to12Parser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return Hour1to12Parser_typeof(obj);
}
function Hour1to12Parser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Hour1to12Parser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Hour1to12Parser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Hour1to12Parser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Hour1to12Parser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function Hour1to12Parser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Hour1to12Parser_setPrototypeOf(subClass, superClass);
}
function Hour1to12Parser_setPrototypeOf(o, p) {
  Hour1to12Parser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return Hour1to12Parser_setPrototypeOf(o, p);
}
function Hour1to12Parser_createSuper(Derived) {
  var hasNativeReflectConstruct = Hour1to12Parser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Hour1to12Parser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = Hour1to12Parser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return Hour1to12Parser_possibleConstructorReturn(this, result);
  };
}
function Hour1to12Parser_possibleConstructorReturn(self, call) {
  if (call && (Hour1to12Parser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return Hour1to12Parser_assertThisInitialized(self);
}
function Hour1to12Parser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function Hour1to12Parser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function Hour1to12Parser_getPrototypeOf(o) {
  Hour1to12Parser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return Hour1to12Parser_getPrototypeOf(o);
}
function Hour1to12Parser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var Hour1to12Parser = /*#__PURE__*/function (_Parser) {
  Hour1to12Parser_inherits(Hour1to12Parser, _Parser);
  var _super = Hour1to12Parser_createSuper(Hour1to12Parser);
  function Hour1to12Parser() {
    var _this;
    Hour1to12Parser_classCallCheck(this, Hour1to12Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    Hour1to12Parser_defineProperty(Hour1to12Parser_assertThisInitialized(_this), "priority", 70);
    Hour1to12Parser_defineProperty(Hour1to12Parser_assertThisInitialized(_this), "incompatibleTokens", ['H', 'K', 'k', 't', 'T']);
    return _this;
  }
  Hour1to12Parser_createClass(Hour1to12Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'h':
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case 'ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date.setUTCHours(0, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour1to12Parser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js
function Hour0to23Parser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    Hour0to23Parser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    Hour0to23Parser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return Hour0to23Parser_typeof(obj);
}
function Hour0to23Parser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Hour0to23Parser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Hour0to23Parser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Hour0to23Parser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Hour0to23Parser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function Hour0to23Parser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Hour0to23Parser_setPrototypeOf(subClass, superClass);
}
function Hour0to23Parser_setPrototypeOf(o, p) {
  Hour0to23Parser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return Hour0to23Parser_setPrototypeOf(o, p);
}
function Hour0to23Parser_createSuper(Derived) {
  var hasNativeReflectConstruct = Hour0to23Parser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Hour0to23Parser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = Hour0to23Parser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return Hour0to23Parser_possibleConstructorReturn(this, result);
  };
}
function Hour0to23Parser_possibleConstructorReturn(self, call) {
  if (call && (Hour0to23Parser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return Hour0to23Parser_assertThisInitialized(self);
}
function Hour0to23Parser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function Hour0to23Parser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function Hour0to23Parser_getPrototypeOf(o) {
  Hour0to23Parser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return Hour0to23Parser_getPrototypeOf(o);
}
function Hour0to23Parser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var Hour0to23Parser = /*#__PURE__*/function (_Parser) {
  Hour0to23Parser_inherits(Hour0to23Parser, _Parser);
  var _super = Hour0to23Parser_createSuper(Hour0to23Parser);
  function Hour0to23Parser() {
    var _this;
    Hour0to23Parser_classCallCheck(this, Hour0to23Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    Hour0to23Parser_defineProperty(Hour0to23Parser_assertThisInitialized(_this), "priority", 70);
    Hour0to23Parser_defineProperty(Hour0to23Parser_assertThisInitialized(_this), "incompatibleTokens", ['a', 'b', 'h', 'K', 'k', 't', 'T']);
    return _this;
  }
  Hour0to23Parser_createClass(Hour0to23Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'H':
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case 'Ho':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCHours(value, 0, 0, 0);
      return date;
    }
  }]);
  return Hour0to23Parser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js
function Hour0To11Parser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    Hour0To11Parser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    Hour0To11Parser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return Hour0To11Parser_typeof(obj);
}
function Hour0To11Parser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Hour0To11Parser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Hour0To11Parser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Hour0To11Parser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Hour0To11Parser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function Hour0To11Parser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Hour0To11Parser_setPrototypeOf(subClass, superClass);
}
function Hour0To11Parser_setPrototypeOf(o, p) {
  Hour0To11Parser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return Hour0To11Parser_setPrototypeOf(o, p);
}
function Hour0To11Parser_createSuper(Derived) {
  var hasNativeReflectConstruct = Hour0To11Parser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Hour0To11Parser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = Hour0To11Parser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return Hour0To11Parser_possibleConstructorReturn(this, result);
  };
}
function Hour0To11Parser_possibleConstructorReturn(self, call) {
  if (call && (Hour0To11Parser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return Hour0To11Parser_assertThisInitialized(self);
}
function Hour0To11Parser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function Hour0To11Parser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function Hour0To11Parser_getPrototypeOf(o) {
  Hour0To11Parser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return Hour0To11Parser_getPrototypeOf(o);
}
function Hour0To11Parser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var Hour0To11Parser = /*#__PURE__*/function (_Parser) {
  Hour0To11Parser_inherits(Hour0To11Parser, _Parser);
  var _super = Hour0To11Parser_createSuper(Hour0To11Parser);
  function Hour0To11Parser() {
    var _this;
    Hour0To11Parser_classCallCheck(this, Hour0To11Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    Hour0To11Parser_defineProperty(Hour0To11Parser_assertThisInitialized(_this), "priority", 70);
    Hour0To11Parser_defineProperty(Hour0To11Parser_assertThisInitialized(_this), "incompatibleTokens", ['h', 'H', 'k', 't', 'T']);
    return _this;
  }
  Hour0To11Parser_createClass(Hour0To11Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'K':
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case 'Ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var isPM = date.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date.setUTCHours(value, 0, 0, 0);
      }
      return date;
    }
  }]);
  return Hour0To11Parser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js
function Hour1To24Parser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    Hour1To24Parser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    Hour1To24Parser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return Hour1To24Parser_typeof(obj);
}
function Hour1To24Parser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function Hour1To24Parser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function Hour1To24Parser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) Hour1To24Parser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) Hour1To24Parser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function Hour1To24Parser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Hour1To24Parser_setPrototypeOf(subClass, superClass);
}
function Hour1To24Parser_setPrototypeOf(o, p) {
  Hour1To24Parser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return Hour1To24Parser_setPrototypeOf(o, p);
}
function Hour1To24Parser_createSuper(Derived) {
  var hasNativeReflectConstruct = Hour1To24Parser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Hour1To24Parser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = Hour1To24Parser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return Hour1To24Parser_possibleConstructorReturn(this, result);
  };
}
function Hour1To24Parser_possibleConstructorReturn(self, call) {
  if (call && (Hour1To24Parser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return Hour1To24Parser_assertThisInitialized(self);
}
function Hour1To24Parser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function Hour1To24Parser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function Hour1To24Parser_getPrototypeOf(o) {
  Hour1To24Parser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return Hour1To24Parser_getPrototypeOf(o);
}
function Hour1To24Parser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var Hour1To24Parser = /*#__PURE__*/function (_Parser) {
  Hour1To24Parser_inherits(Hour1To24Parser, _Parser);
  var _super = Hour1To24Parser_createSuper(Hour1To24Parser);
  function Hour1To24Parser() {
    var _this;
    Hour1To24Parser_classCallCheck(this, Hour1To24Parser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    Hour1To24Parser_defineProperty(Hour1To24Parser_assertThisInitialized(_this), "priority", 70);
    Hour1To24Parser_defineProperty(Hour1To24Parser_assertThisInitialized(_this), "incompatibleTokens", ['a', 'b', 'h', 'H', 'K', 't', 'T']);
    return _this;
  }
  Hour1To24Parser_createClass(Hour1To24Parser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'k':
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case 'ko':
          return match.ordinalNumber(dateString, {
            unit: 'hour'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date.setUTCHours(hours, 0, 0, 0);
      return date;
    }
  }]);
  return Hour1To24Parser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js
function MinuteParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    MinuteParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    MinuteParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return MinuteParser_typeof(obj);
}
function MinuteParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function MinuteParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function MinuteParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) MinuteParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) MinuteParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function MinuteParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) MinuteParser_setPrototypeOf(subClass, superClass);
}
function MinuteParser_setPrototypeOf(o, p) {
  MinuteParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return MinuteParser_setPrototypeOf(o, p);
}
function MinuteParser_createSuper(Derived) {
  var hasNativeReflectConstruct = MinuteParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = MinuteParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = MinuteParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return MinuteParser_possibleConstructorReturn(this, result);
  };
}
function MinuteParser_possibleConstructorReturn(self, call) {
  if (call && (MinuteParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return MinuteParser_assertThisInitialized(self);
}
function MinuteParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function MinuteParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function MinuteParser_getPrototypeOf(o) {
  MinuteParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return MinuteParser_getPrototypeOf(o);
}
function MinuteParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var MinuteParser = /*#__PURE__*/function (_Parser) {
  MinuteParser_inherits(MinuteParser, _Parser);
  var _super = MinuteParser_createSuper(MinuteParser);
  function MinuteParser() {
    var _this;
    MinuteParser_classCallCheck(this, MinuteParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    MinuteParser_defineProperty(MinuteParser_assertThisInitialized(_this), "priority", 60);
    MinuteParser_defineProperty(MinuteParser_assertThisInitialized(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  MinuteParser_createClass(MinuteParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 'm':
          return parseNumericPattern(numericPatterns.minute, dateString);
        case 'mo':
          return match.ordinalNumber(dateString, {
            unit: 'minute'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMinutes(value, 0, 0);
      return date;
    }
  }]);
  return MinuteParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js
function SecondParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    SecondParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    SecondParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return SecondParser_typeof(obj);
}
function SecondParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function SecondParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function SecondParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) SecondParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) SecondParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function SecondParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) SecondParser_setPrototypeOf(subClass, superClass);
}
function SecondParser_setPrototypeOf(o, p) {
  SecondParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return SecondParser_setPrototypeOf(o, p);
}
function SecondParser_createSuper(Derived) {
  var hasNativeReflectConstruct = SecondParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = SecondParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = SecondParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return SecondParser_possibleConstructorReturn(this, result);
  };
}
function SecondParser_possibleConstructorReturn(self, call) {
  if (call && (SecondParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return SecondParser_assertThisInitialized(self);
}
function SecondParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function SecondParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function SecondParser_getPrototypeOf(o) {
  SecondParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return SecondParser_getPrototypeOf(o);
}
function SecondParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}



var SecondParser = /*#__PURE__*/function (_Parser) {
  SecondParser_inherits(SecondParser, _Parser);
  var _super = SecondParser_createSuper(SecondParser);
  function SecondParser() {
    var _this;
    SecondParser_classCallCheck(this, SecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    SecondParser_defineProperty(SecondParser_assertThisInitialized(_this), "priority", 50);
    SecondParser_defineProperty(SecondParser_assertThisInitialized(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  SecondParser_createClass(SecondParser, [{
    key: "parse",
    value: function parse(dateString, token, match) {
      switch (token) {
        case 's':
          return parseNumericPattern(numericPatterns.second, dateString);
        case 'so':
          return match.ordinalNumber(dateString, {
            unit: 'second'
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCSeconds(value, 0);
      return date;
    }
  }]);
  return SecondParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js
function FractionOfSecondParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    FractionOfSecondParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    FractionOfSecondParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return FractionOfSecondParser_typeof(obj);
}
function FractionOfSecondParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function FractionOfSecondParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function FractionOfSecondParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) FractionOfSecondParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) FractionOfSecondParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function FractionOfSecondParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) FractionOfSecondParser_setPrototypeOf(subClass, superClass);
}
function FractionOfSecondParser_setPrototypeOf(o, p) {
  FractionOfSecondParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return FractionOfSecondParser_setPrototypeOf(o, p);
}
function FractionOfSecondParser_createSuper(Derived) {
  var hasNativeReflectConstruct = FractionOfSecondParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = FractionOfSecondParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = FractionOfSecondParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return FractionOfSecondParser_possibleConstructorReturn(this, result);
  };
}
function FractionOfSecondParser_possibleConstructorReturn(self, call) {
  if (call && (FractionOfSecondParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return FractionOfSecondParser_assertThisInitialized(self);
}
function FractionOfSecondParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function FractionOfSecondParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function FractionOfSecondParser_getPrototypeOf(o) {
  FractionOfSecondParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return FractionOfSecondParser_getPrototypeOf(o);
}
function FractionOfSecondParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var FractionOfSecondParser = /*#__PURE__*/function (_Parser) {
  FractionOfSecondParser_inherits(FractionOfSecondParser, _Parser);
  var _super = FractionOfSecondParser_createSuper(FractionOfSecondParser);
  function FractionOfSecondParser() {
    var _this;
    FractionOfSecondParser_classCallCheck(this, FractionOfSecondParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    FractionOfSecondParser_defineProperty(FractionOfSecondParser_assertThisInitialized(_this), "priority", 30);
    FractionOfSecondParser_defineProperty(FractionOfSecondParser_assertThisInitialized(_this), "incompatibleTokens", ['t', 'T']);
    return _this;
  }
  FractionOfSecondParser_createClass(FractionOfSecondParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      var valueCallback = function valueCallback(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback);
    }
  }, {
    key: "set",
    value: function set(date, _flags, value) {
      date.setUTCMilliseconds(value);
      return date;
    }
  }]);
  return FractionOfSecondParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js
function ISOTimezoneWithZParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ISOTimezoneWithZParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ISOTimezoneWithZParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ISOTimezoneWithZParser_typeof(obj);
}
function ISOTimezoneWithZParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ISOTimezoneWithZParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ISOTimezoneWithZParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ISOTimezoneWithZParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ISOTimezoneWithZParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ISOTimezoneWithZParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ISOTimezoneWithZParser_setPrototypeOf(subClass, superClass);
}
function ISOTimezoneWithZParser_setPrototypeOf(o, p) {
  ISOTimezoneWithZParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ISOTimezoneWithZParser_setPrototypeOf(o, p);
}
function ISOTimezoneWithZParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ISOTimezoneWithZParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ISOTimezoneWithZParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ISOTimezoneWithZParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ISOTimezoneWithZParser_possibleConstructorReturn(this, result);
  };
}
function ISOTimezoneWithZParser_possibleConstructorReturn(self, call) {
  if (call && (ISOTimezoneWithZParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ISOTimezoneWithZParser_assertThisInitialized(self);
}
function ISOTimezoneWithZParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ISOTimezoneWithZParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ISOTimezoneWithZParser_getPrototypeOf(o) {
  ISOTimezoneWithZParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ISOTimezoneWithZParser_getPrototypeOf(o);
}
function ISOTimezoneWithZParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // Timezone (ISO-8601. +00:00 is `'Z'`)

var ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {
  ISOTimezoneWithZParser_inherits(ISOTimezoneWithZParser, _Parser);
  var _super = ISOTimezoneWithZParser_createSuper(ISOTimezoneWithZParser);
  function ISOTimezoneWithZParser() {
    var _this;
    ISOTimezoneWithZParser_classCallCheck(this, ISOTimezoneWithZParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ISOTimezoneWithZParser_defineProperty(ISOTimezoneWithZParser_assertThisInitialized(_this), "priority", 10);
    ISOTimezoneWithZParser_defineProperty(ISOTimezoneWithZParser_assertThisInitialized(_this), "incompatibleTokens", ['t', 'T', 'x']);
    return _this;
  }
  ISOTimezoneWithZParser_createClass(ISOTimezoneWithZParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'X':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'XX':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'XXXX':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'XXXXX':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'XXX':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js
function ISOTimezoneParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    ISOTimezoneParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    ISOTimezoneParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return ISOTimezoneParser_typeof(obj);
}
function ISOTimezoneParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function ISOTimezoneParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function ISOTimezoneParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) ISOTimezoneParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) ISOTimezoneParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function ISOTimezoneParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) ISOTimezoneParser_setPrototypeOf(subClass, superClass);
}
function ISOTimezoneParser_setPrototypeOf(o, p) {
  ISOTimezoneParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return ISOTimezoneParser_setPrototypeOf(o, p);
}
function ISOTimezoneParser_createSuper(Derived) {
  var hasNativeReflectConstruct = ISOTimezoneParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = ISOTimezoneParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = ISOTimezoneParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return ISOTimezoneParser_possibleConstructorReturn(this, result);
  };
}
function ISOTimezoneParser_possibleConstructorReturn(self, call) {
  if (call && (ISOTimezoneParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return ISOTimezoneParser_assertThisInitialized(self);
}
function ISOTimezoneParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function ISOTimezoneParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function ISOTimezoneParser_getPrototypeOf(o) {
  ISOTimezoneParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return ISOTimezoneParser_getPrototypeOf(o);
}
function ISOTimezoneParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


 // Timezone (ISO-8601)

var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {
  ISOTimezoneParser_inherits(ISOTimezoneParser, _Parser);
  var _super = ISOTimezoneParser_createSuper(ISOTimezoneParser);
  function ISOTimezoneParser() {
    var _this;
    ISOTimezoneParser_classCallCheck(this, ISOTimezoneParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    ISOTimezoneParser_defineProperty(ISOTimezoneParser_assertThisInitialized(_this), "priority", 10);
    ISOTimezoneParser_defineProperty(ISOTimezoneParser_assertThisInitialized(_this), "incompatibleTokens", ['t', 'T', 'X']);
    return _this;
  }
  ISOTimezoneParser_createClass(ISOTimezoneParser, [{
    key: "parse",
    value: function parse(dateString, token) {
      switch (token) {
        case 'x':
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case 'xx':
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case 'xxxx':
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case 'xxxxx':
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case 'xxx':
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set(date, flags, value) {
      if (flags.timestampIsSet) {
        return date;
      }
      return new Date(date.getTime() - value);
    }
  }]);
  return ISOTimezoneParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js
function TimestampSecondsParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    TimestampSecondsParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    TimestampSecondsParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return TimestampSecondsParser_typeof(obj);
}
function TimestampSecondsParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function TimestampSecondsParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function TimestampSecondsParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) TimestampSecondsParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) TimestampSecondsParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function TimestampSecondsParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) TimestampSecondsParser_setPrototypeOf(subClass, superClass);
}
function TimestampSecondsParser_setPrototypeOf(o, p) {
  TimestampSecondsParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return TimestampSecondsParser_setPrototypeOf(o, p);
}
function TimestampSecondsParser_createSuper(Derived) {
  var hasNativeReflectConstruct = TimestampSecondsParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = TimestampSecondsParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = TimestampSecondsParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return TimestampSecondsParser_possibleConstructorReturn(this, result);
  };
}
function TimestampSecondsParser_possibleConstructorReturn(self, call) {
  if (call && (TimestampSecondsParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return TimestampSecondsParser_assertThisInitialized(self);
}
function TimestampSecondsParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function TimestampSecondsParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function TimestampSecondsParser_getPrototypeOf(o) {
  TimestampSecondsParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return TimestampSecondsParser_getPrototypeOf(o);
}
function TimestampSecondsParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var TimestampSecondsParser = /*#__PURE__*/function (_Parser) {
  TimestampSecondsParser_inherits(TimestampSecondsParser, _Parser);
  var _super = TimestampSecondsParser_createSuper(TimestampSecondsParser);
  function TimestampSecondsParser() {
    var _this;
    TimestampSecondsParser_classCallCheck(this, TimestampSecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    TimestampSecondsParser_defineProperty(TimestampSecondsParser_assertThisInitialized(_this), "priority", 40);
    TimestampSecondsParser_defineProperty(TimestampSecondsParser_assertThisInitialized(_this), "incompatibleTokens", '*');
    return _this;
  }
  TimestampSecondsParser_createClass(TimestampSecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value * 1000), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js
function TimestampMillisecondsParser_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    TimestampMillisecondsParser_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    TimestampMillisecondsParser_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return TimestampMillisecondsParser_typeof(obj);
}
function TimestampMillisecondsParser_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function TimestampMillisecondsParser_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function TimestampMillisecondsParser_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) TimestampMillisecondsParser_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) TimestampMillisecondsParser_defineProperties(Constructor, staticProps);
  return Constructor;
}
function TimestampMillisecondsParser_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) TimestampMillisecondsParser_setPrototypeOf(subClass, superClass);
}
function TimestampMillisecondsParser_setPrototypeOf(o, p) {
  TimestampMillisecondsParser_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return TimestampMillisecondsParser_setPrototypeOf(o, p);
}
function TimestampMillisecondsParser_createSuper(Derived) {
  var hasNativeReflectConstruct = TimestampMillisecondsParser_isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = TimestampMillisecondsParser_getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = TimestampMillisecondsParser_getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return TimestampMillisecondsParser_possibleConstructorReturn(this, result);
  };
}
function TimestampMillisecondsParser_possibleConstructorReturn(self, call) {
  if (call && (TimestampMillisecondsParser_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }
  return TimestampMillisecondsParser_assertThisInitialized(self);
}
function TimestampMillisecondsParser_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function TimestampMillisecondsParser_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function TimestampMillisecondsParser_getPrototypeOf(o) {
  TimestampMillisecondsParser_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return TimestampMillisecondsParser_getPrototypeOf(o);
}
function TimestampMillisecondsParser_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}


var TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {
  TimestampMillisecondsParser_inherits(TimestampMillisecondsParser, _Parser);
  var _super = TimestampMillisecondsParser_createSuper(TimestampMillisecondsParser);
  function TimestampMillisecondsParser() {
    var _this;
    TimestampMillisecondsParser_classCallCheck(this, TimestampMillisecondsParser);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    TimestampMillisecondsParser_defineProperty(TimestampMillisecondsParser_assertThisInitialized(_this), "priority", 20);
    TimestampMillisecondsParser_defineProperty(TimestampMillisecondsParser_assertThisInitialized(_this), "incompatibleTokens", '*');
    return _this;
  }
  TimestampMillisecondsParser_createClass(TimestampMillisecondsParser, [{
    key: "parse",
    value: function parse(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser;
}(Parser);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/_lib/parsers/index.js































/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
 * |  p  |                                |  P  |                                |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 */

var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parse/index.js
function parse_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    parse_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    parse_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return parse_typeof(obj);
}
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = parse_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
function parse_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return parse_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return parse_arrayLikeToArray(o, minLen);
}
function parse_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}











 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name parse
 * @category Common Helpers
 * @summary Parse the date.
 *
 * @description
 * Return the date parsed from string using the given format string.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters in the format string wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 *
 * Format of the format string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 5 below the table).
 *
 * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
 * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
 *
 * ```javascript
 * parse('23 AM', 'HH a', new Date())
 * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
 * ```
 *
 * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
 *
 * Accepted format string patterns:
 * | Unit                            |Prior| Pattern | Result examples                   | Notes |
 * |---------------------------------|-----|---------|-----------------------------------|-------|
 * | Era                             | 140 | G..GGG  | AD, BC                            |       |
 * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 |     | GGGGG   | A, B                              |       |
 * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
 * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
 * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
 * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
 * |                                 |     | yyyyy   | ...                               | 2,4   |
 * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
 * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
 * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
 * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
 * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
 * |                                 |     | YYYYY   | ...                               | 2,4   |
 * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
 * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
 * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
 * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
 * |                                 |     | RRRRR   | ...                               | 2,4,5 |
 * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
 * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
 * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
 * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
 * |                                 |     | uuuuu   | ...                               | 2,4   |
 * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
 * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
 * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
 * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
 * |                                 |     | qq      | 01, 02, 03, 04                    |       |
 * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
 * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
 * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | MM      | 01, 02, ..., 12                   |       |
 * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | MMMM    | January, February, ..., December  | 2     |
 * |                                 |     | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
 * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
 * |                                 |     | LL      | 01, 02, ..., 12                   |       |
 * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 |     | LLLL    | January, February, ..., December  | 2     |
 * |                                 |     | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
 * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
 * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
 * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
 * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
 * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
 * |                                 |     | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
 * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
 * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
 * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 |     | DDDD    | ...                               | 2     |
 * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
 * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
 * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
 * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
 * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
 * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
 * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |
 * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | ee      | 02, 03, ..., 01                   |       |
 * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
 * |                                 |     | cc      | 02, 03, ..., 01                   |       |
 * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
 * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
 * |                                 |     | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 |     | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
 * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
 * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
 * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
 * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
 * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
 * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | mm      | 00, 01, ..., 59                   |       |
 * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
 * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
 * |                                 |     | ss      | 00, 01, ..., 59                   |       |
 * | Seconds timestamp               |  40 | t       | 512969520                         |       |
 * |                                 |     | tt      | ...                               | 2     |
 * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
 * |                                 |     | SS      | 00, 01, ..., 99                   |       |
 * |                                 |     | SSS     | 000, 001, ..., 999                |       |
 * |                                 |     | SSSS    | ...                               | 2     |
 * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
 * |                                 |     | TT      | ...                               | 2     |
 * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
 * |                                 |     | XX      | -0800, +0530, Z                   |       |
 * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
 * |                                 |     | xx      | -0800, +0530, +0000               |       |
 * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
 * |                                 |     | PP      | May 29, 1453                      |       |
 * |                                 |     | PPP     | May 29th, 1453                    |       |
 * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
 * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
 * |                                 |     | pp      | 12:00:00 AM                       |       |
 * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
 * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
 * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
 * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular.
 *    In `format` function, they will produce different result:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 *    `parse` will try to match both formatting and stand-alone units interchangably.
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table:
 *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
 *      as wide as the sequence
 *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
 *      These variations are marked with "2" in the last column of the table.
 *
 * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 4. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
 *
 *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
 *
 *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
 *
 *    while `uu` will just assign the year as is:
 *
 *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
 *
 *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
 *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
 *
 * 5. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
 *    on the given locale.
 *
 *    using `en-US` locale: `P` => `MM/dd/yyyy`
 *    using `en-US` locale: `p` => `hh:mm a`
 *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
 *    using `pt-BR` locale: `p` => `HH:mm`
 *
 * Values will be assigned to the date in the descending order of its unit's priority.
 * Units of an equal priority overwrite each other in the order of appearance.
 *
 * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
 * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
 *
 * `referenceDate` must be passed for correct work of the function.
 * If you're not sure which `referenceDate` to supply, create a new instance of Date:
 * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
 * In this case parsing will be done in the context of the current date.
 * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
 * then `Invalid Date` will be returned.
 *
 * The result may vary by locale.
 *
 * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
 *
 * If parsing failed, `Invalid Date` will be returned.
 * Invalid Date is a Date, whose time value is NaN.
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {String} dateString - the string to parse
 * @param {String} formatString - the string of tokens
 * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {Date} the parsed date
 * @throws {TypeError} 3 arguments required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} `options.locale` must contain `match` property
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Parse 11 February 2014 from middle-endian format:
 * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
 * //=> Tue Feb 11 2014 00:00:00
 *
 * @example
 * // Parse 28th of February in Esperanto locale in the context of 2010 year:
 * import eo from 'date-fns/locale/eo'
 * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
 *   locale: eo
 * })
 * //=> Sun Feb 28 2010 00:00:00
 */

function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(3, arguments);
  var dateString = String(dirtyDateString);
  var formatString = String(dirtyFormatString);
  var defaultOptions = getDefaultOptions();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;
  if (!locale.match) {
    throw new RangeError('locale must contain match property');
  }
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (formatString === '') {
    if (dateString === '') {
      return toDate(dirtyReferenceDate);
    } else {
      return new Date(NaN);
    }
  }
  var subFnOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale
  }; // If timezone isn't specified, it will be set to the system timezone

  var setters = [new DateToSystemTimezoneSetter()];
  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter in format_longFormatters) {
      var longFormatter = format_longFormatters[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp);
  var usedTokens = [];
  var _iterator = _createForOfIteratorHelper(tokens),
    _step;
  try {
    var _loop = function _loop() {
      var token = _step.value;
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      var firstCharacter = token[0];
      var parser = parsers[firstCharacter];
      if (parser) {
        var incompatibleTokens = parser.incompatibleTokens;
        if (Array.isArray(incompatibleTokens)) {
          var incompatibleToken = usedTokens.find(function (usedToken) {
            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;
          });
          if (incompatibleToken) {
            throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
          }
        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {
          throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
        }
        usedTokens.push({
          token: firstCharacter,
          fullToken: token
        });
        var parseResult = parser.run(dateString, token, locale.match, subFnOptions);
        if (!parseResult) {
          return {
            v: new Date(NaN)
          };
        }
        setters.push(parseResult.setter);
        dateString = parseResult.rest;
      } else {
        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        } // Replace two single quote characters with one single quote character

        if (token === "''") {
          token = "'";
        } else if (firstCharacter === "'") {
          token = cleanEscapedString(token);
        } // Cut token from string, or, if string doesn't match the token, return Invalid Date

        if (dateString.indexOf(token) === 0) {
          dateString = dateString.slice(token.length);
        } else {
          return {
            v: new Date(NaN)
          };
        }
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();
      if (parse_typeof(_ret) === "object") return _ret.v;
    } // Check if the remaining input contains something other than whitespace
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
    return new Date(NaN);
  }
  var uniquePrioritySetters = setters.map(function (setter) {
    return setter.priority;
  }).sort(function (a, b) {
    return b - a;
  }).filter(function (priority, index, array) {
    return array.indexOf(priority) === index;
  }).map(function (priority) {
    return setters.filter(function (setter) {
      return setter.priority === priority;
    }).sort(function (a, b) {
      return b.subPriority - a.subPriority;
    });
  }).map(function (setterArray) {
    return setterArray[0];
  });
  var date = toDate(dirtyReferenceDate);
  if (isNaN(date.getTime())) {
    return new Date(NaN);
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.

  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));
  var flags = {};
  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var setter = _step2.value;
      if (!setter.validate(utcDate, subFnOptions)) {
        return new Date(NaN);
      }
      var result = setter.set(utcDate, flags, subFnOptions); // Result is tuple (date, flags)

      if (Array.isArray(result)) {
        utcDate = result[0];
        assign_assign(flags, result[1]); // Result is date
      } else {
        utcDate = result;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return utcDate;
}
function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/startOfWeek/index.js




/**
 * @name startOfWeek
 * @category Week Helpers
 * @summary Return the start of a week for the given date.
 *
 * @description
 * Return the start of a week for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @returns {Date} the start of a week
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 *
 * @example
 * // The start of a week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
 * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
 * //=> Mon Sep 01 2014 00:00:00
 */

function startOfWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = toDate(dirtyDate);
  var day = date.getDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/subDays/index.js



/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * const result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */

function subDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/addWeeks/index.js



/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * const result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */

function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/isAfter/index.js


/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */

function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}
;// CONCATENATED MODULE: ./src/shared_components/helpers.ts




function helpers_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = helpers_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function helpers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return helpers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return helpers_arrayLikeToArray(o, minLen); }
function helpers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }








var setOrRemoveSessionStorageItem = function setOrRemoveSessionStorageItem(name, value) {
  if (value) sessionStorage.setItem(name, value);else sessionStorage.removeItem(name);
};
var useElementSize = function useElementSize() {
  var _width$current, _height$current;
  var elementRef = React.useRef(null);
  var width = React.useRef(0);
  var height = React.useRef(0);
  React.useEffect(function () {
    var _elementRef$current, _elementRef$current2;
    width.current = (_elementRef$current = elementRef.current) === null || _elementRef$current === void 0 ? void 0 : _elementRef$current.getBoundingClientRect().width;
    height.current = (_elementRef$current2 = elementRef.current) === null || _elementRef$current2 === void 0 ? void 0 : _elementRef$current2.getBoundingClientRect().height;
  }, []);
  return {
    width: (_width$current = width.current) !== null && _width$current !== void 0 ? _width$current : 0,
    height: (_height$current = height.current) !== null && _height$current !== void 0 ? _height$current : 0,
    elementRef: elementRef
  };
};
var helpers_getDiscountPercentage = function getDiscountPercentage(originalPrice, newPrice) {
  var p = newPrice / originalPrice;
  return 100 - p * 100;
};
var helpers_parseJwt = function parseJwt(token) {
  var base64Url = token.split(".")[1];
  var base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
  var jsonPayload = decodeURIComponent(atob(base64).split("").map(function (c) {
    return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(""));
  return JSON.parse(jsonPayload);
};
var stripHtmlTags = function stripHtmlTags(inputString) {
  return inputString ? inputString.replace(/(<([^>]+)>)/gi, "") : "";
};
var GetAmountOfDaysBetweenDates = function GetAmountOfDaysBetweenDates(date1, date2) {
  var d1 = new Date(date1);
  var d2 = new Date(date2);
  var Difference_In_Time = d2.getTime() - d1.getTime();
  var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);
  return Math.round(Difference_In_Days);
};
var IsSameOrNull = function IsSameOrNull(val1, val2) {
  return val1 === val2 || !val1 && !val2;
};
var GetTranslation = function GetTranslation(inputString) {
  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    values[_key - 1] = arguments[_key];
  }
  if (!inputString) {
    return "";
  }
  var stringArray = inputString.split(/{[0-9]}/);
  var finalString = "";
  stringArray.forEach(function (word, index) {
    if (index !== stringArray.length) {
      var v = values[index];
      if (v != undefined) {
        finalString += "".concat(word).concat(v);
      } else {
        finalString += "".concat(word);
      }
    }
  });
  return finalString;
};
var dotNetDateTimeToUTCDate = function dotNetDateTimeToUTCDate(dotNetDate) {
  var d = new Date(dotNetDate);
  return new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());
};
var toUTCDate = function toUTCDate(dotNetDate) {
  var d = new Date(dotNetDate);
  return new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());
};
var getAddonImageUrl = function getAddonImageUrl(Addon, imageServer) {
  var _Addon$mainImageUrl, _Addon$imageIds;
  return ((_Addon$mainImageUrl = Addon === null || Addon === void 0 ? void 0 : Addon.mainImageUrl) !== null && _Addon$mainImageUrl !== void 0 ? _Addon$mainImageUrl : ((_Addon$imageIds = Addon.imageIds) !== null && _Addon$imageIds !== void 0 ? _Addon$imageIds : []).length > 0) ? "".concat(imageServer).concat(Addon.imageIds[0], ".jpg?maxwidth=700&maxheight=700&mode=crop") : undefined;
};
var getAddOnChargeUnitTranslation = function getAddOnChargeUnitTranslation(chargeUnit, translations) {
  switch (chargeUnit) {
    case OptionalAddOnChargeUnit.OnePerBooking:
      return translations(AccommodationTranslations["EA4H.General.OnePerBooking"]);
    case OptionalAddOnChargeUnit.OnePerGuest:
      return translations(AccommodationTranslations["EA4H.General.OnePerGuest"]);
    case OptionalAddOnChargeUnit.OnePerGuestAndDay:
      return translations(AccommodationTranslations["EA4H.General.OnePerGuestAndDay"]);
    case OptionalAddOnChargeUnit.OnePerRoom:
      return translations(AccommodationTranslations["EA4H.General.OnePerRoom"]);
    case OptionalAddOnChargeUnit.OnePerRoomAndDay:
      return translations(AccommodationTranslations["EA4H.General.OnePerRoomAndDay"]);
    case OptionalAddOnChargeUnit.OptionalNumberOfUnits:
      return translations(AccommodationTranslations["EA4H.General.OptionalNumberOfUnits"]);
    case OptionalAddOnChargeUnit.OptionalOnePerRoom:
      return translations(AccommodationTranslations["EA4H.General.OnePerRoom"]);
    default:
      return chargeUnit;
  }
};
var orderByPrice = function orderByPrice(list, searchResult) {
  return _.sortBy(list, function (x) {
    var _searchResult$roomsRe, _searchResult$roomsRe2, _searchResPkg$nrAvail, _searchResPkg$rateAlt, _searchRes$nrAvailabl, _searchRes$rateAltern;
    var searchRes = searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$roomsRe = searchResult.roomsResult) === null || _searchResult$roomsRe === void 0 ? void 0 : _searchResult$roomsRe.find(function (y) {
      return !y.isPackage && y.roomId === x.id;
    });
    var searchResPkg = searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$roomsRe2 = searchResult.roomsResult) === null || _searchResult$roomsRe2 === void 0 ? void 0 : _searchResult$roomsRe2.find(function (y) {
      return y.isPackage && y.roomId === x.id;
    });
    var price = Infinity;
    if (((_searchResPkg$nrAvail = searchResPkg === null || searchResPkg === void 0 ? void 0 : searchResPkg.nrAvailable) !== null && _searchResPkg$nrAvail !== void 0 ? _searchResPkg$nrAvail : 0) > 0 && ((_searchResPkg$rateAlt = searchResPkg === null || searchResPkg === void 0 ? void 0 : searchResPkg.rateAlternatives) !== null && _searchResPkg$rateAlt !== void 0 ? _searchResPkg$rateAlt : []).length > 0) {
      var _searchResult$package;
      var pkgInfo = searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$package = searchResult.packageContent) === null || _searchResult$package === void 0 ? void 0 : _searchResult$package.find(function (x) {
        return x.id === searchResPkg.rateAlternatives[0].packageId;
      });
      if (pkgInfo !== null && pkgInfo !== void 0 && pkgInfo.displayAsRatePlanHitInRoomSearchResult) {
        var _searchResPkg$cheapes;
        price = (_searchResPkg$cheapes = searchResPkg === null || searchResPkg === void 0 ? void 0 : searchResPkg.cheapestPriceNoLock) !== null && _searchResPkg$cheapes !== void 0 ? _searchResPkg$cheapes : Infinity;
      }
    }
    if (((_searchRes$nrAvailabl = searchRes === null || searchRes === void 0 ? void 0 : searchRes.nrAvailable) !== null && _searchRes$nrAvailabl !== void 0 ? _searchRes$nrAvailabl : 0) > 0 && ((_searchRes$rateAltern = searchRes === null || searchRes === void 0 ? void 0 : searchRes.rateAlternatives) !== null && _searchRes$rateAltern !== void 0 ? _searchRes$rateAltern : []).length > 0) {
      var _searchRes$cheapestPr;
      if (((_searchRes$cheapestPr = searchRes === null || searchRes === void 0 ? void 0 : searchRes.cheapestPriceNoLock) !== null && _searchRes$cheapestPr !== void 0 ? _searchRes$cheapestPr : Infinity) < price) {
        var _searchRes$cheapestPr2;
        price = (_searchRes$cheapestPr2 = searchRes === null || searchRes === void 0 ? void 0 : searchRes.cheapestPriceNoLock) !== null && _searchRes$cheapestPr2 !== void 0 ? _searchRes$cheapestPr2 : Infinity;
      }
    }
    return price;
  });
};
var buildSearchUrl = function buildSearchUrl(searchOptions, culture) {
  var _searchOptions$filter, _searchOptions$filter2, _searchOptions$filter3, _searchOptions$filter4, _searchOptions$filter5, _searchOptions$filter6, _searchOptions$filter7, _searchOptions$filter8, _searchOptions$filter9, _searchOptions$filter11;
  var url = "".concat(window.location.protocol, "//").concat(window.location.hostname, "/v2/widget/WidgetNewWindowStart?channelId=").concat(searchOptions.channelId, "&culture=").concat(culture);
  if ((_searchOptions$filter = searchOptions.filter) !== null && _searchOptions$filter !== void 0 && _searchOptions$filter.promoCode) {
    url += "&promoCode=".concat(searchOptions.filter.promoCode);
  }
  if ((_searchOptions$filter2 = searchOptions.filter) !== null && _searchOptions$filter2 !== void 0 && _searchOptions$filter2.corpCode) {
    url += "&corpCode=".concat(searchOptions.filter.corpCode);
  }
  if ((_searchOptions$filter3 = searchOptions.filter) !== null && _searchOptions$filter3 !== void 0 && _searchOptions$filter3.agentCode) {
    url += "&iataCode=".concat(searchOptions.filter.agentCode);
  }
  if ((_searchOptions$filter4 = searchOptions.filter) !== null && _searchOptions$filter4 !== void 0 && _searchOptions$filter4.includePackages && !((_searchOptions$filter5 = searchOptions.filter) !== null && _searchOptions$filter5 !== void 0 && _searchOptions$filter5.includeRooms) || (_searchOptions$filter6 = searchOptions.filter) !== null && _searchOptions$filter6 !== void 0 && _searchOptions$filter6.packageId) {
    url += "&allPackages=True";
  }
  if ((_searchOptions$filter7 = searchOptions.filter) !== null && _searchOptions$filter7 !== void 0 && _searchOptions$filter7.roomIds && ((_searchOptions$filter8 = searchOptions.filter) === null || _searchOptions$filter8 === void 0 ? void 0 : _searchOptions$filter8.roomIds.length) > 0) {
    var roomId = searchOptions.filter.roomIds[0];
    url += "&guestRoomId=".concat(roomId);
  } else if ((_searchOptions$filter9 = searchOptions.filter) !== null && _searchOptions$filter9 !== void 0 && _searchOptions$filter9.packageId) {
    var _searchOptions$filter10;
    url += "&packageId=".concat((_searchOptions$filter10 = searchOptions.filter) === null || _searchOptions$filter10 === void 0 ? void 0 : _searchOptions$filter10.packageId);
  } else if ((_searchOptions$filter11 = searchOptions.filter) !== null && _searchOptions$filter11 !== void 0 && _searchOptions$filter11.campaignId) {
    var _searchOptions$filter12;
    url += "&campaignId=".concat((_searchOptions$filter12 = searchOptions.filter) === null || _searchOptions$filter12 === void 0 ? void 0 : _searchOptions$filter12.campaignId);
  }
  if (searchOptions.startDate && searchOptions.endDate) {
    var year = searchOptions.startDate.getFullYear();
    var month = searchOptions.startDate.getMonth() + 1;
    var day = searchOptions.startDate.getDate();
    var stayLength = GetAmountOfDaysBetweenDates(searchOptions.startDate, searchOptions.endDate);
    url += "&year=".concat(year, "&month=").concat(month, "&day=").concat(day, "&stayLength=").concat(stayLength);
  }
  var roomConf = "";
  if (searchOptions.roomConfigs) {
    searchOptions.roomConfigs.forEach(function (conf) {
      var _conf$adults;
      if (roomConf.length > 0) {
        roomConf += "|";
      }
      roomConf += "a".concat((_conf$adults = conf.adults) !== null && _conf$adults !== void 0 ? _conf$adults : 0);
      if (conf.childAges && conf.childAges.length > 0) {
        conf.childAges.forEach(function (childAge) {
          roomConf += "_c".concat(childAge);
        });
      }
      if (conf.sharerAge) {
        roomConf += "_s".concat(conf.sharerAge);
      }
    });
  }
  if (roomConf.length > 0) {
    url += "&roomConfig=".concat(roomConf);
  }
  return url;
};
var getAgeGroupText = function getAgeGroupText(ageGroupId, ageGroupDescriptions, addOnChargeUnit) {
  var _description$name;
  if (addOnChargeUnit !== OptionalAddOnChargeUnit.OptionalNumberOfUnits) {
    return "";
  }
  if (!ageGroupId || !ageGroupDescriptions) {
    return "";
  }
  var description = ageGroupDescriptions.find(function (x) {
    return x.ageGroupId === ageGroupId;
  });
  if (!description) {
    return "";
  }
  var name = "(".concat((_description$name = description.name) !== null && _description$name !== void 0 ? _description$name : description.translatedTypeOfAgeGroup);
  if (description.maxAge !== null && description.minAge !== null) {
    name = "".concat(name, " ").concat(description.minAge, " - ").concat(description.maxAge, ")");
  } else {
    name += ")";
  }
  return name;
};
function padTo2Digits(num) {
  return String(num).padStart(2, "0");
}
var getTimeSlotString = function getTimeSlotString(timeSlot) {
  var timeSlotDate = new Date(timeSlot);
  return padTo2Digits(timeSlotDate.getUTCHours()) + ":" + padTo2Digits(timeSlotDate.getUTCMinutes());
};
function getDaysBetweenDatesChunked(startDate, endDate, chunkSize) {
  var days = [];
  var weeks = [];
  var date = new Date(startDate);
  while (date < new Date(endDate)) {
    days.push(new Date(date));
    date.setUTCDate(date.getUTCDate() + 1);
    if (days.length === chunkSize) {
      weeks.push(days);
      days = [];
    }
  }
  if (days.length > 0) {
    weeks.push(days);
  }
  return weeks;
}
function getDaysInMonthUTCChunked(month, year, chunkSize) {
  var result = [];
  var date = new Date(Date.UTC(year, month, 1));
  var days = [];
  while (date.getUTCMonth() === month) {
    days.push(new Date(date));
    date.setUTCDate(date.getUTCDate() + 1);
  }
  while (days[0].getUTCDay() !== 1) {
    var d = new Date(days[0].valueOf());
    d.setDate(d.getDate() - 1);
    days.unshift(d);
  }
  var tempArray = [];
  days.forEach(function (day) {
    tempArray.push(day);
    if (tempArray.length === chunkSize) {
      result.push(tempArray);
      tempArray = [];
    }
  });
  while (tempArray.length > 0 && tempArray.length < chunkSize) {
    var _d = new Date(tempArray[tempArray.length - 1]);
    _d.setDate(_d.getDate() + 1);
    tempArray.push(_d);
  }
  if (tempArray.length > 0) {
    result.push(tempArray);
  }
  return result;
}
var GenerateID = function GenerateID() {
  return "_" + Math.random().toString(36).substring(2, 9);
};
var showPublicException = function showPublicException(error) {
  try {
    toast.error(error.Message);
  } catch (_unused) {
    toast.error("Unknown error");
  }
};
var GetValueFromFormData = function GetValueFromFormData(formData, fieldName) {
  var _formData$get$toStrin, _formData$get;
  return (_formData$get$toStrin = (_formData$get = formData.get(fieldName)) === null || _formData$get === void 0 ? void 0 : _formData$get.toString()) !== null && _formData$get$toStrin !== void 0 ? _formData$get$toStrin : undefined;
};
var get19MonthsAhead = function get19MonthsAhead(date, translationsContext) {
  var yearFormatter = new Intl.DateTimeFormat(undefined, {
    year: 'numeric',
    month: 'long'
  });
  var result = [];
  var d = new Date(date.valueOf());
  d.setDate(1);
  while (result.length < 19) {
    result.push({
      prettyName: Boolean(translationsContext) ? "".concat(utilities_utilities.getMonthName(translationsContext, d), " ").concat(d.getFullYear()) : yearFormatter.format(d.getTime()),
      year: d.getFullYear(),
      month: d.getMonth() + 1,
      firstDayOfMonth: new Date(d)
    });
    d.setMonth(d.getMonth() + 1);
  }
  return result;
};
function helpers_hexToHSLA(H, isDarkCutoff) {
  var A = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  if (!H || H.length === 1) {
    return {
      color: null,
      isDark: null
    };
  }
  if (H.length === 6) {
    H = "#".concat(H);
  }
  // Convert hex to RGB first
  var rx = "0",
    gx = "0",
    bx = "0";
  if (H.length === 4) {
    rx = "0x" + H[1] + H[1];
    gx = "0x" + H[2] + H[2];
    bx = "0x" + H[3] + H[3];
  } else if (H.length === 7) {
    rx = "0x" + H[1] + H[2];
    gx = "0x" + H[3] + H[4];
    bx = "0x" + H[5] + H[6];
  }
  // Then to HSL
  var r = +rx / 255;
  var g = +gx / 255;
  var b = +bx / 255;
  var cmin = Math.min(r, g, b),
    cmax = Math.max(r, g, b),
    delta = cmax - cmin,
    h = 0,
    s = 0,
    l = 0;
  if (delta === 0) h = 0;else if (cmax === r) h = (g - b) / delta % 6;else if (cmax === g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;
  h = Math.round(h * 60);
  if (h < 0) h += 360;
  l = (cmax + cmin) / 2;
  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));
  s = +(s * 100).toFixed(1);
  l = +(l * 100).toFixed(1);
  return {
    color: "hsla(" + h + "," + s + "%," + l + "%," + A + ")",
    isDark: isDarkCutoff !== undefined ? l < isDarkCutoff : l < 50
  };
}
var colorBasedOnBackground = function colorBasedOnBackground(_ref) {
  var color = _ref.color,
    fallback = _ref.fallback,
    fallback2 = _ref.fallback2,
    opacityPercent = _ref.opacityPercent;
  return isDarkColor(color) || isDarkColor(fallback) || isDarkColor(fallback2) ? "hsla(0,0%,100%,".concat(opacityPercent !== null && opacityPercent !== void 0 ? opacityPercent : "100%", ")") : "hsla(0,0%,0%,".concat(opacityPercent !== null && opacityPercent !== void 0 ? opacityPercent : "100%", ")");
};
var isDarkColor = function isDarkColor(hslaColor) {
  if (!hslaColor) {
    return false;
  }
  try {
    var brightness = hslaColor.split(",")[2].replace("%", "");
    return +brightness < 50;
  } catch (_unused2) {
    console.error("failed to parse hsla color:", hslaColor);
    return false;
  }
};
var helpers_addDays = function addDays(date, days) {
  var d = new Date(date.valueOf());
  d.setDate(d.getDate() + days);
  return d;
};
function getDaysBetweenDates(startDate, endDate, includeEndDate) {
  var days = [];
  var date = new Date(startDate);
  if (includeEndDate) {
    while (date <= new Date(endDate)) {
      days.push(new Date(date));
      date.setUTCDate(date.getUTCDate() + 1);
    }
  } else {
    while (date < new Date(endDate)) {
      days.push(new Date(date));
      date.setUTCDate(date.getUTCDate() + 1);
    }
  }
  return days;
}
var addLeadingZero = function addLeadingZero(number) {
  var isShort = "".concat(number).length === 1;
  return isShort ? "0".concat(number) : number;
};

/**
 * Converts a Date object in to a string in the format: 'YYYY-MM-DD:00:00:00Z' (SAME FORMAT WHICH WE RECEIVE DATES FROM THE REST API)
 */
var dateToServerFormat = function dateToServerFormat(date) {
  //REMOVE TIME FROM DATES
  return "".concat(date.getFullYear(), "-").concat(addLeadingZero(date.getMonth() + 1), "-").concat(addLeadingZero(date.getDate()), "T00:00:00Z");
};
var mapRoomsToGTMImpression = function mapRoomsToGTMImpression(rooms, hotelName, searchResults) {
  var sorted = _.sortBy(rooms, function (room) {
    return room.rank;
  });
  var impressions = sorted.map(function (room, i) {
    return {
      brand: hotelName,
      id: room.id,
      list: "Rooms",
      name: room.name,
      position: i + 1
    };
  });
  if (searchResults) {
    impressions = impressions.filter(function (impression) {
      var _searchResults$roomsR;
      return ((_searchResults$roomsR = searchResults.roomsResult) === null || _searchResults$roomsR === void 0 ? void 0 : _searchResults$roomsR.find(function (x) {
        return x.roomId === impression.id;
      })) !== undefined;
    });
    var _iterator = helpers_createForOfIteratorHelper(impressions),
      _step;
    try {
      var _loop = function _loop() {
        var _searchResults$roomsR2;
        var impression = _step.value;
        var roomInResult = (_searchResults$roomsR2 = searchResults.roomsResult) === null || _searchResults$roomsR2 === void 0 ? void 0 : _searchResults$roomsR2.find(function (x) {
          return x.roomId === impression.id;
        });
        if (roomInResult) {
          impression.price = roomInResult.cheapestPrice;
        }
      };
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  return impressions;
};
var mapPackagesToGTMImpression = function mapPackagesToGTMImpression(packages, hotelName) {
  var sorted = _.sortBy(packages, function (pkg) {
    return pkg.rank;
  });
  var impressions = sorted.map(function (pkg, i) {
    return {
      brand: hotelName,
      id: pkg.id,
      list: "Packages",
      name: pkg.name,
      position: i + 1
    };
  });
  return impressions;
};
function toDateRemoveTime(date) {
  return new Date(new Date(date).setHours(0, 0, 0, 0));
}
function getNonUTCDaysBetweenDates(startDate, endDate, includeEndDate) {
  var days = [];
  var date = new Date(startDate);
  if (includeEndDate) {
    while (date <= new Date(endDate)) {
      days.push(new Date(date));
      date.setDate(date.getDate() + 1);
    }
  } else {
    while (date < new Date(endDate)) {
      days.push(new Date(date));
      date.setDate(date.getDate() + 1);
    }
  }
  return days;
}
function getDaysInMonthUTC(month, year) {
  var date = new Date(Date.UTC(year, month, 1));
  var days = [];
  while (date.getUTCMonth() === month) {
    days.push(new Date(date));
    date.setUTCDate(date.getUTCDate() + 1);
  }
  return days;
}
function roomWithStayGapExists(bookingData) {
  if (!bookingData.rooms || bookingData.rooms.length < 2) {
    return false;
  }
  var dates = getDaysBetweenDates(bookingData.startDate, bookingData.endDate);
  var _iterator2 = helpers_createForOfIteratorHelper(dates),
    _step2;
  try {
    var _loop2 = function _loop2() {
      var date = _step2.value;
      var year = date.getFullYear();
      var month = date.getMonth();
      var day = date.getDate();
      var bookingDate = new Date(year, month, day);
      var roomForThisDate = bookingData.rooms.filter(function (x) {
        return x.status !== ItemStatus.Removed;
      }).find(function (x) {
        var roomStartYear = new Date(x.startDate).getFullYear();
        var roomStartMonth = new Date(x.startDate).getMonth();
        var roomStartDay = new Date(x.startDate).getDate();
        var roomStartDate = new Date(roomStartYear, roomStartMonth, roomStartDay);
        var roomEndYear = new Date(x.endDate).getFullYear();
        var roomEndMonth = new Date(x.endDate).getMonth();
        var roomEndDay = new Date(x.endDate).getDate();
        var roomEndDate = new Date(roomEndYear, roomEndMonth, roomEndDay);
        return roomStartDate <= bookingDate && roomEndDate > bookingDate;
      });
      if (!roomForThisDate) {
        return {
          v: true
        };
      }
    };
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _ret = _loop2();
      if (_typeof(_ret) === "object") return _ret.v;
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
var EnumReflection = /*#__PURE__*/function () {
  function EnumReflection() {
    classCallCheck_classCallCheck(this, EnumReflection);
  }
  createClass_createClass(EnumReflection, null, [{
    key: "isString",
    value: function isString(name) {
      return !name.match(this.REGEXP);
    }
  }, {
    key: "getNames",
    value: function getNames(object) {
      var result = new Array();
      for (var name in object) {
        if (this.isString(name)) {
          result.push(name);
        }
      }
      return result;
    }
  }, {
    key: "getValues",
    value: function getValues(object) {
      var result = new Array();
      for (var name in object) {
        if (this.isString(name)) {
          result.push(object[name]);
        }
      }
      return result;
    }
  }]);
  return EnumReflection;
}();
defineProperty_defineProperty(EnumReflection, "REGEXP", /^[0-9]+$/g);
function validateGuidString(guid) {
  if (guid === undefined || guid === "") {
    return false;
  }
  var re = /^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/;
  return re.test(guid);
}
var newShade = function newShade(hexColor, magnitude) {
  hexColor = hexColor.replace("#", "");
  if (hexColor.length === 6) {
    var decimalColor = parseInt(hexColor, 16);
    var r = (decimalColor >> 16) + magnitude;
    r > 255 && (r = 255);
    r < 0 && (r = 0);
    var g = (decimalColor & 0x0000ff) + magnitude;
    g > 255 && (g = 255);
    g < 0 && (g = 0);
    var b = (decimalColor >> 8 & 0x00ff) + magnitude;
    b > 255 && (b = 255);
    b < 0 && (b = 0);
    return "#".concat((g | b << 8 | r << 16).toString(16));
  } else {
    return hexColor;
  }
};
function addBoxShadow(shadowColor, horizontalLength, verticalLength, blurRadius, spreadRadius, transparenceLevel) {
  var color = hexToRgb(shadowColor);
  return "".concat(horizontalLength, "px ").concat(verticalLength, "px ").concat(blurRadius, "px ").concat(spreadRadius, "px rgba(").concat(color === null || color === void 0 ? void 0 : color.R, ",").concat(color === null || color === void 0 ? void 0 : color.G, ",").concat(color === null || color === void 0 ? void 0 : color.B, ",").concat(transparenceLevel, ");");
}
function hexToRgb(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {
    R: parseInt(result[1], 16),
    G: parseInt(result[2], 16),
    B: parseInt(result[3], 16)
  } : null;
}
var stripedGradient = function stripedGradient(color) {
  return "linear-gradient(-45deg, ".concat(color, " 25%, rgba(0,0,0,0) 25%, rgba(0,0,0,0) 50%, ").concat(color, " 50%, ").concat(color, " 75%, rgba(0,0,0,0) 75%, rgba(0,0,0,0) 100%)");
};
var striped = function striped(stripedColor, backgroundSize) {
  return {
    "background-image": stripedGradient(stripedColor),
    "background-size": backgroundSize !== null && backgroundSize !== void 0 ? backgroundSize : "6px 6px"
  };
};
var isRoomConfigValidForGuestroom = function isRoomConfigValidForGuestroom(translations, roomConfigs, guestRoom, roomFromSearch) {
  var _guestRoom$maxOccupan, _guestRoom$minOccupan, _guestRoom$minAdultOc, _guestRoom$maxAdultOc, _guestRoom$minChildOc, _guestRoom$maxChildOc;
  var guestRoomMaxOccupancy = (_guestRoom$maxOccupan = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.maxOccupancy) !== null && _guestRoom$maxOccupan !== void 0 ? _guestRoom$maxOccupan : 10;
  var guestRoomMinOccupancy = (_guestRoom$minOccupan = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.minOccupancy) !== null && _guestRoom$minOccupan !== void 0 ? _guestRoom$minOccupan : 0;
  var guestRoomMinAdults = (_guestRoom$minAdultOc = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.minAdultOccupancy) !== null && _guestRoom$minAdultOc !== void 0 ? _guestRoom$minAdultOc : 0;
  var guestRoomMaxAdults = (_guestRoom$maxAdultOc = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.maxAdultOccupancy) !== null && _guestRoom$maxAdultOc !== void 0 ? _guestRoom$maxAdultOc : 10;
  var guestRoomMinChildren = (_guestRoom$minChildOc = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.minChildOccupancy) !== null && _guestRoom$minChildOc !== void 0 ? _guestRoom$minChildOc : 0;
  var guestRoomMaxChildren = (_guestRoom$maxChildOc = guestRoom === null || guestRoom === void 0 ? void 0 : guestRoom.maxChildOccupancy) !== null && _guestRoom$maxChildOc !== void 0 ? _guestRoom$maxChildOc : 10;
  var results = [];
  var _iterator3 = helpers_createForOfIteratorHelper(roomConfigs),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var _roomConfig$childAges, _roomConfig$childAges2;
      var roomConfig = _step3.value;
      var roomConfigAdults = roomConfig.adults;
      var roomConfigChildren = (_roomConfig$childAges = (_roomConfig$childAges2 = roomConfig.childAges) === null || _roomConfig$childAges2 === void 0 ? void 0 : _roomConfig$childAges2.length) !== null && _roomConfig$childAges !== void 0 ? _roomConfig$childAges : 0;
      var roomConfigOccupancy = roomConfigAdults + roomConfigChildren;
      if (guestRoomMinAdults > roomConfigAdults) {
        //ROOM NEEDS MORE ADULTS
        //Requires at least 2 adults

        results.push({
          valid: false,
          message: guestRoomMinAdults > 1 ? GetTranslation(translations(AccommodationTranslations["EA4H.General.Min{0}Adults"]), guestRoomMinAdults) : translations(AccommodationTranslations["EA4H.General.Min1Adult"]),
          reason: "roomconfig"
        });
        continue;
      } else if (guestRoomMaxAdults < roomConfigAdults) {
        //ROOM NEEDS LESS ADULTS
        //Maximum of 2 adults
        results.push({
          valid: false,
          message: guestRoomMaxAdults > 1 ? GetTranslation(translations(AccommodationTranslations["EA4H.General.Max{0}Adults"]), guestRoomMaxAdults) : translations(AccommodationTranslations["EA4H.General.Max1Adult"]),
          reason: "roomconfig"
        });
        continue;
      } else if (guestRoomMinChildren > roomConfigChildren) {
        //ROOM NEEDS MORE CHILDREN
        //Requires at least 2 children
        results.push({
          valid: false,
          message: guestRoomMinChildren > 1 ? GetTranslation(translations(AccommodationTranslations["EA4H.General.Min{0}Children"]), guestRoomMinChildren) : translations(AccommodationTranslations["EA4H.General.Min1Child"]),
          reason: "roomconfig"
        });
        continue;
      } else if (guestRoomMaxChildren < roomConfigChildren) {
        //ROOM NEEDS LESS CHILDREN
        //Maximum of 2 children
        results.push({
          valid: false,
          message: guestRoomMaxChildren > 1 ? GetTranslation(translations(AccommodationTranslations["EA4H.General.Max{0}Children"]), guestRoomMaxChildren) : translations(AccommodationTranslations["EA4H.General.Max1Child"]),
          reason: "roomconfig"
        });
        continue;
      } else if (guestRoomMinOccupancy > roomConfigOccupancy) {
        //ROOM NEEDS MORE PEOPLE
        //Requires 3 persons
        results.push({
          valid: false,
          message: GetTranslation(translations(AccommodationTranslations["EA4H.General.Min{0}Persons"]), guestRoomMinOccupancy),
          reason: "roomconfig"
        });
        continue;
      } else if (guestRoomMaxOccupancy < roomConfigOccupancy) {
        //ROOM NEEDS LESS PEOPLE
        //Maximum of 2 persons
        results.push({
          valid: false,
          message: GetTranslation(translations(AccommodationTranslations["EA4H.General.Max{0}Persons"]), guestRoomMaxOccupancy),
          reason: "roomconfig"
        });
        continue;
      } else if ((roomFromSearch === null || roomFromSearch === void 0 ? void 0 : roomFromSearch.nrAvailable) === 0) {
        results.push({
          valid: false,
          message: translations(AccommodationTranslations["EA4H.General.NotAvailableForSelectedDates"]),
          reason: "dates"
        });
        continue;
      }
      results.push({
        valid: true
      });
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  var validConfig = results.find(function (x) {
    return x.valid;
  });
  if (validConfig) {
    return validConfig;
  } else if (results.length > 0) {
    return results[0];
  }
};
var startDay = function startDay(firstDayOfWeek) {
  switch (firstDayOfWeek) {
    case DayOfWeek.Monday:
      return 2;
    case DayOfWeek.Tuesday:
      return 3;
    case DayOfWeek.Wednesday:
      return 4;
    case DayOfWeek.Thursday:
      return 5;
    case DayOfWeek.Friday:
      return 6;
    case DayOfWeek.Saturday:
      return 0;
    case DayOfWeek.Sunday:
      return 1;
    default:
      return 2;
  }
};
var conferenceCalendarSearchResult = function conferenceCalendarSearchResult(month, year, withAccommodation, firstDayOfWeek) {
  var newDate = parse("".concat(year, " ").concat(month), "yyyy M", new Date());
  var todaysDate = new Date();
  var startDate = startOfWeek(newDate, {
    weekStartsOn: firstDayOfWeek ? startDay(firstDayOfWeek) : 2
  });
  var maxDate = subDays(addWeeks(startDate, 6), 1);
  var weeksArr = (0,lodash.chunk)(eachDayOfInterval({
    start: startDate,
    end: maxDate
  }).map(function (date) {
    return {
      date: date,
      validArrivalDate: isAfter(date, todaysDate)
    };
  }), 7);
  var calendarWeeks = weeksArr.map(function (calendarDays) {
    return {
      calendarDays: calendarDays
    };
  });
  return {
    calendarWeeks: calendarWeeks,
    month: month,
    year: year,
    maxDate: maxDate,
    conferenceWithAccommodation: withAccommodation
  };
};
;// CONCATENATED MODULE: ./src/reservation/context_providers/translations.tsx






var keys = EnumReflection.getNames(accommodation_AccommodationTranslations);
var TranslationsContext = react.createContext({});
var TranslationsContextProvider = function TranslationsContextProvider(_ref) {
  var children = _ref.children;
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var _useTranslations = useTranslations("accommodation", keys),
    trans = _useTranslations.data;
  var fetchTranslation = react.useCallback(function (key) {
    var _trans2;
    if ((0,lodash.isEmpty)(apiContext)) {
      return "[translated string]";
    }
    for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      values[_key - 1] = arguments[_key];
    }
    if (values.length) {
      var _trans;
      return GetTranslation.apply(void 0, [trans === null || trans === void 0 ? void 0 : (_trans = trans[key]) === null || _trans === void 0 ? void 0 : _trans.translation].concat(values));
    }
    return trans === null || trans === void 0 ? void 0 : (_trans2 = trans[key]) === null || _trans2 === void 0 ? void 0 : _trans2.translation;
  }, []);
  return /*#__PURE__*/react.createElement(TranslationsContext.Provider, {
    value: fetchTranslation
  }, children);
};
;// CONCATENATED MODULE: ./src/reservation/context_providers/api_context.tsx


var _excluded = ["children"];
function api_context_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function api_context_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? api_context_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : api_context_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }



var APIContextProvider = function APIContextProvider(_ref) {
  var children = _ref.children,
    props = objectWithoutProperties_objectWithoutProperties(_ref, _excluded);
  var memoedValue = (0,react_production_min.useMemo)(function () {
    return api_context_objectSpread(api_context_objectSpread({}, props), {}, {
      firstDayOfWeek: DayOfWeek[props.firstDayOfWeek]
    });
  }, [props.channelId]);
  return /*#__PURE__*/react.createElement(APIContext.Provider, {
    value: memoedValue
  }, children);
};
;// CONCATENATED MODULE: ./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */

  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);
  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }
  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}
var StyleSheet = /*#__PURE__*/function () {
  // Using Node instead of HTMLElement since container may be a ShadowRoot
  function StyleSheet(options) {
    var _this = this;
    this._insertTag = function (tag) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag, before);
      _this.tags.push(tag);
    };
    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag = this.tags[this.tags.length - 1];
    if (false) { var isImportRule; }
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
    if (false) {}
  };
  return StyleSheet;
}();

;// CONCATENATED MODULE: ./node_modules/stylis/src/Utility.js
/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs;

/**
 * @param {number}
 * @return {string}
 */
var Utility_from = String.fromCharCode;

/**
 * @param {object}
 * @return {object}
 */
var Utility_assign = Object.assign;

/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */
function hash(value, length) {
  return Utility_charat(value, 0) ^ 45 ? (((length << 2 ^ Utility_charat(value, 0)) << 2 ^ Utility_charat(value, 1)) << 2 ^ Utility_charat(value, 2)) << 2 ^ Utility_charat(value, 3) : 0;
}

/**
 * @param {string} value
 * @return {string}
 */
function trim(value) {
  return value.trim();
}

/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */
function Utility_match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}

/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */
function Utility_replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}

/**
 * @param {string} value
 * @param {string} search
 * @return {number}
 */
function indexof(value, search) {
  return value.indexOf(search);
}

/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */
function Utility_charat(value, index) {
  return value.charCodeAt(index) | 0;
}

/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function Utility_substr(value, begin, end) {
  return value.slice(begin, end);
}

/**
 * @param {string} value
 * @return {number}
 */
function Utility_strlen(value) {
  return value.length;
}

/**
 * @param {any[]} value
 * @return {number}
 */
function Utility_sizeof(value) {
  return value.length;
}

/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */
function Utility_append(value, array) {
  return array.push(value), value;
}

/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */
function Utility_combine(array, callback) {
  return array.map(callback).join('');
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Tokenizer.js

var line = 1;
var column = 1;
var Tokenizer_length = 0;
var position = 0;
var character = 0;
var characters = '';

/**
 * @param {string} value
 * @param {object | null} root
 * @param {object | null} parent
 * @param {string} type
 * @param {string[] | string} props
 * @param {object[] | string} children
 * @param {number} length
 */
function node(value, root, parent, type, props, children, length) {
  return {
    value: value,
    root: root,
    parent: parent,
    type: type,
    props: props,
    children: children,
    line: line,
    column: column,
    length: length,
    return: ''
  };
}

/**
 * @param {object} root
 * @param {object} props
 * @return {object}
 */
function Tokenizer_copy(root, props) {
  return Utility_assign(node('', null, null, '', null, null, 0), root, {
    length: -root.length
  }, props);
}

/**
 * @return {number}
 */
function Tokenizer_char() {
  return character;
}

/**
 * @return {number}
 */
function prev() {
  character = position > 0 ? Utility_charat(characters, --position) : 0;
  if (column--, character === 10) column = 1, line--;
  return character;
}

/**
 * @return {number}
 */
function next() {
  character = position < Tokenizer_length ? Utility_charat(characters, position++) : 0;
  if (column++, character === 10) column = 1, line++;
  return character;
}

/**
 * @return {number}
 */
function peek() {
  return Utility_charat(characters, position);
}

/**
 * @return {number}
 */
function caret() {
  return position;
}

/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function slice(begin, end) {
  return Utility_substr(characters, begin, end);
}

/**
 * @param {number} type
 * @return {number}
 */
function token(type) {
  switch (type) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}

/**
 * @param {string} value
 * @return {any[]}
 */
function alloc(value) {
  return line = column = 1, Tokenizer_length = Utility_strlen(characters = value), position = 0, [];
}

/**
 * @param {any} value
 * @return {any}
 */
function dealloc(value) {
  return characters = '', value;
}

/**
 * @param {number} type
 * @return {string}
 */
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}

/**
 * @param {string} value
 * @return {string[]}
 */
function Tokenizer_tokenize(value) {
  return dealloc(tokenizer(alloc(value)));
}

/**
 * @param {number} type
 * @return {string}
 */
function whitespace(type) {
  while (character = peek()) if (character < 33) next();else break;
  return token(type) > 2 || token(character) > 3 ? '' : ' ';
}

/**
 * @param {string[]} children
 * @return {string[]}
 */
function tokenizer(children) {
  while (next()) switch (token(character)) {
    case 0:
      append(identifier(position - 1), children);
      break;
    case 2:
      append(delimit(character), children);
      break;
    default:
      append(from(character), children);
  }
  return children;
}

/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */
function escaping(index, count) {
  while (--count && next())
  // not 0-9 A-F a-f
  if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}

/**
 * @param {number} type
 * @return {number}
 */
function delimiter(type) {
  while (next()) switch (character) {
    // ] ) " '
    case type:
      return position;
    // " '
    case 34:
    case 39:
      if (type !== 34 && type !== 39) delimiter(character);
      break;
    // (
    case 40:
      if (type === 41) delimiter(type);
      break;
    // \
    case 92:
      next();
      break;
  }
  return position;
}

/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */
function commenter(type, index) {
  while (next())
  // //
  if (type + character === 47 + 10) break;
  // /*
  else if (type + character === 42 + 42 && peek() === 47) break;
  return '/*' + slice(index, position - 1) + '*' + Utility_from(type === 47 ? type : next());
}

/**
 * @param {number} index
 * @return {string}
 */
function identifier(index) {
  while (!token(peek())) next();
  return slice(index, position);
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Enum.js
var Enum_MS = '-ms-';
var Enum_MOZ = '-moz-';
var Enum_WEBKIT = '-webkit-';
var COMMENT = 'comm';
var Enum_RULESET = 'rule';
var Enum_DECLARATION = 'decl';
var PAGE = '@page';
var MEDIA = '@media';
var IMPORT = '@import';
var CHARSET = '@charset';
var VIEWPORT = '@viewport';
var SUPPORTS = '@supports';
var DOCUMENT = '@document';
var NAMESPACE = '@namespace';
var Enum_KEYFRAMES = '@keyframes';
var FONT_FACE = '@font-face';
var COUNTER_STYLE = '@counter-style';
var FONT_FEATURE_VALUES = '@font-feature-values';
;// CONCATENATED MODULE: ./node_modules/stylis/src/Serializer.js



/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function Serializer_serialize(children, callback) {
  var output = '';
  var length = Utility_sizeof(children);
  for (var i = 0; i < length; i++) output += callback(children[i], i, children, callback) || '';
  return output;
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function stringify(element, index, children, callback) {
  switch (element.type) {
    case IMPORT:
    case Enum_DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return '';
    case Enum_KEYFRAMES:
      return element.return = element.value + '{' + Serializer_serialize(element.children, callback) + '}';
    case Enum_RULESET:
      element.value = element.props.join(',');
  }
  return Utility_strlen(children = Serializer_serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : '';
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Middleware.js






/**
 * @param {function[]} collection
 * @return {function}
 */
function middleware(collection) {
  var length = Utility_sizeof(collection);
  return function (element, index, children, callback) {
    var output = '';
    for (var i = 0; i < length; i++) output += collection[i](element, index, children, callback) || '';
    return output;
  };
}

/**
 * @param {function} callback
 * @return {function}
 */
function rulesheet(callback) {
  return function (element) {
    if (!element.root) if (element = element.return) callback(element);
  };
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */
function prefixer(element, index, children, callback) {
  if (element.length > -1) if (!element.return) switch (element.type) {
    case DECLARATION:
      element.return = prefix(element.value, element.length, children);
      return;
    case KEYFRAMES:
      return serialize([copy(element, {
        value: replace(element.value, '@', '@' + WEBKIT)
      })], callback);
    case RULESET:
      if (element.length) return combine(element.props, function (value) {
        switch (match(value, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ':read-only':
          case ':read-write':
            return serialize([copy(element, {
              props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]
            })], callback);
          // :placeholder
          case '::placeholder':
            return serialize([copy(element, {
              props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]
            }), copy(element, {
              props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]
            }), copy(element, {
              props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]
            })], callback);
        }
        return '';
      });
  }
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 */
function namespace(element) {
  switch (element.type) {
    case RULESET:
      element.props = element.props.map(function (value) {
        return combine(tokenize(value), function (value, index, children) {
          switch (charat(value, 0)) {
            // \f
            case 12:
              return substr(value, 1, strlen(value));
            // \0 ( + > ~
            case 0:
            case 40:
            case 43:
            case 62:
            case 126:
              return value;
            // :
            case 58:
              if (children[++index] === 'global') children[index] = '', children[++index] = '\f' + substr(children[index], index = 1, -1);
            // \s
            case 32:
              return index === 1 ? '' : value;
            default:
              switch (index) {
                case 0:
                  element = value;
                  return sizeof(children) > 1 ? '' : value;
                case index = sizeof(children) - 1:
                case 2:
                  return index === 2 ? value + element + element : value + element;
                default:
                  return value;
              }
          }
        });
      });
  }
}
;// CONCATENATED MODULE: ./node_modules/stylis/src/Parser.js




/**
 * @param {string} value
 * @return {object[]}
 */
function compile(value) {
  return dealloc(Parser_parse('', null, null, null, [''], value = alloc(value), 0, [0], value));
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */
function Parser_parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character = 0;
  var type = '';
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters = type;
  while (scanning) switch (previous = character, character = next()) {
    // (
    case 40:
      if (previous != 108 && Utility_charat(characters, length - 1) == 58) {
        if (indexof(characters += Utility_replace(delimit(character), '&', '&\f'), '&\f') != -1) ampersand = -1;
        break;
      }
    // " ' [
    case 34:
    case 39:
    case 91:
      characters += delimit(character);
      break;
    // \t \n \r \s
    case 9:
    case 10:
    case 13:
    case 32:
      characters += whitespace(previous);
      break;
    // \
    case 92:
      characters += escaping(caret() - 1, 7);
      continue;
    // /
    case 47:
      switch (peek()) {
        case 42:
        case 47:
          Utility_append(comment(commenter(next(), caret()), root, parent), declarations);
          break;
        default:
          characters += '/';
      }
      break;
    // {
    case 123 * variable:
      points[index++] = Utility_strlen(characters) * ampersand;
    // } ; \0
    case 125 * variable:
    case 59:
    case 0:
      switch (character) {
        // \0 }
        case 0:
        case 125:
          scanning = 0;
        // ;
        case 59 + offset:
          if (property > 0 && Utility_strlen(characters) - length) Utility_append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(Utility_replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations);
          break;
        // @ ;
        case 59:
          characters += ';';
        // { rule/at-rule
        default:
          Utility_append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets);
          if (character === 123) if (offset === 0) Parser_parse(characters, root, reference, reference, props, rulesets, length, points, children);else switch (atrule === 99 && Utility_charat(characters, 3) === 110 ? 100 : atrule) {
            // d m s
            case 100:
            case 109:
            case 115:
              Parser_parse(value, reference, reference, rule && Utility_append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children);
              break;
            default:
              Parser_parse(characters, reference, reference, reference, [''], children, 0, points, children);
          }
      }
      index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo;
      break;
    // :
    case 58:
      length = 1 + Utility_strlen(characters), property = previous;
    default:
      if (variable < 1) if (character == 123) --variable;else if (character == 125 && variable++ == 0 && prev() == 125) continue;
      switch (characters += Utility_from(character), character * variable) {
        // &
        case 38:
          ampersand = offset > 0 ? 1 : (characters += '\f', -1);
          break;
        // ,
        case 44:
          points[index++] = (Utility_strlen(characters) - 1) * ampersand, ampersand = 1;
          break;
        // @
        case 64:
          // -
          if (peek() === 45) characters += delimit(next());
          atrule = peek(), offset = length = Utility_strlen(type = characters += identifier(caret())), character++;
          break;
        // -
        case 45:
          if (previous === 45 && Utility_strlen(characters) == 2) variable = 0;
      }
  }
  return rulesets;
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @return {object}
 */
function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [''];
  var size = Utility_sizeof(rule);
  for (var i = 0, j = 0, k = 0; i < index; ++i) for (var x = 0, y = Utility_substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x) if (z = trim(j > 0 ? rule[x] + ' ' + y : Utility_replace(y, /&\f/g, rule[x]))) props[k++] = z;
  return node(value, root, parent, offset === 0 ? Enum_RULESET : type, props, children, length);
}

/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @return {object}
 */
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, Utility_from(Tokenizer_char()), Utility_substr(value, 2, -2), 0);
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @return {object}
 */
function declaration(value, root, parent, length) {
  return node(value, root, parent, Enum_DECLARATION, Utility_substr(value, 0, length), Utility_substr(value, length + 1, -1), length);
}
;// CONCATENATED MODULE: ./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js




var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
  var previous = 0;
  var character = 0;
  while (true) {
    previous = character;
    character = peek(); // &\f

    if (previous === 38 && character === 12) {
      points[index] = 1;
    }
    if (token(character)) {
      break;
    }
    next();
  }
  return slice(begin, position);
};
var toRules = function toRules(parsed, points) {
  // pretend we've started with a comma
  var index = -1;
  var character = 44;
  do {
    switch (token(character)) {
      case 0:
        // &\f
        if (character === 38 && peek() === 12) {
          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
          // and when it should just concatenate the outer and inner selectors
          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
          points[index] = 1;
        }
        parsed[index] += identifierWithPointTracking(position - 1, points, index);
        break;
      case 2:
        parsed[index] += delimit(character);
        break;
      case 4:
        // comma
        if (character === 44) {
          // colon
          parsed[++index] = peek() === 58 ? '&\f' : '';
          points[index] = parsed[index].length;
          break;
        }

      // fallthrough

      default:
        parsed[index] += Utility_from(character);
    }
  } while (character = next());
  return parsed;
};
var getRules = function getRules(value, points) {
  return dealloc(toRules(alloc(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11

var fixedElements = /* #__PURE__ */new WeakMap();
var compat = function compat(element) {
  if (element.type !== 'rule' || !element.parent ||
  // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  element.length < 1) {
    return;
  }
  var value = element.value,
    parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== 'rule') {
    parent = parent.parent;
    if (!parent) return;
  } // short-circuit for the simplest case

  if (element.props.length === 1 && value.charCodeAt(0) !== 58
  /* colon */ && !fixedElements.get(parent)) {
    return;
  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel(element) {
  if (element.type === 'decl') {
    var value = element.value;
    if (
    // charcode for l
    value.charCodeAt(0) === 108 &&
    // charcode for b
    value.charCodeAt(2) === 98) {
      // this ignores label
      element["return"] = '';
      element.value = '';
    }
  }
};
var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';
var isIgnoringComment = function isIgnoringComment(element) {
  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
};
var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
  return function (element, index, children) {
    if (element.type !== 'rule' || cache.compat) return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);
    if (unsafePseudoClasses) {
      var isNested = element.parent === children[0]; // in nested rules comments become children of the "auto-inserted" rule
      //
      // considering this input:
      // .a {
      //   .b /* comm */ {}
      //   color: hotpink;
      // }
      // we get output corresponding to this:
      // .a {
      //   & {
      //     /* comm */
      //     color: hotpink;
      //   }
      //   .b {}
      // }

      var commentContainer = isNested ? children[0].children :
      // global rule at the root level
      children;
      for (var i = commentContainer.length - 1; i >= 0; i--) {
        var node = commentContainer[i];
        if (node.line < element.line) {
          break;
        } // it is quite weird but comments are *usually* put at `column: element.column - 1`
        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that
        // this will also match inputs like this:
        // .a {
        //   /* comm */
        //   .b {}
        // }
        //
        // but that is fine
        //
        // it would be the easiest to change the placement of the comment to be the first child of the rule:
        // .a {
        //   .b { /* comm */ }
        // }
        // with such inputs we wouldn't have to search for the comment at all
        // TODO: consider changing this comment placement in the next major version

        if (node.column < element.column) {
          if (isIgnoringComment(node)) {
            return;
          }
          break;
        }
      }
      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
      });
    }
  };
};
var isImportRule = function isImportRule(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};
var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
  for (var i = index - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }
  return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user

var nullifyElement = function nullifyElement(element) {
  element.type = '';
  element.value = '';
  element["return"] = '';
  element.children = '';
  element.props = '';
};
var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
  if (!isImportRule(element)) {
    return;
  }
  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};

/* eslint-disable no-fallthrough */

function emotion_cache_browser_esm_prefix(value, length) {
  switch (hash(value, length)) {
    // color-adjust
    case 5103:
      return Enum_WEBKIT + 'print-' + value + value;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Enum_WEBKIT + value + value;
    // appearance, user-select, transform, hyphens, text-size-adjust

    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Enum_WEBKIT + value + Enum_MOZ + value + Enum_MS + value + value;
    // flex, flex-direction

    case 6828:
    case 4268:
      return Enum_WEBKIT + value + Enum_MS + value + value;
    // order

    case 6165:
      return Enum_WEBKIT + value + Enum_MS + 'flex-' + value + value;
    // align-items

    case 5187:
      return Enum_WEBKIT + value + Utility_replace(value, /(\w+).+(:[^]+)/, Enum_WEBKIT + 'box-$1$2' + Enum_MS + 'flex-$1$2') + value;
    // align-self

    case 5443:
      return Enum_WEBKIT + value + Enum_MS + 'flex-item-' + Utility_replace(value, /flex-|-self/, '') + value;
    // align-content

    case 4675:
      return Enum_WEBKIT + value + Enum_MS + 'flex-line-pack' + Utility_replace(value, /align-content|flex-|-self/, '') + value;
    // flex-shrink

    case 5548:
      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'shrink', 'negative') + value;
    // flex-basis

    case 5292:
      return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'basis', 'preferred-size') + value;
    // flex-grow

    case 6060:
      return Enum_WEBKIT + 'box-' + Utility_replace(value, '-grow', '') + Enum_WEBKIT + value + Enum_MS + Utility_replace(value, 'grow', 'positive') + value;
    // transition

    case 4554:
      return Enum_WEBKIT + Utility_replace(value, /([^-])(transform)/g, '$1' + Enum_WEBKIT + '$2') + value;
    // cursor

    case 6187:
      return Utility_replace(Utility_replace(Utility_replace(value, /(zoom-|grab)/, Enum_WEBKIT + '$1'), /(image-set)/, Enum_WEBKIT + '$1'), value, '') + value;
    // background, background-image

    case 5495:
    case 3959:
      return Utility_replace(value, /(image-set\([^]*)/, Enum_WEBKIT + '$1' + '$`$1');
    // justify-content

    case 4968:
      return Utility_replace(Utility_replace(value, /(.+:)(flex-)?(.*)/, Enum_WEBKIT + 'box-pack:$3' + Enum_MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + Enum_WEBKIT + value + value;
    // (margin|padding)-inline-(start|end)

    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Utility_replace(value, /(.+)-inline(.+)/, Enum_WEBKIT + '$1$2') + value;
    // (min|max)?(width|height|inline-size|block-size)

    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      // stretch, max-content, min-content, fill-available
      if (Utility_strlen(value) - 1 - length > 6) switch (Utility_charat(value, length + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          // -
          if (Utility_charat(value, length + 4) !== 45) break;
        // (f)ill-available, (f)it-content

        case 102:
          return Utility_replace(value, /(.+:)(.+)-([^]+)/, '$1' + Enum_WEBKIT + '$2-$3' + '$1' + Enum_MOZ + (Utility_charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
        // (s)tretch

        case 115:
          return ~indexof(value, 'stretch') ? emotion_cache_browser_esm_prefix(Utility_replace(value, 'stretch', 'fill-available'), length) + value : value;
      }
      break;
    // position: sticky

    case 4949:
      // (s)ticky?
      if (Utility_charat(value, length + 1) !== 115) break;
    // display: (flex|inline-flex)

    case 6444:
      switch (Utility_charat(value, Utility_strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
        // stic(k)y
        case 107:
          return Utility_replace(value, ':', ':' + Enum_WEBKIT) + value;
        // (inline-)?fl(e)x

        case 101:
          return Utility_replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + Enum_WEBKIT + (Utility_charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + Enum_WEBKIT + '$2$3' + '$1' + Enum_MS + '$2box$3') + value;
      }
      break;
    // writing-mode

    case 5936:
      switch (Utility_charat(value, length + 11)) {
        // vertical-l(r)
        case 114:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
        // vertical-r(l)

        case 108:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
        // horizontal(-)tb

        case 45:
          return Enum_WEBKIT + value + Enum_MS + Utility_replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
      }
      return Enum_WEBKIT + value + Enum_MS + value + value;
  }
  return value;
}
var emotion_cache_browser_esm_prefixer = function prefixer(element, index, children, callback) {
  if (element.length > -1) if (!element["return"]) switch (element.type) {
    case Enum_DECLARATION:
      element["return"] = emotion_cache_browser_esm_prefix(element.value, element.length);
      break;
    case Enum_KEYFRAMES:
      return Serializer_serialize([Tokenizer_copy(element, {
        value: Utility_replace(element.value, '@', '@' + Enum_WEBKIT)
      })], callback);
    case Enum_RULESET:
      if (element.length) return Utility_combine(element.props, function (value) {
        switch (Utility_match(value, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ':read-only':
          case ':read-write':
            return Serializer_serialize([Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(read-\w+)/, ':' + Enum_MOZ + '$1')]
            })], callback);
          // :placeholder

          case '::placeholder':
            return Serializer_serialize([Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, ':' + Enum_WEBKIT + 'input-$1')]
            }), Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, ':' + Enum_MOZ + '$1')]
            }), Tokenizer_copy(element, {
              props: [Utility_replace(value, /:(plac\w+)/, Enum_MS + 'input-$1')]
            })], callback);
        }
        return '';
      });
  }
};
var defaultStylisPlugins = [emotion_cache_browser_esm_prefixer];
var createCache = function createCache(options) {
  var key = options.key;
  if (false) {}
  if (key === 'css') {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
    // note this very very intentionally targets all style elements regardless of the key to ensure
    // that creating a cache works inside of render of a React component

    Array.prototype.forEach.call(ssrStyles, function (node) {
      // we want to only move elements which have a space in the data-emotion attribute value
      // because that indicates that it is an Emotion 11 server-side rendered style elements
      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
      // will not result in the Emotion 10 styles being destroyed
      var dataEmotionAttribute = node.getAttribute('data-emotion');
      if (dataEmotionAttribute.indexOf(' ') === -1) {
        return;
      }
      document.head.appendChild(node);
      node.setAttribute('data-s', '');
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  if (false) {}
  var inserted = {};
  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }
      nodesToHydrate.push(node);
    });
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  if (false) {}
  {
    var currentSheet;
    var finalizingPlugins = [stringify,  false ? 0 : rulesheet(function (rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis(styles) {
      return Serializer_serialize(compile(styles), serializer);
    };
    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      if (false) {}
      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
/* harmony default export */ var emotion_cache_browser_esm = (createCache);
;// CONCATENATED MODULE: ./node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js
var weakMemoize = function weakMemoize(func) {
  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps
  var cache = new WeakMap();
  return function (arg) {
    if (cache.has(arg)) {
      // $FlowFixMe
      return cache.get(arg);
    }
    var ret = func(arg);
    cache.set(arg, ret);
    return ret;
  };
};
/* harmony default export */ var emotion_weak_memoize_esm = (weakMemoize);
;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js








var emotion_element_6a883da9_browser_esm_hasOwnProperty = {}.hasOwnProperty;
var EmotionCacheContext = /* #__PURE__ */(0,react_production_min.createContext)(
// we're doing this to avoid preconstruct's dead code elimination in this one case
// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? /* #__PURE__ */emotion_cache_browser_esm({
  key: 'css'
}) : null);
if (false) {}
var CacheProvider = EmotionCacheContext.Provider;
var __unsafe_useEmotionCache = function useEmotionCache() {
  return useContext(EmotionCacheContext);
};
var emotion_element_6a883da9_browser_esm_withEmotionCache = function withEmotionCache(func) {
  // $FlowFixMe
  return /*#__PURE__*/(0,react_production_min.forwardRef)(function (props, ref) {
    // the cache will never be null in the browser
    var cache = (0,react_production_min.useContext)(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var emotion_element_6a883da9_browser_esm_ThemeContext = /* #__PURE__ */(0,react_production_min.createContext)({});
if (false) {}
var emotion_element_6a883da9_browser_esm_useTheme = function useTheme() {
  return useContext(emotion_element_6a883da9_browser_esm_ThemeContext);
};
var getTheme = function getTheme(outerTheme, theme) {
  if (typeof theme === 'function') {
    var mergedTheme = theme(outerTheme);
    if (false) {}
    return mergedTheme;
  }
  if (false) {}
  return (0,esm_extends/* default */.Z)({}, outerTheme, theme);
};
var createCacheWithTheme = /* #__PURE__ */emotion_weak_memoize_esm(function (outerTheme) {
  return emotion_weak_memoize_esm(function (theme) {
    return getTheme(outerTheme, theme);
  });
});
var ThemeProvider = function ThemeProvider(props) {
  var theme = (0,react_production_min.useContext)(emotion_element_6a883da9_browser_esm_ThemeContext);
  if (props.theme !== theme) {
    theme = createCacheWithTheme(theme)(props.theme);
  }
  return /*#__PURE__*/(0,react_production_min.createElement)(emotion_element_6a883da9_browser_esm_ThemeContext.Provider, {
    value: theme
  }, props.children);
};
function withTheme(Component) {
  var componentName = Component.displayName || Component.name || 'Component';
  var render = function render(props, ref) {
    var theme = useContext(emotion_element_6a883da9_browser_esm_ThemeContext);
    return /*#__PURE__*/createElement(Component, _extends({
      theme: theme,
      ref: ref
    }, props));
  }; // $FlowFixMe

  var WithTheme = /*#__PURE__*/forwardRef(render);
  WithTheme.displayName = "WithTheme(" + componentName + ")";
  return hoistNonReactStatics(WithTheme, Component);
}
var getLastPart = function getLastPart(functionName) {
  // The match may be something like 'Object.createEmotionProps' or
  // 'Loader.prototype.render'
  var parts = functionName.split('.');
  return parts[parts.length - 1];
};
var getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {
  // V8
  var match = /^\s+at\s+([A-Za-z0-9$.]+)\s/.exec(line);
  if (match) return getLastPart(match[1]); // Safari / Firefox

  match = /^([A-Za-z0-9$.]+)@/.exec(line);
  if (match) return getLastPart(match[1]);
  return undefined;
};
var internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS
// identifiers, thus we only need to replace what is a valid character for JS,
// but not for CSS.

var sanitizeIdentifier = function sanitizeIdentifier(identifier) {
  return identifier.replace(/\$/g, '-');
};
var getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {
  if (!stackTrace) return undefined;
  var lines = stackTrace.split('\n');
  for (var i = 0; i < lines.length; i++) {
    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just "Error"

    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit

    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an
    // uppercase letter

    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);
  }
  return undefined;
};
var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';
var emotion_element_6a883da9_browser_esm_createEmotionProps = function createEmotionProps(type, props) {
  if (false) {}
  var newProps = {};
  for (var key in props) {
    if (emotion_element_6a883da9_browser_esm_hasOwnProperty.call(props, key)) {
      newProps[key] = props[key];
    }
  }
  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when
  // the label hasn't already been computed

  if (false) { var label; }
  return newProps;
};
var Insertion = function Insertion(_ref) {
  var cache = _ref.cache,
    serialized = _ref.serialized,
    isStringTag = _ref.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var emotion_element_6a883da9_browser_esm_Emotion = /* #__PURE__ */(/* unused pure expression or super */ null && (emotion_element_6a883da9_browser_esm_withEmotionCache(function (props, cache, ref) {
  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
  // not passing the registered cache to serializeStyles because it would
  // make certain babel optimisations not possible

  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
    cssProp = cache.registered[cssProp];
  }
  var WrappedComponent = props[typePropName];
  var registeredStyles = [cssProp];
  var className = '';
  if (typeof props.className === 'string') {
    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);
  } else if (props.className != null) {
    className = props.className + " ";
  }
  var serialized = serializeStyles(registeredStyles, undefined, useContext(emotion_element_6a883da9_browser_esm_ThemeContext));
  if (false) { var labelFromStack; }
  className += cache.key + "-" + serialized.name;
  var newProps = {};
  for (var key in props) {
    if (emotion_element_6a883da9_browser_esm_hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ( true || 0)) {
      newProps[key] = props[key];
    }
  }
  newProps.ref = ref;
  newProps.className = className;
  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {
    cache: cache,
    serialized: serialized,
    isStringTag: typeof WrappedComponent === 'string'
  }), /*#__PURE__*/createElement(WrappedComponent, newProps));
})));
if (false) {}

;// CONCATENATED MODULE: ./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var isBrowser = "object" !== 'undefined';
function emotion_utils_browser_esm_getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = '';
  classNames.split(' ').forEach(function (className) {
    if (registered[className] !== undefined) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var emotion_utils_browser_esm_registerStyles = function registerStyles(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if (
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (isStringTag === false ||
  // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  isBrowser === false) && cache.registered[className] === undefined) {
    cache.registered[className] = serialized.styles;
  }
};
var emotion_utils_browser_esm_insertStyles = function insertStyles(cache, serialized, isStringTag) {
  emotion_utils_browser_esm_registerStyles(cache, serialized, isStringTag);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === undefined) {
    var current = serialized;
    do {
      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
      current = current.next;
    } while (current !== undefined);
  }
};

;// CONCATENATED MODULE: ./node_modules/@emotion/hash/dist/emotion-hash.esm.js
/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
  // 'm' and 'r' are mixing constants generated offline.
  // They're not really 'magic', they just happen to work well.
  // const m = 0x5bd1e995;
  // const r = 24;
  // Initialize the hash
  var h = 0; // Mix 4 bytes at a time into the hash

  var k,
    i = 0,
    len = str.length;
  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k = /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
    k ^= /* k >>> r: */
    k >>> 24;
    h = /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */
    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Handle the last few bytes of the input array

  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h = /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Do a few final mixes of the hash to ensure the last few
  // bytes are well-incorporated.

  h ^= h >>> 13;
  h = /* Math.imul(h, m): */
  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}
/* harmony default export */ var emotion_hash_esm = (murmur2);
;// CONCATENATED MODULE: ./node_modules/@emotion/serialize/node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var emotion_unitless_esm_unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
/* harmony default export */ var emotion_unitless_esm = (emotion_unitless_esm_unitlessKeys);
;// CONCATENATED MODULE: ./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js



var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};
var processStyleName = /* #__PURE__ */emotion_memoize_esm(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});
var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }
  if (emotion_unitless_esm[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }
  return value;
};
if (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }
var noComponentSelectorMessage = (/* unused pure expression or super */ null && ('Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.'));
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return '';
  }
  if (interpolation.__emotion_styles !== undefined) {
    if (false) {}
    return interpolation;
  }
  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }
    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }
        if (interpolation.styles !== undefined) {
          var next = interpolation.next;
          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }
          var styles = interpolation.styles + ";";
          if (false) {}
          return styles;
        }
        return createStringFromObject(mergedProps, registered, interpolation);
      }
    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result);
        } else if (false) {}
        break;
      }
    case 'string':
      if (false) { var replaced, matched; }
      break;
  } // finalize string values (regular strings and functions interpolated into css calls)

  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== undefined ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = '';
  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && "production" !== 'production') {}
        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }
            default:
              {
                if (false) {}
                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;
if (false) {} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list

var cursor;
var emotion_serialize_browser_esm_serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }
  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];
  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (false) {}
    styles += strings[0];
  } // we start at 1 since we've already handled the first arg

  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i]);
    if (stringMode) {
      if (false) {}
      styles += strings[i];
    }
  }
  var sourceMap;
  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time

  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' +
    // $FlowFixMe we know it's not null
    match[1];
  }
  var name = emotion_hash_esm(styles) + identifierName;
  if (false) {}
  return {
    name: name,
    styles: styles,
    next: cursor
  };
};

;// CONCATENATED MODULE: ./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js


var syncFallback = function syncFallback(create) {
  return create();
};
var useInsertionEffect = react_namespaceObject['useInsertion' + 'Effect'] ? react_namespaceObject['useInsertion' + 'Effect'] : false;
var emotion_use_insertion_effect_with_fallbacks_browser_esm_useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;
var useInsertionEffectWithLayoutFallback = useInsertionEffect || react_production_min.useLayoutEffect;

;// CONCATENATED MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js











var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        "default": "./dist/emotion-react.esm.js"
      },
      "default": "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      "default": "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      "default": "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      "default": "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: ["src", "dist", "jsx-runtime", "jsx-dev-runtime", "_isolated-hnrs", "types/*.d.ts", "macro.js", "macro.d.ts", "macro.js.flow"],
  sideEffects: false,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: true
    },
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: ["./index.js", "./jsx-runtime.js", "./jsx-dev-runtime.js", "./_isolated-hnrs.js"],
    umdName: "emotionReact",
    exports: {
      envConditions: ["browser", "worker"],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
};
var jsx = function jsx(type, props) {
  var args = arguments;
  if (props == null || !hasOwnProperty.call(props, 'css')) {
    // $FlowFixMe
    return createElement.apply(undefined, args);
  }
  var argsLength = args.length;
  var createElementArgArray = new Array(argsLength);
  createElementArgArray[0] = Emotion;
  createElementArgArray[1] = createEmotionProps(type, props);
  for (var i = 2; i < argsLength; i++) {
    createElementArgArray[i] = args[i];
  } // $FlowFixMe

  return createElement.apply(null, createElementArgArray);
};
var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag

var Global = /* #__PURE__ */emotion_element_6a883da9_browser_esm_withEmotionCache(function (props, cache) {
  if (false) {}
  var styles = props.styles;
  var serialized = emotion_serialize_browser_esm_serializeStyles([styles], undefined, (0,react_production_min.useContext)(emotion_element_6a883da9_browser_esm_ThemeContext));
  // but it is based on a constant that will never change at runtime
  // it's effectively like having two implementations and switching them out
  // so it's not actually breaking anything

  var sheetRef = (0,react_production_min.useRef)();
  useInsertionEffectWithLayoutFallback(function () {
    var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675

    var sheet = new cache.sheet.constructor({
      key: key,
      nonce: cache.sheet.nonce,
      container: cache.sheet.container,
      speedy: cache.sheet.isSpeedy
    });
    var rehydrating = false; // $FlowFixMe

    var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
    if (cache.sheet.tags.length) {
      sheet.before = cache.sheet.tags[0];
    }
    if (node !== null) {
      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

      node.setAttribute('data-emotion', key);
      sheet.hydrate([node]);
    }
    sheetRef.current = [sheet, rehydrating];
    return function () {
      sheet.flush();
    };
  }, [cache]);
  useInsertionEffectWithLayoutFallback(function () {
    var sheetRefCurrent = sheetRef.current;
    var sheet = sheetRefCurrent[0],
      rehydrating = sheetRefCurrent[1];
    if (rehydrating) {
      sheetRefCurrent[1] = false;
      return;
    }
    if (serialized.next !== undefined) {
      // insert keyframes
      emotion_utils_browser_esm_insertStyles(cache, serialized.next, true);
    }
    if (sheet.tags.length) {
      // if this doesn't exist then it will be null so the style element will be appended
      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
      sheet.before = element;
      sheet.flush();
    }
    cache.insert("", serialized, sheet, false);
  }, [cache, serialized.name]);
  return null;
});
if (false) {}
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return emotion_serialize_browser_esm_serializeStyles(args);
}
var keyframes = function keyframes() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name; // $FlowFixMe

  return {
    name: name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var classnames = function classnames(args) {
  var len = args.length;
  var i = 0;
  var cls = '';
  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;
    switch (typeof arg) {
      case 'boolean':
        break;
      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            if (false) {}
            toAdd = '';
            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }
          break;
        }
      default:
        {
          toAdd = arg;
        }
    }
    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }
  return cls;
};
function merge(registered, css, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);
  if (registeredStyles.length < 2) {
    return className;
  }
  return rawClassName + css(registeredStyles);
}
var emotion_react_browser_esm_Insertion = function Insertion(_ref) {
  var cache = _ref.cache,
    serializedArr = _ref.serializedArr;
  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {
    for (var i = 0; i < serializedArr.length; i++) {
      var res = insertStyles(cache, serializedArr[i], false);
    }
  });
  return null;
};
var ClassNames = /* #__PURE__ */(/* unused pure expression or super */ null && (withEmotionCache(function (props, cache) {
  var hasRendered = false;
  var serializedArr = [];
  var css = function css() {
    if (hasRendered && "production" !== 'production') {}
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var serialized = serializeStyles(args, cache.registered);
    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`

    registerStyles(cache, serialized, false);
    return cache.key + "-" + serialized.name;
  };
  var cx = function cx() {
    if (hasRendered && "production" !== 'production') {}
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return merge(cache.registered, css, classnames(args));
  };
  var content = {
    css: css,
    cx: cx,
    theme: useContext(ThemeContext)
  };
  var ele = props.children(content);
  hasRendered = true;
  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(emotion_react_browser_esm_Insertion, {
    cache: cache,
    serializedArr: serializedArr
  }), ele);
})));
if (false) {}
if (false) { var globalKey, globalContext, isTestEnv, emotion_react_browser_esm_isBrowser; }

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/default-colors.js
const DEFAULT_COLORS = {
  dark: ["#C1C2C5", "#A6A7AB", "#909296", "#5c5f66", "#373A40", "#2C2E33", "#25262b", "#1A1B1E", "#141517", "#101113"],
  gray: ["#f8f9fa", "#f1f3f5", "#e9ecef", "#dee2e6", "#ced4da", "#adb5bd", "#868e96", "#495057", "#343a40", "#212529"],
  red: ["#fff5f5", "#ffe3e3", "#ffc9c9", "#ffa8a8", "#ff8787", "#ff6b6b", "#fa5252", "#f03e3e", "#e03131", "#c92a2a"],
  pink: ["#fff0f6", "#ffdeeb", "#fcc2d7", "#faa2c1", "#f783ac", "#f06595", "#e64980", "#d6336c", "#c2255c", "#a61e4d"],
  grape: ["#f8f0fc", "#f3d9fa", "#eebefa", "#e599f7", "#da77f2", "#cc5de8", "#be4bdb", "#ae3ec9", "#9c36b5", "#862e9c"],
  violet: ["#f3f0ff", "#e5dbff", "#d0bfff", "#b197fc", "#9775fa", "#845ef7", "#7950f2", "#7048e8", "#6741d9", "#5f3dc4"],
  indigo: ["#edf2ff", "#dbe4ff", "#bac8ff", "#91a7ff", "#748ffc", "#5c7cfa", "#4c6ef5", "#4263eb", "#3b5bdb", "#364fc7"],
  blue: ["#e7f5ff", "#d0ebff", "#a5d8ff", "#74c0fc", "#4dabf7", "#339af0", "#228be6", "#1c7ed6", "#1971c2", "#1864ab"],
  cyan: ["#e3fafc", "#c5f6fa", "#99e9f2", "#66d9e8", "#3bc9db", "#22b8cf", "#15aabf", "#1098ad", "#0c8599", "#0b7285"],
  teal: ["#e6fcf5", "#c3fae8", "#96f2d7", "#63e6be", "#38d9a9", "#20c997", "#12b886", "#0ca678", "#099268", "#087f5b"],
  green: ["#ebfbee", "#d3f9d8", "#b2f2bb", "#8ce99a", "#69db7c", "#51cf66", "#40c057", "#37b24d", "#2f9e44", "#2b8a3e"],
  lime: ["#f4fce3", "#e9fac8", "#d8f5a2", "#c0eb75", "#a9e34b", "#94d82d", "#82c91e", "#74b816", "#66a80f", "#5c940d"],
  yellow: ["#fff9db", "#fff3bf", "#ffec99", "#ffe066", "#ffd43b", "#fcc419", "#fab005", "#f59f00", "#f08c00", "#e67700"],
  orange: ["#fff4e6", "#ffe8cc", "#ffd8a8", "#ffc078", "#ffa94d", "#ff922b", "#fd7e14", "#f76707", "#e8590c", "#d9480f"]
};

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/font-styles/font-styles.js
function fontStyles(theme) {
  return () => ({
    fontFamily: theme.fontFamily || "sans-serif"
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/focus-styles/focus-styles.js
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {
    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
  }
  return a;
};
function focusStyles(theme) {
  return selector => ({
    WebkitTapHighlightColor: "transparent",
    [selector || "&:focus"]: __spreadValues({}, theme.focusRing === "always" || theme.focusRing === "auto" ? theme.focusRingStyles.styles(theme) : theme.focusRingStyles.resetStyles(theme)),
    [selector ? selector.replace(":focus", ":focus:not(:focus-visible)") : "&:focus:not(:focus-visible)"]: __spreadValues({}, theme.focusRing === "auto" || theme.focusRing === "never" ? theme.focusRingStyles.resetStyles(theme) : null)
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/primary-shade/primary-shade.js
function primaryShade(theme) {
  return colorScheme => {
    if (typeof theme.primaryShade === "number") {
      return theme.primaryShade;
    }
    return theme.primaryShade[colorScheme || theme.colorScheme];
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/theme-color/theme-color.js

function themeColor(theme) {
  const getPrimaryShade = primaryShade(theme);
  return (color, shade, primaryFallback = true, useSplittedShade = true) => {
    if (typeof color === "string" && color.includes(".")) {
      const [splitterColor, _splittedShade] = color.split(".");
      const splittedShade = parseInt(_splittedShade, 10);
      if (splitterColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {
        return theme.colors[splitterColor][typeof shade === "number" && !useSplittedShade ? shade : splittedShade];
      }
    }
    const _shade = typeof shade === "number" ? shade : getPrimaryShade();
    return color in theme.colors ? theme.colors[color][_shade] : primaryFallback ? theme.colors[theme.primaryColor][_shade] : color;
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/gradient/get-gradient-color-stops/get-gradient-color-stops.js
function getGradientColorStops(colors) {
  let stops = "";
  for (let i = 1; i < colors.length - 1; i += 1) {
    stops += `${colors[i]} ${i / (colors.length - 1) * 100}%, `;
  }
  return `${colors[0]} 0%, ${stops}${colors[colors.length - 1]} 100%`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/gradient/gradient.js



function linearGradient(deg, ...colors) {
  return `linear-gradient(${deg}deg, ${getGradientColorStops(colors)})`;
}
function radialGradient(...colors) {
  return `radial-gradient(circle, ${getGradientColorStops(colors)})`;
}
function gradient(theme) {
  const getThemeColor = themeColor(theme);
  const getPrimaryShade = primaryShade(theme);
  return payload => {
    const merged = {
      from: (payload == null ? void 0 : payload.from) || theme.defaultGradient.from,
      to: (payload == null ? void 0 : payload.to) || theme.defaultGradient.to,
      deg: (payload == null ? void 0 : payload.deg) || theme.defaultGradient.deg
    };
    return `linear-gradient(${merged.deg}deg, ${getThemeColor(merged.from, getPrimaryShade(), false)} 0%, ${getThemeColor(merged.to, getPrimaryShade(), false)} 100%)`;
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/size/size.js
function size(props) {
  if (typeof props.size === "number") {
    return props.size;
  }
  const computedSize = props.sizes[props.size];
  return computedSize !== void 0 ? computedSize : props.size || props.sizes.md;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/breakpoints/breakpoints.js

function largerThan(theme) {
  return breakpoint => `@media (min-width: ${size({
    size: breakpoint,
    sizes: theme.breakpoints
  })}px)`;
}
function smallerThan(theme) {
  return breakpoint => `@media (max-width: ${size({
    size: breakpoint,
    sizes: theme.breakpoints
  }) - 1}px)`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/utils/to-rgba/to-rgba.js
function isHexColor(hex) {
  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}$/i;
  return HEX_REGEXP.test(hex);
}
function hexToRgba(color) {
  let hexString = color.replace("#", "");
  if (hexString.length === 3) {
    const shorthandHex = hexString.split("");
    hexString = [shorthandHex[0], shorthandHex[0], shorthandHex[1], shorthandHex[1], shorthandHex[2], shorthandHex[2]].join("");
  }
  const parsed = parseInt(hexString, 16);
  const r = parsed >> 16 & 255;
  const g = parsed >> 8 & 255;
  const b = parsed & 255;
  return {
    r,
    g,
    b,
    a: 1
  };
}
function rgbStringToRgba(color) {
  const [r, g, b, a] = color.replace(/[^0-9,.]/g, "").split(",").map(Number);
  return {
    r,
    g,
    b,
    a: a || 1
  };
}
function toRgba(color) {
  if (isHexColor(color)) {
    return hexToRgba(color);
  }
  if (color.startsWith("rgb")) {
    return rgbStringToRgba(color);
  }
  return {
    r: 0,
    g: 0,
    b: 0,
    a: 1
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/rgba/rgba.js

function rgba(color, alpha) {
  if (typeof color !== "string" || alpha > 1 || alpha < 0) {
    return "rgba(0, 0, 0, 1)";
  }
  const {
    r,
    g,
    b
  } = toRgba(color);
  return `rgba(${r}, ${g}, ${b}, ${alpha})`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/cover/cover.js
function cover(offset = 0) {
  return {
    position: "absolute",
    top: offset,
    right: offset,
    left: offset,
    bottom: offset
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/darken/darken.js

function darken(color, alpha) {
  const {
    r,
    g,
    b,
    a
  } = toRgba(color);
  const f = 1 - alpha;
  const dark = input => Math.round(input * f);
  return `rgba(${dark(r)}, ${dark(g)}, ${dark(b)}, ${a})`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/lighten/lighten.js

function lighten(color, alpha) {
  const {
    r,
    g,
    b,
    a
  } = toRgba(color);
  const light = input => Math.round(input + (255 - input) * alpha);
  return `rgba(${light(r)}, ${light(g)}, ${light(b)}, ${a})`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/radius/radius.js
function radius(theme) {
  return size => {
    if (typeof size === "number") {
      return size;
    }
    const defaultRadius = typeof theme.defaultRadius === "number" ? theme.defaultRadius : theme.radius[theme.defaultRadius] || theme.defaultRadius;
    return theme.radius[size] || size || defaultRadius;
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/variant/variant.js




function getColorIndexInfo(color, theme) {
  if (typeof color === "string" && color.includes(".")) {
    const [splittedColor, _splittedShade] = color.split(".");
    const splittedShade = parseInt(_splittedShade, 10);
    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {
      return {
        isSplittedColor: true,
        key: splittedColor,
        shade: splittedShade
      };
    }
  }
  return {
    isSplittedColor: false
  };
}
function variant(theme) {
  const getThemeColor = themeColor(theme);
  const getPrimaryShade = primaryShade(theme);
  const getGradient = gradient(theme);
  return ({
    variant: variant2,
    color,
    gradient: gradient2,
    primaryFallback
  }) => {
    const colorInfo = getColorIndexInfo(color, theme);
    switch (variant2) {
      case "light":
        {
          return {
            border: "transparent",
            background: rgba(getThemeColor(color, theme.colorScheme === "dark" ? 8 : 0, primaryFallback, false), theme.colorScheme === "dark" ? 0.2 : 1),
            color: color === "dark" ? theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === "dark" ? 2 : getPrimaryShade("light")),
            hover: rgba(getThemeColor(color, theme.colorScheme === "dark" ? 7 : 1, primaryFallback, false), theme.colorScheme === "dark" ? 0.25 : 0.65)
          };
        }
      case "subtle":
        {
          return {
            border: "transparent",
            background: "transparent",
            color: color === "dark" ? theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === "dark" ? 2 : getPrimaryShade("light")),
            hover: rgba(getThemeColor(color, theme.colorScheme === "dark" ? 8 : 0, primaryFallback, false), theme.colorScheme === "dark" ? 0.2 : 1)
          };
        }
      case "outline":
        {
          return {
            border: getThemeColor(color, theme.colorScheme === "dark" ? 5 : getPrimaryShade("light")),
            background: "transparent",
            color: getThemeColor(color, theme.colorScheme === "dark" ? 5 : getPrimaryShade("light")),
            hover: theme.colorScheme === "dark" ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05) : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35)
          };
        }
      case "default":
        {
          return {
            border: theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[4],
            background: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.white,
            color: theme.colorScheme === "dark" ? theme.white : theme.black,
            hover: theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[0]
          };
        }
      case "white":
        {
          return {
            border: "transparent",
            background: theme.white,
            color: getThemeColor(color, getPrimaryShade()),
            hover: null
          };
        }
      case "transparent":
        {
          return {
            border: "transparent",
            color: color === "dark" ? theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === "dark" ? 2 : getPrimaryShade("light")),
            background: "transparent",
            hover: null
          };
        }
      case "gradient":
        {
          return {
            background: getGradient(gradient2),
            color: theme.white,
            border: "transparent",
            hover: null
          };
        }
      default:
        {
          const _primaryShade = getPrimaryShade();
          const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;
          const _color = colorInfo.isSplittedColor ? colorInfo.key : color;
          return {
            border: "transparent",
            background: getThemeColor(_color, _shade, primaryFallback),
            color: theme.white,
            hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1)
          };
        }
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/primary-color/primary-color.js

function primaryColor(theme) {
  return colorScheme => {
    const shade = primaryShade(theme)(colorScheme);
    return theme.colors[theme.primaryColor][shade];
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/hover/hover.js
function hover(hoverStyle) {
  return {
    "@media (hover: hover)": {
      "&:hover": hoverStyle
    },
    "@media (hover: none)": {
      "&:active": hoverStyle
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/placeholder-styles/placeholder-styles.js
function placeholderStyles(theme) {
  return () => ({
    userSelect: "none",
    color: theme.colorScheme === "dark" ? theme.colors.dark[3] : theme.colors.gray[5]
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/fns/index.js
















const fns = {
  fontStyles: fontStyles,
  themeColor: themeColor,
  focusStyles: focusStyles,
  linearGradient: linearGradient,
  radialGradient: radialGradient,
  smallerThan: smallerThan,
  largerThan: largerThan,
  rgba: rgba,
  size: size,
  cover: cover,
  darken: darken,
  lighten: lighten,
  radius: radius,
  variant: variant,
  primaryShade: primaryShade,
  hover: hover,
  gradient: gradient,
  primaryColor: primaryColor,
  placeholderStyles: placeholderStyles
};

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/functions/attach-functions.js

var attach_functions_defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var attach_functions_getOwnPropSymbols = Object.getOwnPropertySymbols;
var attach_functions_hasOwnProp = Object.prototype.hasOwnProperty;
var attach_functions_propIsEnum = Object.prototype.propertyIsEnumerable;
var attach_functions_defNormalProp = (obj, key, value) => key in obj ? attach_functions_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var attach_functions_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (attach_functions_hasOwnProp.call(b, prop)) attach_functions_defNormalProp(a, prop, b[prop]);
  if (attach_functions_getOwnPropSymbols) for (var prop of attach_functions_getOwnPropSymbols(b)) {
    if (attach_functions_propIsEnum.call(b, prop)) attach_functions_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function attachFunctions(themeBase) {
  return __spreadProps(attach_functions_spreadValues({}, themeBase), {
    fn: {
      fontStyles: fns.fontStyles(themeBase),
      themeColor: fns.themeColor(themeBase),
      focusStyles: fns.focusStyles(themeBase),
      largerThan: fns.largerThan(themeBase),
      smallerThan: fns.smallerThan(themeBase),
      radialGradient: fns.radialGradient,
      linearGradient: fns.linearGradient,
      gradient: fns.gradient(themeBase),
      rgba: fns.rgba,
      size: fns.size,
      cover: fns.cover,
      lighten: fns.lighten,
      darken: fns.darken,
      primaryShade: fns.primaryShade(themeBase),
      radius: fns.radius(themeBase),
      variant: fns.variant(themeBase),
      hover: fns.hover,
      primaryColor: fns.primaryColor(themeBase),
      placeholderStyles: fns.placeholderStyles(themeBase)
    }
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/default-theme.js


const MANTINE_COLORS = Object.keys(DEFAULT_COLORS);
const MANTINE_SIZES = (/* unused pure expression or super */ null && (["xs", "sm", "md", "lg", "xl"]));
const _DEFAULT_THEME = {
  dir: "ltr",
  primaryShade: {
    light: 6,
    dark: 8
  },
  focusRing: "auto",
  loader: "oval",
  dateFormat: "MMMM D, YYYY",
  colorScheme: "light",
  white: "#fff",
  black: "#000",
  defaultRadius: "sm",
  transitionTimingFunction: "ease",
  colors: DEFAULT_COLORS,
  lineHeight: 1.55,
  fontFamily: "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji",
  fontFamilyMonospace: "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace",
  primaryColor: "blue",
  respectReducedMotion: true,
  cursorType: "default",
  defaultGradient: {
    from: "indigo",
    to: "cyan",
    deg: 45
  },
  shadows: {
    xs: "0 1px 3px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.1)",
    sm: "0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 10px 15px -5px, rgba(0, 0, 0, 0.04) 0px 7px 7px -5px",
    md: "0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px",
    lg: "0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 28px 23px -7px, rgba(0, 0, 0, 0.04) 0px 12px 12px -7px",
    xl: "0 1px 3px rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0px 36px 28px -7px, rgba(0, 0, 0, 0.04) 0px 17px 17px -7px"
  },
  fontSizes: {
    xs: 12,
    sm: 14,
    md: 16,
    lg: 18,
    xl: 20
  },
  radius: {
    xs: 2,
    sm: 4,
    md: 8,
    lg: 16,
    xl: 32
  },
  spacing: {
    xs: 10,
    sm: 12,
    md: 16,
    lg: 20,
    xl: 24
  },
  breakpoints: {
    xs: 576,
    sm: 768,
    md: 992,
    lg: 1200,
    xl: 1400
  },
  headings: {
    fontFamily: "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji",
    fontWeight: 700,
    sizes: {
      h1: {
        fontSize: 34,
        lineHeight: 1.3,
        fontWeight: void 0
      },
      h2: {
        fontSize: 26,
        lineHeight: 1.35,
        fontWeight: void 0
      },
      h3: {
        fontSize: 22,
        lineHeight: 1.4,
        fontWeight: void 0
      },
      h4: {
        fontSize: 18,
        lineHeight: 1.45,
        fontWeight: void 0
      },
      h5: {
        fontSize: 16,
        lineHeight: 1.5,
        fontWeight: void 0
      },
      h6: {
        fontSize: 14,
        lineHeight: 1.5,
        fontWeight: void 0
      }
    }
  },
  other: {},
  components: {},
  activeStyles: {
    transform: "translateY(1px)"
  },
  datesLocale: "en",
  globalStyles: void 0,
  focusRingStyles: {
    styles: theme => ({
      outlineOffset: 2,
      outline: `2px solid ${theme.colors[theme.primaryColor][theme.colorScheme === "dark" ? 7 : 5]}`
    }),
    resetStyles: () => ({
      outline: "none"
    }),
    inputStyles: theme => ({
      outline: "none",
      borderColor: theme.colors[theme.primaryColor][typeof theme.primaryShade === "object" ? theme.primaryShade[theme.colorScheme] : theme.primaryShade]
    })
  }
};
const DEFAULT_THEME = attachFunctions(_DEFAULT_THEME);

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/GlobalStyles.js


var GlobalStyles_defProp = Object.defineProperty;
var GlobalStyles_defProps = Object.defineProperties;
var GlobalStyles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var GlobalStyles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var GlobalStyles_hasOwnProp = Object.prototype.hasOwnProperty;
var GlobalStyles_propIsEnum = Object.prototype.propertyIsEnumerable;
var GlobalStyles_defNormalProp = (obj, key, value) => key in obj ? GlobalStyles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var GlobalStyles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (GlobalStyles_hasOwnProp.call(b, prop)) GlobalStyles_defNormalProp(a, prop, b[prop]);
  if (GlobalStyles_getOwnPropSymbols) for (var prop of GlobalStyles_getOwnPropSymbols(b)) {
    if (GlobalStyles_propIsEnum.call(b, prop)) GlobalStyles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var GlobalStyles_spreadProps = (a, b) => GlobalStyles_defProps(a, GlobalStyles_getOwnPropDescs(b));
function GlobalStyles({
  theme
}) {
  return /* @__PURE__ */react.createElement(Global, {
    styles: {
      "*, *::before, *::after": {
        boxSizing: "border-box"
      },
      html: {
        colorScheme: theme.colorScheme === "dark" ? "dark" : "light"
      },
      body: GlobalStyles_spreadProps(GlobalStyles_spreadValues({}, theme.fn.fontStyles()), {
        backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
        color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
        lineHeight: theme.lineHeight,
        fontSize: theme.fontSizes.md,
        WebkitFontSmoothing: "antialiased",
        MozOsxFontSmoothing: "grayscale"
      })
    }
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/MantineCssVariables.js


function assignSizeVariables(variables, sizes, name) {
  Object.keys(sizes).forEach(size => {
    variables[`--mantine-${name}-${size}`] = typeof sizes[size] === "number" ? `${sizes[size]}px` : sizes[size];
  });
}
function MantineCssVariables({
  theme
}) {
  const variables = {
    "--mantine-color-white": theme.white,
    "--mantine-color-black": theme.black,
    "--mantine-transition-timing-function": theme.transitionTimingFunction,
    "--mantine-line-height": `${theme.lineHeight}`,
    "--mantine-font-family": theme.fontFamily,
    "--mantine-font-family-monospace": theme.fontFamilyMonospace,
    "--mantine-font-family-headings": theme.headings.fontFamily,
    "--mantine-heading-font-weight": `${theme.headings.fontWeight}`
  };
  assignSizeVariables(variables, theme.shadows, "shadow");
  assignSizeVariables(variables, theme.fontSizes, "font-size");
  assignSizeVariables(variables, theme.radius, "radius");
  assignSizeVariables(variables, theme.spacing, "spacing");
  Object.keys(theme.colors).forEach(color => {
    theme.colors[color].forEach((shade, index) => {
      variables[`--mantine-color-${color}-${index}`] = shade;
    });
  });
  const headings = theme.headings.sizes;
  Object.keys(headings).forEach(heading => {
    variables[`--mantine-${heading}-font-size`] = `${headings[heading].fontSize}px`;
    variables[`--mantine-${heading}-line-height`] = `${headings[heading].lineHeight}`;
  });
  return /* @__PURE__ */react.createElement(Global, {
    styles: {
      ":root": variables
    }
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/utils/merge-theme/merge-theme.js

var merge_theme_defProp = Object.defineProperty;
var merge_theme_defProps = Object.defineProperties;
var merge_theme_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var merge_theme_getOwnPropSymbols = Object.getOwnPropertySymbols;
var merge_theme_hasOwnProp = Object.prototype.hasOwnProperty;
var merge_theme_propIsEnum = Object.prototype.propertyIsEnumerable;
var merge_theme_defNormalProp = (obj, key, value) => key in obj ? merge_theme_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var merge_theme_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (merge_theme_hasOwnProp.call(b, prop)) merge_theme_defNormalProp(a, prop, b[prop]);
  if (merge_theme_getOwnPropSymbols) for (var prop of merge_theme_getOwnPropSymbols(b)) {
    if (merge_theme_propIsEnum.call(b, prop)) merge_theme_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var merge_theme_spreadProps = (a, b) => merge_theme_defProps(a, merge_theme_getOwnPropDescs(b));
function mergeTheme(currentTheme, themeOverride) {
  if (!themeOverride) {
    return currentTheme;
  }
  const result = Object.keys(currentTheme).reduce((acc, key) => {
    if (key === "headings" && themeOverride.headings) {
      const sizes = themeOverride.headings.sizes ? Object.keys(currentTheme.headings.sizes).reduce((headingsAcc, h) => {
        headingsAcc[h] = merge_theme_spreadValues(merge_theme_spreadValues({}, currentTheme.headings.sizes[h]), themeOverride.headings.sizes[h]);
        return headingsAcc;
      }, {}) : currentTheme.headings.sizes;
      return merge_theme_spreadProps(merge_theme_spreadValues({}, acc), {
        headings: merge_theme_spreadProps(merge_theme_spreadValues(merge_theme_spreadValues({}, currentTheme.headings), themeOverride.headings), {
          sizes
        })
      });
    }
    acc[key] = typeof themeOverride[key] === "object" ? merge_theme_spreadValues(merge_theme_spreadValues({}, currentTheme[key]), themeOverride[key]) : typeof themeOverride[key] === "number" || typeof themeOverride[key] === "boolean" || typeof themeOverride[key] === "function" ? themeOverride[key] : themeOverride[key] || currentTheme[key];
    return acc;
  }, {});
  if (!(result.primaryColor in result.colors)) {
    throw new Error("MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more \u2013 https://mantine.dev/theming/colors/#primary-color");
  }
  return result;
}
function mergeThemeWithFunctions(currentTheme, themeOverride) {
  return attachFunctions(mergeTheme(currentTheme, themeOverride));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/utils/filter-props/filter-props.js
function filterProps(props) {
  return Object.keys(props).reduce((acc, key) => {
    if (props[key] !== void 0) {
      acc[key] = props[key];
    }
    return acc;
  }, {});
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/NormalizeCSS.js


const styles = {
  html: {
    fontFamily: "sans-serif",
    lineHeight: "1.15",
    textSizeAdjust: "100%"
  },
  body: {
    margin: 0
  },
  "article, aside, footer, header, nav, section, figcaption, figure, main": {
    display: "block"
  },
  h1: {
    fontSize: "2em"
  },
  hr: {
    boxSizing: "content-box",
    height: 0,
    overflow: "visible"
  },
  pre: {
    fontFamily: "monospace, monospace",
    fontSize: "1em"
  },
  a: {
    background: "transparent",
    textDecorationSkip: "objects"
  },
  "a:active, a:hover": {
    outlineWidth: 0
  },
  "abbr[title]": {
    borderBottom: "none",
    textDecoration: "underline"
  },
  "b, strong": {
    fontWeight: "bolder"
  },
  "code, kbp, samp": {
    fontFamily: "monospace, monospace",
    fontSize: "1em"
  },
  dfn: {
    fontStyle: "italic"
  },
  mark: {
    backgroundColor: "#ff0",
    color: "#000"
  },
  small: {
    fontSize: "80%"
  },
  "sub, sup": {
    fontSize: "75%",
    lineHeight: 0,
    position: "relative",
    verticalAlign: "baseline"
  },
  sup: {
    top: "-0.5em"
  },
  sub: {
    bottom: "-0.25em"
  },
  "audio, video": {
    display: "inline-block"
  },
  "audio:not([controls])": {
    display: "none",
    height: 0
  },
  img: {
    borderStyle: "none",
    verticalAlign: "middle"
  },
  "svg:not(:root)": {
    overflow: "hidden"
  },
  "button, input, optgroup, select, textarea": {
    fontFamily: "sans-serif",
    fontSize: "100%",
    lineHeight: "1.15",
    margin: 0
  },
  "button, input": {
    overflow: "visible"
  },
  "button, select": {
    textTransform: "none"
  },
  "button, [type=reset], [type=submit]": {
    WebkitAppearance: "button"
  },
  "button::-moz-focus-inner, [type=button]::-moz-focus-inner, [type=reset]::-moz-focus-inner, [type=submit]::-moz-focus-inner": {
    borderStyle: "none",
    padding: 0
  },
  "button:-moz-focusring, [type=button]:-moz-focusring, [type=reset]:-moz-focusring, [type=submit]:-moz-focusring": {
    outline: "1px dotted ButtonText"
  },
  legend: {
    boxSizing: "border-box",
    color: "inherit",
    display: "table",
    maxWidth: "100%",
    padding: 0,
    whiteSpace: "normal"
  },
  progress: {
    display: "inline-block",
    verticalAlign: "baseline"
  },
  textarea: {
    overflow: "auto"
  },
  "[type=checkbox], [type=radio]": {
    boxSizing: "border-box",
    padding: 0
  },
  "[type=number]::-webkit-inner-spin-button, [type=number]::-webkit-outer-spin-button": {
    height: "auto"
  },
  "[type=search]": {
    appearance: "none"
  },
  "[type=search]::-webkit-search-cancel-button, [type=search]::-webkit-search-decoration": {
    appearance: "none"
  },
  "::-webkit-file-upload-button": {
    appearance: "button",
    font: "inherit"
  },
  "details, menu": {
    display: "block"
  },
  summary: {
    display: "list-item"
  },
  canvas: {
    display: "inline-block"
  },
  template: {
    display: "none"
  },
  "[hidden]": {
    display: "none"
  }
};
function NormalizeCSS() {
  return /* @__PURE__ */react.createElement(Global, {
    styles
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/MantineProvider.js








var MantineProvider_defProp = Object.defineProperty;
var MantineProvider_getOwnPropSymbols = Object.getOwnPropertySymbols;
var MantineProvider_hasOwnProp = Object.prototype.hasOwnProperty;
var MantineProvider_propIsEnum = Object.prototype.propertyIsEnumerable;
var MantineProvider_defNormalProp = (obj, key, value) => key in obj ? MantineProvider_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var MantineProvider_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (MantineProvider_hasOwnProp.call(b, prop)) MantineProvider_defNormalProp(a, prop, b[prop]);
  if (MantineProvider_getOwnPropSymbols) for (var prop of MantineProvider_getOwnPropSymbols(b)) {
    if (MantineProvider_propIsEnum.call(b, prop)) MantineProvider_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
const MantineProviderContext = (0,react_production_min.createContext)({
  theme: DEFAULT_THEME
});
function useMantineTheme() {
  var _a;
  return ((_a = (0,react_production_min.useContext)(MantineProviderContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;
}
function useMantineProviderStyles(component) {
  const theme = useMantineTheme();
  const getStyles = name => {
    var _a, _b;
    return {
      styles: ((_a = theme.components[name]) == null ? void 0 : _a.styles) || {},
      classNames: ((_b = theme.components[name]) == null ? void 0 : _b.classNames) || {}
    };
  };
  if (Array.isArray(component)) {
    return component.map(getStyles);
  }
  return [getStyles(component)];
}
function useMantineEmotionCache() {
  var _a;
  return (_a = (0,react_production_min.useContext)(MantineProviderContext)) == null ? void 0 : _a.emotionCache;
}
function useComponentDefaultProps(component, defaultProps, props) {
  var _a;
  const theme = useMantineTheme();
  const contextPropsPayload = (_a = theme.components[component]) == null ? void 0 : _a.defaultProps;
  const contextProps = typeof contextPropsPayload === "function" ? contextPropsPayload(theme) : contextPropsPayload;
  return MantineProvider_spreadValues(MantineProvider_spreadValues(MantineProvider_spreadValues({}, defaultProps), contextProps), filterProps(props));
}
function MantineProvider({
  theme,
  emotionCache,
  withNormalizeCSS = false,
  withGlobalStyles = false,
  withCSSVariables = false,
  inherit = false,
  children
}) {
  const ctx = (0,react_production_min.useContext)(MantineProviderContext);
  const mergedTheme = mergeThemeWithFunctions(DEFAULT_THEME, inherit ? MantineProvider_spreadValues(MantineProvider_spreadValues({}, ctx.theme), theme) : theme);
  return /* @__PURE__ */react.createElement(ThemeProvider, {
    theme: mergedTheme
  }, /* @__PURE__ */react.createElement(MantineProviderContext.Provider, {
    value: {
      theme: mergedTheme,
      emotionCache
    }
  }, withNormalizeCSS && /* @__PURE__ */react.createElement(NormalizeCSS, null), withGlobalStyles && /* @__PURE__ */react.createElement(GlobalStyles, {
    theme: mergedTheme
  }), withCSSVariables && /* @__PURE__ */react.createElement(MantineCssVariables, {
    theme: mergedTheme
  }), typeof mergedTheme.globalStyles === "function" && /* @__PURE__ */react.createElement(Global, {
    styles: mergedTheme.globalStyles(mergedTheme)
  }), children));
}
MantineProvider.displayName = "@mantine/core/MantineProvider";

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-isomorphic-effect/use-isomorphic-effect.js

const useIsomorphicEffect = typeof document !== "undefined" ? react_production_min.useLayoutEffect : react_production_min.useEffect;

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-id/use-id.js


const randomId = () => `mantine-${Math.random().toString(36).slice(2, 11)}`;
const useReactId = react["useId".toString()] || (() => void 0);
function useClientId() {
  const [uuid, setUuid] = (0,react_production_min.useState)("");
  useIsomorphicEffect(() => {
    setUuid(randomId());
  }, []);
  return uuid;
}
function getReactId() {
  const id = useReactId();
  return id ? `mantine-${id.replace(/:/g, "")}` : "";
}
function useId(staticId) {
  return typeof staticId === "string" ? staticId : getReactId() || useClientId();
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-focus-trap/tabbable.js
const TABBABLE_NODES = /input|select|textarea|button|object/;
const FOCUS_SELECTOR = "a, input, select, textarea, button, object, [tabindex]";
function tabbable_hidden(element) {
  if (false) {}
  return element.style.display === "none";
}
function visible(element) {
  const isHidden = element.getAttribute("aria-hidden") || element.getAttribute("hidden") || element.getAttribute("type") === "hidden";
  if (isHidden) {
    return false;
  }
  let parentElement = element;
  while (parentElement) {
    if (parentElement === document.body || parentElement.nodeType === 11) {
      break;
    }
    if (tabbable_hidden(parentElement)) {
      return false;
    }
    parentElement = parentElement.parentNode;
  }
  return true;
}
function getElementTabIndex(element) {
  let tabIndex = element.getAttribute("tabindex");
  if (tabIndex === null) {
    tabIndex = void 0;
  }
  return parseInt(tabIndex, 10);
}
function focusable(element) {
  const nodeName = element.nodeName.toLowerCase();
  const isTabIndexNotNaN = !Number.isNaN(getElementTabIndex(element));
  const res = TABBABLE_NODES.test(nodeName) && !element.disabled || (element instanceof HTMLAnchorElement ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
  return res && visible(element);
}
function tabbable(element) {
  const tabIndex = getElementTabIndex(element);
  const isTabIndexNaN = Number.isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element);
}
function findTabbableDescendants(element) {
  return Array.from(element.querySelectorAll(FOCUS_SELECTOR)).filter(tabbable);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-focus-trap/scope-tab.js

function scopeTab(node, event) {
  const tabbable = findTabbableDescendants(node);
  if (!tabbable.length) {
    event.preventDefault();
    return;
  }
  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];
  const root = node.getRootNode();
  const leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;
  if (!leavingFinalTabbable) {
    return;
  }
  event.preventDefault();
  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];
  if (target) {
    target.focus();
  }
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-focus-trap/create-aria-hider.js
function createAriaHider(containerNode, selector = "body > :not(script)") {
  const rootNodes = Array.from(document.querySelectorAll(selector)).map(node => {
    var _a;
    if (((_a = node == null ? void 0 : node.shadowRoot) == null ? void 0 : _a.contains(containerNode)) || node.contains(containerNode)) {
      return void 0;
    }
    const ariaHidden = node.getAttribute("aria-hidden");
    if (ariaHidden === null || ariaHidden === "false") {
      node.setAttribute("aria-hidden", "true");
    }
    return {
      node,
      ariaHidden
    };
  });
  return () => {
    rootNodes.forEach(item => {
      if (!item) {
        return;
      }
      if (item.ariaHidden === null) {
        item.node.removeAttribute("aria-hidden");
      } else {
        item.node.setAttribute("aria-hidden", item.ariaHidden);
      }
    });
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-focus-trap/use-focus-trap.js




function useFocusTrap(active = true) {
  const ref = (0,react_production_min.useRef)();
  const restoreAria = (0,react_production_min.useRef)(null);
  const setRef = (0,react_production_min.useCallback)(node => {
    if (!active) {
      return;
    }
    if (node === null) {
      return;
    }
    restoreAria.current = createAriaHider(node);
    if (ref.current === node) {
      return;
    }
    if (node) {
      const processNode = () => {
        let focusElement = node.querySelector("[data-autofocus]");
        if (!focusElement) {
          const children = Array.from(node.querySelectorAll(FOCUS_SELECTOR));
          focusElement = children.find(tabbable) || children.find(focusable) || null;
          if (!focusElement && focusable(node)) focusElement = node;
        }
        if (focusElement) {
          focusElement.focus({
            preventScroll: true
          });
        } else if (false) {}
      };
      setTimeout(() => {
        if (node.getRootNode()) {
          processNode();
        } else if (false) {}
      });
      ref.current = node;
    } else {
      ref.current = null;
    }
  }, [active]);
  (0,react_production_min.useEffect)(() => {
    if (!active) {
      return void 0;
    }
    const handleKeyDown = event => {
      if (event.key === "Tab" && ref.current) {
        scopeTab(ref.current, event);
      }
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
      if (restoreAria.current) {
        restoreAria.current();
      }
    };
  }, [active]);
  return setRef;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/utils/assign-ref/assign-ref.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (typeof ref === "object" && ref !== null && "current" in ref) {
    ref.current = value;
  }
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.js


function mergeRefs(...refs) {
  return node => {
    refs.forEach(ref => assignRef(ref, node));
  };
}
function useMergedRef(...refs) {
  return (0,react_production_min.useCallback)(mergeRefs(...refs), refs);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/utils/get-scroll-width.js
function getScrollWidth() {
  if (typeof window === "undefined" || typeof document === "undefined") return 0;
  const paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight, 10);
  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  return paddingRight + scrollbarWidth;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/utils/get-lock-styles.js

const getLockStyles = ({
  disableBodyPadding
}) => {
  const scrollWidth = disableBodyPadding ? null : getScrollWidth();
  const styles = `body {
        --removed-scroll-width: ${scrollWidth}px;
        touch-action: none;
        overflow: hidden !important;
        position: relative !important;
        ${scrollWidth ? "padding-right: var(--removed-scroll-width) !important;" : ""}
        `;
  return styles;
};

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/utils/inject-style-tag.js
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/utils/insert-style-tag.js
function insertStyleTag(tag) {
  const head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/utils/make-style-tag.js
function makeStyleTag() {
  const tag = document.createElement("style");
  tag.type = "text/css";
  tag.setAttribute("mantine-scroll-lock", "");
  return tag;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-lock/use-scroll-lock.js





function useScrollLock(lock, options = {
  disableBodyPadding: false
}) {
  const [scrollLocked, setScrollLocked] = (0,react_production_min.useState)(lock || false);
  const scrollTop = (0,react_production_min.useRef)(0);
  const {
    disableBodyPadding
  } = options;
  const stylesheet = (0,react_production_min.useRef)(null);
  const lockScroll = () => {
    scrollTop.current = window.scrollY;
    const styles = getLockStyles({
      disableBodyPadding
    });
    const sheet = makeStyleTag();
    injectStyles(sheet, styles);
    insertStyleTag(sheet);
    stylesheet.current = sheet;
  };
  const unlockScroll = () => {
    if (!(stylesheet == null ? void 0 : stylesheet.current)) return;
    stylesheet.current.parentNode.removeChild(stylesheet.current);
    stylesheet.current = null;
  };
  (0,react_production_min.useEffect)(() => {
    if (scrollLocked) {
      lockScroll();
    } else {
      unlockScroll();
    }
    return unlockScroll;
  }, [scrollLocked]);
  (0,react_production_min.useEffect)(() => {
    if (lock !== void 0) {
      setScrollLocked(lock);
    }
  }, [lock]);
  (0,react_production_min.useEffect)(() => {
    if (lock === void 0 && typeof window !== "undefined") {
      window.document.body.style.overflow === "hidden" && setScrollLocked(true);
    }
  }, [setScrollLocked]);
  return [scrollLocked, setScrollLocked];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-did-update/use-did-update.js

function useDidUpdate(fn, dependencies) {
  const mounted = (0,react_production_min.useRef)(false);
  (0,react_production_min.useEffect)(() => () => {
    mounted.current = false;
  }, []);
  (0,react_production_min.useEffect)(() => {
    if (mounted.current) {
      return fn();
    }
    mounted.current = true;
    return void 0;
  }, dependencies);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-focus-return/use-focus-return.js


function useFocusReturn({
  opened,
  shouldReturnFocus = true
}) {
  const lastActiveElement = (0,react_production_min.useRef)();
  const returnFocus = () => {
    var _a;
    if (lastActiveElement.current && "focus" in lastActiveElement.current && typeof lastActiveElement.current.focus === "function") {
      (_a = lastActiveElement.current) == null ? void 0 : _a.focus({
        preventScroll: true
      });
    }
  };
  useDidUpdate(() => {
    let timeout = -1;
    const clearFocusTimeout = event => {
      if (event.key === "Tab") {
        window.clearTimeout(timeout);
      }
    };
    document.addEventListener("keydown", clearFocusTimeout);
    if (opened) {
      lastActiveElement.current = document.activeElement;
    } else if (shouldReturnFocus) {
      timeout = window.setTimeout(returnFocus, 10);
    }
    return () => {
      window.clearTimeout(timeout);
      document.removeEventListener("keydown", clearFocusTimeout);
    };
  }, [opened, shouldReturnFocus]);
  return returnFocus;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-window-event/use-window-event.js

function useWindowEvent(type, listener, options) {
  (0,react_production_min.useEffect)(() => {
    window.addEventListener(type, listener, options);
    return () => window.removeEventListener(type, listener, options);
  }, [type, listener]);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/theme/utils/get-default-z-index/get-default-z-index.js
const elevations = {
  app: 100,
  modal: 200,
  popover: 300,
  overlay: 400,
  max: 9999
};
function getDefaultZIndex(level) {
  return elevations[level];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/node_modules/clsx/dist/clsx.m.js
function toVal(mix) {
  var k,
    y,
    str = '';
  if (typeof mix === 'string' || typeof mix === 'number') {
    str += mix;
  } else if (typeof mix === 'object') {
    if (Array.isArray(mix)) {
      for (k = 0; k < mix.length; k++) {
        if (mix[k]) {
          if (y = toVal(mix[k])) {
            str && (str += ' ');
            str += y;
          }
        }
      }
    } else {
      for (k in mix) {
        if (mix[k]) {
          str && (str += ' ');
          str += k;
        }
      }
    }
  }
  return str;
}
/* harmony default export */ function clsx_m() {
  var i = 0,
    tmp,
    x,
    str = '';
  while (i < arguments.length) {
    if (tmp = arguments[i++]) {
      if (x = toVal(tmp)) {
        str && (str += ' ');
        str += x;
      }
    }
  }
  return str;
}
;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/utils/use-guaranteed-memo/use-guaranteed-memo.js

function useGuaranteedMemo(fn, deps) {
  const ref = (0,react_production_min.useRef)();
  if (!ref.current || deps.length !== ref.current.prevDeps.length || ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {
    ref.current = {
      v: fn(),
      prevDeps: [...deps]
    };
  }
  return ref.current.v;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/default-emotion-cache.js

const defaultMantineEmotionCache = emotion_cache_browser_esm({
  key: "mantine",
  prepend: true
});

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/use-emotion-cache.js


function useEmotionCache() {
  const cache = useMantineEmotionCache();
  return cache || defaultMantineEmotionCache;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/use-css.js





var use_css_defProp = Object.defineProperty;
var use_css_getOwnPropSymbols = Object.getOwnPropertySymbols;
var use_css_hasOwnProp = Object.prototype.hasOwnProperty;
var use_css_propIsEnum = Object.prototype.propertyIsEnumerable;
var use_css_defNormalProp = (obj, key, value) => key in obj ? use_css_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var use_css_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (use_css_hasOwnProp.call(b, prop)) use_css_defNormalProp(a, prop, b[prop]);
  if (use_css_getOwnPropSymbols) for (var prop of use_css_getOwnPropSymbols(b)) {
    if (use_css_propIsEnum.call(b, prop)) use_css_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
const refPropertyName = "ref";
function getRef(args) {
  let ref;
  if (args.length !== 1) {
    return {
      args,
      ref
    };
  }
  const [arg] = args;
  if (!(arg instanceof Object)) {
    return {
      args,
      ref
    };
  }
  if (!(refPropertyName in arg)) {
    return {
      args,
      ref
    };
  }
  ref = arg[refPropertyName];
  const argCopy = use_css_spreadValues({}, arg);
  delete argCopy[refPropertyName];
  return {
    args: [argCopy],
    ref
  };
}
const {
  cssFactory
} = (() => {
  function merge(registered, css, className) {
    const registeredStyles = [];
    const rawClassName = emotion_utils_browser_esm_getRegisteredStyles(registered, registeredStyles, className);
    if (registeredStyles.length < 2) {
      return className;
    }
    return rawClassName + css(registeredStyles);
  }
  function _cssFactory(params) {
    const {
      cache
    } = params;
    const css = (...styles) => {
      const {
        ref,
        args
      } = getRef(styles);
      const serialized = emotion_serialize_browser_esm_serializeStyles(args, cache.registered);
      emotion_utils_browser_esm_insertStyles(cache, serialized, false);
      return `${cache.key}-${serialized.name}${ref === void 0 ? "" : ` ${ref}`}`;
    };
    const cx = (...args) => merge(cache.registered, css, clsx_m(args));
    return {
      css,
      cx
    };
  }
  return {
    cssFactory: _cssFactory
  };
})();
function useCss() {
  const cache = useEmotionCache();
  return useGuaranteedMemo(() => cssFactory({
    cache
  }), [cache]);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/utils/merge-class-names/merge-class-names.js
function mergeClassNames({
  cx,
  classes,
  context,
  classNames,
  name,
  cache
}) {
  const contextClassNames = context.reduce((acc, item) => {
    Object.keys(item.classNames).forEach(key => {
      if (typeof acc[key] !== "string") {
        acc[key] = `${item.classNames[key]}`;
      } else {
        acc[key] = `${acc[key]} ${item.classNames[key]}`;
      }
    });
    return acc;
  }, {});
  return Object.keys(classes).reduce((acc, className) => {
    acc[className] = cx(classes[className], contextClassNames[className], classNames != null && classNames[className], Array.isArray(name) ? name.filter(Boolean).map(part => `${(cache == null ? void 0 : cache.key) || "mantine"}-${part}-${className}`).join(" ") : name ? `${(cache == null ? void 0 : cache.key) || "mantine"}-${name}-${className}` : null);
    return acc;
  }, {});
}

;// CONCATENATED MODULE: ./node_modules/@mantine/styles/esm/tss/create-styles.js



var create_styles_defProp = Object.defineProperty;
var create_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var create_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var create_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var create_styles_defNormalProp = (obj, key, value) => key in obj ? create_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var create_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (create_styles_hasOwnProp.call(b, prop)) create_styles_defNormalProp(a, prop, b[prop]);
  if (create_styles_getOwnPropSymbols) for (var prop of create_styles_getOwnPropSymbols(b)) {
    if (create_styles_propIsEnum.call(b, prop)) create_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
function createRef(refName) {
  return `__mantine-ref-${refName || ""}`;
}
function getStyles(styles, theme, params) {
  const extractStyles = stylesPartial => typeof stylesPartial === "function" ? stylesPartial(theme, params || {}) : stylesPartial || {};
  if (Array.isArray(styles)) {
    return styles.map(item => extractStyles(item.styles)).reduce((acc, item) => {
      Object.keys(item).forEach(key => {
        if (!acc[key]) {
          acc[key] = create_styles_spreadValues({}, item[key]);
        } else {
          acc[key] = create_styles_spreadValues(create_styles_spreadValues({}, acc[key]), item[key]);
        }
      });
      return acc;
    }, {});
  }
  return extractStyles(styles);
}
function createStyles(input) {
  const getCssObject = typeof input === "function" ? input : () => input;
  function useStyles(params, options) {
    const theme = useMantineTheme();
    const context = useMantineProviderStyles(options == null ? void 0 : options.name);
    const cache = useMantineEmotionCache();
    const {
      css,
      cx
    } = useCss();
    const cssObject = getCssObject(theme, params, createRef);
    const componentStyles = getStyles(options == null ? void 0 : options.styles, theme, params);
    const providerStyles = getStyles(context, theme, params);
    const classes = Object.fromEntries(Object.keys(cssObject).map(key => {
      const mergedStyles = cx({
        [css(cssObject[key])]: !(options == null ? void 0 : options.unstyled)
      }, css(providerStyles[key]), css(componentStyles[key]));
      return [key, mergedStyles];
    }));
    return {
      classes: mergeClassNames({
        cx,
        classes,
        context,
        classNames: options == null ? void 0 : options.classNames,
        name: options == null ? void 0 : options.name,
        cache
      }),
      cx,
      theme
    };
  }
  return useStyles;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Modal/Modal.styles.js

var Modal_styles_defProp = Object.defineProperty;
var Modal_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Modal_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Modal_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Modal_styles_defNormalProp = (obj, key, value) => key in obj ? Modal_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Modal_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Modal_styles_hasOwnProp.call(b, prop)) Modal_styles_defNormalProp(a, prop, b[prop]);
  if (Modal_styles_getOwnPropSymbols) for (var prop of Modal_styles_getOwnPropSymbols(b)) {
    if (Modal_styles_propIsEnum.call(b, prop)) Modal_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
const sizes = {
  xs: 320,
  sm: 380,
  md: 440,
  lg: 620,
  xl: 780
};
function getFullScreenStyles(fullScreen) {
  if (!fullScreen) {
    return {};
  }
  return {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    maxHeight: "100vh",
    overflowY: "auto"
  };
}
var useStyles = createStyles((theme, {
  overflow,
  size,
  centered,
  zIndex,
  fullScreen
}) => ({
  close: {},
  overlay: {
    display: fullScreen ? "none" : void 0
  },
  root: {
    position: "fixed",
    zIndex,
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  inner: {
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    overflowY: "auto",
    padding: fullScreen ? 0 : `${theme.spacing.xl * 2}px ${theme.spacing.md}px`,
    display: "flex",
    justifyContent: "center",
    alignItems: centered ? "center" : "flex-start"
  },
  title: {
    marginRight: theme.spacing.md,
    textOverflow: "ellipsis",
    display: "block",
    wordBreak: "break-word"
  },
  modal: Modal_styles_spreadValues({
    position: "relative",
    width: fullScreen ? "100vw" : theme.fn.size({
      sizes,
      size
    }),
    borderRadius: fullScreen ? 0 : void 0,
    outline: 0,
    backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
    marginTop: centered ? "auto" : void 0,
    marginBottom: centered ? "auto" : void 0,
    zIndex: 1
  }, getFullScreenStyles(fullScreen)),
  header: {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    marginBottom: theme.spacing.md,
    marginRight: -9
  },
  body: {
    maxHeight: overflow === "inside" ? "calc(100vh - 185px)" : null,
    overflowY: overflow === "inside" ? "auto" : null,
    wordBreak: "break-word"
  }
}));
/* harmony default export */ var Modal_styles = (useStyles);
// EXTERNAL MODULE: ./node_modules/react-dom/cjs/react-dom.production.min.js
var react_dom_production_min = __webpack_require__(3748);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Portal/Portal.js




function Portal(props) {
  const {
    children,
    target,
    className
  } = useComponentDefaultProps("Portal", {}, props);
  const theme = useMantineTheme();
  const [mounted, setMounted] = (0,react_production_min.useState)(false);
  const ref = (0,react_production_min.useRef)();
  useIsomorphicEffect(() => {
    setMounted(true);
    ref.current = !target ? document.createElement("div") : typeof target === "string" ? document.querySelector(target) : target;
    if (!target) {
      document.body.appendChild(ref.current);
    }
    return () => {
      !target && document.body.removeChild(ref.current);
    };
  }, [target]);
  if (!mounted) {
    return null;
  }
  return (0,react_dom_production_min.createPortal)( /* @__PURE__ */react.createElement("div", {
    className,
    dir: theme.dir
  }, children), ref.current);
}
Portal.displayName = "@mantine/core/Portal";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Portal/OptionalPortal.js


var OptionalPortal_defProp = Object.defineProperty;
var OptionalPortal_getOwnPropSymbols = Object.getOwnPropertySymbols;
var OptionalPortal_hasOwnProp = Object.prototype.hasOwnProperty;
var OptionalPortal_propIsEnum = Object.prototype.propertyIsEnumerable;
var OptionalPortal_defNormalProp = (obj, key, value) => key in obj ? OptionalPortal_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var OptionalPortal_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (OptionalPortal_hasOwnProp.call(b, prop)) OptionalPortal_defNormalProp(a, prop, b[prop]);
  if (OptionalPortal_getOwnPropSymbols) for (var prop of OptionalPortal_getOwnPropSymbols(b)) {
    if (OptionalPortal_propIsEnum.call(b, prop)) OptionalPortal_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (OptionalPortal_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && OptionalPortal_getOwnPropSymbols) for (var prop of OptionalPortal_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && OptionalPortal_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function OptionalPortal(_a) {
  var _b = _a,
    {
      withinPortal = true,
      children
    } = _b,
    others = __objRest(_b, ["withinPortal", "children"]);
  if (withinPortal) {
    return /* @__PURE__ */react.createElement(Portal, OptionalPortal_spreadValues({}, others), children);
  }
  return /* @__PURE__ */react.createElement(react.Fragment, null, children);
}
OptionalPortal.displayName = "@mantine/core/OptionalPortal";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Transition/transitions.js
var transitions_defProp = Object.defineProperty;
var transitions_defProps = Object.defineProperties;
var transitions_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var transitions_getOwnPropSymbols = Object.getOwnPropertySymbols;
var transitions_hasOwnProp = Object.prototype.hasOwnProperty;
var transitions_propIsEnum = Object.prototype.propertyIsEnumerable;
var transitions_defNormalProp = (obj, key, value) => key in obj ? transitions_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var transitions_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (transitions_hasOwnProp.call(b, prop)) transitions_defNormalProp(a, prop, b[prop]);
  if (transitions_getOwnPropSymbols) for (var prop of transitions_getOwnPropSymbols(b)) {
    if (transitions_propIsEnum.call(b, prop)) transitions_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var transitions_spreadProps = (a, b) => transitions_defProps(a, transitions_getOwnPropDescs(b));
const popIn = {
  in: {
    opacity: 1,
    transform: "scale(1)"
  },
  out: {
    opacity: 0,
    transform: "scale(.9) translateY(10px)"
  },
  transitionProperty: "transform, opacity"
};
const transitions = {
  fade: {
    in: {
      opacity: 1
    },
    out: {
      opacity: 0
    },
    transitionProperty: "opacity"
  },
  scale: {
    in: {
      opacity: 1,
      transform: "scale(1)"
    },
    out: {
      opacity: 0,
      transform: "scale(0)"
    },
    common: {
      transformOrigin: "top"
    },
    transitionProperty: "transform, opacity"
  },
  "scale-y": {
    in: {
      opacity: 1,
      transform: "scaleY(1)"
    },
    out: {
      opacity: 0,
      transform: "scaleY(0)"
    },
    common: {
      transformOrigin: "top"
    },
    transitionProperty: "transform, opacity"
  },
  "scale-x": {
    in: {
      opacity: 1,
      transform: "scaleX(1)"
    },
    out: {
      opacity: 0,
      transform: "scaleX(0)"
    },
    common: {
      transformOrigin: "left"
    },
    transitionProperty: "transform, opacity"
  },
  "skew-up": {
    in: {
      opacity: 1,
      transform: "translateY(0) skew(0deg, 0deg)"
    },
    out: {
      opacity: 0,
      transform: "translateY(-20px) skew(-10deg, -5deg)"
    },
    common: {
      transformOrigin: "top"
    },
    transitionProperty: "transform, opacity"
  },
  "skew-down": {
    in: {
      opacity: 1,
      transform: "translateY(0) skew(0deg, 0deg)"
    },
    out: {
      opacity: 0,
      transform: "translateY(20px) skew(-10deg, -5deg)"
    },
    common: {
      transformOrigin: "bottom"
    },
    transitionProperty: "transform, opacity"
  },
  "rotate-left": {
    in: {
      opacity: 1,
      transform: "translateY(0) rotate(0deg)"
    },
    out: {
      opacity: 0,
      transform: "translateY(20px) rotate(-5deg)"
    },
    common: {
      transformOrigin: "bottom"
    },
    transitionProperty: "transform, opacity"
  },
  "rotate-right": {
    in: {
      opacity: 1,
      transform: "translateY(0) rotate(0deg)"
    },
    out: {
      opacity: 0,
      transform: "translateY(20px) rotate(5deg)"
    },
    common: {
      transformOrigin: "top"
    },
    transitionProperty: "transform, opacity"
  },
  "slide-down": {
    in: {
      opacity: 1,
      transform: "translateY(0)"
    },
    out: {
      opacity: 0,
      transform: "translateY(-100%)"
    },
    common: {
      transformOrigin: "top"
    },
    transitionProperty: "transform, opacity"
  },
  "slide-up": {
    in: {
      opacity: 1,
      transform: "translateY(0)"
    },
    out: {
      opacity: 0,
      transform: "translateY(100%)"
    },
    common: {
      transformOrigin: "bottom"
    },
    transitionProperty: "transform, opacity"
  },
  "slide-left": {
    in: {
      opacity: 1,
      transform: "translateX(0)"
    },
    out: {
      opacity: 0,
      transform: "translateX(100%)"
    },
    common: {
      transformOrigin: "left"
    },
    transitionProperty: "transform, opacity"
  },
  "slide-right": {
    in: {
      opacity: 1,
      transform: "translateX(0)"
    },
    out: {
      opacity: 0,
      transform: "translateX(-100%)"
    },
    common: {
      transformOrigin: "right"
    },
    transitionProperty: "transform, opacity"
  },
  pop: transitions_spreadProps(transitions_spreadValues({}, popIn), {
    common: {
      transformOrigin: "center center"
    }
  }),
  "pop-bottom-left": transitions_spreadProps(transitions_spreadValues({}, popIn), {
    common: {
      transformOrigin: "bottom left"
    }
  }),
  "pop-bottom-right": transitions_spreadProps(transitions_spreadValues({}, popIn), {
    common: {
      transformOrigin: "bottom right"
    }
  }),
  "pop-top-left": transitions_spreadProps(transitions_spreadValues({}, popIn), {
    common: {
      transformOrigin: "top left"
    }
  }),
  "pop-top-right": transitions_spreadProps(transitions_spreadValues({}, popIn), {
    common: {
      transformOrigin: "top right"
    }
  })
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Transition/get-transition-styles/get-transition-styles.js

var get_transition_styles_defProp = Object.defineProperty;
var get_transition_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var get_transition_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var get_transition_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var get_transition_styles_defNormalProp = (obj, key, value) => key in obj ? get_transition_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var get_transition_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (get_transition_styles_hasOwnProp.call(b, prop)) get_transition_styles_defNormalProp(a, prop, b[prop]);
  if (get_transition_styles_getOwnPropSymbols) for (var prop of get_transition_styles_getOwnPropSymbols(b)) {
    if (get_transition_styles_propIsEnum.call(b, prop)) get_transition_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
const transitionStatuses = {
  entering: "in",
  entered: "in",
  exiting: "out",
  exited: "out",
  "pre-exiting": "out",
  "pre-entering": "out"
};
function getTransitionStyles({
  transition,
  state,
  duration,
  timingFunction
}) {
  const shared = {
    transitionDuration: `${duration}ms`,
    transitionTimingFunction: timingFunction
  };
  if (typeof transition === "string") {
    if (!(transition in transitions)) {
      return null;
    }
    return get_transition_styles_spreadValues(get_transition_styles_spreadValues(get_transition_styles_spreadValues({
      transitionProperty: transitions[transition].transitionProperty
    }, shared), transitions[transition].common), transitions[transition][transitionStatuses[state]]);
  }
  return get_transition_styles_spreadValues(get_transition_styles_spreadValues(get_transition_styles_spreadValues({
    transitionProperty: transition.transitionProperty
  }, shared), transition.common), transition[transitionStatuses[state]]);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-media-query/use-media-query.js

function attachMediaListener(query, callback) {
  try {
    query.addEventListener("change", callback);
    return () => query.removeEventListener("change", callback);
  } catch (e) {
    query.addListener(callback);
    return () => query.removeListener(callback);
  }
}
function getInitialValue(query, initialValue) {
  if (typeof initialValue === "boolean") {
    return initialValue;
  }
  if (typeof window !== "undefined" && "matchMedia" in window) {
    return window.matchMedia(query).matches;
  }
  return false;
}
function use_media_query_useMediaQuery(query, initialValue, {
  getInitialValueInEffect
} = {
  getInitialValueInEffect: true
}) {
  const [matches, setMatches] = (0,react_production_min.useState)(getInitialValueInEffect ? initialValue : getInitialValue(query, initialValue));
  const queryRef = (0,react_production_min.useRef)();
  (0,react_production_min.useEffect)(() => {
    if ("matchMedia" in window) {
      queryRef.current = window.matchMedia(query);
      setMatches(queryRef.current.matches);
      return attachMediaListener(queryRef.current, event => setMatches(event.matches));
    }
    return void 0;
  }, [query]);
  return matches;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-reduced-motion/use-reduced-motion.js

function useReducedMotion(initialValue, options) {
  return use_media_query_useMediaQuery("(prefers-reduced-motion: reduce)", initialValue, options);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Transition/use-transition.js



function useTransition({
  duration,
  exitDuration,
  timingFunction,
  mounted,
  onEnter,
  onExit,
  onEntered,
  onExited
}) {
  const theme = useMantineTheme();
  const shouldReduceMotion = useReducedMotion();
  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;
  const [transitionStatus, setStatus] = (0,react_production_min.useState)(mounted ? "entered" : "exited");
  let transitionDuration = reduceMotion ? 0 : duration;
  const timeoutRef = (0,react_production_min.useRef)(-1);
  const handleStateChange = shouldMount => {
    const preHandler = shouldMount ? onEnter : onExit;
    const handler = shouldMount ? onEntered : onExited;
    setStatus(shouldMount ? "pre-entering" : "pre-exiting");
    window.clearTimeout(timeoutRef.current);
    transitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;
    if (transitionDuration === 0) {
      typeof preHandler === "function" && preHandler();
      typeof handler === "function" && handler();
      setStatus(shouldMount ? "entered" : "exited");
    } else {
      const preStateTimeout = window.setTimeout(() => {
        typeof preHandler === "function" && preHandler();
        setStatus(shouldMount ? "entering" : "exiting");
      }, 10);
      timeoutRef.current = window.setTimeout(() => {
        window.clearTimeout(preStateTimeout);
        typeof handler === "function" && handler();
        setStatus(shouldMount ? "entered" : "exited");
      }, transitionDuration);
    }
  };
  useDidUpdate(() => {
    handleStateChange(mounted);
  }, [mounted]);
  (0,react_production_min.useEffect)(() => () => window.clearTimeout(timeoutRef.current), []);
  return {
    transitionDuration,
    transitionStatus,
    transitionTimingFunction: timingFunction || theme.transitionTimingFunction
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Transition/GroupedTransition.js



function GroupedTransition({
  transitions,
  duration = 250,
  exitDuration = duration,
  mounted,
  children,
  timingFunction,
  onExit,
  onEntered,
  onEnter,
  onExited
}) {
  const {
    transitionDuration,
    transitionStatus,
    transitionTimingFunction
  } = useTransition({
    mounted,
    duration,
    exitDuration,
    timingFunction,
    onExit,
    onEntered,
    onEnter,
    onExited
  });
  if (transitionDuration === 0) {
    return mounted ? /* @__PURE__ */react.createElement(react.Fragment, null, children({})) : null;
  }
  if (transitionStatus === "exited") {
    return null;
  }
  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {
    acc[transition] = getTransitionStyles({
      duration: transitions[transition].duration,
      transition: transitions[transition].transition,
      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,
      state: transitionStatus
    });
    return acc;
  }, {});
  return /* @__PURE__ */react.createElement(react.Fragment, null, children(transitionsStyles));
}
GroupedTransition.displayName = "@mantine/core/GroupedTransition";

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/create-polymorphic-component/create-polymorphic-component.js
function createPolymorphicComponent(component) {
  return component;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/extract-system-styles/extract-system-styles.js

var extract_system_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var extract_system_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var extract_system_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var extract_system_styles_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (extract_system_styles_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && extract_system_styles_getOwnPropSymbols) for (var prop of extract_system_styles_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && extract_system_styles_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function extractSystemStyles(others) {
  const _a = others,
    {
      m,
      mx,
      my,
      mt,
      mb,
      ml,
      mr,
      p,
      px,
      py,
      pt,
      pb,
      pl,
      pr,
      bg,
      c,
      opacity,
      ff,
      fz,
      fw,
      lts,
      ta,
      lh,
      fs,
      tt,
      td,
      w,
      miw,
      maw,
      h,
      mih,
      mah,
      bgsz,
      bgp,
      bgr,
      bga,
      pos,
      top,
      left,
      bottom,
      right,
      inset,
      display
    } = _a,
    rest = extract_system_styles_objRest(_a, ["m", "mx", "my", "mt", "mb", "ml", "mr", "p", "px", "py", "pt", "pb", "pl", "pr", "bg", "c", "opacity", "ff", "fz", "fw", "lts", "ta", "lh", "fs", "tt", "td", "w", "miw", "maw", "h", "mih", "mah", "bgsz", "bgp", "bgr", "bga", "pos", "top", "left", "bottom", "right", "inset", "display"]);
  const systemStyles = filterProps({
    m,
    mx,
    my,
    mt,
    mb,
    ml,
    mr,
    p,
    px,
    py,
    pt,
    pb,
    pl,
    pr,
    bg,
    c,
    opacity,
    ff,
    fz,
    fw,
    lts,
    ta,
    lh,
    fs,
    tt,
    td,
    w,
    miw,
    maw,
    h,
    mih,
    mah,
    bgsz,
    bgp,
    bgr,
    bga,
    pos,
    top,
    left,
    bottom,
    right,
    inset,
    display
  });
  return {
    systemStyles,
    rest
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/get-responsive-value/get-responsive-value.js
function getSortedKeys(value, theme) {
  const sorted = Object.keys(value).filter(breakpoint => breakpoint !== "base").sort((a, b) => theme.fn.size({
    size: a,
    sizes: theme.breakpoints
  }) - theme.fn.size({
    size: b,
    sizes: theme.breakpoints
  }));
  return "base" in value ? ["base", ...sorted] : sorted;
}
function getResponsiveValue({
  value,
  theme,
  getValue,
  property
}) {
  if (value == null) {
    return void 0;
  }
  if (typeof value === "object") {
    const result = getSortedKeys(value, theme).reduce((acc, breakpointKey) => {
      if (breakpointKey === "base" && value.base !== void 0) {
        const baseValue = getValue(value.base, theme);
        if (Array.isArray(property)) {
          property.forEach(prop => {
            acc[prop] = baseValue;
          });
          return acc;
        }
        acc[property] = baseValue;
        return acc;
      }
      const breakpointValue = getValue(value[breakpointKey], theme);
      if (Array.isArray(property)) {
        acc[theme.fn.largerThan(breakpointKey)] = {};
        property.forEach(prop => {
          acc[theme.fn.largerThan(breakpointKey)][prop] = breakpointValue;
        });
        return acc;
      }
      acc[theme.fn.largerThan(breakpointKey)] = {
        [property]: breakpointValue
      };
      return acc;
    }, {});
    return result;
  }
  const cssValue = getValue(value, theme);
  if (Array.isArray(property)) {
    return property.reduce((acc, prop) => {
      acc[prop] = cssValue;
      return acc;
    }, {});
  }
  return {
    [property]: cssValue
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/value-getters/get-color-value.js
function getColorValue(color, theme) {
  if (color === "dimmed") {
    return theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[6];
  }
  return theme.fn.variant({
    variant: "filled",
    color,
    primaryFallback: false
  }).background;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/value-getters/get-default-value.js
function getDefaultValue(value) {
  return value;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/value-getters/get-font-size-value.js
function getFontSizeValue(size, theme) {
  return theme.fn.size({
    size,
    sizes: theme.fontSizes
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/value-getters/get-spacing-value.js
const NEGATIVE_VALUES = ["-xs", "-sm", "-md", "-lg", "-xl"];
function getSpacingValue(size, theme) {
  if (NEGATIVE_VALUES.includes(size)) {
    return theme.fn.size({
      size: size.replace("-", ""),
      sizes: theme.spacing
    }) * -1;
  }
  return theme.fn.size({
    size,
    sizes: theme.spacing
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/value-getters/value-getters.js




const valueGetters = {
  color: getColorValue,
  default: getDefaultValue,
  fontSize: getFontSizeValue,
  spacing: getSpacingValue
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/system-props/system-props.js
const SYSTEM_PROPS = {
  m: {
    type: "spacing",
    property: "margin"
  },
  mt: {
    type: "spacing",
    property: "marginTop"
  },
  mb: {
    type: "spacing",
    property: "marginBottom"
  },
  ml: {
    type: "spacing",
    property: "marginLeft"
  },
  mr: {
    type: "spacing",
    property: "marginRight"
  },
  mx: {
    type: "spacing",
    property: ["marginRight", "marginLeft"]
  },
  my: {
    type: "spacing",
    property: ["marginTop", "marginBottom"]
  },
  p: {
    type: "spacing",
    property: "padding"
  },
  pt: {
    type: "spacing",
    property: "paddingTop"
  },
  pb: {
    type: "spacing",
    property: "paddingBottom"
  },
  pl: {
    type: "spacing",
    property: "paddingLeft"
  },
  pr: {
    type: "spacing",
    property: "paddingRight"
  },
  px: {
    type: "spacing",
    property: ["paddingRight", "paddingLeft"]
  },
  py: {
    type: "spacing",
    property: ["paddingTop", "paddingBottom"]
  },
  bg: {
    type: "color",
    property: "background"
  },
  c: {
    type: "color",
    property: "color"
  },
  opacity: {
    type: "default",
    property: "opacity"
  },
  ff: {
    type: "default",
    property: "fontFamily"
  },
  fz: {
    type: "fontSize",
    property: "fontSize"
  },
  fw: {
    type: "default",
    property: "fontWeight"
  },
  lts: {
    type: "default",
    property: "letterSpacing"
  },
  ta: {
    type: "default",
    property: "textAlign"
  },
  lh: {
    type: "default",
    property: "lineHeight"
  },
  fs: {
    type: "default",
    property: "fontStyle"
  },
  tt: {
    type: "default",
    property: "textTransform"
  },
  td: {
    type: "default",
    property: "textDecoration"
  },
  w: {
    type: "spacing",
    property: "width"
  },
  miw: {
    type: "spacing",
    property: "minWidth"
  },
  maw: {
    type: "spacing",
    property: "maxWidth"
  },
  h: {
    type: "spacing",
    property: "height"
  },
  mih: {
    type: "spacing",
    property: "minHeight"
  },
  mah: {
    type: "spacing",
    property: "maxHeight"
  },
  bgsz: {
    type: "default",
    property: "background-size"
  },
  bgp: {
    type: "default",
    property: "background-position"
  },
  bgr: {
    type: "default",
    property: "background-repeat"
  },
  bga: {
    type: "default",
    property: "background-attachment"
  },
  pos: {
    type: "default",
    property: "position"
  },
  top: {
    type: "default",
    property: "top"
  },
  left: {
    type: "default",
    property: "left"
  },
  bottom: {
    type: "default",
    property: "bottom"
  },
  right: {
    type: "default",
    property: "right"
  },
  inset: {
    type: "default",
    property: "inset"
  },
  display: {
    type: "default",
    property: "display"
  }
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/style-system-props/get-system-styles/get-system-styles.js



var get_system_styles_defProp = Object.defineProperty;
var get_system_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var get_system_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var get_system_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var get_system_styles_defNormalProp = (obj, key, value) => key in obj ? get_system_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var get_system_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (get_system_styles_hasOwnProp.call(b, prop)) get_system_styles_defNormalProp(a, prop, b[prop]);
  if (get_system_styles_getOwnPropSymbols) for (var prop of get_system_styles_getOwnPropSymbols(b)) {
    if (get_system_styles_propIsEnum.call(b, prop)) get_system_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
function getSystemStyles(systemStyles, theme, systemProps = SYSTEM_PROPS) {
  const styles = Object.keys(systemProps).reduce((acc, systemProp) => {
    if (systemProp in systemStyles && systemStyles[systemProp] !== void 0) {
      acc.push(getResponsiveValue({
        value: systemStyles[systemProp],
        getValue: valueGetters[systemProps[systemProp].type],
        property: systemProps[systemProp].property,
        theme
      }));
    }
    return acc;
  }, []);
  return styles.reduce((acc, stylesPartial) => {
    Object.keys(stylesPartial).forEach(property => {
      if (typeof stylesPartial[property] === "object" && stylesPartial[property] !== null) {
        if (!(property in acc)) {
          acc[property] = stylesPartial[property];
        } else {
          acc[property] = get_system_styles_spreadValues(get_system_styles_spreadValues({}, acc[property]), stylesPartial[property]);
        }
      } else {
        acc[property] = stylesPartial[property];
      }
    });
    return acc;
  }, {});
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/use-sx/use-sx.js


function extractSx(sx, theme) {
  return typeof sx === "function" ? sx(theme) : sx;
}
function useSx(sx, systemProps, className) {
  const theme = useMantineTheme();
  const {
    css,
    cx
  } = useCss();
  if (Array.isArray(sx)) {
    return cx(className, css(getSystemStyles(systemProps, theme)), sx.map(partial => css(extractSx(partial, theme))));
  }
  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Box/Box.js




var Box_defProp = Object.defineProperty;
var Box_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Box_hasOwnProp = Object.prototype.hasOwnProperty;
var Box_propIsEnum = Object.prototype.propertyIsEnumerable;
var Box_defNormalProp = (obj, key, value) => key in obj ? Box_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Box_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Box_hasOwnProp.call(b, prop)) Box_defNormalProp(a, prop, b[prop]);
  if (Box_getOwnPropSymbols) for (var prop of Box_getOwnPropSymbols(b)) {
    if (Box_propIsEnum.call(b, prop)) Box_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Box_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Box_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Box_getOwnPropSymbols) for (var prop of Box_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Box_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const _Box = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      className,
      component,
      style,
      sx
    } = _b,
    others = Box_objRest(_b, ["className", "component", "style", "sx"]);
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  const Element = component || "div";
  return /* @__PURE__ */react.createElement(Element, Box_spreadValues({
    ref,
    className: useSx(sx, systemStyles, className),
    style
  }, rest));
});
_Box.displayName = "@mantine/core/Box";
const Box = createPolymorphicComponent(_Box);

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/pack-sx/pack-sx.js
function packSx(sx) {
  return Array.isArray(sx) ? sx : [sx];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Overlay/Overlay.styles.js

var Overlay_styles_useStyles = createStyles((theme, {
  zIndex
}) => ({
  root: {
    position: "absolute",
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    zIndex
  }
}));
/* harmony default export */ var Overlay_styles = (Overlay_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Overlay/Overlay.js





var Overlay_defProp = Object.defineProperty;
var Overlay_defProps = Object.defineProperties;
var Overlay_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Overlay_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Overlay_hasOwnProp = Object.prototype.hasOwnProperty;
var Overlay_propIsEnum = Object.prototype.propertyIsEnumerable;
var Overlay_defNormalProp = (obj, key, value) => key in obj ? Overlay_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Overlay_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Overlay_hasOwnProp.call(b, prop)) Overlay_defNormalProp(a, prop, b[prop]);
  if (Overlay_getOwnPropSymbols) for (var prop of Overlay_getOwnPropSymbols(b)) {
    if (Overlay_propIsEnum.call(b, prop)) Overlay_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Overlay_spreadProps = (a, b) => Overlay_defProps(a, Overlay_getOwnPropDescs(b));
var Overlay_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Overlay_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Overlay_getOwnPropSymbols) for (var prop of Overlay_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Overlay_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const defaultProps = {
  opacity: 0.6,
  color: "#fff",
  zIndex: getDefaultZIndex("modal"),
  radius: 0,
  blur: 0
};
const _Overlay = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Overlay", defaultProps, props),
    {
      opacity,
      blur,
      color,
      gradient,
      zIndex,
      radius,
      sx,
      unstyled,
      className
    } = _a,
    others = Overlay_objRest(_a, ["opacity", "blur", "color", "gradient", "zIndex", "radius", "sx", "unstyled", "className"]);
  const {
    classes,
    cx
  } = Overlay_styles({
    zIndex
  }, {
    name: "Overlay",
    unstyled
  });
  const background = gradient ? {
    backgroundImage: gradient
  } : {
    backgroundColor: color
  };
  const innerOverlay = otherProps => /* @__PURE__ */react.createElement(Box, Overlay_spreadValues({
    ref,
    className: cx(classes.root, className),
    sx: [theme => Overlay_spreadProps(Overlay_spreadValues({}, background), {
      opacity,
      borderRadius: theme.fn.size({
        size: radius,
        sizes: theme.radius
      })
    }), ...packSx(sx)]
  }, otherProps));
  if (blur) {
    return /* @__PURE__ */react.createElement(Box, Overlay_spreadValues({
      className: cx(classes.root, className),
      sx: [{
        backdropFilter: `blur(${blur}px)`
      }, ...packSx(sx)]
    }, others), innerOverlay());
  }
  return innerOverlay(others);
});
_Overlay.displayName = "@mantine/core/Overlay";
const Overlay = createPolymorphicComponent(_Overlay);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Paper/Paper.styles.js

var Paper_styles_useStyles = createStyles((theme, {
  radius,
  shadow,
  withBorder
}) => ({
  root: {
    outline: 0,
    WebkitTapHighlightColor: "transparent",
    display: "block",
    textDecoration: "none",
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
    backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
    boxSizing: "border-box",
    borderRadius: theme.fn.radius(radius),
    boxShadow: theme.shadows[shadow] || shadow || "none",
    border: withBorder ? `1px solid ${theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[3]}` : void 0
  }
}));
/* harmony default export */ var Paper_styles = (Paper_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Paper/Paper.js





var Paper_defProp = Object.defineProperty;
var Paper_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Paper_hasOwnProp = Object.prototype.hasOwnProperty;
var Paper_propIsEnum = Object.prototype.propertyIsEnumerable;
var Paper_defNormalProp = (obj, key, value) => key in obj ? Paper_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Paper_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Paper_hasOwnProp.call(b, prop)) Paper_defNormalProp(a, prop, b[prop]);
  if (Paper_getOwnPropSymbols) for (var prop of Paper_getOwnPropSymbols(b)) {
    if (Paper_propIsEnum.call(b, prop)) Paper_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Paper_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Paper_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Paper_getOwnPropSymbols) for (var prop of Paper_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Paper_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Paper_defaultProps = {};
const _Paper = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Paper", Paper_defaultProps, props),
    {
      className,
      children,
      radius,
      withBorder,
      shadow,
      unstyled
    } = _a,
    others = Paper_objRest(_a, ["className", "children", "radius", "withBorder", "shadow", "unstyled"]);
  const {
    classes,
    cx
  } = Paper_styles({
    radius,
    shadow,
    withBorder
  }, {
    name: "Paper",
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, Paper_spreadValues({
    className: cx(classes.root, className),
    ref
  }, others), children);
});
_Paper.displayName = "@mantine/core/Paper";
const Paper = createPolymorphicComponent(_Paper);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Text/Text.styles.js

var Text_styles_defProp = Object.defineProperty;
var Text_styles_defProps = Object.defineProperties;
var Text_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Text_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Text_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Text_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Text_styles_defNormalProp = (obj, key, value) => key in obj ? Text_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Text_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Text_styles_hasOwnProp.call(b, prop)) Text_styles_defNormalProp(a, prop, b[prop]);
  if (Text_styles_getOwnPropSymbols) for (var prop of Text_styles_getOwnPropSymbols(b)) {
    if (Text_styles_propIsEnum.call(b, prop)) Text_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Text_styles_spreadProps = (a, b) => Text_styles_defProps(a, Text_styles_getOwnPropDescs(b));
function getTextDecoration({
  underline,
  strikethrough
}) {
  const styles = [];
  if (underline) {
    styles.push("underline");
  }
  if (strikethrough) {
    styles.push("line-through");
  }
  return styles.length > 0 ? styles.join(" ") : "none";
}
function getTextColor({
  theme,
  color,
  variant
}) {
  if (color === "dimmed") {
    return theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[6];
  }
  return typeof color === "string" && (color in theme.colors || color.split(".")[0] in theme.colors) ? theme.fn.variant({
    variant: "filled",
    color
  }).background : variant === "link" ? theme.colors[theme.primaryColor][theme.colorScheme === "dark" ? 4 : 7] : color || "inherit";
}
function getLineClamp(lineClamp) {
  if (typeof lineClamp === "number") {
    return {
      overflow: "hidden",
      textOverflow: "ellipsis",
      display: "-webkit-box",
      WebkitLineClamp: lineClamp,
      WebkitBoxOrient: "vertical"
    };
  }
  return null;
}
function getTruncate(truncate) {
  if (truncate) {
    return {
      overflow: "hidden",
      textOverflow: "ellipsis",
      whiteSpace: "nowrap"
    };
  }
  return null;
}
var Text_styles_useStyles = createStyles((theme, {
  color,
  variant,
  size,
  lineClamp,
  truncate,
  inline,
  inherit,
  underline,
  gradient,
  weight,
  transform,
  align,
  strikethrough,
  italic
}) => {
  const colors = theme.fn.variant({
    variant: "gradient",
    gradient
  });
  return {
    root: Text_styles_spreadValues(Text_styles_spreadProps(Text_styles_spreadValues(Text_styles_spreadValues(Text_styles_spreadValues(Text_styles_spreadValues({}, theme.fn.fontStyles()), theme.fn.focusStyles()), getLineClamp(lineClamp)), getTruncate(truncate)), {
      color: getTextColor({
        color,
        theme,
        variant
      }),
      fontFamily: inherit ? "inherit" : theme.fontFamily,
      fontSize: inherit || size === void 0 ? "inherit" : theme.fn.size({
        size,
        sizes: theme.fontSizes
      }),
      lineHeight: inherit ? "inherit" : inline ? 1 : theme.lineHeight,
      textDecoration: getTextDecoration({
        underline,
        strikethrough
      }),
      WebkitTapHighlightColor: "transparent",
      fontWeight: inherit ? "inherit" : weight,
      textTransform: transform,
      textAlign: align,
      fontStyle: italic ? "italic" : void 0
    }), theme.fn.hover(variant === "link" && underline === void 0 ? {
      textDecoration: "underline"
    } : void 0)),
    gradient: {
      backgroundImage: colors.background,
      WebkitBackgroundClip: "text",
      WebkitTextFillColor: "transparent"
    }
  };
});
/* harmony default export */ var Text_styles = (Text_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Text/Text.js





var Text_defProp = Object.defineProperty;
var Text_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Text_hasOwnProp = Object.prototype.hasOwnProperty;
var Text_propIsEnum = Object.prototype.propertyIsEnumerable;
var Text_defNormalProp = (obj, key, value) => key in obj ? Text_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Text_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Text_hasOwnProp.call(b, prop)) Text_defNormalProp(a, prop, b[prop]);
  if (Text_getOwnPropSymbols) for (var prop of Text_getOwnPropSymbols(b)) {
    if (Text_propIsEnum.call(b, prop)) Text_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Text_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Text_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Text_getOwnPropSymbols) for (var prop of Text_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Text_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Text_defaultProps = {
  variant: "text"
};
const _Text = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Text", Text_defaultProps, props),
    {
      className,
      size,
      weight,
      transform,
      color,
      align,
      variant,
      lineClamp,
      truncate,
      gradient,
      inline,
      inherit,
      underline,
      strikethrough,
      italic,
      classNames,
      styles,
      unstyled,
      span
    } = _a,
    others = Text_objRest(_a, ["className", "size", "weight", "transform", "color", "align", "variant", "lineClamp", "truncate", "gradient", "inline", "inherit", "underline", "strikethrough", "italic", "classNames", "styles", "unstyled", "span"]);
  const {
    classes,
    cx
  } = Text_styles({
    variant,
    color,
    size,
    lineClamp,
    truncate,
    inline,
    inherit,
    underline,
    strikethrough,
    italic,
    weight,
    transform,
    align,
    gradient
  }, {
    unstyled,
    name: "Text"
  });
  return /* @__PURE__ */react.createElement(Box, Text_spreadValues({
    ref,
    className: cx(classes.root, {
      [classes.gradient]: variant === "gradient"
    }, className),
    component: span ? "span" : "div"
  }, others));
});
_Text.displayName = "@mantine/core/Text";
const Text = createPolymorphicComponent(_Text);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/ActionIcon/ActionIcon.styles.js

var ActionIcon_styles_defProp = Object.defineProperty;
var ActionIcon_styles_defProps = Object.defineProperties;
var ActionIcon_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var ActionIcon_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ActionIcon_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var ActionIcon_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var ActionIcon_styles_defNormalProp = (obj, key, value) => key in obj ? ActionIcon_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ActionIcon_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ActionIcon_styles_hasOwnProp.call(b, prop)) ActionIcon_styles_defNormalProp(a, prop, b[prop]);
  if (ActionIcon_styles_getOwnPropSymbols) for (var prop of ActionIcon_styles_getOwnPropSymbols(b)) {
    if (ActionIcon_styles_propIsEnum.call(b, prop)) ActionIcon_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ActionIcon_styles_spreadProps = (a, b) => ActionIcon_styles_defProps(a, ActionIcon_styles_getOwnPropDescs(b));
const ActionIcon_styles_sizes = {
  xs: 18,
  sm: 22,
  md: 28,
  lg: 34,
  xl: 44
};
function getVariantStyles({
  variant,
  theme,
  color,
  gradient
}) {
  const colors = theme.fn.variant({
    color,
    variant,
    gradient
  });
  if (variant === "gradient") {
    return {
      border: 0,
      backgroundImage: colors.background,
      color: colors.color,
      "&:hover": theme.fn.hover({
        backgroundSize: "200%"
      })
    };
  }
  return ActionIcon_styles_spreadValues({
    border: `1px solid ${colors.border}`,
    backgroundColor: colors.background,
    color: colors.color
  }, theme.fn.hover({
    backgroundColor: colors.hover
  }));
}
var ActionIcon_styles_useStyles = createStyles((theme, {
  color,
  size,
  radius,
  variant,
  gradient
}) => ({
  root: ActionIcon_styles_spreadProps(ActionIcon_styles_spreadValues({}, getVariantStyles({
    variant,
    theme,
    color,
    gradient
  })), {
    position: "relative",
    height: theme.fn.size({
      size,
      sizes: ActionIcon_styles_sizes
    }),
    minHeight: theme.fn.size({
      size,
      sizes: ActionIcon_styles_sizes
    }),
    width: theme.fn.size({
      size,
      sizes: ActionIcon_styles_sizes
    }),
    minWidth: theme.fn.size({
      size,
      sizes: ActionIcon_styles_sizes
    }),
    borderRadius: theme.fn.radius(radius),
    padding: 0,
    lineHeight: 1,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    "&:active": theme.activeStyles,
    "&:disabled, &[data-disabled]": {
      color: theme.colors.gray[theme.colorScheme === "dark" ? 6 : 4],
      cursor: "not-allowed",
      backgroundColor: variant === "transparent" ? void 0 : theme.fn.themeColor("gray", theme.colorScheme === "dark" ? 8 : 1),
      borderColor: variant === "transparent" ? void 0 : theme.fn.themeColor("gray", theme.colorScheme === "dark" ? 8 : 1),
      backgroundImage: "none",
      pointerEvents: "none",
      "&:active": {
        transform: "none"
      }
    },
    "&[data-loading]": {
      pointerEvents: "none",
      "&::before": {
        content: '""',
        position: "absolute",
        top: -1,
        left: -1,
        right: -1,
        bottom: -1,
        backgroundColor: theme.colorScheme === "dark" ? theme.fn.rgba(theme.colors.dark[7], 0.5) : "rgba(255, 255, 255, .5)",
        borderRadius: theme.fn.radius(radius),
        cursor: "not-allowed"
      }
    }
  })
}));
/* harmony default export */ var ActionIcon_styles = (ActionIcon_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Loader/loaders/Bars.js

var Bars_defProp = Object.defineProperty;
var Bars_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Bars_hasOwnProp = Object.prototype.hasOwnProperty;
var Bars_propIsEnum = Object.prototype.propertyIsEnumerable;
var Bars_defNormalProp = (obj, key, value) => key in obj ? Bars_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Bars_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Bars_hasOwnProp.call(b, prop)) Bars_defNormalProp(a, prop, b[prop]);
  if (Bars_getOwnPropSymbols) for (var prop of Bars_getOwnPropSymbols(b)) {
    if (Bars_propIsEnum.call(b, prop)) Bars_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Bars_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Bars_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Bars_getOwnPropSymbols) for (var prop of Bars_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Bars_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function Bars(_a) {
  var _b = _a,
    {
      size,
      color
    } = _b,
    others = Bars_objRest(_b, ["size", "color"]);
  return /* @__PURE__ */react.createElement("svg", Bars_spreadValues({
    viewBox: "0 0 135 140",
    xmlns: "http://www.w3.org/2000/svg",
    fill: color,
    width: `${size}px`
  }, others), /* @__PURE__ */react.createElement("rect", {
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "height",
    begin: "0.5s",
    dur: "1s",
    values: "120;110;100;90;80;70;60;50;40;140;120",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "y",
    begin: "0.5s",
    dur: "1s",
    values: "10;15;20;25;30;35;40;45;50;0;10",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("rect", {
    x: "30",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "height",
    begin: "0.25s",
    dur: "1s",
    values: "120;110;100;90;80;70;60;50;40;140;120",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "y",
    begin: "0.25s",
    dur: "1s",
    values: "10;15;20;25;30;35;40;45;50;0;10",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("rect", {
    x: "60",
    width: "15",
    height: "140",
    rx: "6"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "height",
    begin: "0s",
    dur: "1s",
    values: "120;110;100;90;80;70;60;50;40;140;120",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "y",
    begin: "0s",
    dur: "1s",
    values: "10;15;20;25;30;35;40;45;50;0;10",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("rect", {
    x: "90",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "height",
    begin: "0.25s",
    dur: "1s",
    values: "120;110;100;90;80;70;60;50;40;140;120",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "y",
    begin: "0.25s",
    dur: "1s",
    values: "10;15;20;25;30;35;40;45;50;0;10",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("rect", {
    x: "120",
    y: "10",
    width: "15",
    height: "120",
    rx: "6"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "height",
    begin: "0.5s",
    dur: "1s",
    values: "120;110;100;90;80;70;60;50;40;140;120",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "y",
    begin: "0.5s",
    dur: "1s",
    values: "10;15;20;25;30;35;40;45;50;0;10",
    calcMode: "linear",
    repeatCount: "indefinite"
  })));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Loader/loaders/Oval.js

var Oval_defProp = Object.defineProperty;
var Oval_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Oval_hasOwnProp = Object.prototype.hasOwnProperty;
var Oval_propIsEnum = Object.prototype.propertyIsEnumerable;
var Oval_defNormalProp = (obj, key, value) => key in obj ? Oval_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Oval_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Oval_hasOwnProp.call(b, prop)) Oval_defNormalProp(a, prop, b[prop]);
  if (Oval_getOwnPropSymbols) for (var prop of Oval_getOwnPropSymbols(b)) {
    if (Oval_propIsEnum.call(b, prop)) Oval_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Oval_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Oval_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Oval_getOwnPropSymbols) for (var prop of Oval_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Oval_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function Oval(_a) {
  var _b = _a,
    {
      size,
      color
    } = _b,
    others = Oval_objRest(_b, ["size", "color"]);
  return /* @__PURE__ */react.createElement("svg", Oval_spreadValues({
    width: `${size}px`,
    height: `${size}px`,
    viewBox: "0 0 38 38",
    xmlns: "http://www.w3.org/2000/svg",
    stroke: color
  }, others), /* @__PURE__ */react.createElement("g", {
    fill: "none",
    fillRule: "evenodd"
  }, /* @__PURE__ */react.createElement("g", {
    transform: "translate(2.5 2.5)",
    strokeWidth: "5"
  }, /* @__PURE__ */react.createElement("circle", {
    strokeOpacity: ".5",
    cx: "16",
    cy: "16",
    r: "16"
  }), /* @__PURE__ */react.createElement("path", {
    d: "M32 16c0-9.94-8.06-16-16-16"
  }, /* @__PURE__ */react.createElement("animateTransform", {
    attributeName: "transform",
    type: "rotate",
    from: "0 16 16",
    to: "360 16 16",
    dur: "1s",
    repeatCount: "indefinite"
  })))));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Loader/loaders/Dots.js

var Dots_defProp = Object.defineProperty;
var Dots_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Dots_hasOwnProp = Object.prototype.hasOwnProperty;
var Dots_propIsEnum = Object.prototype.propertyIsEnumerable;
var Dots_defNormalProp = (obj, key, value) => key in obj ? Dots_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Dots_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Dots_hasOwnProp.call(b, prop)) Dots_defNormalProp(a, prop, b[prop]);
  if (Dots_getOwnPropSymbols) for (var prop of Dots_getOwnPropSymbols(b)) {
    if (Dots_propIsEnum.call(b, prop)) Dots_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Dots_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Dots_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Dots_getOwnPropSymbols) for (var prop of Dots_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Dots_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function Dots(_a) {
  var _b = _a,
    {
      size,
      color
    } = _b,
    others = Dots_objRest(_b, ["size", "color"]);
  return /* @__PURE__ */react.createElement("svg", Dots_spreadValues({
    width: `${size}px`,
    height: `${size / 4}px`,
    viewBox: "0 0 120 30",
    xmlns: "http://www.w3.org/2000/svg",
    fill: color
  }, others), /* @__PURE__ */react.createElement("circle", {
    cx: "15",
    cy: "15",
    r: "15"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "r",
    from: "15",
    to: "15",
    begin: "0s",
    dur: "0.8s",
    values: "15;9;15",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "fill-opacity",
    from: "1",
    to: "1",
    begin: "0s",
    dur: "0.8s",
    values: "1;.5;1",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("circle", {
    cx: "60",
    cy: "15",
    r: "9",
    fillOpacity: "0.3"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "r",
    from: "9",
    to: "9",
    begin: "0s",
    dur: "0.8s",
    values: "9;15;9",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "fill-opacity",
    from: "0.5",
    to: "0.5",
    begin: "0s",
    dur: "0.8s",
    values: ".5;1;.5",
    calcMode: "linear",
    repeatCount: "indefinite"
  })), /* @__PURE__ */react.createElement("circle", {
    cx: "105",
    cy: "15",
    r: "15"
  }, /* @__PURE__ */react.createElement("animate", {
    attributeName: "r",
    from: "15",
    to: "15",
    begin: "0s",
    dur: "0.8s",
    values: "15;9;15",
    calcMode: "linear",
    repeatCount: "indefinite"
  }), /* @__PURE__ */react.createElement("animate", {
    attributeName: "fill-opacity",
    from: "1",
    to: "1",
    begin: "0s",
    dur: "0.8s",
    values: "1;.5;1",
    calcMode: "linear",
    repeatCount: "indefinite"
  })));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Loader/Loader.js






var Loader_defProp = Object.defineProperty;
var Loader_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Loader_hasOwnProp = Object.prototype.hasOwnProperty;
var Loader_propIsEnum = Object.prototype.propertyIsEnumerable;
var Loader_defNormalProp = (obj, key, value) => key in obj ? Loader_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Loader_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Loader_hasOwnProp.call(b, prop)) Loader_defNormalProp(a, prop, b[prop]);
  if (Loader_getOwnPropSymbols) for (var prop of Loader_getOwnPropSymbols(b)) {
    if (Loader_propIsEnum.call(b, prop)) Loader_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Loader_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Loader_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Loader_getOwnPropSymbols) for (var prop of Loader_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Loader_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const LOADERS = {
  bars: Bars,
  oval: Oval,
  dots: Dots
};
const Loader_sizes = {
  xs: 18,
  sm: 22,
  md: 36,
  lg: 44,
  xl: 58
};
const Loader_defaultProps = {
  size: "md"
};
function Loader(props) {
  const _a = useComponentDefaultProps("Loader", Loader_defaultProps, props),
    {
      size,
      color,
      variant
    } = _a,
    others = Loader_objRest(_a, ["size", "color", "variant"]);
  const theme = useMantineTheme();
  const defaultLoader = variant in LOADERS ? variant : theme.loader;
  return /* @__PURE__ */react.createElement(Box, Loader_spreadValues({
    role: "presentation",
    component: LOADERS[defaultLoader] || LOADERS.bars,
    size: theme.fn.size({
      size,
      sizes: Loader_sizes
    }),
    color: theme.fn.variant({
      variant: "filled",
      primaryFallback: false,
      color: color || theme.primaryColor
    }).background
  }, others));
}
Loader.displayName = "@mantine/core/Loader";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/UnstyledButton/UnstyledButton.styles.js

var UnstyledButton_styles_defProp = Object.defineProperty;
var UnstyledButton_styles_defProps = Object.defineProperties;
var UnstyledButton_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var UnstyledButton_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var UnstyledButton_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var UnstyledButton_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var UnstyledButton_styles_defNormalProp = (obj, key, value) => key in obj ? UnstyledButton_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var UnstyledButton_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (UnstyledButton_styles_hasOwnProp.call(b, prop)) UnstyledButton_styles_defNormalProp(a, prop, b[prop]);
  if (UnstyledButton_styles_getOwnPropSymbols) for (var prop of UnstyledButton_styles_getOwnPropSymbols(b)) {
    if (UnstyledButton_styles_propIsEnum.call(b, prop)) UnstyledButton_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var UnstyledButton_styles_spreadProps = (a, b) => UnstyledButton_styles_defProps(a, UnstyledButton_styles_getOwnPropDescs(b));
var UnstyledButton_styles_useStyles = createStyles(theme => ({
  root: UnstyledButton_styles_spreadProps(UnstyledButton_styles_spreadValues(UnstyledButton_styles_spreadValues({}, theme.fn.focusStyles()), theme.fn.fontStyles()), {
    cursor: "pointer",
    border: 0,
    padding: 0,
    appearance: "none",
    fontSize: theme.fontSizes.md,
    backgroundColor: "transparent",
    textAlign: "left",
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
    textDecoration: "none",
    boxSizing: "border-box"
  })
}));
/* harmony default export */ var UnstyledButton_styles = (UnstyledButton_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/UnstyledButton/UnstyledButton.js





var UnstyledButton_defProp = Object.defineProperty;
var UnstyledButton_getOwnPropSymbols = Object.getOwnPropertySymbols;
var UnstyledButton_hasOwnProp = Object.prototype.hasOwnProperty;
var UnstyledButton_propIsEnum = Object.prototype.propertyIsEnumerable;
var UnstyledButton_defNormalProp = (obj, key, value) => key in obj ? UnstyledButton_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var UnstyledButton_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (UnstyledButton_hasOwnProp.call(b, prop)) UnstyledButton_defNormalProp(a, prop, b[prop]);
  if (UnstyledButton_getOwnPropSymbols) for (var prop of UnstyledButton_getOwnPropSymbols(b)) {
    if (UnstyledButton_propIsEnum.call(b, prop)) UnstyledButton_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var UnstyledButton_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (UnstyledButton_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && UnstyledButton_getOwnPropSymbols) for (var prop of UnstyledButton_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && UnstyledButton_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const _UnstyledButton = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("UnstyledButton", {}, props),
    {
      className,
      component = "button",
      unstyled
    } = _a,
    others = UnstyledButton_objRest(_a, ["className", "component", "unstyled"]);
  const {
    classes,
    cx
  } = UnstyledButton_styles(null, {
    name: "UnstyledButton",
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, UnstyledButton_spreadValues({
    component,
    ref,
    className: cx(classes.root, className),
    type: component === "button" ? "button" : void 0
  }, others));
});
_UnstyledButton.displayName = "@mantine/core/UnstyledButton";
const UnstyledButton = createPolymorphicComponent(_UnstyledButton);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/ActionIcon/ActionIcon.js






var ActionIcon_defProp = Object.defineProperty;
var ActionIcon_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ActionIcon_hasOwnProp = Object.prototype.hasOwnProperty;
var ActionIcon_propIsEnum = Object.prototype.propertyIsEnumerable;
var ActionIcon_defNormalProp = (obj, key, value) => key in obj ? ActionIcon_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ActionIcon_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ActionIcon_hasOwnProp.call(b, prop)) ActionIcon_defNormalProp(a, prop, b[prop]);
  if (ActionIcon_getOwnPropSymbols) for (var prop of ActionIcon_getOwnPropSymbols(b)) {
    if (ActionIcon_propIsEnum.call(b, prop)) ActionIcon_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ActionIcon_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (ActionIcon_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && ActionIcon_getOwnPropSymbols) for (var prop of ActionIcon_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && ActionIcon_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const ActionIcon_defaultProps = {
  color: "gray",
  size: "md",
  variant: "subtle",
  loading: false
};
const _ActionIcon = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("ActionIcon", ActionIcon_defaultProps, props),
    {
      className,
      color,
      children,
      radius,
      size,
      variant,
      gradient,
      disabled,
      loaderProps,
      loading,
      unstyled
    } = _a,
    others = ActionIcon_objRest(_a, ["className", "color", "children", "radius", "size", "variant", "gradient", "disabled", "loaderProps", "loading", "unstyled"]);
  const {
    classes,
    cx,
    theme
  } = ActionIcon_styles({
    size,
    radius,
    color,
    variant,
    gradient
  }, {
    name: "ActionIcon",
    unstyled
  });
  const colors = theme.fn.variant({
    color,
    variant
  });
  const loader = /* @__PURE__ */react.createElement(Loader, ActionIcon_spreadValues({
    color: colors.color,
    size: theme.fn.size({
      size,
      sizes: ActionIcon_styles_sizes
    }) - 12
  }, loaderProps));
  return /* @__PURE__ */react.createElement(UnstyledButton, ActionIcon_spreadValues({
    className: cx(classes.root, className),
    ref,
    disabled,
    "data-disabled": disabled || void 0,
    "data-loading": loading || void 0,
    unstyled
  }, others), loading ? loader : children);
});
_ActionIcon.displayName = "@mantine/core/ActionIcon";
const ActionIcon = createPolymorphicComponent(_ActionIcon);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/CloseButton/CloseIcon.js

var CloseIcon_defProp = Object.defineProperty;
var CloseIcon_getOwnPropSymbols = Object.getOwnPropertySymbols;
var CloseIcon_hasOwnProp = Object.prototype.hasOwnProperty;
var CloseIcon_propIsEnum = Object.prototype.propertyIsEnumerable;
var CloseIcon_defNormalProp = (obj, key, value) => key in obj ? CloseIcon_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var CloseIcon_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (CloseIcon_hasOwnProp.call(b, prop)) CloseIcon_defNormalProp(a, prop, b[prop]);
  if (CloseIcon_getOwnPropSymbols) for (var prop of CloseIcon_getOwnPropSymbols(b)) {
    if (CloseIcon_propIsEnum.call(b, prop)) CloseIcon_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
function CloseIcon(props) {
  return /* @__PURE__ */react.createElement("svg", CloseIcon_spreadValues({
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /* @__PURE__ */react.createElement("path", {
    d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}
CloseIcon.displayName = "@mantine/core/CloseIcon";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/CloseButton/CloseButton.js





var CloseButton_defProp = Object.defineProperty;
var CloseButton_getOwnPropSymbols = Object.getOwnPropertySymbols;
var CloseButton_hasOwnProp = Object.prototype.hasOwnProperty;
var CloseButton_propIsEnum = Object.prototype.propertyIsEnumerable;
var CloseButton_defNormalProp = (obj, key, value) => key in obj ? CloseButton_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var CloseButton_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (CloseButton_hasOwnProp.call(b, prop)) CloseButton_defNormalProp(a, prop, b[prop]);
  if (CloseButton_getOwnPropSymbols) for (var prop of CloseButton_getOwnPropSymbols(b)) {
    if (CloseButton_propIsEnum.call(b, prop)) CloseButton_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var CloseButton_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (CloseButton_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && CloseButton_getOwnPropSymbols) for (var prop of CloseButton_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && CloseButton_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const iconSizes = {
  xs: 12,
  sm: 14,
  md: 16,
  lg: 20,
  xl: 24
};
const CloseButton_defaultProps = {
  size: "md"
};
const _CloseButton = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("CloseButton", CloseButton_defaultProps, props),
    {
      iconSize,
      size = "md"
    } = _a,
    others = CloseButton_objRest(_a, ["iconSize", "size"]);
  const theme = useMantineTheme();
  const _iconSize = iconSize || theme.fn.size({
    size,
    sizes: iconSizes
  });
  return /* @__PURE__ */react.createElement(ActionIcon, CloseButton_spreadValues({
    size,
    ref
  }, others), /* @__PURE__ */react.createElement(CloseIcon, {
    width: _iconSize,
    height: _iconSize
  }));
});
_CloseButton.displayName = "@mantine/core/CloseButton";
const CloseButton = createPolymorphicComponent(_CloseButton);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Modal/Modal.js











var Modal_defProp = Object.defineProperty;
var Modal_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Modal_hasOwnProp = Object.prototype.hasOwnProperty;
var Modal_propIsEnum = Object.prototype.propertyIsEnumerable;
var Modal_defNormalProp = (obj, key, value) => key in obj ? Modal_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Modal_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Modal_hasOwnProp.call(b, prop)) Modal_defNormalProp(a, prop, b[prop]);
  if (Modal_getOwnPropSymbols) for (var prop of Modal_getOwnPropSymbols(b)) {
    if (Modal_propIsEnum.call(b, prop)) Modal_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Modal_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Modal_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Modal_getOwnPropSymbols) for (var prop of Modal_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Modal_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Modal_defaultProps = {
  size: "md",
  transitionDuration: 250,
  overflow: "outside",
  padding: "lg",
  shadow: "lg",
  closeOnClickOutside: true,
  closeOnEscape: true,
  trapFocus: true,
  withCloseButton: true,
  withinPortal: true,
  lockScroll: true,
  withFocusReturn: true,
  overlayBlur: 0,
  zIndex: getDefaultZIndex("modal"),
  exitTransitionDuration: 0
};
function Modal(props) {
  const _a = useComponentDefaultProps("Modal", Modal_defaultProps, props),
    {
      className,
      opened,
      title,
      onClose,
      children,
      withCloseButton,
      overlayOpacity,
      size,
      transitionDuration,
      exitTransitionDuration,
      closeButtonLabel,
      overlayColor,
      overflow,
      transition,
      padding,
      shadow,
      radius,
      id,
      classNames,
      styles,
      closeOnClickOutside,
      trapFocus,
      closeOnEscape,
      centered,
      target,
      withinPortal,
      zIndex,
      overlayBlur,
      transitionTimingFunction,
      fullScreen,
      unstyled,
      lockScroll: shouldLockScroll,
      withFocusReturn
    } = _a,
    others = Modal_objRest(_a, ["className", "opened", "title", "onClose", "children", "withCloseButton", "overlayOpacity", "size", "transitionDuration", "exitTransitionDuration", "closeButtonLabel", "overlayColor", "overflow", "transition", "padding", "shadow", "radius", "id", "classNames", "styles", "closeOnClickOutside", "trapFocus", "closeOnEscape", "centered", "target", "withinPortal", "zIndex", "overlayBlur", "transitionTimingFunction", "fullScreen", "unstyled", "lockScroll", "withFocusReturn"]);
  const baseId = useId(id);
  const titleId = `${baseId}-title`;
  const bodyId = `${baseId}-body`;
  const {
    classes,
    cx,
    theme
  } = Modal_styles({
    size,
    overflow,
    centered,
    zIndex,
    fullScreen
  }, {
    unstyled,
    classNames,
    styles,
    name: "Modal"
  });
  const focusTrapRef = useFocusTrap(trapFocus && opened);
  const overlayRef = (0,react_production_min.useRef)(null);
  const mergedRef = useMergedRef(focusTrapRef, overlayRef);
  const _overlayOpacity = typeof overlayOpacity === "number" ? overlayOpacity : theme.colorScheme === "dark" ? 0.85 : 0.75;
  useScrollLock(shouldLockScroll && opened);
  const closeOnEscapePress = event => {
    if (!trapFocus && event.key === "Escape" && closeOnEscape) {
      onClose();
    }
  };
  (0,react_production_min.useEffect)(() => {
    if (!trapFocus) {
      window.addEventListener("keydown", closeOnEscapePress);
      return () => window.removeEventListener("keydown", closeOnEscapePress);
    }
    return void 0;
  }, [trapFocus]);
  useFocusReturn({
    opened,
    shouldReturnFocus: trapFocus && withFocusReturn
  });
  const clickTarget = (0,react_production_min.useRef)(null);
  useWindowEvent("mousedown", e => {
    clickTarget.current = e.target;
  });
  const handleOutsideClick = () => {
    if (clickTarget.current === overlayRef.current) {
      closeOnClickOutside && onClose();
    }
  };
  return /* @__PURE__ */react.createElement(OptionalPortal, {
    withinPortal,
    target
  }, /* @__PURE__ */react.createElement(GroupedTransition, {
    mounted: opened,
    duration: transitionDuration,
    exitDuration: exitTransitionDuration,
    timingFunction: transitionTimingFunction,
    transitions: {
      modal: {
        duration: transitionDuration,
        transition: transition || (fullScreen ? "fade" : "pop")
      },
      overlay: {
        duration: transitionDuration / 2,
        transition: "fade",
        timingFunction: "ease"
      }
    }
  }, transitionStyles => /* @__PURE__ */react.createElement(react.Fragment, null, /* @__PURE__ */react.createElement(Box, Modal_spreadValues({
    id: baseId,
    className: cx(classes.root, className)
  }, others), /* @__PURE__ */react.createElement("div", {
    style: transitionStyles.overlay
  }, /* @__PURE__ */react.createElement(Overlay, {
    className: classes.overlay,
    sx: {
      position: "fixed"
    },
    zIndex: 0,
    blur: overlayBlur,
    color: overlayColor || (theme.colorScheme === "dark" ? theme.colors.dark[9] : theme.black),
    opacity: _overlayOpacity,
    unstyled
  })), /* @__PURE__ */react.createElement("div", {
    role: "presentation",
    className: classes.inner,
    onClick: handleOutsideClick,
    onKeyDown: event => {
      var _a2;
      const shouldTrigger = ((_a2 = event.target) == null ? void 0 : _a2.getAttribute("data-mantine-stop-propagation")) !== "true";
      shouldTrigger && event.key === "Escape" && closeOnEscape && onClose();
    },
    ref: mergedRef
  }, /* @__PURE__ */react.createElement(Paper, {
    className: classes.modal,
    shadow,
    p: padding,
    radius,
    role: "dialog",
    "aria-labelledby": titleId,
    "aria-describedby": bodyId,
    "aria-modal": true,
    tabIndex: -1,
    style: transitionStyles.modal,
    unstyled,
    onClick: event => event.stopPropagation()
  }, (title || withCloseButton) && /* @__PURE__ */react.createElement("div", {
    className: classes.header
  }, /* @__PURE__ */react.createElement(Text, {
    id: titleId,
    className: classes.title
  }, title), withCloseButton && /* @__PURE__ */react.createElement(CloseButton, {
    iconSize: 16,
    onClick: onClose,
    "aria-label": closeButtonLabel,
    className: classes.close
  })), /* @__PURE__ */react.createElement("div", {
    id: bodyId,
    className: classes.body
  }, children)))))));
}
Modal.displayName = "@mantine/core/Modal";

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/utils/random-id/random-id.js
function random_id_randomId() {
  return `mantine-${Math.random().toString(36).slice(2, 11)}`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/context.js

const ModalsContext = (0,react_production_min.createContext)(null);
ModalsContext.displayName = "@mantine/modals/ModalsContext";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Group/filter-falsy-children/filter-falsy-children.js

function filterFalsyChildren(children) {
  return react_production_min.Children.toArray(children).filter(Boolean);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Group/Group.styles.js

const GROUP_POSITIONS = {
  left: "flex-start",
  center: "center",
  right: "flex-end",
  apart: "space-between"
};
var Group_styles_useStyles = createStyles((theme, {
  spacing,
  position,
  noWrap,
  grow,
  align,
  count
}) => ({
  root: {
    boxSizing: "border-box",
    display: "flex",
    flexDirection: "row",
    alignItems: align || "center",
    flexWrap: noWrap ? "nowrap" : "wrap",
    justifyContent: GROUP_POSITIONS[position],
    gap: theme.fn.size({
      size: spacing,
      sizes: theme.spacing
    }),
    "& > *": {
      boxSizing: "border-box",
      maxWidth: grow ? `calc(${100 / count}% - ${theme.fn.size({
        size: spacing,
        sizes: theme.spacing
      }) - theme.fn.size({
        size: spacing,
        sizes: theme.spacing
      }) / count}px)` : void 0,
      flexGrow: grow ? 1 : 0
    }
  }
}));
/* harmony default export */ var Group_styles = (Group_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Group/Group.js





var Group_defProp = Object.defineProperty;
var Group_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Group_hasOwnProp = Object.prototype.hasOwnProperty;
var Group_propIsEnum = Object.prototype.propertyIsEnumerable;
var Group_defNormalProp = (obj, key, value) => key in obj ? Group_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Group_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Group_hasOwnProp.call(b, prop)) Group_defNormalProp(a, prop, b[prop]);
  if (Group_getOwnPropSymbols) for (var prop of Group_getOwnPropSymbols(b)) {
    if (Group_propIsEnum.call(b, prop)) Group_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Group_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Group_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Group_getOwnPropSymbols) for (var prop of Group_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Group_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Group_defaultProps = {
  position: "left",
  spacing: "md"
};
const Group = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Group", Group_defaultProps, props),
    {
      className,
      position,
      align,
      children,
      noWrap,
      grow,
      spacing,
      unstyled
    } = _a,
    others = Group_objRest(_a, ["className", "position", "align", "children", "noWrap", "grow", "spacing", "unstyled"]);
  const filteredChildren = filterFalsyChildren(children);
  const {
    classes,
    cx
  } = Group_styles({
    align,
    grow,
    noWrap,
    spacing,
    position,
    count: filteredChildren.length
  }, {
    unstyled,
    name: "Group"
  });
  return /* @__PURE__ */react.createElement(Box, Group_spreadValues({
    className: cx(classes.root, className),
    ref
  }, others), filteredChildren);
});
Group.displayName = "@mantine/core/Group";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Button/ButtonGroup/ButtonGroup.styles.js

var ButtonGroup_styles_useStyles = createStyles((_theme, {
  orientation,
  buttonBorderWidth
}) => ({
  root: {
    display: "flex",
    flexDirection: orientation === "vertical" ? "column" : "row",
    "& [data-button]": {
      "&:first-of-type": {
        borderBottomRightRadius: 0,
        [orientation === "vertical" ? "borderBottomLeftRadius" : "borderTopRightRadius"]: 0,
        [orientation === "vertical" ? "borderBottomWidth" : "borderRightWidth"]: buttonBorderWidth / 2
      },
      "&:last-of-type": {
        borderTopLeftRadius: 0,
        [orientation === "vertical" ? "borderTopRightRadius" : "borderBottomLeftRadius"]: 0,
        [orientation === "vertical" ? "borderTopWidth" : "borderLeftWidth"]: buttonBorderWidth / 2
      },
      "&:not(:first-of-type):not(:last-of-type)": {
        borderRadius: 0,
        [orientation === "vertical" ? "borderTopWidth" : "borderLeftWidth"]: buttonBorderWidth / 2,
        [orientation === "vertical" ? "borderBottomWidth" : "borderRightWidth"]: buttonBorderWidth / 2
      },
      "& + [data-button]": {
        [orientation === "vertical" ? "marginTop" : "marginLeft"]: -buttonBorderWidth,
        "@media (min-resolution: 192dpi)": {
          [orientation === "vertical" ? "marginTop" : "marginLeft"]: 0
        }
      }
    }
  }
}));
/* harmony default export */ var ButtonGroup_styles = (ButtonGroup_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Button/ButtonGroup/ButtonGroup.js




var ButtonGroup_defProp = Object.defineProperty;
var ButtonGroup_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ButtonGroup_hasOwnProp = Object.prototype.hasOwnProperty;
var ButtonGroup_propIsEnum = Object.prototype.propertyIsEnumerable;
var ButtonGroup_defNormalProp = (obj, key, value) => key in obj ? ButtonGroup_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ButtonGroup_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ButtonGroup_hasOwnProp.call(b, prop)) ButtonGroup_defNormalProp(a, prop, b[prop]);
  if (ButtonGroup_getOwnPropSymbols) for (var prop of ButtonGroup_getOwnPropSymbols(b)) {
    if (ButtonGroup_propIsEnum.call(b, prop)) ButtonGroup_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ButtonGroup_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (ButtonGroup_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && ButtonGroup_getOwnPropSymbols) for (var prop of ButtonGroup_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && ButtonGroup_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const ButtonGroup_defaultProps = {
  orientation: "horizontal",
  buttonBorderWidth: 1
};
const ButtonGroup = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("ButtonGroup", ButtonGroup_defaultProps, props),
    {
      className,
      orientation,
      buttonBorderWidth,
      unstyled
    } = _a,
    others = ButtonGroup_objRest(_a, ["className", "orientation", "buttonBorderWidth", "unstyled"]);
  const {
    classes,
    cx
  } = ButtonGroup_styles({
    orientation,
    buttonBorderWidth
  }, {
    name: "ButtonGroup",
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, ButtonGroup_spreadValues({
    className: cx(classes.root, className),
    ref
  }, others));
});
ButtonGroup.displayName = "@mantine/core/ButtonGroup";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/Input.styles.js

var Input_styles_defProp = Object.defineProperty;
var Input_styles_defProps = Object.defineProperties;
var Input_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Input_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Input_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Input_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Input_styles_defNormalProp = (obj, key, value) => key in obj ? Input_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Input_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Input_styles_hasOwnProp.call(b, prop)) Input_styles_defNormalProp(a, prop, b[prop]);
  if (Input_styles_getOwnPropSymbols) for (var prop of Input_styles_getOwnPropSymbols(b)) {
    if (Input_styles_propIsEnum.call(b, prop)) Input_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Input_styles_spreadProps = (a, b) => Input_styles_defProps(a, Input_styles_getOwnPropDescs(b));
const Input_styles_sizes = {
  xs: 30,
  sm: 36,
  md: 42,
  lg: 50,
  xl: 60
};
function Input_styles_getVariantStyles({
  theme,
  variant
}) {
  if (variant === "default") {
    return {
      border: `1px solid ${theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[4]}`,
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.white,
      transition: "border-color 100ms ease",
      "&:focus, &:focus-within": theme.focusRingStyles.inputStyles(theme)
    };
  }
  if (variant === "filled") {
    return {
      border: "1px solid transparent",
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[1],
      "&:focus, &:focus-within": theme.focusRingStyles.inputStyles(theme)
    };
  }
  return {
    borderWidth: 0,
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
    backgroundColor: "transparent",
    minHeight: 28,
    outline: 0,
    "&:focus, &:focus-within": {
      outline: "none",
      borderColor: "transparent"
    },
    "&:disabled": {
      backgroundColor: "transparent",
      "&:focus, &:focus-within": {
        outline: "none",
        borderColor: "transparent"
      }
    }
  };
}
var Input_styles_useStyles = createStyles((theme, {
  size,
  multiline,
  radius,
  variant,
  invalid,
  rightSectionWidth,
  withRightSection,
  iconWidth,
  offsetBottom,
  offsetTop,
  pointer
}) => {
  const invalidColor = theme.fn.variant({
    variant: "filled",
    color: "red"
  }).background;
  const sizeStyles = variant === "default" || variant === "filled" ? {
    minHeight: theme.fn.size({
      size,
      sizes: Input_styles_sizes
    }),
    paddingLeft: theme.fn.size({
      size,
      sizes: Input_styles_sizes
    }) / 3,
    paddingRight: withRightSection ? rightSectionWidth : theme.fn.size({
      size,
      sizes: Input_styles_sizes
    }) / 3,
    borderRadius: theme.fn.radius(radius)
  } : null;
  return {
    wrapper: {
      position: "relative",
      marginTop: offsetTop ? `calc(${theme.spacing.xs}px / 2)` : void 0,
      marginBottom: offsetBottom ? `calc(${theme.spacing.xs}px / 2)` : void 0
    },
    input: Input_styles_spreadValues(Input_styles_spreadProps(Input_styles_spreadValues(Input_styles_spreadProps(Input_styles_spreadValues({}, theme.fn.fontStyles()), {
      height: multiline ? variant === "unstyled" ? void 0 : "auto" : theme.fn.size({
        size,
        sizes: Input_styles_sizes
      }),
      WebkitTapHighlightColor: "transparent",
      lineHeight: multiline ? theme.lineHeight : `${theme.fn.size({
        size,
        sizes: Input_styles_sizes
      }) - 2}px`,
      appearance: "none",
      resize: "none",
      boxSizing: "border-box",
      fontSize: theme.fn.size({
        size,
        sizes: theme.fontSizes
      }),
      width: "100%",
      color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
      display: "block",
      textAlign: "left",
      cursor: pointer ? "pointer" : void 0
    }), sizeStyles), {
      "&:disabled": {
        backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[1],
        color: theme.colors.dark[2],
        opacity: 0.6,
        cursor: "not-allowed",
        "&::placeholder": {
          color: theme.colors.dark[2]
        }
      },
      "&::placeholder": Input_styles_spreadProps(Input_styles_spreadValues({}, theme.fn.placeholderStyles()), {
        opacity: 1
      }),
      "&::-webkit-inner-spin-button, &::-webkit-outer-spin-button, &::-webkit-search-decoration, &::-webkit-search-cancel-button, &::-webkit-search-results-button, &::-webkit-search-results-decoration": {
        appearance: "none"
      },
      "&[type=number]": {
        MozAppearance: "textfield"
      }
    }), Input_styles_getVariantStyles({
      theme,
      variant
    })),
    withIcon: {
      paddingLeft: typeof iconWidth === "number" ? iconWidth : theme.fn.size({
        size,
        sizes: Input_styles_sizes
      })
    },
    invalid: {
      color: invalidColor,
      borderColor: invalidColor,
      "&::placeholder": {
        opacity: 1,
        color: invalidColor
      }
    },
    disabled: {
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[1],
      color: theme.colors.dark[2],
      opacity: 0.6,
      cursor: "not-allowed",
      "&::placeholder": {
        color: theme.colors.dark[2]
      }
    },
    icon: {
      pointerEvents: "none",
      position: "absolute",
      zIndex: 1,
      left: 0,
      top: 0,
      bottom: 0,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      width: typeof iconWidth === "number" ? iconWidth : theme.fn.size({
        size,
        sizes: Input_styles_sizes
      }),
      color: invalid ? theme.colors.red[theme.colorScheme === "dark" ? 6 : 7] : theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[5]
    },
    rightSection: {
      position: "absolute",
      top: 0,
      bottom: 0,
      right: 0,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      width: rightSectionWidth
    }
  };
});
/* harmony default export */ var Input_styles = (Input_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Button/Button.styles.js


var Button_styles_defProp = Object.defineProperty;
var Button_styles_defProps = Object.defineProperties;
var Button_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Button_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Button_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Button_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Button_styles_defNormalProp = (obj, key, value) => key in obj ? Button_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Button_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Button_styles_hasOwnProp.call(b, prop)) Button_styles_defNormalProp(a, prop, b[prop]);
  if (Button_styles_getOwnPropSymbols) for (var prop of Button_styles_getOwnPropSymbols(b)) {
    if (Button_styles_propIsEnum.call(b, prop)) Button_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Button_styles_spreadProps = (a, b) => Button_styles_defProps(a, Button_styles_getOwnPropDescs(b));
const Button_styles_sizes = {
  xs: {
    height: Input_styles_sizes.xs,
    paddingLeft: 14,
    paddingRight: 14
  },
  sm: {
    height: Input_styles_sizes.sm,
    paddingLeft: 18,
    paddingRight: 18
  },
  md: {
    height: Input_styles_sizes.md,
    paddingLeft: 22,
    paddingRight: 22
  },
  lg: {
    height: Input_styles_sizes.lg,
    paddingLeft: 26,
    paddingRight: 26
  },
  xl: {
    height: Input_styles_sizes.xl,
    paddingLeft: 32,
    paddingRight: 32
  },
  "compact-xs": {
    height: 22,
    paddingLeft: 7,
    paddingRight: 7
  },
  "compact-sm": {
    height: 26,
    paddingLeft: 8,
    paddingRight: 8
  },
  "compact-md": {
    height: 30,
    paddingLeft: 10,
    paddingRight: 10
  },
  "compact-lg": {
    height: 34,
    paddingLeft: 12,
    paddingRight: 12
  },
  "compact-xl": {
    height: 40,
    paddingLeft: 14,
    paddingRight: 14
  }
};
function getSizeStyles({
  compact,
  size,
  withLeftIcon,
  withRightIcon
}) {
  if (compact) {
    return Button_styles_sizes[`compact-${size}`];
  }
  const _sizes = Button_styles_sizes[size];
  return Button_styles_spreadProps(Button_styles_spreadValues({}, _sizes), {
    paddingLeft: withLeftIcon ? _sizes.paddingLeft / 1.5 : _sizes.paddingLeft,
    paddingRight: withRightIcon ? _sizes.paddingRight / 1.5 : _sizes.paddingRight
  });
}
const getWidthStyles = fullWidth => ({
  display: fullWidth ? "block" : "inline-block",
  width: fullWidth ? "100%" : "auto"
});
function Button_styles_getVariantStyles({
  variant,
  theme,
  color,
  gradient
}) {
  const colors = theme.fn.variant({
    color,
    variant,
    gradient
  });
  if (variant === "gradient") {
    return {
      border: 0,
      backgroundImage: colors.background,
      color: colors.color,
      "&:hover": theme.fn.hover({
        backgroundSize: "200%"
      })
    };
  }
  return Button_styles_spreadValues({
    border: `1px solid ${colors.border}`,
    backgroundColor: colors.background,
    color: colors.color
  }, theme.fn.hover({
    backgroundColor: colors.hover
  }));
}
var Button_styles_useStyles = createStyles((theme, {
  color,
  size,
  radius,
  fullWidth,
  compact,
  gradient,
  variant,
  withLeftIcon,
  withRightIcon
}) => ({
  root: Button_styles_spreadProps(Button_styles_spreadValues(Button_styles_spreadProps(Button_styles_spreadValues(Button_styles_spreadValues(Button_styles_spreadValues(Button_styles_spreadValues({}, getSizeStyles({
    compact,
    size,
    withLeftIcon,
    withRightIcon
  })), theme.fn.fontStyles()), theme.fn.focusStyles()), getWidthStyles(fullWidth)), {
    borderRadius: theme.fn.radius(radius),
    fontWeight: 600,
    position: "relative",
    lineHeight: 1,
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }),
    userSelect: "none",
    cursor: "pointer"
  }), Button_styles_getVariantStyles({
    variant,
    theme,
    color,
    gradient
  })), {
    "&:active": theme.activeStyles,
    "&:disabled, &[data-disabled]": {
      borderColor: "transparent",
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[2],
      color: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[5],
      cursor: "not-allowed",
      backgroundImage: "none",
      pointerEvents: "none",
      "&:active": {
        transform: "none"
      }
    },
    "&[data-loading]": {
      pointerEvents: "none",
      "&::before": {
        content: '""',
        position: "absolute",
        top: -1,
        left: -1,
        right: -1,
        bottom: -1,
        backgroundColor: theme.colorScheme === "dark" ? theme.fn.rgba(theme.colors.dark[7], 0.5) : "rgba(255, 255, 255, .5)",
        borderRadius: theme.fn.radius(radius),
        cursor: "not-allowed"
      }
    }
  }),
  icon: {
    display: "flex",
    alignItems: "center"
  },
  leftIcon: {
    marginRight: 10
  },
  rightIcon: {
    marginLeft: 10
  },
  centerLoader: {
    position: "absolute",
    left: "50%",
    transform: "translateX(-50%)",
    opacity: 0.5
  },
  inner: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    height: "100%",
    overflow: "visible"
  },
  label: {
    whiteSpace: "nowrap",
    height: "100%",
    overflow: "hidden",
    display: "flex",
    alignItems: "center"
  }
}));
/* harmony default export */ var Button_styles = (Button_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Button/Button.js







var Button_defProp = Object.defineProperty;
var Button_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Button_hasOwnProp = Object.prototype.hasOwnProperty;
var Button_propIsEnum = Object.prototype.propertyIsEnumerable;
var Button_defNormalProp = (obj, key, value) => key in obj ? Button_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Button_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Button_hasOwnProp.call(b, prop)) Button_defNormalProp(a, prop, b[prop]);
  if (Button_getOwnPropSymbols) for (var prop of Button_getOwnPropSymbols(b)) {
    if (Button_propIsEnum.call(b, prop)) Button_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Button_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Button_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Button_getOwnPropSymbols) for (var prop of Button_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Button_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Button_defaultProps = {
  size: "sm",
  type: "button",
  variant: "filled",
  loaderPosition: "left"
};
const _Button = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Button", Button_defaultProps, props),
    {
      className,
      size,
      color,
      type,
      disabled,
      children,
      leftIcon,
      rightIcon,
      fullWidth,
      variant,
      radius,
      uppercase,
      compact,
      loading,
      loaderPosition,
      loaderProps,
      gradient,
      classNames,
      styles,
      unstyled
    } = _a,
    others = Button_objRest(_a, ["className", "size", "color", "type", "disabled", "children", "leftIcon", "rightIcon", "fullWidth", "variant", "radius", "uppercase", "compact", "loading", "loaderPosition", "loaderProps", "gradient", "classNames", "styles", "unstyled"]);
  const {
    classes,
    cx,
    theme
  } = Button_styles({
    radius,
    color,
    size,
    fullWidth,
    compact,
    gradient,
    variant,
    withLeftIcon: !!leftIcon,
    withRightIcon: !!rightIcon
  }, {
    name: "Button",
    unstyled,
    classNames,
    styles
  });
  const colors = theme.fn.variant({
    color,
    variant
  });
  const loader = /* @__PURE__ */react.createElement(Loader, Button_spreadValues({
    color: colors.color,
    size: theme.fn.size({
      size,
      sizes: Button_styles_sizes
    }).height / 2
  }, loaderProps));
  return /* @__PURE__ */react.createElement(UnstyledButton, Button_spreadValues({
    className: cx(classes.root, className),
    type,
    disabled,
    "data-button": true,
    "data-disabled": disabled || void 0,
    "data-loading": loading || void 0,
    ref,
    unstyled
  }, others), /* @__PURE__ */react.createElement("div", {
    className: classes.inner
  }, (leftIcon || loading && loaderPosition === "left") && /* @__PURE__ */react.createElement("span", {
    className: cx(classes.icon, classes.leftIcon)
  }, loading && loaderPosition === "left" ? loader : leftIcon), loading && loaderPosition === "center" && /* @__PURE__ */react.createElement("span", {
    className: classes.centerLoader
  }, loader), /* @__PURE__ */react.createElement("span", {
    className: classes.label,
    style: {
      textTransform: uppercase ? "uppercase" : void 0
    }
  }, children), (rightIcon || loading && loaderPosition === "right") && /* @__PURE__ */react.createElement("span", {
    className: cx(classes.icon, classes.rightIcon)
  }, loading && loaderPosition === "right" ? loader : rightIcon)));
});
_Button.displayName = "@mantine/core/Button";
_Button.Group = ButtonGroup;
const Button = createPolymorphicComponent(_Button);

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/use-modals/use-modals.js


function useModals() {
  const ctx = (0,react_production_min.useContext)(ModalsContext);
  if (!ctx) {
    throw new Error("[@mantine/modals] useModals hook was called outside of context, wrap your app with ModalsProvider component");
  }
  return ctx;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/ConfirmModal.js



var ConfirmModal_defProp = Object.defineProperty;
var ConfirmModal_defProps = Object.defineProperties;
var ConfirmModal_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var ConfirmModal_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ConfirmModal_hasOwnProp = Object.prototype.hasOwnProperty;
var ConfirmModal_propIsEnum = Object.prototype.propertyIsEnumerable;
var ConfirmModal_defNormalProp = (obj, key, value) => key in obj ? ConfirmModal_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ConfirmModal_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ConfirmModal_hasOwnProp.call(b, prop)) ConfirmModal_defNormalProp(a, prop, b[prop]);
  if (ConfirmModal_getOwnPropSymbols) for (var prop of ConfirmModal_getOwnPropSymbols(b)) {
    if (ConfirmModal_propIsEnum.call(b, prop)) ConfirmModal_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ConfirmModal_spreadProps = (a, b) => ConfirmModal_defProps(a, ConfirmModal_getOwnPropDescs(b));
function ConfirmModal({
  id,
  cancelProps,
  confirmProps,
  labels = {
    cancel: "",
    confirm: ""
  },
  closeOnConfirm = true,
  closeOnCancel = true,
  groupProps,
  onCancel,
  onConfirm,
  children
}) {
  const {
    cancel: cancelLabel,
    confirm: confirmLabel
  } = labels;
  const ctx = useModals();
  const handleCancel = event => {
    typeof (cancelProps == null ? void 0 : cancelProps.onClick) === "function" && (cancelProps == null ? void 0 : cancelProps.onClick(event));
    typeof onCancel === "function" && onCancel();
    closeOnCancel && ctx.closeModal(id);
  };
  const handleConfirm = event => {
    typeof (confirmProps == null ? void 0 : confirmProps.onClick) === "function" && (confirmProps == null ? void 0 : confirmProps.onClick(event));
    typeof onConfirm === "function" && onConfirm();
    closeOnConfirm && ctx.closeModal(id);
  };
  return /* @__PURE__ */react.createElement(react.Fragment, null, children && /* @__PURE__ */react.createElement(Box, {
    mb: "md"
  }, children), /* @__PURE__ */react.createElement(Group, ConfirmModal_spreadValues({
    position: "right"
  }, groupProps), /* @__PURE__ */react.createElement(Button, ConfirmModal_spreadProps(ConfirmModal_spreadValues({
    variant: "default"
  }, cancelProps), {
    onClick: handleCancel
  }), (cancelProps == null ? void 0 : cancelProps.children) || cancelLabel), /* @__PURE__ */react.createElement(Button, ConfirmModal_spreadProps(ConfirmModal_spreadValues({}, confirmProps), {
    onClick: handleConfirm
  }), (confirmProps == null ? void 0 : confirmProps.children) || confirmLabel)));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/reducer.js
function modalsReducer(state, action) {
  switch (action.type) {
    case "OPEN":
      {
        return {
          current: action.payload,
          modals: [...state.modals, action.payload]
        };
      }
    case "CLOSE":
      {
        const modals = state.modals.filter(m => m.id !== action.payload);
        return {
          current: modals[modals.length - 1],
          modals
        };
      }
    case "CLOSE_ALL":
      {
        return {
          current: state.current,
          modals: []
        };
      }
    default:
      {
        return state;
      }
  }
}

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/create-use-external-events/create-use-external-events.js

function dispatchEvent(type, detail) {
  window.dispatchEvent(new CustomEvent(type, {
    detail
  }));
}
const create_use_external_events_useIsomorphicEffect = typeof window !== "undefined" ? react_production_min.useLayoutEffect : react_production_min.useEffect;
function createUseExternalEvents(prefix) {
  function _useExternalEvents(events) {
    const handlers = Object.keys(events).reduce((acc, eventKey) => {
      acc[`${prefix}:${eventKey}`] = event => events[eventKey](event.detail);
      return acc;
    }, {});
    create_use_external_events_useIsomorphicEffect(() => {
      Object.keys(handlers).forEach(eventKey => {
        window.removeEventListener(eventKey, handlers[eventKey]);
        window.addEventListener(eventKey, handlers[eventKey]);
      });
      return () => Object.keys(handlers).forEach(eventKey => {
        window.removeEventListener(eventKey, handlers[eventKey]);
      });
    }, [handlers]);
  }
  function createEvent(event) {
    return (...payload) => dispatchEvent(`${prefix}:${String(event)}`, payload[0]);
  }
  return [_useExternalEvents, createEvent];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/events.js

const [useModalsEvents, createEvent] = createUseExternalEvents("mantine-modals");
const openModal = createEvent("openModal");
const closeModal = createEvent("closeModal");
const closeAllModals = createEvent("closeAllModals");
const openConfirmModal = createEvent("openConfirmModal");
const openContextModal = createEvent("openContextModal");

;// CONCATENATED MODULE: ./node_modules/@mantine/modals/esm/ModalsProvider.js







var ModalsProvider_defProp = Object.defineProperty;
var ModalsProvider_defProps = Object.defineProperties;
var ModalsProvider_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var ModalsProvider_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ModalsProvider_hasOwnProp = Object.prototype.hasOwnProperty;
var ModalsProvider_propIsEnum = Object.prototype.propertyIsEnumerable;
var ModalsProvider_defNormalProp = (obj, key, value) => key in obj ? ModalsProvider_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ModalsProvider_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ModalsProvider_hasOwnProp.call(b, prop)) ModalsProvider_defNormalProp(a, prop, b[prop]);
  if (ModalsProvider_getOwnPropSymbols) for (var prop of ModalsProvider_getOwnPropSymbols(b)) {
    if (ModalsProvider_propIsEnum.call(b, prop)) ModalsProvider_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ModalsProvider_spreadProps = (a, b) => ModalsProvider_defProps(a, ModalsProvider_getOwnPropDescs(b));
var ModalsProvider_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (ModalsProvider_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && ModalsProvider_getOwnPropSymbols) for (var prop of ModalsProvider_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && ModalsProvider_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function separateConfirmModalProps(props) {
  if (!props) {
    return {
      confirmProps: {},
      modalProps: {}
    };
  }
  const _a = props,
    {
      id,
      children,
      onCancel,
      onConfirm,
      closeOnConfirm,
      closeOnCancel,
      cancelProps,
      confirmProps,
      groupProps,
      labels
    } = _a,
    others = ModalsProvider_objRest(_a, ["id", "children", "onCancel", "onConfirm", "closeOnConfirm", "closeOnCancel", "cancelProps", "confirmProps", "groupProps", "labels"]);
  return {
    confirmProps: {
      id,
      children,
      onCancel,
      onConfirm,
      closeOnConfirm,
      closeOnCancel,
      cancelProps,
      confirmProps,
      groupProps,
      labels
    },
    modalProps: ModalsProvider_spreadValues({
      id
    }, others)
  };
}
function ModalsProvider({
  children,
  modalProps,
  labels,
  modals
}) {
  const [state, dispatch] = (0,react_production_min.useReducer)(modalsReducer, {
    modals: [],
    current: null
  });
  const closeAll = canceled => {
    state.modals.forEach(modal => {
      var _a, _b, _c, _d;
      if (modal.type === "confirm" && canceled) {
        (_b = (_a = modal.props) == null ? void 0 : _a.onCancel) == null ? void 0 : _b.call(_a);
      }
      (_d = (_c = modal.props) == null ? void 0 : _c.onClose) == null ? void 0 : _d.call(_c);
    });
    dispatch({
      type: "CLOSE_ALL"
    });
  };
  const openModal = _a => {
    var _b = _a,
      {
        modalId
      } = _b,
      props = ModalsProvider_objRest(_b, ["modalId"]);
    const id = modalId || random_id_randomId();
    dispatch({
      type: "OPEN",
      payload: {
        id,
        type: "content",
        props
      }
    });
    return id;
  };
  const openConfirmModal = _c => {
    var _d = _c,
      {
        modalId
      } = _d,
      props = ModalsProvider_objRest(_d, ["modalId"]);
    const id = modalId || random_id_randomId();
    dispatch({
      type: "OPEN",
      payload: {
        id,
        type: "confirm",
        props
      }
    });
    return id;
  };
  const openContextModal = (modal, _e) => {
    var _f = _e,
      {
        modalId
      } = _f,
      props = ModalsProvider_objRest(_f, ["modalId"]);
    const id = modalId || random_id_randomId();
    dispatch({
      type: "OPEN",
      payload: {
        id,
        type: "context",
        props,
        ctx: modal
      }
    });
    return id;
  };
  const closeModal = (id, canceled) => {
    var _a, _b, _c, _d;
    const modal = state.modals.find(item => item.id === id);
    if ((modal == null ? void 0 : modal.type) === "confirm" && canceled) {
      (_b = (_a = modal.props) == null ? void 0 : _a.onCancel) == null ? void 0 : _b.call(_a);
    }
    (_d = (_c = modal == null ? void 0 : modal.props) == null ? void 0 : _c.onClose) == null ? void 0 : _d.call(_c);
    dispatch({
      type: "CLOSE",
      payload: modal.id
    });
  };
  useModalsEvents({
    openModal,
    openConfirmModal,
    openContextModal: _g => {
      var _h = _g,
        {
          modal
        } = _h,
        payload = ModalsProvider_objRest(_h, ["modal"]);
      return openContextModal(modal, payload);
    },
    closeModal,
    closeAllModals: closeAll
  });
  const ctx = {
    modals: state.modals,
    openModal,
    openConfirmModal,
    openContextModal,
    closeModal,
    closeAll
  };
  const getCurrentModal = () => {
    var _a;
    switch ((_a = state.current) == null ? void 0 : _a.type) {
      case "context":
        {
          const _b = state.current.props,
            {
              innerProps
            } = _b,
            rest = ModalsProvider_objRest(_b, ["innerProps"]);
          const ContextModal = modals[state.current.ctx];
          return {
            modalProps: rest,
            content: /* @__PURE__ */react.createElement(ContextModal, {
              innerProps,
              context: ctx,
              id: state.current.id
            })
          };
        }
      case "confirm":
        {
          const {
            modalProps: separatedModalProps,
            confirmProps: separatedConfirmProps
          } = separateConfirmModalProps(state.current.props);
          return {
            modalProps: separatedModalProps,
            content: /* @__PURE__ */react.createElement(ConfirmModal, ModalsProvider_spreadProps(ModalsProvider_spreadValues({}, separatedConfirmProps), {
              id: state.current.id,
              labels: state.current.props.labels || labels
            }))
          };
        }
      case "content":
        {
          const _c = state.current.props,
            {
              children: currentModalChildren
            } = _c,
            rest = ModalsProvider_objRest(_c, ["children"]);
          return {
            modalProps: rest,
            content: /* @__PURE__ */react.createElement(react.Fragment, null, currentModalChildren)
          };
        }
      default:
        {
          return {
            modalProps: {},
            content: null
          };
        }
    }
  };
  const {
    modalProps: currentModalProps,
    content
  } = getCurrentModal();
  return /* @__PURE__ */react.createElement(ModalsContext.Provider, {
    value: ctx
  }, /* @__PURE__ */react.createElement(Modal, ModalsProvider_spreadProps(ModalsProvider_spreadValues(ModalsProvider_spreadValues({
    zIndex: getDefaultZIndex("modal") + 1
  }, modalProps), currentModalProps), {
    opened: state.modals.length > 0,
    onClose: () => closeModal(state.current.id)
  }), content), children);
}

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(3074);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
;// CONCATENATED MODULE: ./node_modules/resolve-pathname/esm/resolve-pathname.js
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }
  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to, from) {
  if (from === undefined) from = '';
  var toParts = to && to.split('/') || [];
  var fromParts = from && from.split('/') || [];
  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;
  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }
  if (!fromParts.length) return '/';
  var hasTrailingSlash;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }
  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];
    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }
  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');
  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');
  var result = fromParts.join('/');
  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';
  return result;
}
/* harmony default export */ var resolve_pathname = (resolvePathname);
;// CONCATENATED MODULE: ./node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var isProduction = "production" === 'production';
var tiny_invariant_prefix = 'Invariant failed';
function tiny_invariant_invariant(condition, message) {
  if (condition) {
    return;
  }
  if (isProduction) {
    throw new Error(tiny_invariant_prefix);
  }
  var provided = typeof message === 'function' ? message() : message;
  var value = provided ? "".concat(tiny_invariant_prefix, ": ").concat(provided) : tiny_invariant_prefix;
  throw new Error(value);
}

;// CONCATENATED MODULE: ./node_modules/history/esm/history.js





function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');
  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }
  var searchIndex = pathname.indexOf('?');
  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }
  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
    search = location.search,
    hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}
function history_createLocation(path, state, key, currentLocation) {
  var location;
  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = (0,esm_extends/* default */.Z)({}, path);
    if (location.pathname === undefined) location.pathname = '';
    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }
    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }
    if (state !== undefined && location.state === undefined) location.state = state;
  }
  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }
  if (key) location.key = key;
  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = resolve_pathname(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }
  return location;
}
function history_locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);
}
function createTransitionManager() {
  var prompt = null;
  function setPrompt(nextPrompt) {
     false ? 0 : void 0;
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }
  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;
      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
           false ? 0 : void 0;
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }
  var listeners = [];
  function appendListener(fn) {
    var isActive = true;
    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }
    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }
  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }
  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}
var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';
function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */

function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }
  !canUseDOM ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
    _props$forceRefresh = _props.forceRefresh,
    forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
    _props$getUserConfirm = _props.getUserConfirmation,
    getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
    _props$keyLength = _props.keyLength,
    keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  function getDOMLocation(historyState) {
    var _ref = historyState || {},
      key = _ref.key,
      state = _ref.state;
    var _window$location = window.location,
      pathname = _window$location.pathname,
      search = _window$location.search,
      hash = _window$location.hash;
    var path = pathname + search + hash;
     false ? 0 : void 0;
    if (basename) path = stripBasename(path, basename);
    return history_createLocation(path, state, key);
  }
  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    (0,esm_extends/* default */.Z)(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }
  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }
  var forceNextPop = false;
  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }
  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;
    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }
  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }
  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = history_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
        state = location.state;
      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);
        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? 0 : void 0;
        window.location.href = href;
      }
    });
  }
  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = history_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
        state = location.state;
      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);
        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
         false ? 0 : void 0;
        window.location.replace(href);
      }
    });
  }
  function go(n) {
    globalHistory.go(n);
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  var listenerCount = 0;
  function checkDOMListeners(delta) {
    listenerCount += delta;
    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }
  var isBlocked = false;
  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    var unblock = transitionManager.setPrompt(prompt);
    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }
    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }
      return unblock();
    };
  }
  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }
  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}
var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};
function stripHash(url) {
  var hashIndex = url.indexOf('#');
  return hashIndex === -1 ? url : url.slice(0, hashIndex);
}
function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}
function pushHashPath(path) {
  window.location.hash = path;
}
function replaceHashPath(path) {
  window.location.replace(stripHash(window.location.href) + '#' + path);
}
function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }
  !canUseDOM ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
    _props$getUserConfirm = _props.getUserConfirmation,
    getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
    _props$hashType = _props.hashType,
    hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
    encodePath = _HashPathCoders$hashT.encodePath,
    decodePath = _HashPathCoders$hashT.decodePath;
  function getDOMLocation() {
    var path = decodePath(getHashPath());
     false ? 0 : void 0;
    if (basename) path = stripBasename(path, basename);
    return history_createLocation(path);
  }
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    (0,esm_extends/* default */.Z)(history, nextState);
    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  var forceNextPop = false;
  var ignorePath = null;
  function locationsAreEqual$$1(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;
  }
  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);
    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }
  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }
  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;
    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.

  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    var baseTag = document.querySelector('base');
    var href = '';
    if (baseTag && baseTag.getAttribute('href')) {
      href = stripHash(window.location.href);
    }
    return href + '#' + encodePath(basename + createPath(location));
  }
  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = history_createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;
      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
         false ? 0 : void 0;
        setState();
      }
    });
  }
  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = history_createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;
      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }
      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }
  function go(n) {
     false ? 0 : void 0;
    globalHistory.go(n);
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  var listenerCount = 0;
  function checkDOMListeners(delta) {
    listenerCount += delta;
    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }
  var isBlocked = false;
  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    var unblock = transitionManager.setPrompt(prompt);
    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }
    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }
      return unblock();
    };
  }
  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }
  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}
function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */

function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props,
    getUserConfirmation = _props.getUserConfirmation,
    _props$initialEntries = _props.initialEntries,
    initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
    _props$initialIndex = _props.initialIndex,
    initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
    _props$keyLength = _props.keyLength,
    keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();
  function setState(nextState) {
    (0,esm_extends/* default */.Z)(history, nextState);
    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }
  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }
  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? history_createLocation(entry, undefined, createKey()) : history_createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;
  function push(path, state) {
     false ? 0 : void 0;
    var action = 'PUSH';
    var location = history_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);
      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }
      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }
  function replace(path, state) {
     false ? 0 : void 0;
    var action = 'REPLACE';
    var location = history_createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }
  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }
  function goBack() {
    go(-1);
  }
  function goForward() {
    go(1);
  }
  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }
  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }
    return transitionManager.setPrompt(prompt);
  }
  function listen(listener) {
    return transitionManager.appendListener(listener);
  }
  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}

// EXTERNAL MODULE: ./node_modules/react-router/node_modules/path-to-regexp/index.js
var path_to_regexp = __webpack_require__(2540);
var path_to_regexp_default = /*#__PURE__*/__webpack_require__.n(path_to_regexp);
;// CONCATENATED MODULE: ./node_modules/react-router/esm/react-router.js











var MAX_SIGNED_31_BIT_INT = 1073741823;
var commonjsGlobal = typeof globalThis !== "undefined" // 'global proper'
?
// eslint-disable-next-line no-undef
globalThis : typeof window !== "undefined" ? window // Browser
: typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g // node.js
: {};
function getUniqueId() {
  var key = "__global_unique_id__";
  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
} // Inlined Object.is polyfill.
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is

function objectIs(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // eslint-disable-next-line no-self-compare
    return x !== x && y !== y;
  }
}
function createEventEmitter(value) {
  var handlers = [];
  return {
    on: function on(handler) {
      handlers.push(handler);
    },
    off: function off(handler) {
      handlers = handlers.filter(function (h) {
        return h !== handler;
      });
    },
    get: function get() {
      return value;
    },
    set: function set(newValue, changedBits) {
      value = newValue;
      handlers.forEach(function (handler) {
        return handler(value, changedBits);
      });
    }
  };
}
function onlyChild(children) {
  return Array.isArray(children) ? children[0] : children;
}
function createReactContext(defaultValue, calculateChangedBits) {
  var _Provider$childContex, _Consumer$contextType;
  var contextProp = "__create-react-context-" + getUniqueId() + "__";
  var Provider = /*#__PURE__*/function (_React$Component) {
    (0,inheritsLoose/* default */.Z)(Provider, _React$Component);
    function Provider() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this.emitter = createEventEmitter(_this.props.value);
      return _this;
    }
    var _proto = Provider.prototype;
    _proto.getChildContext = function getChildContext() {
      var _ref;
      return _ref = {}, _ref[contextProp] = this.emitter, _ref;
    };
    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        var oldValue = this.props.value;
        var newValue = nextProps.value;
        var changedBits;
        if (objectIs(oldValue, newValue)) {
          changedBits = 0; // No change
        } else {
          changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
          if (false) {}
          changedBits |= 0;
          if (changedBits !== 0) {
            this.emitter.set(nextProps.value, changedBits);
          }
        }
      }
    };
    _proto.render = function render() {
      return this.props.children;
    };
    return Provider;
  }(react.Component);
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = (prop_types_default()).object.isRequired, _Provider$childContex);
  var Consumer = /*#__PURE__*/function (_React$Component2) {
    (0,inheritsLoose/* default */.Z)(Consumer, _React$Component2);
    function Consumer() {
      var _this2;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      _this2 = _React$Component2.call.apply(_React$Component2, [this].concat(args)) || this;
      _this2.observedBits = void 0;
      _this2.state = {
        value: _this2.getValue()
      };
      _this2.onUpdate = function (newValue, changedBits) {
        var observedBits = _this2.observedBits | 0;
        if ((observedBits & changedBits) !== 0) {
          _this2.setState({
            value: _this2.getValue()
          });
        }
      };
      return _this2;
    }
    var _proto2 = Consumer.prototype;
    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var observedBits = nextProps.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };
    _proto2.componentDidMount = function componentDidMount() {
      if (this.context[contextProp]) {
        this.context[contextProp].on(this.onUpdate);
      }
      var observedBits = this.props.observedBits;
      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
      : observedBits;
    };
    _proto2.componentWillUnmount = function componentWillUnmount() {
      if (this.context[contextProp]) {
        this.context[contextProp].off(this.onUpdate);
      }
    };
    _proto2.getValue = function getValue() {
      if (this.context[contextProp]) {
        return this.context[contextProp].get();
      } else {
        return defaultValue;
      }
    };
    _proto2.render = function render() {
      return onlyChild(this.props.children)(this.state.value);
    };
    return Consumer;
  }(react.Component);
  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = (prop_types_default()).object, _Consumer$contextType);
  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

// MIT License
var createContext = react.createContext || createReactContext;

// TODO: Replace with React.createContext once we can assume React 16+

var createNamedContext = function createNamedContext(name) {
  var context = createContext();
  context.displayName = name;
  return context;
};
var historyContext = /*#__PURE__*/createNamedContext("Router-History");
var context = /*#__PURE__*/createNamedContext("Router");

/**
 * The public API for putting history on context.
 */

var Router = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Router, _React$Component);
  Router.computeRootMatch = function computeRootMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };
  function Router(props) {
    var _this;
    _this = _React$Component.call(this, props) || this;
    _this.state = {
      location: props.history.location
    }; // This is a bit of a hack. We have to start listening for location
    // changes here in the constructor in case there are any <Redirect>s
    // on the initial render. If there are, they will replace/push when
    // they mount and since cDM fires in children before parents, we may
    // get a new location before the <Router> is mounted.

    _this._isMounted = false;
    _this._pendingLocation = null;
    if (!props.staticContext) {
      _this.unlisten = props.history.listen(function (location) {
        _this._pendingLocation = location;
      });
    }
    return _this;
  }
  var _proto = Router.prototype;
  _proto.componentDidMount = function componentDidMount() {
    var _this2 = this;
    this._isMounted = true;
    if (this.unlisten) {
      // Any pre-mount location changes have been captured at
      // this point, so unregister the listener.
      this.unlisten();
    }
    if (!this.props.staticContext) {
      this.unlisten = this.props.history.listen(function (location) {
        if (_this2._isMounted) {
          _this2.setState({
            location: location
          });
        }
      });
    }
    if (this._pendingLocation) {
      this.setState({
        location: this._pendingLocation
      });
    }
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.unlisten) {
      this.unlisten();
      this._isMounted = false;
      this._pendingLocation = null;
    }
  };
  _proto.render = function render() {
    return /*#__PURE__*/react.createElement(context.Provider, {
      value: {
        history: this.props.history,
        location: this.state.location,
        match: Router.computeRootMatch(this.state.location.pathname),
        staticContext: this.props.staticContext
      }
    }, /*#__PURE__*/react.createElement(historyContext.Provider, {
      children: this.props.children || null,
      value: this.props.history
    }));
  };
  return Router;
}(react.Component);
if (false) {}

/**
 * The public API for a <Router> that stores location in memory.
 */

var MemoryRouter = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(MemoryRouter, _React$Component);
  function MemoryRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createMemoryHistory(_this.props);
    return _this;
  }
  var _proto = MemoryRouter.prototype;
  _proto.render = function render() {
    return /*#__PURE__*/react.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return MemoryRouter;
}(react.Component);
if (false) {}
var Lifecycle = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Lifecycle, _React$Component);
  function Lifecycle() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Lifecycle.prototype;
  _proto.componentDidMount = function componentDidMount() {
    if (this.props.onMount) this.props.onMount.call(this, this);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.props.onUnmount) this.props.onUnmount.call(this, this);
  };
  _proto.render = function render() {
    return null;
  };
  return Lifecycle;
}(react.Component);

/**
 * The public API for prompting the user before navigating away from a screen.
 */

function Prompt(_ref) {
  var message = _ref.message,
    _ref$when = _ref.when,
    when = _ref$when === void 0 ? true : _ref$when;
  return /*#__PURE__*/React.createElement(context.Consumer, null, function (context) {
    !context ?  false ? 0 : invariant(false) : void 0;
    if (!when || context.staticContext) return null;
    var method = context.history.block;
    return /*#__PURE__*/React.createElement(Lifecycle, {
      onMount: function onMount(self) {
        self.release = method(message);
      },
      onUpdate: function onUpdate(self, prevProps) {
        if (prevProps.message !== message) {
          self.release();
          self.release = method(message);
        }
      },
      onUnmount: function onUnmount(self) {
        self.release();
      },
      message: message
    });
  });
}
if (false) { var messageType; }
var cache = {};
var cacheLimit = 10000;
var cacheCount = 0;
function compilePath(path) {
  if (cache[path]) return cache[path];
  var generator = pathToRegexp.compile(path);
  if (cacheCount < cacheLimit) {
    cache[path] = generator;
    cacheCount++;
  }
  return generator;
}
/**
 * Public API for generating a URL pathname from a path and parameters.
 */

function generatePath(path, params) {
  if (path === void 0) {
    path = "/";
  }
  if (params === void 0) {
    params = {};
  }
  return path === "/" ? path : compilePath(path)(params, {
    pretty: true
  });
}

/**
 * The public API for navigating programmatically with a component.
 */

function Redirect(_ref) {
  var computedMatch = _ref.computedMatch,
    to = _ref.to,
    _ref$push = _ref.push,
    push = _ref$push === void 0 ? false : _ref$push;
  return /*#__PURE__*/React.createElement(context.Consumer, null, function (context) {
    !context ?  false ? 0 : invariant(false) : void 0;
    var history = context.history,
      staticContext = context.staticContext;
    var method = push ? history.push : history.replace;
    var location = createLocation(computedMatch ? typeof to === "string" ? generatePath(to, computedMatch.params) : _extends({}, to, {
      pathname: generatePath(to.pathname, computedMatch.params)
    }) : to); // When rendering in a static context,
    // set the new location immediately.

    if (staticContext) {
      method(location);
      return null;
    }
    return /*#__PURE__*/React.createElement(Lifecycle, {
      onMount: function onMount() {
        method(location);
      },
      onUpdate: function onUpdate(self, prevProps) {
        var prevLocation = createLocation(prevProps.to);
        if (!locationsAreEqual(prevLocation, _extends({}, location, {
          key: prevLocation.key
        }))) {
          method(location);
        }
      },
      to: to
    });
  });
}
if (false) {}
var cache$1 = {};
var cacheLimit$1 = 10000;
var cacheCount$1 = 0;
function compilePath$1(path, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});
  if (pathCache[path]) return pathCache[path];
  var keys = [];
  var regexp = path_to_regexp_default()(path, keys, options);
  var result = {
    regexp: regexp,
    keys: keys
  };
  if (cacheCount$1 < cacheLimit$1) {
    pathCache[path] = result;
    cacheCount$1++;
  }
  return result;
}
/**
 * Public API for matching a URL pathname to a path.
 */

function matchPath(pathname, options) {
  if (options === void 0) {
    options = {};
  }
  if (typeof options === "string" || Array.isArray(options)) {
    options = {
      path: options
    };
  }
  var _options = options,
    path = _options.path,
    _options$exact = _options.exact,
    exact = _options$exact === void 0 ? false : _options$exact,
    _options$strict = _options.strict,
    strict = _options$strict === void 0 ? false : _options$strict,
    _options$sensitive = _options.sensitive,
    sensitive = _options$sensitive === void 0 ? false : _options$sensitive;
  var paths = [].concat(path);
  return paths.reduce(function (matched, path) {
    if (!path && path !== "") return null;
    if (matched) return matched;
    var _compilePath = compilePath$1(path, {
        end: exact,
        strict: strict,
        sensitive: sensitive
      }),
      regexp = _compilePath.regexp,
      keys = _compilePath.keys;
    var match = regexp.exec(pathname);
    if (!match) return null;
    var url = match[0],
      values = match.slice(1);
    var isExact = pathname === url;
    if (exact && !isExact) return null;
    return {
      path: path,
      // the path used to match
      url: path === "/" && url === "" ? "/" : url,
      // the matched portion of the URL
      isExact: isExact,
      // whether or not we matched exactly
      params: keys.reduce(function (memo, key, index) {
        memo[key.name] = values[index];
        return memo;
      }, {})
    };
  }, null);
}
function isEmptyChildren(children) {
  return react.Children.count(children) === 0;
}
function evalChildrenDev(children, props, path) {
  var value = children(props);
   false ? 0 : void 0;
  return value || null;
}
/**
 * The public API for matching a single path and rendering.
 */

var Route = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Route, _React$Component);
  function Route() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Route.prototype;
  _proto.render = function render() {
    var _this = this;
    return /*#__PURE__*/react.createElement(context.Consumer, null, function (context$1) {
      !context$1 ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
      var location = _this.props.location || context$1.location;
      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us
      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;
      var props = (0,esm_extends/* default */.Z)({}, context$1, {
        location: location,
        match: match
      });
      var _this$props = _this.props,
        children = _this$props.children,
        component = _this$props.component,
        render = _this$props.render; // Preact uses an empty array as children by
      // default, so use null if that's the case.

      if (Array.isArray(children) && isEmptyChildren(children)) {
        children = null;
      }
      return /*#__PURE__*/react.createElement(context.Provider, {
        value: props
      }, props.match ? children ? typeof children === "function" ?  false ? 0 : children(props) : children : component ? /*#__PURE__*/react.createElement(component, props) : render ? render(props) : null : typeof children === "function" ?  false ? 0 : children(props) : null);
    });
  };
  return Route;
}(react.Component);
if (false) {}
function react_router_addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
}
function addBasename(basename, location) {
  if (!basename) return location;
  return (0,esm_extends/* default */.Z)({}, location, {
    pathname: react_router_addLeadingSlash(basename) + location.pathname
  });
}
function react_router_stripBasename(basename, location) {
  if (!basename) return location;
  var base = react_router_addLeadingSlash(basename);
  if (location.pathname.indexOf(base) !== 0) return location;
  return (0,esm_extends/* default */.Z)({}, location, {
    pathname: location.pathname.substr(base.length)
  });
}
function createURL(location) {
  return typeof location === "string" ? location : createPath(location);
}
function staticHandler(methodName) {
  return function () {
     false ? 0 : tiny_invariant_invariant(false);
  };
}
function noop() {}
/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

var StaticRouter = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(StaticRouter, _React$Component);
  function StaticRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.handlePush = function (location) {
      return _this.navigateTo(location, "PUSH");
    };
    _this.handleReplace = function (location) {
      return _this.navigateTo(location, "REPLACE");
    };
    _this.handleListen = function () {
      return noop;
    };
    _this.handleBlock = function () {
      return noop;
    };
    return _this;
  }
  var _proto = StaticRouter.prototype;
  _proto.navigateTo = function navigateTo(location, action) {
    var _this$props = this.props,
      _this$props$basename = _this$props.basename,
      basename = _this$props$basename === void 0 ? "" : _this$props$basename,
      _this$props$context = _this$props.context,
      context = _this$props$context === void 0 ? {} : _this$props$context;
    context.action = action;
    context.location = addBasename(basename, history_createLocation(location));
    context.url = createURL(context.location);
  };
  _proto.render = function render() {
    var _this$props2 = this.props,
      _this$props2$basename = _this$props2.basename,
      basename = _this$props2$basename === void 0 ? "" : _this$props2$basename,
      _this$props2$context = _this$props2.context,
      context = _this$props2$context === void 0 ? {} : _this$props2$context,
      _this$props2$location = _this$props2.location,
      location = _this$props2$location === void 0 ? "/" : _this$props2$location,
      rest = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_this$props2, ["basename", "context", "location"]);
    var history = {
      createHref: function createHref(path) {
        return react_router_addLeadingSlash(basename + createURL(path));
      },
      action: "POP",
      location: react_router_stripBasename(basename, history_createLocation(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };
    return /*#__PURE__*/react.createElement(Router, (0,esm_extends/* default */.Z)({}, rest, {
      history: history,
      staticContext: context
    }));
  };
  return StaticRouter;
}(react.Component);
if (false) {}

/**
 * The public API for rendering the first <Route> that matches.
 */

var Switch = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Switch, _React$Component);
  function Switch() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = Switch.prototype;
  _proto.render = function render() {
    var _this = this;
    return /*#__PURE__*/react.createElement(context.Consumer, null, function (context) {
      !context ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
      var location = _this.props.location || context.location;
      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()
      // here because toArray adds keys to all child elements and we do not want
      // to trigger an unmount/remount for two <Route>s that render the same
      // component at different URLs.

      react.Children.forEach(_this.props.children, function (child) {
        if (match == null && /*#__PURE__*/react.isValidElement(child)) {
          element = child;
          var path = child.props.path || child.props.from;
          match = path ? matchPath(location.pathname, (0,esm_extends/* default */.Z)({}, child.props, {
            path: path
          })) : context.match;
        }
      });
      return match ? /*#__PURE__*/react.cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null;
    });
  };
  return Switch;
}(react.Component);
if (false) {}

/**
 * A public higher-order component to access the imperative API
 */

function withRouter(Component) {
  var displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
      remainingProps = _objectWithoutPropertiesLoose(props, ["wrappedComponentRef"]);
    return /*#__PURE__*/React.createElement(context.Consumer, null, function (context) {
      !context ?  false ? 0 : invariant(false) : void 0;
      return /*#__PURE__*/React.createElement(Component, _extends({}, remainingProps, context, {
        ref: wrappedComponentRef
      }));
    });
  };
  C.displayName = displayName;
  C.WrappedComponent = Component;
  if (false) {}
  return hoistStatics(C, Component);
}
var react_router_useContext = react.useContext;
function useHistory() {
  if (false) {}
  return react_router_useContext(historyContext);
}
function useLocation() {
  if (false) {}
  return react_router_useContext(context).location;
}
function useParams() {
  if (false) {}
  var match = react_router_useContext(context).match;
  return match ? match.params : {};
}
function useRouteMatch(path) {
  if (false) {}
  var location = useLocation();
  var match = react_router_useContext(context).match;
  return path ? matchPath(location.pathname, path) : match;
}
if (false) { var secondaryBuildName, initialBuildName, buildNames, key, global$1; }

;// CONCATENATED MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js











/**
 * The public API for a <Router> that uses HTML5 history.
 */

var BrowserRouter = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(BrowserRouter, _React$Component);
  function BrowserRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createBrowserHistory(_this.props);
    return _this;
  }
  var _proto = BrowserRouter.prototype;
  _proto.render = function render() {
    return /*#__PURE__*/react.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return BrowserRouter;
}(react.Component);
if (false) {}

/**
 * The public API for a <Router> that uses window.location.hash.
 */

var HashRouter = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(HashRouter, _React$Component);
  function HashRouter() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.history = createHashHistory(_this.props);
    return _this;
  }
  var _proto = HashRouter.prototype;
  _proto.render = function render() {
    return /*#__PURE__*/react.createElement(Router, {
      history: this.history,
      children: this.props.children
    });
  };
  return HashRouter;
}(react.Component);
if (false) {}
var resolveToLocation = function resolveToLocation(to, currentLocation) {
  return typeof to === "function" ? to(currentLocation) : to;
};
var normalizeToLocation = function normalizeToLocation(to, currentLocation) {
  return typeof to === "string" ? history_createLocation(to, null, null, currentLocation) : to;
};
var forwardRefShim = function forwardRefShim(C) {
  return C;
};
var react_router_dom_forwardRef = react.forwardRef;
if (typeof react_router_dom_forwardRef === "undefined") {
  react_router_dom_forwardRef = forwardRefShim;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
var LinkAnchor = react_router_dom_forwardRef(function (_ref, forwardedRef) {
  var innerRef = _ref.innerRef,
    navigate = _ref.navigate,
    _onClick = _ref.onClick,
    rest = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_ref, ["innerRef", "navigate", "onClick"]);
  var target = rest.target;
  var props = (0,esm_extends/* default */.Z)({}, rest, {
    onClick: function onClick(event) {
      try {
        if (_onClick) _onClick(event);
      } catch (ex) {
        event.preventDefault();
        throw ex;
      }
      if (!event.defaultPrevented &&
      // onClick prevented default
      event.button === 0 && (
      // ignore everything but left clicks
      !target || target === "_self") &&
      // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
        event.preventDefault();
        navigate();
      }
    }
  }); // React 15 compat

  if (forwardRefShim !== react_router_dom_forwardRef) {
    props.ref = forwardedRef || innerRef;
  } else {
    props.ref = innerRef;
  }
  /* eslint-disable-next-line jsx-a11y/anchor-has-content */

  return /*#__PURE__*/react.createElement("a", props);
});
if (false) {}
/**
 * The public API for rendering a history-aware <a>.
 */

var Link = react_router_dom_forwardRef(function (_ref2, forwardedRef) {
  var _ref2$component = _ref2.component,
    component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,
    replace = _ref2.replace,
    to = _ref2.to,
    innerRef = _ref2.innerRef,
    rest = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_ref2, ["component", "replace", "to", "innerRef"]);
  return /*#__PURE__*/react.createElement(context.Consumer, null, function (context) {
    !context ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
    var history = context.history;
    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);
    var href = location ? history.createHref(location) : "";
    var props = (0,esm_extends/* default */.Z)({}, rest, {
      href: href,
      navigate: function navigate() {
        var location = resolveToLocation(to, context.location);
        var isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));
        var method = replace || isDuplicateNavigation ? history.replace : history.push;
        method(location);
      }
    }); // React 15 compat

    if (forwardRefShim !== react_router_dom_forwardRef) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return /*#__PURE__*/react.createElement(component, props);
  });
});
if (false) { var refType, toType; }
var forwardRefShim$1 = function forwardRefShim(C) {
  return C;
};
var forwardRef$1 = react.forwardRef;
if (typeof forwardRef$1 === "undefined") {
  forwardRef$1 = forwardRefShim$1;
}
function joinClassnames() {
  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {
    classnames[_key] = arguments[_key];
  }
  return classnames.filter(function (i) {
    return i;
  }).join(" ");
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

var NavLink = forwardRef$1(function (_ref, forwardedRef) {
  var _ref$ariaCurrent = _ref["aria-current"],
    ariaCurrent = _ref$ariaCurrent === void 0 ? "page" : _ref$ariaCurrent,
    _ref$activeClassName = _ref.activeClassName,
    activeClassName = _ref$activeClassName === void 0 ? "active" : _ref$activeClassName,
    activeStyle = _ref.activeStyle,
    classNameProp = _ref.className,
    exact = _ref.exact,
    isActiveProp = _ref.isActive,
    locationProp = _ref.location,
    sensitive = _ref.sensitive,
    strict = _ref.strict,
    styleProp = _ref.style,
    to = _ref.to,
    innerRef = _ref.innerRef,
    rest = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(_ref, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
  return /*#__PURE__*/react.createElement(context.Consumer, null, function (context) {
    !context ?  false ? 0 : tiny_invariant_invariant(false) : void 0;
    var currentLocation = locationProp || context.location;
    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);
    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202

    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
    var match = escapedPath ? matchPath(currentLocation.pathname, {
      path: escapedPath,
      exact: exact,
      sensitive: sensitive,
      strict: strict
    }) : null;
    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);
    var className = typeof classNameProp === "function" ? classNameProp(isActive) : classNameProp;
    var style = typeof styleProp === "function" ? styleProp(isActive) : styleProp;
    if (isActive) {
      className = joinClassnames(className, activeClassName);
      style = (0,esm_extends/* default */.Z)({}, style, activeStyle);
    }
    var props = (0,esm_extends/* default */.Z)({
      "aria-current": isActive && ariaCurrent || null,
      className: className,
      style: style,
      to: toLocation
    }, rest); // React 15 compat

    if (forwardRefShim$1 !== forwardRef$1) {
      props.ref = forwardedRef || innerRef;
    } else {
      props.innerRef = innerRef;
    }
    return /*#__PURE__*/react.createElement(Link, props);
  });
});
if (false) { var ariaCurrentType; }

;// CONCATENATED MODULE: ./node_modules/recoil/es/index.js



/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function err(message) {
  const error = new Error(message); // In V8, Error objects keep the closure scope chain alive until the
  // err.stack property is accessed.

  if (error.stack === undefined) {
    // IE sets the stack only if error is thrown
    try {
      throw error;
    } catch (_) {} // eslint-disable-line fb-www/no-unused-catch-bindings, no-empty
  }

  return error;
}
var err_1 = err;

// @oss-only

var Recoil_err = err_1;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

// Split declaration and implementation to allow this function to pretend to
// check for actual instance of Promise instead of something with a `then`
// method.
// eslint-disable-next-line no-redeclare
function isPromise(p) {
  return !!p && typeof p.then === 'function';
}
var Recoil_isPromise = isPromise;
function nullthrows(x, message) {
  if (x != null) {
    return x;
  }
  throw Recoil_err(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');
}
var Recoil_nullthrows = nullthrows;
function es_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
class BaseLoadable {
  getValue() {
    throw Recoil_err('BaseLoadable');
  }
  toPromise() {
    throw Recoil_err('BaseLoadable');
  }
  valueMaybe() {
    throw Recoil_err('BaseLoadable');
  }
  valueOrThrow() {
    // $FlowFixMe[prop-missing]
    throw Recoil_err(`Loadable expected value, but in "${this.state}" state`);
  }
  promiseMaybe() {
    throw Recoil_err('BaseLoadable');
  }
  promiseOrThrow() {
    // $FlowFixMe[prop-missing]
    throw Recoil_err(`Loadable expected promise, but in "${this.state}" state`);
  }
  errorMaybe() {
    throw Recoil_err('BaseLoadable');
  }
  errorOrThrow() {
    // $FlowFixMe[prop-missing]
    throw Recoil_err(`Loadable expected error, but in "${this.state}" state`);
  }
  is(other) {
    // $FlowFixMe[prop-missing]
    return other.state === this.state && other.contents === this.contents;
  }
  map(_map) {
    throw Recoil_err('BaseLoadable');
  }
}
class ValueLoadable extends BaseLoadable {
  constructor(value) {
    super();
    es_defineProperty(this, "state", 'hasValue');
    es_defineProperty(this, "contents", void 0);
    this.contents = value;
  }
  getValue() {
    return this.contents;
  }
  toPromise() {
    return Promise.resolve(this.contents);
  }
  valueMaybe() {
    return this.contents;
  }
  valueOrThrow() {
    return this.contents;
  }
  promiseMaybe() {
    return undefined;
  }
  errorMaybe() {
    return undefined;
  }
  map(map) {
    try {
      const next = map(this.contents);
      return Recoil_isPromise(next) ? loadableWithPromise(next) : isLoadable(next) ? next : loadableWithValue(next);
    } catch (e) {
      return Recoil_isPromise(e) ?
      // If we "suspended", then try again.
      // errors and subsequent retries will be handled in 'loading' case
      // $FlowFixMe[prop-missing]
      loadableWithPromise(e.next(() => this.map(map))) : loadableWithError(e);
    }
  }
}
class ErrorLoadable extends BaseLoadable {
  constructor(error) {
    super();
    es_defineProperty(this, "state", 'hasError');
    es_defineProperty(this, "contents", void 0);
    this.contents = error;
  }
  getValue() {
    throw this.contents;
  }
  toPromise() {
    return Promise.reject(this.contents);
  }
  valueMaybe() {
    return undefined;
  }
  promiseMaybe() {
    return undefined;
  }
  errorMaybe() {
    return this.contents;
  }
  errorOrThrow() {
    return this.contents;
  }
  map(_map) {
    // $FlowIssue[incompatible-return]
    return this;
  }
}
class LoadingLoadable extends BaseLoadable {
  constructor(promise) {
    super();
    es_defineProperty(this, "state", 'loading');
    es_defineProperty(this, "contents", void 0);
    this.contents = promise;
  }
  getValue() {
    throw this.contents;
  }
  toPromise() {
    return this.contents;
  }
  valueMaybe() {
    return undefined;
  }
  promiseMaybe() {
    return this.contents;
  }
  promiseOrThrow() {
    return this.contents;
  }
  errorMaybe() {
    return undefined;
  }
  map(map) {
    return loadableWithPromise(this.contents.then(value => {
      const next = map(value);
      if (isLoadable(next)) {
        const nextLoadable = next;
        switch (nextLoadable.state) {
          case 'hasValue':
            return nextLoadable.contents;
          case 'hasError':
            throw nextLoadable.contents;
          case 'loading':
            return nextLoadable.contents;
        }
      } // $FlowIssue[incompatible-return]

      return next;
    }).catch(e => {
      if (Recoil_isPromise(e)) {
        // we were "suspended," try again
        return e.then(() => this.map(map).contents);
      }
      throw e;
    }));
  }
}
function loadableWithValue(value) {
  return Object.freeze(new ValueLoadable(value));
}
function loadableWithError(error) {
  return Object.freeze(new ErrorLoadable(error));
}
function loadableWithPromise(promise) {
  return Object.freeze(new LoadingLoadable(promise));
}
function loadableLoading() {
  return Object.freeze(new LoadingLoadable(new Promise(() => {})));
}
function loadableAllArray(inputs) {
  return inputs.every(i => i.state === 'hasValue') ? loadableWithValue(inputs.map(i => i.contents)) : inputs.some(i => i.state === 'hasError') ? loadableWithError(Recoil_nullthrows(inputs.find(i => i.state === 'hasError'), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Promise.all(inputs.map(i => i.contents)));
}
function loadableAll(inputs) {
  const unwrapedInputs = Array.isArray(inputs) ? inputs : Object.getOwnPropertyNames(inputs).map(key => inputs[key]);
  const normalizedInputs = unwrapedInputs.map(x => isLoadable(x) ? x : Recoil_isPromise(x) ? loadableWithPromise(x) : loadableWithValue(x));
  const output = loadableAllArray(normalizedInputs);
  return Array.isArray(inputs) ?
  // $FlowIssue[incompatible-return]
  output :
  // Object.getOwnPropertyNames() has consistent key ordering with ES6
  // $FlowIssue[incompatible-call]
  output.map(outputs => Object.getOwnPropertyNames(inputs).reduce((out, key, idx) => ({
    ...out,
    [key]: outputs[idx]
  }), {}));
}
function isLoadable(x) {
  return x instanceof BaseLoadable;
}
const LoadableStaticInterface = {
  of: value => Recoil_isPromise(value) ? loadableWithPromise(value) : isLoadable(value) ? value : loadableWithValue(value),
  error: error => loadableWithError(error),
  // $FlowIssue[incompatible-return]
  loading: () => loadableLoading(),
  // $FlowIssue[unclear-type]
  all: loadableAll,
  isLoadable
};
var Recoil_Loadable = {
  loadableWithValue,
  loadableWithError,
  loadableWithPromise,
  loadableLoading,
  loadableAll,
  isLoadable,
  RecoilLoadable: LoadableStaticInterface
};
var Recoil_Loadable_1 = Recoil_Loadable.loadableWithValue;
var Recoil_Loadable_2 = Recoil_Loadable.loadableWithError;
var Recoil_Loadable_3 = Recoil_Loadable.loadableWithPromise;
var Recoil_Loadable_4 = Recoil_Loadable.loadableLoading;
var Recoil_Loadable_5 = Recoil_Loadable.loadableAll;
var Recoil_Loadable_6 = Recoil_Loadable.isLoadable;
var Recoil_Loadable_7 = Recoil_Loadable.RecoilLoadable;
var Recoil_Loadable$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  loadableWithValue: Recoil_Loadable_1,
  loadableWithError: Recoil_Loadable_2,
  loadableWithPromise: Recoil_Loadable_3,
  loadableLoading: Recoil_Loadable_4,
  loadableAll: Recoil_Loadable_5,
  isLoadable: Recoil_Loadable_6,
  RecoilLoadable: Recoil_Loadable_7
});

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

const gks = new Map().set('recoil_hamt_2020', true).set('recoil_sync_external_store', true).set('recoil_suppress_rerender_in_callback', true).set('recoil_memory_managament_2020', true);
function Recoil_gkx_OSS(gk) {
  var _gks$get;
  return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;
}
Recoil_gkx_OSS.setPass = gk => {
  gks.set(gk, true);
};
Recoil_gkx_OSS.setFail = gk => {
  gks.set(gk, false);
};
Recoil_gkx_OSS.clear = () => {
  gks.clear();
};
var Recoil_gkx = Recoil_gkx_OSS; // @oss-only

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function recoverableViolation(message, _projectName, {
  error
} = {}) {
  if (false) {}
  return null;
}
var recoverableViolation_1 = recoverableViolation;

// @oss-only

var Recoil_recoverableViolation = recoverableViolation_1;
var _createMutableSource, _useMutableSource, _useSyncExternalStore;
const createMutableSource =
// flowlint-next-line unclear-type:off
(_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : react.unstable_createMutableSource;
const useMutableSource =
// flowlint-next-line unclear-type:off
(_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // https://github.com/reactwg/react-18/discussions/86

const useSyncExternalStore =
// flowlint-next-line unclear-type:off
(_useSyncExternalStore = react.useSyncExternalStore) !== null && _useSyncExternalStore !== void 0 ? _useSyncExternalStore :
// flowlint-next-line unclear-type:off
react.unstable_useSyncExternalStore;
let ReactRendererVersionMismatchWarnOnce = false; // Check if the current renderer supports `useSyncExternalStore()`.
// Since React goes through a proxy dispatcher and the current renderer can
// change we can't simply check if `React.useSyncExternalStore()` is defined.

function currentRendererSupportsUseSyncExternalStore() {
  var _ReactCurrentDispatch;

  // $FlowFixMe[incompatible-use]
  const {
    ReactCurrentDispatcher,
    ReactCurrentOwner
  } =
  /* $FlowFixMe[prop-missing] This workaround was approved as a safer mechanism
   * to detect if the current renderer supports useSyncExternalStore()
   * https://fb.workplace.com/groups/reactjs/posts/9558682330846963/ */
  react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  const dispatcher = (_ReactCurrentDispatch = ReactCurrentDispatcher === null || ReactCurrentDispatcher === void 0 ? void 0 : ReactCurrentDispatcher.current) !== null && _ReactCurrentDispatch !== void 0 ? _ReactCurrentDispatch : ReactCurrentOwner.currentDispatcher;
  const isUseSyncExternalStoreSupported = dispatcher.useSyncExternalStore != null;
  if (useSyncExternalStore && !isUseSyncExternalStoreSupported && !ReactRendererVersionMismatchWarnOnce) {
    ReactRendererVersionMismatchWarnOnce = true;
    Recoil_recoverableViolation('A React renderer without React 18+ API support is being used with React 18+.');
  }
  return isUseSyncExternalStoreSupported;
}

/**
 * mode: The React API and approach to use for syncing state with React
 * early: Re-renders from Recoil updates occur:
 *    1) earlier
 *    2) in sync with React updates in the same batch
 *    3) before transaction observers instead of after.
 * concurrent: Is the current mode compatible with Concurrent Mode and useTransition()
 */
function reactMode() {
  // NOTE: This mode is currently broken with some Suspense cases
  // see Recoil_selector-test.js
  if (Recoil_gkx('recoil_transition_support')) {
    return {
      mode: 'TRANSITION_SUPPORT',
      early: true,
      concurrent: true
    };
  }
  if (Recoil_gkx('recoil_sync_external_store') && useSyncExternalStore != null) {
    return {
      mode: 'SYNC_EXTERNAL_STORE',
      early: true,
      concurrent: false
    };
  }
  if (Recoil_gkx('recoil_mutable_source') && useMutableSource != null && typeof window !== 'undefined' && !window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE) {
    return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {
      mode: 'MUTABLE_SOURCE',
      early: true,
      concurrent: true
    } : {
      mode: 'MUTABLE_SOURCE',
      early: false,
      concurrent: false
    };
  }
  return Recoil_gkx('recoil_suppress_rerender_in_callback') ? {
    mode: 'LEGACY',
    early: true,
    concurrent: false
  } : {
    mode: 'LEGACY',
    early: false,
    concurrent: false
  };
} // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:

function isFastRefreshEnabled() {
  // @fb-only: const {isAcceptingUpdate} = require('__debug');
  // @fb-only: return typeof isAcceptingUpdate === 'function' && isAcceptingUpdate();
  return false; // @oss-only
}

var Recoil_ReactMode = {
  createMutableSource,
  useMutableSource,
  useSyncExternalStore,
  currentRendererSupportsUseSyncExternalStore,
  reactMode,
  isFastRefreshEnabled
};
const env = {
  RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED: true
};
/**
 * Allow NodeJS/NextJS/etc to set the initial state through process.env variable
 * Note:  we don't assume 'process' is available in all runtime environments
 *
 * @see https://github.com/facebookexperimental/Recoil/issues/733
 */

function applyProcessEnvFlagOverrides() {
  var _process, _process$env$RECOIL_D, _process$env$RECOIL_D2;

  // note: this check is needed in addition to the check below, runtime error will occur without it!
  // eslint-disable-next-line fb-www/typeof-undefined
  if (typeof process === 'undefined') {
    return;
  }
  if (((_process = process) === null || _process === void 0 ? void 0 : _process.env) == null) {
    return;
  }
  const sanitizedValue = (_process$env$RECOIL_D = process.env.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED) === null || _process$env$RECOIL_D === void 0 ? void 0 : (_process$env$RECOIL_D2 = _process$env$RECOIL_D.toLowerCase()) === null || _process$env$RECOIL_D2 === void 0 ? void 0 : _process$env$RECOIL_D2.trim();
  if (sanitizedValue == null || sanitizedValue === '') {
    return;
  }
  const allowedValues = ['true', 'false'];
  if (!allowedValues.includes(sanitizedValue)) {
    throw Recoil_err(`process.env.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED value must be 'true', 'false', or empty: ${sanitizedValue}`);
  }
  env.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED = sanitizedValue === 'true';
}
applyProcessEnvFlagOverrides();
var Recoil_RecoilEnv = env;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

// eslint-disable-next-line no-unused-vars
class AbstractRecoilValue {
  constructor(newKey) {
    es_defineProperty(this, "key", void 0);
    this.key = newKey;
  }
  toJSON() {
    return {
      key: this.key
    };
  }
}
class RecoilState extends AbstractRecoilValue {}
class RecoilValueReadOnly extends AbstractRecoilValue {}
function isRecoilValue(x) {
  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;
}
var Recoil_RecoilValue = {
  AbstractRecoilValue,
  RecoilState,
  RecoilValueReadOnly,
  isRecoilValue
};
var Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;
var Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;
var Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;
var Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;
var Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  AbstractRecoilValue: Recoil_RecoilValue_1,
  RecoilState: Recoil_RecoilValue_2,
  RecoilValueReadOnly: Recoil_RecoilValue_3,
  isRecoilValue: Recoil_RecoilValue_4
});

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function sprintf(format, ...args) {
  let index = 0;
  return format.replace(/%s/g, () => String(args[index++]));
}
var sprintf_1 = (/* unused pure expression or super */ null && (sprintf));
function expectationViolation(format, ...args) {
  if (false) {}
}
var expectationViolation_1 = expectationViolation;

// @oss-only

var Recoil_expectationViolation = expectationViolation_1;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Creates a new iterable whose output is generated by passing the input
 * iterable's values through the mapper function.
 */

function mapIterable(iterable, callback) {
  // Use generator to create iterable/iterator
  return function* () {
    let index = 0;
    for (const value of iterable) {
      yield callback(value, index++);
    }
  }();
}
var Recoil_mapIterable = mapIterable;
const {
  isFastRefreshEnabled: isFastRefreshEnabled$1
} = Recoil_ReactMode;
class DefaultValue {}
const DEFAULT_VALUE = new DefaultValue();
// flowlint-next-line unclear-type:off
const nodes = new Map(); // flowlint-next-line unclear-type:off

const recoilValues = new Map();
/* eslint-disable no-redeclare */

function recoilValuesForKeys(keys) {
  return Recoil_mapIterable(keys, key => Recoil_nullthrows(recoilValues.get(key)));
}
function checkForDuplicateAtomKey(key) {
  if (nodes.has(key)) {
    const message = `Duplicate atom key "${key}". This is a FATAL ERROR in
      production. But it is safe to ignore this warning if it occurred because of
      hot module replacement.`;
    if (false) {} else {
      // @fb-only: recoverableViolation(message, 'recoil');
      console.warn(message); // @oss-only
    }
  }
}

function registerNode(node) {
  if (Recoil_RecoilEnv.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED) {
    checkForDuplicateAtomKey(node.key);
  }
  nodes.set(node.key, node);
  const recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);
  recoilValues.set(node.key, recoilValue);
  return recoilValue;
}
/* eslint-enable no-redeclare */

class NodeMissingError extends Error {} // flowlint-next-line unclear-type:off

function getNode(key) {
  const node = nodes.get(key);
  if (node == null) {
    throw new NodeMissingError(`Missing definition for RecoilValue: "${key}""`);
  }
  return node;
} // flowlint-next-line unclear-type:off

function getNodeMaybe(key) {
  return nodes.get(key);
}
const configDeletionHandlers = new Map();
function deleteNodeConfigIfPossible(key) {
  var _node$shouldDeleteCon;
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  }
  const node = nodes.get(key);
  if (node !== null && node !== void 0 && (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) !== null && _node$shouldDeleteCon !== void 0 && _node$shouldDeleteCon.call(node)) {
    var _getConfigDeletionHan;
    nodes.delete(key);
    (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();
    configDeletionHandlers.delete(key);
  }
}
function setConfigDeletionHandler(key, fn) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  }
  if (fn === undefined) {
    configDeletionHandlers.delete(key);
  } else {
    configDeletionHandlers.set(key, fn);
  }
}
function getConfigDeletionHandler(key) {
  return configDeletionHandlers.get(key);
}
var Recoil_Node = {
  nodes,
  recoilValues,
  registerNode,
  getNode,
  getNodeMaybe,
  deleteNodeConfigIfPossible,
  setConfigDeletionHandler,
  getConfigDeletionHandler,
  recoilValuesForKeys,
  NodeMissingError,
  DefaultValue,
  DEFAULT_VALUE
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function enqueueExecution(s, f) {
  f();
}
var Recoil_Queue = {
  enqueueExecution
};
function createCommonjsModule(fn, module) {
  return module = {
    exports: {}
  }, fn(module, module.exports), module.exports;
}
var hamt_1 = createCommonjsModule(function (module) {
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  /**
      @fileOverview Hash Array Mapped Trie.
  
      Code based on: https://github.com/exclipy/pdata
  */

  var hamt = {}; // export

  /* Configuration
   ******************************************************************************/

  var SIZE = 5;
  var BUCKET_SIZE = Math.pow(2, SIZE);
  var MASK = BUCKET_SIZE - 1;
  var MAX_INDEX_NODE = BUCKET_SIZE / 2;
  var MIN_ARRAY_NODE = BUCKET_SIZE / 4;
  /*
   ******************************************************************************/

  var nothing = {};
  var constant = function constant(x) {
    return function () {
      return x;
    };
  };
  /**
      Get 32 bit hash of string.
  
      Based on:
      http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery
  */

  var hash = hamt.hash = function (str) {
    var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);
    if (type === 'number') return str;
    if (type !== 'string') str += '';
    var hash = 0;
    for (var i = 0, len = str.length; i < len; ++i) {
      var c = str.charCodeAt(i);
      hash = (hash << 5) - hash + c | 0;
    }
    return hash;
  };
  /* Bit Ops
   ******************************************************************************/

  /**
      Hamming weight.
  
      Taken from: http://jsperf.com/hamming-weight
  */

  var popcount = function popcount(x) {
    x -= x >> 1 & 0x55555555;
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x += x >> 8;
    x += x >> 16;
    return x & 0x7f;
  };
  var hashFragment = function hashFragment(shift, h) {
    return h >>> shift & MASK;
  };
  var toBitmap = function toBitmap(x) {
    return 1 << x;
  };
  var fromBitmap = function fromBitmap(bitmap, bit) {
    return popcount(bitmap & bit - 1);
  };
  /* Array Ops
   ******************************************************************************/

  /**
      Set a value in an array.
  
      @param mutate Should the input array be mutated?
      @param at Index to change.
      @param v New value
      @param arr Array.
  */

  var arrayUpdate = function arrayUpdate(mutate, at, v, arr) {
    var out = arr;
    if (!mutate) {
      var len = arr.length;
      out = new Array(len);
      for (var i = 0; i < len; ++i) {
        out[i] = arr[i];
      }
    }
    out[at] = v;
    return out;
  };
  /**
      Remove a value from an array.
  
      @param mutate Should the input array be mutated?
      @param at Index to remove.
      @param arr Array.
  */

  var arraySpliceOut = function arraySpliceOut(mutate, at, arr) {
    var newLen = arr.length - 1;
    var i = 0;
    var g = 0;
    var out = arr;
    if (mutate) {
      i = g = at;
    } else {
      out = new Array(newLen);
      while (i < at) {
        out[g++] = arr[i++];
      }
    }
    ++i;
    while (i <= newLen) {
      out[g++] = arr[i++];
    }
    if (mutate) {
      out.length = newLen;
    }
    return out;
  };
  /**
      Insert a value into an array.
  
      @param mutate Should the input array be mutated?
      @param at Index to insert at.
      @param v Value to insert,
      @param arr Array.
  */

  var arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {
    var len = arr.length;
    if (mutate) {
      var _i = len;
      while (_i >= at) {
        arr[_i--] = arr[_i];
      }
      arr[at] = v;
      return arr;
    }
    var i = 0,
      g = 0;
    var out = new Array(len + 1);
    while (i < at) {
      out[g++] = arr[i++];
    }
    out[at] = v;
    while (i < len) {
      out[++g] = arr[i++];
    }
    return out;
  };
  /* Node Structures
   ******************************************************************************/

  var LEAF = 1;
  var COLLISION = 2;
  var INDEX = 3;
  var ARRAY = 4;
  /**
      Empty node.
  */

  var empty = {
    __hamt_isEmpty: true
  };
  var isEmptyNode = function isEmptyNode(x) {
    return x === empty || x && x.__hamt_isEmpty;
  };
  /**
      Leaf holding a value.
  
      @member edit Edit of the node.
      @member hash Hash of key.
      @member key Key.
      @member value Value stored.
  */

  var Leaf = function Leaf(edit, hash, key, value) {
    return {
      type: LEAF,
      edit: edit,
      hash: hash,
      key: key,
      value: value,
      _modify: Leaf__modify
    };
  };
  /**
      Leaf holding multiple values with the same hash but different keys.
  
      @member edit Edit of the node.
      @member hash Hash of key.
      @member children Array of collision children node.
  */

  var Collision = function Collision(edit, hash, children) {
    return {
      type: COLLISION,
      edit: edit,
      hash: hash,
      children: children,
      _modify: Collision__modify
    };
  };
  /**
      Internal node with a sparse set of children.
  
      Uses a bitmap and array to pack children.
  
    @member edit Edit of the node.
      @member mask Bitmap that encode the positions of children in the array.
      @member children Array of child nodes.
  */

  var IndexedNode = function IndexedNode(edit, mask, children) {
    return {
      type: INDEX,
      edit: edit,
      mask: mask,
      children: children,
      _modify: IndexedNode__modify
    };
  };
  /**
      Internal node with many children.
  
      @member edit Edit of the node.
      @member size Number of children.
      @member children Array of child nodes.
  */

  var ArrayNode = function ArrayNode(edit, size, children) {
    return {
      type: ARRAY,
      edit: edit,
      size: size,
      children: children,
      _modify: ArrayNode__modify
    };
  };
  /**
      Is `node` a leaf node?
  */

  var isLeaf = function isLeaf(node) {
    return node === empty || node.type === LEAF || node.type === COLLISION;
  };
  /* Internal node operations.
   ******************************************************************************/

  /**
      Expand an indexed node into an array node.
  
    @param edit Current edit.
      @param frag Index of added child.
      @param child Added child.
      @param mask Index node mask before child added.
      @param subNodes Index node children before child added.
  */

  var expand = function expand(edit, frag, child, bitmap, subNodes) {
    var arr = [];
    var bit = bitmap;
    var count = 0;
    for (var i = 0; bit; ++i) {
      if (bit & 1) arr[i] = subNodes[count++];
      bit >>>= 1;
    }
    arr[frag] = child;
    return ArrayNode(edit, count + 1, arr);
  };
  /**
      Collapse an array node into a indexed node.
  
    @param edit Current edit.
      @param count Number of elements in new array.
      @param removed Index of removed element.
      @param elements Array node children before remove.
  */

  var pack = function pack(edit, count, removed, elements) {
    var children = new Array(count - 1);
    var g = 0;
    var bitmap = 0;
    for (var i = 0, len = elements.length; i < len; ++i) {
      if (i !== removed) {
        var elem = elements[i];
        if (elem && !isEmptyNode(elem)) {
          children[g++] = elem;
          bitmap |= 1 << i;
        }
      }
    }
    return IndexedNode(edit, bitmap, children);
  };
  /**
      Merge two leaf nodes.
  
      @param shift Current shift.
      @param h1 Node 1 hash.
      @param n1 Node 1.
      @param h2 Node 2 hash.
      @param n2 Node 2.
  */

  var mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {
    if (h1 === h2) return Collision(edit, h1, [n2, n1]);
    var subH1 = hashFragment(shift, h1);
    var subH2 = hashFragment(shift, h2);
    return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);
  };
  /**
      Update an entry in a collision list.
  
      @param mutate Should mutation be used?
      @param edit Current edit.
      @param keyEq Key compare function.
      @param hash Hash of collision.
      @param list Collision list.
      @param f Update function.
      @param k Key to update.
      @param size Size ref.
  */

  var updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {
    var len = list.length;
    for (var i = 0; i < len; ++i) {
      var child = list[i];
      if (keyEq(k, child.key)) {
        var value = child.value;
        var _newValue = f(value);
        if (_newValue === value) return list;
        if (_newValue === nothing) {
          --size.value;
          return arraySpliceOut(mutate, i, list);
        }
        return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);
      }
    }
    var newValue = f();
    if (newValue === nothing) return list;
    ++size.value;
    return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);
  };
  var canEditNode = function canEditNode(edit, node) {
    return edit === node.edit;
  };
  /* Editing
   ******************************************************************************/

  var Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {
    if (keyEq(k, this.key)) {
      var _v = f(this.value);
      if (_v === this.value) return this;else if (_v === nothing) {
        --size.value;
        return empty;
      }
      if (canEditNode(edit, this)) {
        this.value = _v;
        return this;
      }
      return Leaf(edit, h, k, _v);
    }
    var v = f();
    if (v === nothing) return this;
    ++size.value;
    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));
  };
  var Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {
    if (h === this.hash) {
      var canEdit = canEditNode(edit, this);
      var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);
      if (list === this.children) return this;
      return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list
    }

    var v = f();
    if (v === nothing) return this;
    ++size.value;
    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));
  };
  var IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {
    var mask = this.mask;
    var children = this.children;
    var frag = hashFragment(shift, h);
    var bit = toBitmap(frag);
    var indx = fromBitmap(mask, bit);
    var exists = mask & bit;
    var current = exists ? children[indx] : empty;
    var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);
    if (current === child) return this;
    var canEdit = canEditNode(edit, this);
    var bitmap = mask;
    var newChildren = void 0;
    if (exists && isEmptyNode(child)) {
      // remove
      bitmap &= ~bit;
      if (!bitmap) return empty;
      if (children.length <= 2 && isLeaf(children[indx ^ 1])) return children[indx ^ 1]; // collapse

      newChildren = arraySpliceOut(canEdit, indx, children);
    } else if (!exists && !isEmptyNode(child)) {
      // add
      if (children.length >= MAX_INDEX_NODE) return expand(edit, frag, child, mask, children);
      bitmap |= bit;
      newChildren = arraySpliceIn(canEdit, indx, child, children);
    } else {
      // modify
      newChildren = arrayUpdate(canEdit, indx, child, children);
    }
    if (canEdit) {
      this.mask = bitmap;
      this.children = newChildren;
      return this;
    }
    return IndexedNode(edit, bitmap, newChildren);
  };
  var ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {
    var count = this.size;
    var children = this.children;
    var frag = hashFragment(shift, h);
    var child = children[frag];
    var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);
    if (child === newChild) return this;
    var canEdit = canEditNode(edit, this);
    var newChildren = void 0;
    if (isEmptyNode(child) && !isEmptyNode(newChild)) {
      // add
      ++count;
      newChildren = arrayUpdate(canEdit, frag, newChild, children);
    } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {
      // remove
      --count;
      if (count <= MIN_ARRAY_NODE) return pack(edit, count, frag, children);
      newChildren = arrayUpdate(canEdit, frag, empty, children);
    } else {
      // modify
      newChildren = arrayUpdate(canEdit, frag, newChild, children);
    }
    if (canEdit) {
      this.size = count;
      this.children = newChildren;
      return this;
    }
    return ArrayNode(edit, count, newChildren);
  };
  empty._modify = function (edit, keyEq, shift, f, h, k, size) {
    var v = f();
    if (v === nothing) return empty;
    ++size.value;
    return Leaf(edit, h, k, v);
  };
  /*
   ******************************************************************************/

  function Map(editable, edit, config, root, size) {
    this._editable = editable;
    this._edit = edit;
    this._config = config;
    this._root = root;
    this._size = size;
  }
  Map.prototype.setTree = function (newRoot, newSize) {
    if (this._editable) {
      this._root = newRoot;
      this._size = newSize;
      return this;
    }
    return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);
  };
  /* Queries
   ******************************************************************************/

  /**
      Lookup the value for `key` in `map` using a custom `hash`.
  
      Returns the value or `alt` if none.
  */

  var tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {
    var node = map._root;
    var shift = 0;
    var keyEq = map._config.keyEq;
    while (true) {
      switch (node.type) {
        case LEAF:
          {
            return keyEq(key, node.key) ? node.value : alt;
          }
        case COLLISION:
          {
            if (hash === node.hash) {
              var children = node.children;
              for (var i = 0, len = children.length; i < len; ++i) {
                var child = children[i];
                if (keyEq(key, child.key)) return child.value;
              }
            }
            return alt;
          }
        case INDEX:
          {
            var frag = hashFragment(shift, hash);
            var bit = toBitmap(frag);
            if (node.mask & bit) {
              node = node.children[fromBitmap(node.mask, bit)];
              shift += SIZE;
              break;
            }
            return alt;
          }
        case ARRAY:
          {
            node = node.children[hashFragment(shift, hash)];
            if (node) {
              shift += SIZE;
              break;
            }
            return alt;
          }
        default:
          return alt;
      }
    }
  };
  Map.prototype.tryGetHash = function (alt, hash, key) {
    return tryGetHash(alt, hash, key, this);
  };
  /**
      Lookup the value for `key` in `map` using internal hash function.
  
      @see `tryGetHash`
  */

  var tryGet = hamt.tryGet = function (alt, key, map) {
    return tryGetHash(alt, map._config.hash(key), key, map);
  };
  Map.prototype.tryGet = function (alt, key) {
    return tryGet(alt, key, this);
  };
  /**
      Lookup the value for `key` in `map` using a custom `hash`.
  
      Returns the value or `undefined` if none.
  */

  var getHash = hamt.getHash = function (hash, key, map) {
    return tryGetHash(undefined, hash, key, map);
  };
  Map.prototype.getHash = function (hash, key) {
    return getHash(hash, key, this);
  };
  /**
      Lookup the value for `key` in `map` using internal hash function.
  
      @see `get`
  */

  var get = hamt.get = function (key, map) {
    return tryGetHash(undefined, map._config.hash(key), key, map);
  };
  Map.prototype.get = function (key, alt) {
    return tryGet(alt, key, this);
  };
  /**
      Does an entry exist for `key` in `map`? Uses custom `hash`.
  */

  var hasHash = hamt.has = function (hash, key, map) {
    return tryGetHash(nothing, hash, key, map) !== nothing;
  };
  Map.prototype.hasHash = function (hash, key) {
    return hasHash(hash, key, this);
  };
  /**
      Does an entry exist for `key` in `map`? Uses internal hash function.
  */

  var has = hamt.has = function (key, map) {
    return hasHash(map._config.hash(key), key, map);
  };
  Map.prototype.has = function (key) {
    return has(key, this);
  };
  var defKeyCompare = function defKeyCompare(x, y) {
    return x === y;
  };
  /**
      Create an empty map.
  
      @param config Configuration.
  */

  hamt.make = function (config) {
    return new Map(0, 0, {
      keyEq: config && config.keyEq || defKeyCompare,
      hash: config && config.hash || hash
    }, empty, 0);
  };
  /**
      Empty map.
  */

  hamt.empty = hamt.make();
  /**
      Does `map` contain any elements?
  */

  var isEmpty = hamt.isEmpty = function (map) {
    return map && !!isEmptyNode(map._root);
  };
  Map.prototype.isEmpty = function () {
    return isEmpty(this);
  };
  /* Updates
   ******************************************************************************/

  /**
      Alter the value stored for `key` in `map` using function `f` using
      custom hash.
  
      `f` is invoked with the current value for `k` if it exists,
      or no arguments if no such value exists. `modify` will always either
      update or insert a value into the map.
  
      Returns a map with the modified value. Does not alter `map`.
  */

  var modifyHash = hamt.modifyHash = function (f, hash, key, map) {
    var size = {
      value: map._size
    };
    var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);
    return map.setTree(newRoot, size.value);
  };
  Map.prototype.modifyHash = function (hash, key, f) {
    return modifyHash(f, hash, key, this);
  };
  /**
      Alter the value stored for `key` in `map` using function `f` using
      internal hash function.
  
      @see `modifyHash`
  */

  var modify = hamt.modify = function (f, key, map) {
    return modifyHash(f, map._config.hash(key), key, map);
  };
  Map.prototype.modify = function (key, f) {
    return modify(f, key, this);
  };
  /**
      Store `value` for `key` in `map` using custom `hash`.
  
      Returns a map with the modified value. Does not alter `map`.
  */

  var setHash = hamt.setHash = function (hash, key, value, map) {
    return modifyHash(constant(value), hash, key, map);
  };
  Map.prototype.setHash = function (hash, key, value) {
    return setHash(hash, key, value, this);
  };
  /**
      Store `value` for `key` in `map` using internal hash function.
  
      @see `setHash`
  */

  var set = hamt.set = function (key, value, map) {
    return setHash(map._config.hash(key), key, value, map);
  };
  Map.prototype.set = function (key, value) {
    return set(key, value, this);
  };
  /**
      Remove the entry for `key` in `map`.
  
      Returns a map with the value removed. Does not alter `map`.
  */

  var del = constant(nothing);
  var removeHash = hamt.removeHash = function (hash, key, map) {
    return modifyHash(del, hash, key, map);
  };
  Map.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {
    return removeHash(hash, key, this);
  };
  /**
      Remove the entry for `key` in `map` using internal hash function.
  
      @see `removeHash`
  */

  var remove = hamt.remove = function (key, map) {
    return removeHash(map._config.hash(key), key, map);
  };
  Map.prototype.remove = Map.prototype.delete = function (key) {
    return remove(key, this);
  };
  /* Mutation
   ******************************************************************************/

  /**
      Mark `map` as mutable.
   */

  var beginMutation = hamt.beginMutation = function (map) {
    return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);
  };
  Map.prototype.beginMutation = function () {
    return beginMutation(this);
  };
  /**
      Mark `map` as immutable.
   */

  var endMutation = hamt.endMutation = function (map) {
    map._editable = map._editable && map._editable - 1;
    return map;
  };
  Map.prototype.endMutation = function () {
    return endMutation(this);
  };
  /**
      Mutate `map` within the context of `f`.
      @param f
      @param map HAMT
  */

  var mutate = hamt.mutate = function (f, map) {
    var transient = beginMutation(map);
    f(transient);
    return endMutation(transient);
  };
  Map.prototype.mutate = function (f) {
    return mutate(f, this);
  };
  /* Traversal
   ******************************************************************************/

  /**
      Apply a continuation.
  */

  var appk = function appk(k) {
    return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);
  };
  /**
      Recursively visit all values stored in an array of nodes lazily.
  */

  var lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {
    while (i < len) {
      var child = children[i++];
      if (child && !isEmptyNode(child)) return lazyVisit(child, f, [len, children, i, f, k]);
    }
    return appk(k);
  };
  /**
      Recursively visit all values stored in `node` lazily.
  */

  var lazyVisit = function lazyVisit(node, f, k) {
    switch (node.type) {
      case LEAF:
        return {
          value: f(node),
          rest: k
        };
      case COLLISION:
      case ARRAY:
      case INDEX:
        var children = node.children;
        return lazyVisitChildren(children.length, children, 0, f, k);
      default:
        return appk(k);
    }
  };
  var DONE = {
    done: true
  };
  /**
      Javascript iterator over a map.
  */

  function MapIterator(v) {
    this.v = v;
  }
  MapIterator.prototype.next = function () {
    if (!this.v) return DONE;
    var v0 = this.v;
    this.v = appk(v0.rest);
    return v0;
  };
  MapIterator.prototype[Symbol.iterator] = function () {
    return this;
  };
  /**
      Lazily visit each value in map with function `f`.
  */

  var visit = function visit(map, f) {
    return new MapIterator(lazyVisit(map._root, f));
  };
  /**
      Get a Javascsript iterator of `map`.
  
      Iterates over `[key, value]` arrays.
  */

  var buildPairs = function buildPairs(x) {
    return [x.key, x.value];
  };
  var entries = hamt.entries = function (map) {
    return visit(map, buildPairs);
  };
  Map.prototype.entries = Map.prototype[Symbol.iterator] = function () {
    return entries(this);
  };
  /**
      Get array of all keys in `map`.
  
      Order is not guaranteed.
  */

  var buildKeys = function buildKeys(x) {
    return x.key;
  };
  var keys = hamt.keys = function (map) {
    return visit(map, buildKeys);
  };
  Map.prototype.keys = function () {
    return keys(this);
  };
  /**
      Get array of all values in `map`.
  
      Order is not guaranteed, duplicates are preserved.
  */

  var buildValues = function buildValues(x) {
    return x.value;
  };
  var values = hamt.values = Map.prototype.values = function (map) {
    return visit(map, buildValues);
  };
  Map.prototype.values = function () {
    return values(this);
  };
  /* Fold
   ******************************************************************************/

  /**
      Visit every entry in the map, aggregating data.
  
      Order of nodes is not guaranteed.
  
      @param f Function mapping accumulated value, value, and key to new value.
      @param z Starting value.
      @param m HAMT
  */

  var fold = hamt.fold = function (f, z, m) {
    var root = m._root;
    if (root.type === LEAF) return f(z, root.value, root.key);
    var toVisit = [root.children];
    var children = void 0;
    while (children = toVisit.pop()) {
      for (var i = 0, len = children.length; i < len;) {
        var child = children[i++];
        if (child && child.type) {
          if (child.type === LEAF) z = f(z, child.value, child.key);else toVisit.push(child.children);
        }
      }
    }
    return z;
  };
  Map.prototype.fold = function (f, z) {
    return fold(f, z, this);
  };
  /**
      Visit every entry in the map, aggregating data.
  
      Order of nodes is not guaranteed.
  
      @param f Function invoked with value and key
      @param map HAMT
  */

  var forEach = hamt.forEach = function (f, map) {
    return fold(function (_, value, key) {
      return f(value, key, map);
    }, null, map);
  };
  Map.prototype.forEach = function (f) {
    return forEach(f, this);
  };
  /* Aggregate
   ******************************************************************************/

  /**
      Get the number of entries in `map`.
  */

  var count = hamt.count = function (map) {
    return map._size;
  };
  Map.prototype.count = function () {
    return count(this);
  };
  Object.defineProperty(Map.prototype, 'size', {
    get: Map.prototype.count
  });
  /* Export
   ******************************************************************************/

  if (module.exports) {
    module.exports = hamt;
  } else {
    undefined.hamt = hamt;
  }
});
class BuiltInMap {
  constructor(existing) {
    es_defineProperty(this, "_map", void 0);
    this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());
  }
  keys() {
    return this._map.keys();
  }
  entries() {
    return this._map.entries();
  }
  get(k) {
    return this._map.get(k);
  }
  has(k) {
    return this._map.has(k);
  }
  set(k, v) {
    this._map.set(k, v);
    return this;
  }
  delete(k) {
    this._map.delete(k);
    return this;
  }
  clone() {
    return persistentMap(this);
  }
  toMap() {
    return new Map(this._map);
  }
}
class HashArrayMappedTrieMap {
  // Because hamt.empty is not a function there is no way to introduce type
  // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.
  // $FlowIssue
  constructor(existing) {
    es_defineProperty(this, "_hamt", hamt_1.empty.beginMutation());
    if (existing instanceof HashArrayMappedTrieMap) {
      const h = existing._hamt.endMutation();
      existing._hamt = h.beginMutation();
      this._hamt = h.beginMutation();
    } else if (existing) {
      for (const [k, v] of existing.entries()) {
        this._hamt.set(k, v);
      }
    }
  }
  keys() {
    return this._hamt.keys();
  }
  entries() {
    return this._hamt.entries();
  }
  get(k) {
    return this._hamt.get(k);
  }
  has(k) {
    return this._hamt.has(k);
  }
  set(k, v) {
    this._hamt.set(k, v);
    return this;
  }
  delete(k) {
    this._hamt.delete(k);
    return this;
  }
  clone() {
    return persistentMap(this);
  }
  toMap() {
    return new Map(this._hamt);
  }
}
function persistentMap(existing) {
  if (Recoil_gkx('recoil_hamt_2020')) {
    return new HashArrayMappedTrieMap(existing);
  } else {
    return new BuiltInMap(existing);
  }
}
var Recoil_PersistentMap = {
  persistentMap
};
var Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;
var Recoil_PersistentMap$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  persistentMap: Recoil_PersistentMap_1
});

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Returns a set containing all of the values from the first set that are not
 * present in any of the subsequent sets.
 *
 * Note: this is written procedurally (i.e., without filterSet) for performant
 * use in tight loops.
 */

function differenceSets(set, ...setsWithValuesToRemove) {
  const ret = new Set();
  FIRST: for (const value of set) {
    for (const otherSet of setsWithValuesToRemove) {
      if (otherSet.has(value)) {
        continue FIRST;
      }
    }
    ret.add(value);
  }
  return ret;
}
var Recoil_differenceSets = differenceSets;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Returns a new Map object with the same keys as the original, but with the
 * values replaced with the output of the given callback function.
 */

function mapMap(map, callback) {
  const result = new Map();
  map.forEach((value, key) => {
    result.set(key, callback(value, key));
  });
  return result;
}
var Recoil_mapMap = mapMap;
function makeGraph() {
  return {
    nodeDeps: new Map(),
    nodeToNodeSubscriptions: new Map()
  };
}
function cloneGraph(graph) {
  return {
    nodeDeps: Recoil_mapMap(graph.nodeDeps, s => new Set(s)),
    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, s => new Set(s))
  };
} // Note that this overwrites the deps of existing nodes, rather than unioning
// the new deps with the old deps.

function mergeDepsIntoGraph(key, newDeps, graph,
// If olderGraph is given then we will not overwrite changes made to the given
// graph compared with olderGraph:
olderGraph) {
  const {
    nodeDeps,
    nodeToNodeSubscriptions
  } = graph;
  const oldDeps = nodeDeps.get(key);
  if (oldDeps && olderGraph && oldDeps !== olderGraph.nodeDeps.get(key)) {
    return;
  } // Update nodeDeps:

  nodeDeps.set(key, newDeps); // Add new deps to nodeToNodeSubscriptions:

  const addedDeps = oldDeps == null ? newDeps : Recoil_differenceSets(newDeps, oldDeps);
  for (const dep of addedDeps) {
    if (!nodeToNodeSubscriptions.has(dep)) {
      nodeToNodeSubscriptions.set(dep, new Set());
    }
    const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(dep));
    existing.add(key);
  } // Remove removed deps from nodeToNodeSubscriptions:

  if (oldDeps) {
    const removedDeps = Recoil_differenceSets(oldDeps, newDeps);
    for (const dep of removedDeps) {
      if (!nodeToNodeSubscriptions.has(dep)) {
        return;
      }
      const existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(dep));
      existing.delete(key);
      if (existing.size === 0) {
        nodeToNodeSubscriptions.delete(dep);
      }
    }
  }
}
function saveDepsToStore(key, deps, store, version) {
  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;
  const storeState = store.getState();
  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {
    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');
  } // Merge the dependencies discovered into the store's dependency map
  // for the version that was read:

  const graph = store.getGraph(version);
  mergeDepsIntoGraph(key, deps, graph); // If this version is not the latest version, also write these dependencies
  // into later versions if they don't already have their own:

  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {
    const currentGraph = store.getGraph(storeState.currentTree.version);
    mergeDepsIntoGraph(key, deps, currentGraph, graph);
  }
  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {
    var _storeState$nextTree2;
    const nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;
    if (nextVersion !== undefined) {
      const nextGraph = store.getGraph(nextVersion);
      mergeDepsIntoGraph(key, deps, nextGraph, graph);
    }
  }
}
var Recoil_Graph = {
  cloneGraph,
  graph: makeGraph,
  saveDepsToStore
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

let nextTreeStateVersion = 0;
const getNextTreeStateVersion = () => nextTreeStateVersion++;
let nextStoreID = 0;
const getNextStoreID = () => nextStoreID++;
let nextComponentID = 0;
const getNextComponentID = () => nextComponentID++;
var Recoil_Keys = {
  getNextTreeStateVersion,
  getNextStoreID,
  getNextComponentID
};
const {
  persistentMap: persistentMap$1
} = Recoil_PersistentMap$1;
const {
  graph
} = Recoil_Graph;
const {
  getNextTreeStateVersion: getNextTreeStateVersion$1
} = Recoil_Keys;
function makeEmptyTreeState() {
  const version = getNextTreeStateVersion$1();
  return {
    version,
    stateID: version,
    transactionMetadata: {},
    dirtyAtoms: new Set(),
    atomValues: persistentMap$1(),
    nonvalidatedAtoms: persistentMap$1()
  };
}
function makeEmptyStoreState() {
  const currentTree = makeEmptyTreeState();
  return {
    currentTree,
    nextTree: null,
    previousTree: null,
    commitDepth: 0,
    knownAtoms: new Set(),
    knownSelectors: new Set(),
    transactionSubscriptions: new Map(),
    nodeTransactionSubscriptions: new Map(),
    nodeToComponentSubscriptions: new Map(),
    queuedComponentCallbacks_DEPRECATED: [],
    suspendedComponentResolvers: new Set(),
    graphsByVersion: new Map().set(currentTree.version, graph()),
    retention: {
      referenceCounts: new Map(),
      nodesRetainedByZone: new Map(),
      retainablesToCheckForRelease: new Set()
    },
    nodeCleanupFunctions: new Map()
  };
}
var Recoil_State = {
  makeEmptyTreeState,
  makeEmptyStoreState,
  getNextTreeStateVersion: getNextTreeStateVersion$1
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

class RetentionZone {}
function retentionZone() {
  return new RetentionZone();
}
var Recoil_RetentionZone = {
  RetentionZone,
  retentionZone
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Utilities for working with built-in Maps and Sets without mutating them.
 *
 * 
 * @format
 * @oncall recoil
 */

function setByAddingToSet(set, v) {
  const next = new Set(set);
  next.add(v);
  return next;
}
function setByDeletingFromSet(set, v) {
  const next = new Set(set);
  next.delete(v);
  return next;
}
function mapBySettingInMap(map, k, v) {
  const next = new Map(map);
  next.set(k, v);
  return next;
}
function mapByUpdatingInMap(map, k, updater) {
  const next = new Map(map);
  next.set(k, updater(next.get(k)));
  return next;
}
function mapByDeletingFromMap(map, k) {
  const next = new Map(map);
  next.delete(k);
  return next;
}
function mapByDeletingMultipleFromMap(map, ks) {
  const next = new Map(map);
  ks.forEach(k => next.delete(k));
  return next;
}
var Recoil_CopyOnWrite = {
  setByAddingToSet,
  setByDeletingFromSet,
  mapBySettingInMap,
  mapByUpdatingInMap,
  mapByDeletingFromMap,
  mapByDeletingMultipleFromMap
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Creates a new iterable whose output is generated by passing the input
 * iterable's values through the filter function.
 */

function* filterIterable(iterable, predicate) {
  // Use generator to create iterable/iterator
  let index = 0;
  for (const value of iterable) {
    if (predicate(value, index++)) {
      yield value;
    }
  }
}
var Recoil_filterIterable = filterIterable;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Return a proxy object based on the provided base and factories objects.
 * The proxy will include all properties of the base object as-is.
 * The factories object contains callbacks to obtain the values of the properies
 * for its keys.
 *
 * This is useful for providing users an object where some properties may be
 * lazily computed only on first access.
 */
// $FlowIssue[unclear-type]

function lazyProxy(base, factories) {
  const proxy = new Proxy(base, {
    // Compute and cache lazy property if not already done.
    get: (target, prop) => {
      if (!(prop in target) && prop in factories) {
        target[prop] = factories[prop]();
      }
      return target[prop];
    },
    // This method allows user to iterate keys as normal
    ownKeys: target => {
      return Object.keys(target);
    }
  }); // $FlowIssue[incompatible-return]

  return proxy;
}
var Recoil_lazyProxy = lazyProxy;
const {
  getNode: getNode$1,
  getNodeMaybe: getNodeMaybe$1,
  recoilValuesForKeys: recoilValuesForKeys$1
} = Recoil_Node;
const {
  RetentionZone: RetentionZone$1
} = Recoil_RetentionZone;
const {
  setByAddingToSet: setByAddingToSet$1
} = Recoil_CopyOnWrite;

// flowlint-next-line unclear-type:off

const emptySet = Object.freeze(new Set());
class ReadOnlyRecoilValueError extends Error {}
function initializeRetentionForNode(store, nodeKey, retainedBy) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return () => undefined;
  }
  const {
    nodesRetainedByZone
  } = store.getState().retention;
  function addToZone(zone) {
    let set = nodesRetainedByZone.get(zone);
    if (!set) {
      nodesRetainedByZone.set(zone, set = new Set());
    }
    set.add(nodeKey);
  }
  if (retainedBy instanceof RetentionZone$1) {
    addToZone(retainedBy);
  } else if (Array.isArray(retainedBy)) {
    for (const zone of retainedBy) {
      addToZone(zone);
    }
  }
  return () => {
    if (!Recoil_gkx('recoil_memory_managament_2020')) {
      return;
    }
    const {
      retention
    } = store.getState();
    function deleteFromZone(zone) {
      const set = retention.nodesRetainedByZone.get(zone);
      set === null || set === void 0 ? void 0 : set.delete(nodeKey);
      if (set && set.size === 0) {
        retention.nodesRetainedByZone.delete(zone);
      }
    }
    if (retainedBy instanceof RetentionZone$1) {
      deleteFromZone(retainedBy);
    } else if (Array.isArray(retainedBy)) {
      for (const zone of retainedBy) {
        deleteFromZone(zone);
      }
    }
  };
}
function initializeNodeIfNewToStore(store, treeState, key, trigger) {
  const storeState = store.getState();
  if (storeState.nodeCleanupFunctions.has(key)) {
    return;
  }
  const node = getNode$1(key);
  const retentionCleanup = initializeRetentionForNode(store, key, node.retainedBy);
  const nodeCleanup = node.init(store, treeState, trigger);
  storeState.nodeCleanupFunctions.set(key, () => {
    nodeCleanup();
    retentionCleanup();
  });
}
function initializeNode(store, key, trigger) {
  initializeNodeIfNewToStore(store, store.getState().currentTree, key, trigger);
}
function cleanUpNode(store, key) {
  var _state$nodeCleanupFun;
  const state = store.getState();
  (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();
  state.nodeCleanupFunctions.delete(key);
} // Get the current value loadable of a node and update the state.
// Update dependencies and subscriptions for selectors.
// Update saved value validation for atoms.

function getNodeLoadable(store, state, key) {
  initializeNodeIfNewToStore(store, state, key, 'get');
  return getNode$1(key).get(store, state);
} // Peek at the current value loadable for a node without any evaluation or state change

function peekNodeLoadable(store, state, key) {
  return getNode$1(key).peek(store, state);
} // Write value directly to state bypassing the Node interface as the node
// definitions may not have been loaded yet when processing the initial snapshot.

function setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {
  var _node$invalidate;
  const node = getNodeMaybe$1(key);
  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);
  return {
    ...state,
    atomValues: state.atomValues.clone().delete(key),
    nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue),
    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)
  };
} // Return the discovered dependencies and values to be written by setting
// a node value. (Multiple values may be written due to selectors getting to
// set upstreams; deps may be discovered because of reads in updater functions.)

function setNodeValue(store, state, key, newValue) {
  const node = getNode$1(key);
  if (node.set == null) {
    throw new ReadOnlyRecoilValueError(`Attempt to set read-only RecoilValue: ${key}`);
  }
  const set = node.set; // so flow doesn't lose the above refinement.

  initializeNodeIfNewToStore(store, state, key, 'set');
  return set(store, state, newValue);
}
function peekNodeInfo(store, state, key) {
  const storeState = store.getState();
  const graph = store.getGraph(state.version);
  const type = getNode$1(key).nodeType;
  return Recoil_lazyProxy({
    type
  }, {
    loadable: () => peekNodeLoadable(store, state, key),
    isActive: () => storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),
    isSet: () => type === 'selector' ? false : state.atomValues.has(key),
    isModified: () => state.dirtyAtoms.has(key),
    // Report current dependencies.  If the node hasn't been evaluated, then
    // dependencies may be missing based on the current state.
    deps: () => {
      var _graph$nodeDeps$get;
      return recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []);
    },
    // Reports all "current" subscribers.  Evaluating other nodes or
    // previous in-progress async evaluations may introduce new subscribers.
    subscribers: () => {
      var _storeState$nodeToCom, _storeState$nodeToCom2;
      return {
        nodes: recoilValuesForKeys$1(Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), nodeKey => nodeKey !== key)),
        components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], ([name]) => ({
          name
        }))
      };
    }
  });
} // Find all of the recursively dependent nodes

function getDownstreamNodes(store, state, keys) {
  const visitedNodes = new Set();
  const visitingNodes = Array.from(keys);
  const graph = store.getGraph(state.version);
  for (let key = visitingNodes.pop(); key; key = visitingNodes.pop()) {
    var _graph$nodeToNodeSubs;
    visitedNodes.add(key);
    const subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;
    for (const downstreamNode of subscribedNodes) {
      if (!visitedNodes.has(downstreamNode)) {
        visitingNodes.push(downstreamNode);
      }
    }
  }
  return visitedNodes;
}
var Recoil_FunctionalCore = {
  getNodeLoadable,
  peekNodeLoadable,
  setNodeValue,
  initializeNode,
  cleanUpNode,
  setUnvalidatedAtomValue_DEPRECATED,
  peekNodeInfo,
  getDownstreamNodes
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

let _invalidateMemoizedSnapshot = null;
function setInvalidateMemoizedSnapshot(invalidate) {
  _invalidateMemoizedSnapshot = invalidate;
}
function invalidateMemoizedSnapshot() {
  var _invalidateMemoizedSn;
  (_invalidateMemoizedSn = _invalidateMemoizedSnapshot) === null || _invalidateMemoizedSn === void 0 ? void 0 : _invalidateMemoizedSn();
}
var Recoil_SnapshotCache = {
  setInvalidateMemoizedSnapshot,
  invalidateMemoizedSnapshot
};
const {
  getDownstreamNodes: getDownstreamNodes$1,
  getNodeLoadable: getNodeLoadable$1,
  setNodeValue: setNodeValue$1
} = Recoil_FunctionalCore;
const {
  getNextComponentID: getNextComponentID$1
} = Recoil_Keys;
const {
  getNode: getNode$2,
  getNodeMaybe: getNodeMaybe$2
} = Recoil_Node;
const {
  DefaultValue: DefaultValue$1
} = Recoil_Node;
const {
  reactMode: reactMode$1
} = Recoil_ReactMode;
const {
  AbstractRecoilValue: AbstractRecoilValue$1,
  RecoilState: RecoilState$1,
  RecoilValueReadOnly: RecoilValueReadOnly$1,
  isRecoilValue: isRecoilValue$1
} = Recoil_RecoilValue$1;
const {
  invalidateMemoizedSnapshot: invalidateMemoizedSnapshot$1
} = Recoil_SnapshotCache;
function getRecoilValueAsLoadable(store, {
  key
}, treeState = store.getState().currentTree) {
  var _storeState$nextTree, _storeState$previousT;

  // Reading from an older tree can cause bugs because the dependencies that we
  // discover during the read are lost.
  const storeState = store.getState();
  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {
    Recoil_recoverableViolation('Tried to read from a discarded tree');
  }
  const loadable = getNodeLoadable$1(store, treeState, key);
  if (loadable.state === 'loading') {
    loadable.contents.catch(() => {
      /**
       * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector
       * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)
       */
      return;
    });
  }
  return loadable;
}
function applyAtomValueWrites(atomValues, writes) {
  const result = atomValues.clone();
  writes.forEach((v, k) => {
    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {
      result.delete(k);
    } else {
      result.set(k, v);
    }
  });
  return result;
}
function valueFromValueOrUpdater(store, state, {
  key
}, valueOrUpdater) {
  if (typeof valueOrUpdater === 'function') {
    // Updater form: pass in the current value. Throw if the current value
    // is unavailable (namely when updating an async selector that's
    // pending or errored):
    const current = getNodeLoadable$1(store, state, key);
    if (current.state === 'loading') {
      const msg = `Tried to set atom or selector "${key}" using an updater function while the current state is pending, this is not currently supported.`;
      Recoil_recoverableViolation(msg);
      throw Recoil_err(msg);
    } else if (current.state === 'hasError') {
      throw current.contents;
    } // T itself may be a function, so our refinement is not sufficient:

    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off
  } else {
    return valueOrUpdater;
  }
}
function applyAction(store, state, action) {
  if (action.type === 'set') {
    const {
      recoilValue,
      valueOrUpdater
    } = action;
    const newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);
    const writes = setNodeValue$1(store, state, recoilValue.key, newValue);
    for (const [key, loadable] of writes.entries()) {
      writeLoadableToTreeState(state, key, loadable);
    }
  } else if (action.type === 'setLoadable') {
    const {
      recoilValue: {
        key
      },
      loadable
    } = action;
    writeLoadableToTreeState(state, key, loadable);
  } else if (action.type === 'markModified') {
    const {
      recoilValue: {
        key
      }
    } = action;
    state.dirtyAtoms.add(key);
  } else if (action.type === 'setUnvalidated') {
    var _node$invalidate;

    // Write value directly to state bypassing the Node interface as the node
    // definitions may not have been loaded yet when processing the initial snapshot.
    const {
      recoilValue: {
        key
      },
      unvalidatedValue
    } = action;
    const node = getNodeMaybe$2(key);
    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);
    state.atomValues.delete(key);
    state.nonvalidatedAtoms.set(key, unvalidatedValue);
    state.dirtyAtoms.add(key);
  } else {
    Recoil_recoverableViolation(`Unknown action ${action.type}`);
  }
}
function writeLoadableToTreeState(state, key, loadable) {
  if (loadable.state === 'hasValue' && loadable.contents instanceof DefaultValue$1) {
    state.atomValues.delete(key);
  } else {
    state.atomValues.set(key, loadable);
  }
  state.dirtyAtoms.add(key);
  state.nonvalidatedAtoms.delete(key);
}
function applyActionsToStore(store, actions) {
  store.replaceState(state => {
    const newState = copyTreeState(state);
    for (const action of actions) {
      applyAction(store, newState, action);
    }
    invalidateDownstreams(store, newState);
    invalidateMemoizedSnapshot$1();
    return newState;
  });
}
function queueOrPerformStateUpdate(store, action) {
  if (batchStack.length) {
    const actionsByStore = batchStack[batchStack.length - 1];
    let actions = actionsByStore.get(store);
    if (!actions) {
      actionsByStore.set(store, actions = []);
    }
    actions.push(action);
  } else {
    applyActionsToStore(store, [action]);
  }
}
const batchStack = [];
function batchStart() {
  const actionsByStore = new Map();
  batchStack.push(actionsByStore);
  return () => {
    for (const [store, actions] of actionsByStore) {
      applyActionsToStore(store, actions);
    }
    const popped = batchStack.pop();
    if (popped !== actionsByStore) {
      Recoil_recoverableViolation('Incorrect order of batch popping');
    }
  };
}
function copyTreeState(state) {
  return {
    ...state,
    atomValues: state.atomValues.clone(),
    nonvalidatedAtoms: state.nonvalidatedAtoms.clone(),
    dirtyAtoms: new Set(state.dirtyAtoms)
  };
}
function invalidateDownstreams(store, state) {
  // Inform any nodes that were changed or downstream of changes so that they
  // can clear out any caches as needed due to the update:
  const downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);
  for (const key of downstreams) {
    var _getNodeMaybe, _getNodeMaybe$invalid;
    (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);
  }
}
function setRecoilValue(store, recoilValue, valueOrUpdater) {
  queueOrPerformStateUpdate(store, {
    type: 'set',
    recoilValue,
    valueOrUpdater
  });
}
function setRecoilValueLoadable(store, recoilValue, loadable) {
  if (loadable instanceof DefaultValue$1) {
    return setRecoilValue(store, recoilValue, loadable);
  }
  queueOrPerformStateUpdate(store, {
    type: 'setLoadable',
    recoilValue,
    loadable: loadable
  });
}
function markRecoilValueModified(store, recoilValue) {
  queueOrPerformStateUpdate(store, {
    type: 'markModified',
    recoilValue
  });
}
function setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {
  queueOrPerformStateUpdate(store, {
    type: 'setUnvalidated',
    recoilValue,
    unvalidatedValue
  });
}
function subscribeToRecoilValue(store, {
  key
}, callback, componentDebugName = null) {
  const subID = getNextComponentID$1();
  const storeState = store.getState();
  if (!storeState.nodeToComponentSubscriptions.has(key)) {
    storeState.nodeToComponentSubscriptions.set(key, new Map());
  }
  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : '<not captured>', callback]); // Handle the case that, during the same tick that we are subscribing, an atom
  // has been updated by some effect handler. Otherwise we will miss the update.

  const mode = reactMode$1();
  if (mode.early && (mode.mode === 'LEGACY' || mode.mode === 'MUTABLE_SOURCE')) {
    const nextTree = store.getState().nextTree;
    if (nextTree && nextTree.dirtyAtoms.has(key)) {
      callback(nextTree);
    }
  }
  return {
    release: () => {
      const releaseStoreState = store.getState();
      const subs = releaseStoreState.nodeToComponentSubscriptions.get(key);
      if (subs === undefined || !subs.has(subID)) {
        Recoil_recoverableViolation(`Subscription missing at release time for atom ${key}. This is a bug in Recoil.`);
        return;
      }
      subs.delete(subID);
      if (subs.size === 0) {
        releaseStoreState.nodeToComponentSubscriptions.delete(key);
      }
    }
  };
}
function refreshRecoilValue(store, recoilValue) {
  var _node$clearCache;
  const {
    currentTree
  } = store.getState();
  const node = getNode$2(recoilValue.key);
  (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, currentTree);
}
var Recoil_RecoilValueInterface = {
  RecoilValueReadOnly: RecoilValueReadOnly$1,
  AbstractRecoilValue: AbstractRecoilValue$1,
  RecoilState: RecoilState$1,
  getRecoilValueAsLoadable,
  setRecoilValue,
  setRecoilValueLoadable,
  markRecoilValueModified,
  setUnvalidatedRecoilValue,
  subscribeToRecoilValue,
  isRecoilValue: isRecoilValue$1,
  applyAtomValueWrites,
  // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot
  batchStart,
  writeLoadableToTreeState,
  invalidateDownstreams,
  copyTreeState,
  refreshRecoilValue
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * The someSet() method tests whether some elements in the given Set pass the
 * test implemented by the provided function.
 */

function someSet(set, callback, context) {
  const iterator = set.entries();
  let current = iterator.next();
  while (!current.done) {
    const entry = current.value;
    if (callback.call(context, entry[1], entry[0], set)) {
      return true;
    }
    current = iterator.next();
  }
  return false;
}
var Recoil_someSet = someSet;
const {
  cleanUpNode: cleanUpNode$1
} = Recoil_FunctionalCore;
const {
  deleteNodeConfigIfPossible: deleteNodeConfigIfPossible$1,
  getNode: getNode$3
} = Recoil_Node;
const {
  RetentionZone: RetentionZone$2
} = Recoil_RetentionZone;

// Components that aren't mounted after suspending for this long will be assumed
// to be discarded and their resources released.

const SUSPENSE_TIMEOUT_MS = 120000;
const emptySet$1 = new Set();
function releaseRetainablesNowOnCurrentTree(store, retainables) {
  const storeState = store.getState();
  const treeState = storeState.currentTree;
  if (storeState.nextTree) {
    Recoil_recoverableViolation('releaseNodesNowOnCurrentTree should only be called at the end of a batch');
    return; // leak memory rather than erase something that's about to be used.
  }

  const nodes = new Set();
  for (const r of retainables) {
    if (r instanceof RetentionZone$2) {
      for (const n of nodesRetainedByZone(storeState, r)) {
        nodes.add(n);
      }
    } else {
      nodes.add(r);
    }
  }
  const releasableNodes = findReleasableNodes(store, nodes);
  for (const node of releasableNodes) {
    releaseNode(store, treeState, node);
  }
}
function findReleasableNodes(store, searchFromNodes) {
  const storeState = store.getState();
  const treeState = storeState.currentTree;
  const graph = store.getGraph(treeState.version);
  const releasableNodes = new Set(); // mutated to collect answer

  const nonReleasableNodes = new Set();
  findReleasableNodesInner(searchFromNodes);
  return releasableNodes;
  function findReleasableNodesInner(searchFromNodes) {
    const releasableNodesFoundThisIteration = new Set();
    const downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes,
    // don't descend into these
    nonReleasableNodes // don't descend into these
    ); // Find which of the downstream nodes are releasable and which are not:

    for (const node of downstreams) {
      var _storeState$retention;

      // Not releasable if configured to be retained forever:
      if (getNode$3(node).retainedBy === 'recoilRoot') {
        nonReleasableNodes.add(node);
        continue;
      } // Not releasable if retained directly by a component:

      if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {
        nonReleasableNodes.add(node);
        continue;
      } // Not releasable if retained by a zone:

      if (zonesThatCouldRetainNode(node).some(z => storeState.retention.referenceCounts.get(z))) {
        nonReleasableNodes.add(node);
        continue;
      } // Not releasable if it has a non-releasable child (which will already be in
      // nonReleasableNodes because we are going in topological order):

      const nodeChildren = graph.nodeToNodeSubscriptions.get(node);
      if (nodeChildren && Recoil_someSet(nodeChildren, child => nonReleasableNodes.has(child))) {
        nonReleasableNodes.add(node);
        continue;
      }
      releasableNodes.add(node);
      releasableNodesFoundThisIteration.add(node);
    } // If we found any releasable nodes, we need to walk UP from those nodes to
    // find whether their parents can now be released as well:

    const parents = new Set();
    for (const node of releasableNodesFoundThisIteration) {
      for (const parent of (_graph$nodeDeps$get = graph.nodeDeps.get(node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1) {
        var _graph$nodeDeps$get;
        if (!releasableNodes.has(parent)) {
          parents.add(parent);
        }
      }
    }
    if (parents.size) {
      findReleasableNodesInner(parents);
    }
  }
} // Children before parents

function getDownstreamNodesInTopologicalOrder(store, treeState, nodes,
// Mutable set is destroyed in place
doNotDescendInto1, doNotDescendInto2) {
  const graph = store.getGraph(treeState.version);
  const answer = [];
  const visited = new Set();
  while (nodes.size > 0) {
    visit(Recoil_nullthrows(nodes.values().next().value));
  }
  return answer;
  function visit(node) {
    if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {
      nodes.delete(node);
      return;
    }
    if (visited.has(node)) {
      return;
    }
    const children = graph.nodeToNodeSubscriptions.get(node);
    if (children) {
      for (const child of children) {
        visit(child);
      }
    }
    visited.add(node);
    nodes.delete(node);
    answer.push(node);
  }
}
function releaseNode(store, treeState, node) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  } // Atom effects, in-closure caches, etc.:

  cleanUpNode$1(store, node); // Delete from store state:

  const storeState = store.getState();
  storeState.knownAtoms.delete(node);
  storeState.knownSelectors.delete(node);
  storeState.nodeTransactionSubscriptions.delete(node);
  storeState.retention.referenceCounts.delete(node);
  const zones = zonesThatCouldRetainNode(node);
  for (const zone of zones) {
    var _storeState$retention2;
    (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);
  } // Note that we DO NOT delete from nodeToComponentSubscriptions because this
  // already happens when the last component that was retaining the node unmounts,
  // and this could happen either before or after that.
  // Delete from TreeState and dep graph:

  treeState.atomValues.delete(node);
  treeState.dirtyAtoms.delete(node);
  treeState.nonvalidatedAtoms.delete(node);
  const graph = storeState.graphsByVersion.get(treeState.version);
  if (graph) {
    const deps = graph.nodeDeps.get(node);
    if (deps !== undefined) {
      graph.nodeDeps.delete(node);
      for (const dep of deps) {
        var _graph$nodeToNodeSubs;
        (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);
      }
    } // No need to delete sub's deps as there should be no subs at this point.
    // But an invariant would require deleting nodes in topological order.

    graph.nodeToNodeSubscriptions.delete(node);
  } // Node config (for family members only as their configs can be recreated, and
  // only if they are not retained within any other Stores):

  deleteNodeConfigIfPossible$1(node);
}
function nodesRetainedByZone(storeState, zone) {
  var _storeState$retention3;
  return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;
}
function zonesThatCouldRetainNode(node) {
  const retainedBy = getNode$3(node).retainedBy;
  if (retainedBy === undefined || retainedBy === 'components' || retainedBy === 'recoilRoot') {
    return [];
  } else if (retainedBy instanceof RetentionZone$2) {
    return [retainedBy];
  } else {
    return retainedBy; // it's an array of zones
  }
}

function scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {
  const state = store.getState();
  if (state.nextTree) {
    state.retention.retainablesToCheckForRelease.add(retainable);
  } else {
    releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));
  }
}
function updateRetainCount(store, retainable, delta) {
  var _map$get;
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  }
  const map = store.getState().retention.referenceCounts;
  const newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;
  if (newCount === 0) {
    updateRetainCountToZero(store, retainable);
  } else {
    map.set(retainable, newCount);
  }
}
function updateRetainCountToZero(store, retainable) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  }
  const map = store.getState().retention.referenceCounts;
  map.delete(retainable);
  scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);
}
function releaseScheduledRetainablesNow(store) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  }
  const state = store.getState();
  releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);
  state.retention.retainablesToCheckForRelease.clear();
}
function retainedByOptionWithDefault(r) {
  // The default will change from 'recoilRoot' to 'components' in the future.
  return r === undefined ? 'recoilRoot' : r;
}
var Recoil_Retention = {
  SUSPENSE_TIMEOUT_MS,
  updateRetainCount,
  updateRetainCountToZero,
  releaseScheduledRetainablesNow,
  retainedByOptionWithDefault
};

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * This is to export esstiential functions from react-dom
 * for our web build
 *
 * 
 * @format
 * @oncall recoil
 */
const {
  unstable_batchedUpdates
} = react_dom;
var ReactBatchedUpdates = {
  unstable_batchedUpdates
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * This is to export esstiential functions from react-dom
 * for our web build
 *
 * 
 * @format
 * @oncall recoil
 */
// @fb-only: const {unstable_batchedUpdates} = require('ReactDOMComet');
// prettier-ignore
const {
  unstable_batchedUpdates: unstable_batchedUpdates$1
} = ReactBatchedUpdates; // @oss-only

var Recoil_ReactBatchedUpdates = {
  unstable_batchedUpdates: unstable_batchedUpdates$1
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
const {
  batchStart: batchStart$1
} = Recoil_RecoilValueInterface;
const {
  unstable_batchedUpdates: unstable_batchedUpdates$2
} = Recoil_ReactBatchedUpdates;
let batcher = unstable_batchedUpdates$2; // flowlint-next-line unclear-type:off

/**
 * Sets the provided batcher function as the batcher function used by Recoil.
 *
 * Set the batcher to a custom batcher for your renderer,
 * if you use a renderer other than React DOM or React Native.
 */
const setBatcher = newBatcher => {
  batcher = newBatcher;
};
/**
 * Returns the current batcher function.
 */

const getBatcher = () => batcher;
/**
 * Calls the current batcher function and passes the
 * provided callback function.
 */

const batchUpdates = callback => {
  batcher(() => {
    let batchEnd = () => undefined;
    try {
      batchEnd = batchStart$1();
      callback();
    } finally {
      batchEnd();
    }
  });
};
var Recoil_Batching = {
  getBatcher,
  setBatcher,
  batchUpdates
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Combines multiple Iterables into a single Iterable.
 * Traverses the input Iterables in the order provided and maintains the order
 * of their elements.
 *
 * Example:
 * ```
 * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));
 * r == ['a', 'b', 'c', 'd', 'e', 'f'];
 * ```
 */

function* concatIterables(iters) {
  for (const iter of iters) {
    for (const val of iter) {
      yield val;
    }
  }
}
var Recoil_concatIterables = concatIterables;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/* eslint-disable fb-www/typeof-undefined */

const isSSR =
// $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709
typeof Window === 'undefined' || typeof window === 'undefined';
/* eslint-enable fb-www/typeof-undefined */

const isWindow = value => !isSSR && (
// $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709
value === window || value instanceof Window);
const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'; // eslint-disable-line fb-www/typeof-undefined

var Recoil_Environment = {
  isSSR,
  isReactNative,
  isWindow
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Caches a function's results based on the key returned by the passed
 * hashFunction.
 */

function memoizeWithArgsHash(fn, hashFunction) {
  let cache;
  const memoizedFn = (...args) => {
    if (!cache) {
      cache = {};
    }
    const key = hashFunction(...args);
    if (!Object.hasOwnProperty.call(cache, key)) {
      cache[key] = fn(...args);
    }
    return cache[key];
  };
  return memoizedFn;
}
/**
 * Caches a function's results based on a comparison of the arguments.
 * Only caches the last return of the function.
 * Defaults to reference equality
 */

function memoizeOneWithArgsHash(fn, hashFunction) {
  let lastKey;
  let lastResult; // breaking cache when arguments change

  const memoizedFn = (...args) => {
    const key = hashFunction(...args);
    if (lastKey === key) {
      return lastResult;
    }
    lastKey = key;
    lastResult = fn(...args);
    return lastResult;
  };
  return memoizedFn;
}
/**
 * Caches a function's results based on a comparison of the arguments.
 * Only caches the last return of the function.
 * Defaults to reference equality
 */

function memoizeOneWithArgsHashAndInvalidation(fn, hashFunction) {
  let lastKey;
  let lastResult; // breaking cache when arguments change

  const memoizedFn = (...args) => {
    const key = hashFunction(...args);
    if (lastKey === key) {
      return lastResult;
    }
    lastKey = key;
    lastResult = fn(...args);
    return lastResult;
  };
  const invalidate = () => {
    lastKey = null;
  };
  return [memoizedFn, invalidate];
}
var Recoil_Memoize = {
  memoizeWithArgsHash,
  memoizeOneWithArgsHash,
  memoizeOneWithArgsHashAndInvalidation
};
const {
  batchUpdates: batchUpdates$1
} = Recoil_Batching;
const {
  initializeNode: initializeNode$1,
  peekNodeInfo: peekNodeInfo$1
} = Recoil_FunctionalCore;
const {
  graph: graph$1
} = Recoil_Graph;
const {
  getNextStoreID: getNextStoreID$1
} = Recoil_Keys;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$1,
  recoilValues: recoilValues$1,
  recoilValuesForKeys: recoilValuesForKeys$2
} = Recoil_Node;
const {
  AbstractRecoilValue: AbstractRecoilValue$2,
  getRecoilValueAsLoadable: getRecoilValueAsLoadable$1,
  setRecoilValue: setRecoilValue$1,
  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$1
} = Recoil_RecoilValueInterface;
const {
  updateRetainCount: updateRetainCount$1
} = Recoil_Retention;
const {
  setInvalidateMemoizedSnapshot: setInvalidateMemoizedSnapshot$1
} = Recoil_SnapshotCache;
const {
  getNextTreeStateVersion: getNextTreeStateVersion$2,
  makeEmptyStoreState: makeEmptyStoreState$1
} = Recoil_State;
const {
  isSSR: isSSR$1
} = Recoil_Environment;
const {
  memoizeOneWithArgsHashAndInvalidation: memoizeOneWithArgsHashAndInvalidation$1
} = Recoil_Memoize;

// Opaque at this surface because it's part of the public API from here.

const retainWarning = (/* unused pure expression or super */ null && (`
Recoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:

  const release = snapshot.retain();
  try {
    await doSomethingWithSnapshot(snapshot);
  } finally {
    release();
  }

This is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.
`)); // A "Snapshot" is "read-only" and captures a specific set of values of atoms.
// However, the data-flow-graph and selector values may evolve as selector
// evaluation functions are executed and async selectors resolve.

class Snapshot {
  // eslint-disable-next-line fb-www/no-uninitialized-properties
  constructor(storeState, parentStoreID) {
    es_defineProperty(this, "_store", void 0);
    es_defineProperty(this, "_refCount", 1);
    es_defineProperty(this, "getLoadable", recoilValue => {
      this.checkRefCount_INTERNAL();
      return getRecoilValueAsLoadable$1(this._store, recoilValue);
    });
    es_defineProperty(this, "getPromise", recoilValue => {
      this.checkRefCount_INTERNAL();
      return this.getLoadable(recoilValue).toPromise();
    });
    es_defineProperty(this, "getNodes_UNSTABLE", opt => {
      this.checkRefCount_INTERNAL(); // TODO Deal with modified selectors

      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {
        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {
          return [];
        }
        const state = this._store.getState().currentTree;
        return recoilValuesForKeys$2(state.dirtyAtoms);
      }
      const knownAtoms = this._store.getState().knownAtoms;
      const knownSelectors = this._store.getState().knownSelectors;
      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([knownAtoms, knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), ({
        key
      }) => !knownAtoms.has(key) && !knownSelectors.has(key));
    });
    es_defineProperty(this, "getInfo_UNSTABLE", ({
      key
    }) => {
      this.checkRefCount_INTERNAL();
      return peekNodeInfo$1(this._store, this._store.getState().currentTree, key);
    });
    es_defineProperty(this, "map", mapper => {
      this.checkRefCount_INTERNAL();
      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);
      mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here

      return mutableSnapshot;
    });
    es_defineProperty(this, "asyncMap", async mapper => {
      this.checkRefCount_INTERNAL();
      const mutableSnapshot = new MutableSnapshot(this, batchUpdates$1);
      mutableSnapshot.retain(); // Retain new snapshot during async mapper

      await mapper(mutableSnapshot); // Continue to retain the new snapshot for the user, but auto-release it
      // after the next tick, the same as a new synchronous snapshot.

      mutableSnapshot.autoRelease_INTERNAL();
      return mutableSnapshot;
    });
    this._store = {
      storeID: getNextStoreID$1(),
      parentStoreID,
      getState: () => storeState,
      replaceState: replacer => {
        // no batching, so nextTree is never active
        storeState.currentTree = replacer(storeState.currentTree);
      },
      getGraph: version => {
        const graphs = storeState.graphsByVersion;
        if (graphs.has(version)) {
          return Recoil_nullthrows(graphs.get(version));
        }
        const newGraph = graph$1();
        graphs.set(version, newGraph);
        return newGraph;
      },
      subscribeToTransactions: () => ({
        release: () => {}
      }),
      addTransactionMetadata: () => {
        throw Recoil_err('Cannot subscribe to Snapshots');
      }
    }; // Initialize any nodes that are live in the parent store (primarily so that
    // this snapshot gets counted towards the node's live stores count).
    // TODO Optimize this when cloning snapshots for callbacks

    for (const nodeKey of this._store.getState().knownAtoms) {
      initializeNode$1(this._store, nodeKey, 'get');
      updateRetainCount$1(this._store, nodeKey, 1);
    }
    this.autoRelease_INTERNAL();
  }
  retain() {
    if (this._refCount <= 0) {
      if (false) {} else {
        Recoil_recoverableViolation('Attempt to retain() Snapshot that was already released.');
      }
    }
    this._refCount++;
    let released = false;
    return () => {
      if (!released) {
        released = true;
        this._release();
      }
    };
  }
  /**
   * Release the snapshot on the next tick.  This means the snapshot is retained
   * during the execution of the current function using it.
   */

  autoRelease_INTERNAL() {
    if (!isSSR$1) {
      // Use timeout of 10 to workaround Firefox issue: https://github.com/facebookexperimental/Recoil/issues/1936
      window.setTimeout(() => this._release(), 10);
    }
  }
  _release() {
    this._refCount--;
    if (this._refCount === 0) {
      this._store.getState().nodeCleanupFunctions.forEach(cleanup => cleanup());
      this._store.getState().nodeCleanupFunctions.clear();
      if (!Recoil_gkx('recoil_memory_managament_2020')) {
        return;
      } // Temporarily nerfing this to allow us to find broken call sites without
      // actually breaking anybody yet.
      // for (const k of this._store.getState().knownAtoms) {
      //   updateRetainCountToZero(this._store, k);
      // }
    } else if (this._refCount < 0) {
      if (false) {}
    }
  }
  isRetained() {
    return this._refCount > 0;
  }
  checkRefCount_INTERNAL() {
    if (Recoil_gkx('recoil_memory_managament_2020') && this._refCount <= 0) {
      if (false) {} // What we will ship later:
      // throw err(retainWarning);
    }
  }

  getStore_INTERNAL() {
    this.checkRefCount_INTERNAL();
    return this._store;
  }
  getID() {
    this.checkRefCount_INTERNAL();
    return this._store.getState().currentTree.stateID;
  }
  getStoreID() {
    this.checkRefCount_INTERNAL();
    return this._store.storeID;
  } // We want to allow the methods to be destructured and used as accessors

  /* eslint-disable fb-www/extra-arrow-initializer */

  /* eslint-enable fb-www/extra-arrow-initializer */
}

function cloneStoreState(store, treeState, bumpVersion = false) {
  const storeState = store.getState();
  const version = bumpVersion ? getNextTreeStateVersion$2() : treeState.version;
  return {
    // Always clone the TreeState to isolate stores from accidental mutations.
    // For example, reading a selector from a cloned snapshot shouldn't cache
    // in the original treestate which may cause the original to skip
    // initialization of upstream atoms.
    currentTree: {
      // TODO snapshots shouldn't really have versions because a new version number
      // is always assigned when the snapshot is gone to.
      version: bumpVersion ? version : treeState.version,
      stateID: bumpVersion ? version : treeState.stateID,
      transactionMetadata: {
        ...treeState.transactionMetadata
      },
      dirtyAtoms: new Set(treeState.dirtyAtoms),
      atomValues: treeState.atomValues.clone(),
      nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()
    },
    commitDepth: 0,
    nextTree: null,
    previousTree: null,
    knownAtoms: new Set(storeState.knownAtoms),
    // FIXME here's a copy
    knownSelectors: new Set(storeState.knownSelectors),
    // FIXME here's a copy
    transactionSubscriptions: new Map(),
    nodeTransactionSubscriptions: new Map(),
    nodeToComponentSubscriptions: new Map(),
    queuedComponentCallbacks_DEPRECATED: [],
    suspendedComponentResolvers: new Set(),
    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),
    retention: {
      referenceCounts: new Map(),
      nodesRetainedByZone: new Map(),
      retainablesToCheckForRelease: new Set()
    },
    // FIXME here's a copy
    // Create blank cleanup handlers for atoms so snapshots don't re-run
    // atom effects.
    nodeCleanupFunctions: new Map(Recoil_mapIterable(storeState.nodeCleanupFunctions.entries(), ([key]) => [key, () => {}]))
  };
} // Factory to build a fresh snapshot

function freshSnapshot(initializeState) {
  const snapshot = new Snapshot(makeEmptyStoreState$1());
  return initializeState != null ? snapshot.map(initializeState) : snapshot;
} // Factory to clone a snapshot state

const [memoizedCloneSnapshot, invalidateMemoizedSnapshot$2] = memoizeOneWithArgsHashAndInvalidation$1((store, version) => {
  var _storeState$nextTree;
  const storeState = store.getState();
  const treeState = version === 'latest' ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : Recoil_nullthrows(storeState.previousTree);
  return new Snapshot(cloneStoreState(store, treeState), store.storeID);
}, (store, version) => {
  var _store$getState$nextT, _store$getState$previ;
  return String(version) + String(store.storeID) + String((_store$getState$nextT = store.getState().nextTree) === null || _store$getState$nextT === void 0 ? void 0 : _store$getState$nextT.version) + String(store.getState().currentTree.version) + String((_store$getState$previ = store.getState().previousTree) === null || _store$getState$previ === void 0 ? void 0 : _store$getState$previ.version);
}); // Avoid circular dependencies

setInvalidateMemoizedSnapshot$1(invalidateMemoizedSnapshot$2);
function cloneSnapshot(store, version = 'latest') {
  const snapshot = memoizedCloneSnapshot(store, version);
  if (!snapshot.isRetained()) {
    invalidateMemoizedSnapshot$2();
    return memoizedCloneSnapshot(store, version);
  }
  return snapshot;
}
class MutableSnapshot extends Snapshot {
  constructor(snapshot, batch) {
    super(cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true), snapshot.getStoreID());
    es_defineProperty(this, "_batch", void 0);
    es_defineProperty(this, "set", (recoilState, newValueOrUpdater) => {
      this.checkRefCount_INTERNAL();
      const store = this.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can
      // read the written value after calling `set`. I would like to remove this
      // behavior and only batch in `Snapshot.map`, but this would be a breaking
      // change potentially.

      this._batch(() => {
        updateRetainCount$1(store, recoilState.key, 1);
        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, newValueOrUpdater);
      });
    });
    es_defineProperty(this, "reset", recoilState => {
      this.checkRefCount_INTERNAL();
      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.

      this._batch(() => {
        updateRetainCount$1(store, recoilState.key, 1);
        setRecoilValue$1(this.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);
      });
    });
    es_defineProperty(this, "setUnvalidatedAtomValues_DEPRECATED", values => {
      this.checkRefCount_INTERNAL();
      const store = this.getStore_INTERNAL(); // See note at `set` about batched updates.

      batchUpdates$1(() => {
        for (const [k, v] of values.entries()) {
          updateRetainCount$1(store, k, 1);
          setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);
        }
      });
    });
    this._batch = batch;
  }
}
var Recoil_Snapshot = {
  Snapshot,
  MutableSnapshot,
  freshSnapshot,
  cloneSnapshot
};
var Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;
var Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;
var Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;
var Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;
var Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Snapshot: Recoil_Snapshot_1,
  MutableSnapshot: Recoil_Snapshot_2,
  freshSnapshot: Recoil_Snapshot_3,
  cloneSnapshot: Recoil_Snapshot_4
});

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function unionSets(...sets) {
  const result = new Set();
  for (const set of sets) {
    for (const value of set) {
      result.add(value);
    }
  }
  return result;
}
var Recoil_unionSets = unionSets;
const {
  useRef
} = react;
/**
 * The same as `useRef()` except that if a function is specified then it will
 * call that function to get the value to initialize the reference with.
 * This is similar to how `useState()` behaves when given a function.  It allows
 * the user to avoid generating the initial value for subsequent renders.
 * The tradeoff is that to set the reference to a function itself you need to
 * nest it: useRefInitOnce(() => () => {...});
 */

function useRefInitOnce(initialValue) {
  // $FlowExpectedError[incompatible-call]
  const ref = useRef(initialValue);
  if (ref.current === initialValue && typeof initialValue === 'function') {
    // $FlowExpectedError[incompatible-use]
    ref.current = initialValue();
  }
  return ref;
}
var Recoil_useRefInitOnce = useRefInitOnce;

// @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');
// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');
// @fb-only: const URI = require('URI');

const {
  getNextTreeStateVersion: getNextTreeStateVersion$3,
  makeEmptyStoreState: makeEmptyStoreState$2
} = Recoil_State;
const {
  cleanUpNode: cleanUpNode$2,
  getDownstreamNodes: getDownstreamNodes$2,
  initializeNode: initializeNode$2,
  setNodeValue: setNodeValue$2,
  setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED$1
} = Recoil_FunctionalCore;
const {
  graph: graph$2
} = Recoil_Graph;
const {
  cloneGraph: cloneGraph$1
} = Recoil_Graph;
const {
  getNextStoreID: getNextStoreID$2
} = Recoil_Keys;
const {
  createMutableSource: createMutableSource$1,
  reactMode: reactMode$2
} = Recoil_ReactMode;
const {
  applyAtomValueWrites: applyAtomValueWrites$1
} = Recoil_RecoilValueInterface;
const {
  releaseScheduledRetainablesNow: releaseScheduledRetainablesNow$1
} = Recoil_Retention;
const {
  freshSnapshot: freshSnapshot$1
} = Recoil_Snapshot$1;
const {
  useCallback,
  useContext: es_useContext,
  useEffect,
  useMemo,
  useRef: useRef$1,
  useState
} = react;
function notInAContext() {
  throw Recoil_err('This component must be used inside a <RecoilRoot> component.');
}
const defaultStore = Object.freeze({
  storeID: getNextStoreID$2(),
  getState: notInAContext,
  replaceState: notInAContext,
  getGraph: notInAContext,
  subscribeToTransactions: notInAContext,
  addTransactionMetadata: notInAContext
});
let stateReplacerIsBeingExecuted = false;
function startNextTreeIfNeeded(store) {
  if (stateReplacerIsBeingExecuted) {
    throw Recoil_err('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');
  }
  const storeState = store.getState();
  if (storeState.nextTree === null) {
    if (Recoil_gkx('recoil_memory_managament_2020') && Recoil_gkx('recoil_release_on_cascading_update_killswitch_2021')) {
      // If this is a cascading update (that is, rendering due to one state change
      // invokes a second state change), we won't have cleaned up retainables yet
      // because this normally happens after notifying components. Do it before
      // proceeding with the cascading update so that it remains predictable:
      if (storeState.commitDepth > 0) {
        releaseScheduledRetainablesNow$1(store);
      }
    }
    const version = storeState.currentTree.version;
    const nextVersion = getNextTreeStateVersion$3();
    storeState.nextTree = {
      ...storeState.currentTree,
      version: nextVersion,
      stateID: nextVersion,
      dirtyAtoms: new Set(),
      transactionMetadata: {}
    };
    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));
  }
}
const AppContext = react.createContext({
  current: defaultStore
});
const useStoreRef = () => es_useContext(AppContext); // $FlowExpectedError[incompatible-call]

const MutableSourceContext = react.createContext(null);
function useRecoilMutableSource() {
  const mutableSource = es_useContext(MutableSourceContext);
  if (mutableSource == null) {
    Recoil_expectationViolation('Attempted to use a Recoil hook outside of a <RecoilRoot>. ' + '<RecoilRoot> must be an ancestor of any component that uses ' + 'Recoil hooks.');
  }
  return mutableSource;
}
function notifyComponents(store, storeState, treeState) {
  const dependentNodes = getDownstreamNodes$2(store, treeState, treeState.dirtyAtoms);
  for (const key of dependentNodes) {
    const comps = storeState.nodeToComponentSubscriptions.get(key);
    if (comps) {
      for (const [_subID, [_debugName, callback]] of comps) {
        callback(treeState);
      }
    }
  }
}
function sendEndOfBatchNotifications(store) {
  const storeState = store.getState();
  const treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:

  const dirtyAtoms = treeState.dirtyAtoms;
  if (dirtyAtoms.size) {
    // Execute Node-specific subscribers before global subscribers
    for (const [key, subscriptions] of storeState.nodeTransactionSubscriptions) {
      if (dirtyAtoms.has(key)) {
        for (const [_, subscription] of subscriptions) {
          subscription(store);
        }
      }
    }
    for (const [_, subscription] of storeState.transactionSubscriptions) {
      subscription(store);
    }
    if (!reactMode$2().early || storeState.suspendedComponentResolvers.size > 0) {
      // Notifying components is needed to wake from suspense, even when using
      // early rendering.
      notifyComponents(store, storeState, treeState); // Wake all suspended components so the right one(s) can try to re-render.
      // We need to wake up components not just when some asynchronous selector
      // resolved, but also when changing synchronous values because this may cause
      // a selector to change from asynchronous to synchronous, in which case there
      // would be no follow-up asynchronous resolution to wake us up.
      // TODO OPTIMIZATION Only wake up related downstream components

      storeState.suspendedComponentResolvers.forEach(cb => cb());
      storeState.suspendedComponentResolvers.clear();
    }
  } // Special behavior ONLY invoked by useInterface.
  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.

  storeState.queuedComponentCallbacks_DEPRECATED.forEach(cb => cb(treeState));
  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);
}
function endBatch(store) {
  const storeState = store.getState();
  storeState.commitDepth++;
  try {
    const {
      nextTree
    } = storeState; // Ignore commits that are not because of Recoil transactions -- namely,
    // because something above RecoilRoot re-rendered:

    if (nextTree == null) {
      return;
    } // nextTree is now committed -- note that copying and reset occurs when
    // a transaction begins, in startNextTreeIfNeeded:

    storeState.previousTree = storeState.currentTree;
    storeState.currentTree = nextTree;
    storeState.nextTree = null;
    sendEndOfBatchNotifications(store);
    if (storeState.previousTree != null) {
      storeState.graphsByVersion.delete(storeState.previousTree.version);
    } else {
      Recoil_recoverableViolation('Ended batch with no previous state, which is unexpected', 'recoil');
    }
    storeState.previousTree = null;
    if (Recoil_gkx('recoil_memory_managament_2020')) {
      // Only release retainables if there were no writes during the end of the
      // batch.  This avoids releasing something we might be about to use.
      if (nextTree == null) {
        releaseScheduledRetainablesNow$1(store);
      }
    }
  } finally {
    storeState.commitDepth--;
  }
}
/*
 * The purpose of the Batcher is to observe when React batches end so that
 * Recoil state changes can be batched. Whenever Recoil state changes, we call
 * setState on the batcher. Then we wait for that change to be committed, which
 * signifies the end of the batch. That's when we respond to the Recoil change.
 */

function Batcher({
  setNotifyBatcherOfChange
}) {
  const storeRef = useStoreRef();
  const [, setState] = useState([]);
  setNotifyBatcherOfChange(() => setState({}));
  useEffect(() => {
    setNotifyBatcherOfChange(() => setState({})); // If an asynchronous selector resolves after the Batcher is unmounted,
    // notifyBatcherOfChange will still be called. An error gets thrown whenever
    // setState is called after a component is already unmounted, so this sets
    // notifyBatcherOfChange to be a no-op.

    return () => {
      setNotifyBatcherOfChange(() => {});
    };
  }, [setNotifyBatcherOfChange]);
  useEffect(() => {
    // enqueueExecution runs this function immediately; it is only used to
    // manipulate the order of useEffects during tests, since React seems to
    // call useEffect in an unpredictable order sometimes.
    Recoil_Queue.enqueueExecution('Batcher', () => {
      endBatch(storeRef.current);
    });
  });
  return null;
}
if (false) {} // When removing this deprecated function, remove stateBySettingRecoilValue
// which will no longer be needed.

function initialStoreState_DEPRECATED(store, initializeState) {
  const initial = makeEmptyStoreState$2();
  initializeState({
    set: (atom, value) => {
      const state = initial.currentTree;
      const writes = setNodeValue$2(store, state, atom.key, value);
      const writtenNodes = new Set(writes.keys());
      const nonvalidatedAtoms = state.nonvalidatedAtoms.clone();
      for (const n of writtenNodes) {
        nonvalidatedAtoms.delete(n);
      }
      initial.currentTree = {
        ...state,
        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),
        atomValues: applyAtomValueWrites$1(state.atomValues, writes),
        // NB: PLEASE un-export applyAtomValueWrites when deleting this code
        nonvalidatedAtoms
      };
    },
    setUnvalidatedAtomValues: atomValues => {
      // FIXME replace this with a mutative loop
      atomValues.forEach((v, k) => {
        initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);
      });
    }
  });
  return initial;
} // Initialize state snapshot for <RecoilRoot> for the initializeState prop.
// Atom effect initialization takes precedence over this prop.
// Any atom effects will be run before initialization, but then cleaned up,
// they are then re-run when used as part of rendering.  These semantics are
// compatible with React StrictMode where effects may be re-run multiple times
// but state initialization only happens once the first time.

function initialStoreState(initializeState) {
  // Initialize a snapshot and get its store
  const snapshot = freshSnapshot$1(initializeState);
  const storeState = snapshot.getStore_INTERNAL().getState(); // Counteract the snapshot auto-release

  snapshot.retain(); // Cleanup any effects run during initialization and clear the handlers so
  // they will re-initialize if used during rendering.  This allows atom effect
  // initialization to take precedence over initializeState and be compatible
  // with StrictMode semantics.

  storeState.nodeCleanupFunctions.forEach(cleanup => cleanup());
  storeState.nodeCleanupFunctions.clear();
  return storeState;
}
let nextID = 0;
function RecoilRoot_INTERNAL({
  initializeState_DEPRECATED,
  initializeState,
  store_INTERNAL: storeProp,
  // For use with React "context bridging"
  children
}) {
  // prettier-ignore
  // @fb-only: useEffect(() => {
  // @fb-only: if (gkx('recoil_usage_logging')) {
  // @fb-only: try {
  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({
  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,
  // @fb-only: path: URI.getRequestURI().getPath(),
  // @fb-only: }));
  // @fb-only: } catch {
  // @fb-only: recoverableViolation(
  // @fb-only: 'Error when logging Recoil Usage event',
  // @fb-only: 'recoil',
  // @fb-only: );
  // @fb-only: }
  // @fb-only: }
  // @fb-only: }, []);
  let storeStateRef; // eslint-disable-line prefer-const

  const getGraph = version => {
    const graphs = storeStateRef.current.graphsByVersion;
    if (graphs.has(version)) {
      return Recoil_nullthrows(graphs.get(version));
    }
    const newGraph = graph$2();
    graphs.set(version, newGraph);
    return newGraph;
  };
  const subscribeToTransactions = (callback, key) => {
    if (key == null) {
      // Global transaction subscriptions
      const {
        transactionSubscriptions
      } = storeRef.current.getState();
      const id = nextID++;
      transactionSubscriptions.set(id, callback);
      return {
        release: () => {
          transactionSubscriptions.delete(id);
        }
      };
    } else {
      // Node-specific transaction subscriptions:
      const {
        nodeTransactionSubscriptions
      } = storeRef.current.getState();
      if (!nodeTransactionSubscriptions.has(key)) {
        nodeTransactionSubscriptions.set(key, new Map());
      }
      const id = nextID++;
      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(id, callback);
      return {
        release: () => {
          const subs = nodeTransactionSubscriptions.get(key);
          if (subs) {
            subs.delete(id);
            if (subs.size === 0) {
              nodeTransactionSubscriptions.delete(key);
            }
          }
        }
      };
    }
  };
  const addTransactionMetadata = metadata => {
    startNextTreeIfNeeded(storeRef.current);
    for (const k of Object.keys(metadata)) {
      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];
    }
  };
  const replaceState = replacer => {
    startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:

    const nextTree = Recoil_nullthrows(storeStateRef.current.nextTree);
    let replaced;
    try {
      stateReplacerIsBeingExecuted = true;
      replaced = replacer(nextTree);
    } finally {
      stateReplacerIsBeingExecuted = false;
    }
    if (replaced === nextTree) {
      return;
    }
    if (false) {} // Save changes to nextTree and schedule a React update:

    storeStateRef.current.nextTree = replaced;
    if (reactMode$2().early) {
      notifyComponents(storeRef.current, storeStateRef.current, replaced);
    }
    Recoil_nullthrows(notifyBatcherOfChange.current)();
  };
  const notifyBatcherOfChange = useRef$1(null);
  const setNotifyBatcherOfChange = useCallback(x => {
    notifyBatcherOfChange.current = x;
  }, [notifyBatcherOfChange]);
  const storeRef = Recoil_useRefInitOnce(() => storeProp !== null && storeProp !== void 0 ? storeProp : {
    storeID: getNextStoreID$2(),
    getState: () => storeStateRef.current,
    replaceState,
    getGraph,
    subscribeToTransactions,
    addTransactionMetadata
  });
  if (storeProp != null) {
    storeRef.current = storeProp;
  }
  storeStateRef = Recoil_useRefInitOnce(() => initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(storeRef.current, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());
  const mutableSource = useMemo(() => createMutableSource$1 === null || createMutableSource$1 === void 0 ? void 0 : createMutableSource$1(storeStateRef, () => storeStateRef.current.currentTree.version), [storeStateRef]); // Cleanup when the <RecoilRoot> is unmounted

  useEffect(() => {
    // React is free to call effect cleanup handlers and effects at will, the
    // deps array is only an optimization.  For example, React strict mode
    // will execute each effect twice for testing.  Therefore, we need symmetry
    // to re-initialize all known atoms after they were cleaned up.
    const store = storeRef.current;
    for (const atomKey of new Set(store.getState().knownAtoms)) {
      initializeNode$2(store, atomKey, 'get');
    }
    return () => {
      for (const atomKey of store.getState().knownAtoms) {
        cleanUpNode$2(store, atomKey);
      }
    };
  }, [storeRef]);
  return /*#__PURE__*/react.createElement(AppContext.Provider, {
    value: storeRef
  }, /*#__PURE__*/react.createElement(MutableSourceContext.Provider, {
    value: mutableSource
  }, /*#__PURE__*/react.createElement(Batcher, {
    setNotifyBatcherOfChange: setNotifyBatcherOfChange
  }), children));
}
function RecoilRoot(props) {
  const {
    override,
    ...propsExceptOverride
  } = props;
  const ancestorStoreRef = useStoreRef();
  if (override === false && ancestorStoreRef.current !== defaultStore) {
    // If ancestorStoreRef.current !== defaultStore, it means that this
    // RecoilRoot is not nested within another.
    return props.children;
  }
  return /*#__PURE__*/react.createElement(RecoilRoot_INTERNAL, propsExceptOverride);
}
function useRecoilStoreID() {
  return useStoreRef().current.storeID;
}
var Recoil_RecoilRoot = {
  RecoilRoot,
  useStoreRef,
  useRecoilMutableSource,
  useRecoilStoreID,
  notifyComponents_FOR_TESTING: notifyComponents,
  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function shallowArrayEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (a.length !== b.length) {
    return false;
  }
  for (let i = 0, l = a.length; i < l; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}
var Recoil_shallowArrayEqual = shallowArrayEqual;
const {
  useEffect: useEffect$1,
  useRef: useRef$2
} = react;
function usePrevious(value) {
  const ref = useRef$2();
  useEffect$1(() => {
    ref.current = value;
  });
  return ref.current;
}
var Recoil_usePrevious = usePrevious;
const {
  useStoreRef: useStoreRef$1
} = Recoil_RecoilRoot;
const {
  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$1
} = Recoil_Retention;
const {
  updateRetainCount: updateRetainCount$2
} = Recoil_Retention;
const {
  RetentionZone: RetentionZone$3
} = Recoil_RetentionZone;
const {
  useEffect: useEffect$2,
  useRef: useRef$3
} = react;
const {
  isSSR: isSSR$2
} = Recoil_Environment;

// I don't see a way to avoid the any type here because we want to accept readable
// and writable values with any type parameter, but normally with writable ones
// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.

// flowlint-line unclear-type:off
function useRetain(toRetain) {
  if (!Recoil_gkx('recoil_memory_managament_2020')) {
    return;
  } // eslint-disable-next-line fb-www/react-hooks

  return useRetain_ACTUAL(toRetain);
}
function useRetain_ACTUAL(toRetain) {
  const array = Array.isArray(toRetain) ? toRetain : [toRetain];
  const retainables = array.map(a => a instanceof RetentionZone$3 ? a : a.key);
  const storeRef = useStoreRef$1();
  useEffect$2(() => {
    if (!Recoil_gkx('recoil_memory_managament_2020')) {
      return;
    }
    const store = storeRef.current;
    if (timeoutID.current && !isSSR$2) {
      // Already performed a temporary retain on render, simply cancel the release
      // of that temporary retain.
      window.clearTimeout(timeoutID.current);
      timeoutID.current = null;
    } else {
      for (const r of retainables) {
        updateRetainCount$2(store, r, 1);
      }
    }
    return () => {
      for (const r of retainables) {
        updateRetainCount$2(store, r, -1);
      }
    }; // eslint-disable-next-line fb-www/react-hooks-deps
  }, [storeRef, ...retainables]); // We want to retain if the component suspends. This is terrible but the Suspense
  // API affords us no better option. If we suspend and never commit after some
  // seconds, then release. The 'actual' retain/release in the effect above
  // cancels this.

  const timeoutID = useRef$3();
  const previousRetainables = Recoil_usePrevious(retainables);
  if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {
    const store = storeRef.current;
    for (const r of retainables) {
      updateRetainCount$2(store, r, 1);
    }
    if (previousRetainables) {
      for (const r of previousRetainables) {
        updateRetainCount$2(store, r, -1);
      }
    }
    if (timeoutID.current) {
      window.clearTimeout(timeoutID.current);
    }
    timeoutID.current = window.setTimeout(() => {
      timeoutID.current = null;
      for (const r of retainables) {
        updateRetainCount$2(store, r, -1);
      }
    }, SUSPENSE_TIMEOUT_MS$1);
  }
}
var Recoil_useRetain = useRetain;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * THIS CODE HAS BEEN COMMENTED OUT INTENTIONALLY
 *
 * This technique of getting the component name is imperfect, since it both only
 * works in a non-minified code base, and more importantly introduces performance
 * problems since it relies in throwing errors which is an expensive operation.
 *
 * At some point we may want to reevaluate this technique hence why we have commented
 * this code out, rather than delete it all together.
 */
// const {useRef} = require('react');
// const gkx = require('recoil-shared/util/Recoil_gkx');
// const stackTraceParser = require('recoil-shared/util/Recoil_stackTraceParser');

function useComponentName() {
  // const nameRef = useRef();
  // if (__DEV__) {
  //   if (gkx('recoil_infer_component_names')) {
  //     if (nameRef.current === undefined) {
  //       // There is no blessed way to determine the calling React component from
  //       // within a hook. This hack uses the fact that hooks must start with 'use'
  //       // and that hooks are either called by React Components or other hooks. It
  //       // follows therefore, that to find the calling component, you simply need
  //       // to look down the stack and find the first function which doesn't start
  //       // with 'use'. We are only enabling this in dev for now, since once the
  //       // codebase is minified, the naming assumptions no longer hold true.
  //       // eslint-disable-next-line fb-www/no-new-error
  //       const frames = stackTraceParser(new Error().stack);
  //       for (const {methodName} of frames) {
  //         // I observed cases where the frame was of the form 'Object.useXXX'
  //         // hence why I'm searching for hooks following a word boundary
  //         if (!methodName.match(/\buse[^\b]+$/)) {
  //           return (nameRef.current = methodName);
  //         }
  //       }
  //       nameRef.current = null;
  //     }
  //     return nameRef.current ?? '<unable to determine component name>';
  //   }
  // }
  // @fb-only: return "<component name only available when both in dev mode and when passing GK 'recoil_infer_component_names'>";
  return '<component name not available>'; // @oss-only
}

var Recoil_useComponentName = useComponentName;
const {
  batchUpdates: batchUpdates$2
} = Recoil_Batching;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$2
} = Recoil_Node;
const {
  currentRendererSupportsUseSyncExternalStore: currentRendererSupportsUseSyncExternalStore$1,
  reactMode: reactMode$3,
  useMutableSource: useMutableSource$1,
  useSyncExternalStore: useSyncExternalStore$1
} = Recoil_ReactMode;
const {
  useRecoilMutableSource: useRecoilMutableSource$1,
  useStoreRef: useStoreRef$2
} = Recoil_RecoilRoot;
const {
  isRecoilValue: isRecoilValue$2
} = Recoil_RecoilValue$1;
const {
  AbstractRecoilValue: AbstractRecoilValue$3,
  getRecoilValueAsLoadable: getRecoilValueAsLoadable$2,
  setRecoilValue: setRecoilValue$2,
  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue$2,
  subscribeToRecoilValue: subscribeToRecoilValue$1
} = Recoil_RecoilValueInterface;
const {
  useCallback: useCallback$1,
  useEffect: useEffect$3,
  useMemo: useMemo$1,
  useRef: useRef$4,
  useState: useState$1
} = react;
const {
  setByAddingToSet: setByAddingToSet$2
} = Recoil_CopyOnWrite;
function handleLoadable(loadable, recoilValue, storeRef) {
  // We can't just throw the promise we are waiting on to Suspense.  If the
  // upstream dependencies change it may produce a state in which the component
  // can render, but it would still be suspended on a Promise that may never resolve.
  if (loadable.state === 'hasValue') {
    return loadable.contents;
  } else if (loadable.state === 'loading') {
    const promise = new Promise(resolve => {
      storeRef.current.getState().suspendedComponentResolvers.add(resolve);
    }); // $FlowExpectedError Flow(prop-missing) for integrating with tools that inspect thrown promises @fb-only
    // @fb-only: promise.displayName = `Recoil State: ${recoilValue.key}`;

    throw promise;
  } else if (loadable.state === 'hasError') {
    throw loadable.contents;
  } else {
    throw Recoil_err(`Invalid value of loadable atom "${recoilValue.key}"`);
  }
}
function validateRecoilValue(recoilValue, hookName) {
  if (!isRecoilValue$2(recoilValue)) {
    throw Recoil_err(`Invalid argument to ${hookName}: expected an atom or selector but got ${String(recoilValue)}`);
  }
}

/**
 * Various things are broken with useRecoilInterface, particularly concurrent
 * mode, React strict mode, and memory management. They will not be fixed.
 * */
function useRecoilInterface_DEPRECATED() {
  const componentName = Recoil_useComponentName();
  const storeRef = useStoreRef$2(); // eslint-disable-next-line fb-www/react-no-unused-state-hook

  const [, forceUpdate] = useState$1([]);
  const recoilValuesUsed = useRef$4(new Set());
  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render

  const previousSubscriptions = useRef$4(new Set());
  const subscriptions = useRef$4(new Map());
  const unsubscribeFrom = useCallback$1(key => {
    const sub = subscriptions.current.get(key);
    if (sub) {
      sub.release();
      subscriptions.current.delete(key);
    }
  }, [subscriptions]);
  const updateState = useCallback$1((_state, key) => {
    if (subscriptions.current.has(key)) {
      forceUpdate([]);
    }
  }, []); // Effect to add/remove subscriptions as nodes are used

  useEffect$3(() => {
    const store = storeRef.current;
    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(key => {
      if (subscriptions.current.has(key)) {
        Recoil_expectationViolation(`Double subscription to RecoilValue "${key}"`);
        return;
      }
      const sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);
      subscriptions.current.set(key, sub);
      /**
       * Since we're subscribing in an effect we need to update to the latest
       * value of the atom since it may have changed since we rendered. We can
       * go ahead and do that now, unless we're in the middle of a batch --
       * in which case we should do it at the end of the batch, due to the
       * following edge case: Suppose an atom is updated in another useEffect
       * of this same component. Then the following sequence of events occur:
       * 1. Atom is updated and subs fired (but we may not be subscribed
       *    yet depending on order of effects, so we miss this) Updated value
       *    is now in nextTree, but not currentTree.
       * 2. This effect happens. We subscribe and update.
       * 3. From the update we re-render and read currentTree, with old value.
       * 4. Batcher's effect sets currentTree to nextTree.
       * In this sequence we miss the update. To avoid that, add the update
       * to queuedComponentCallback if a batch is in progress.
       */
      // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.

      const state = store.getState();
      if (state.nextTree) {
        store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {
          updateState(store.getState(), key);
        });
      } else {
        updateState(store.getState(), key);
      }
    });
    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(key => {
      unsubscribeFrom(key);
    });
    previousSubscriptions.current = recoilValuesUsed.current;
  }); // Effect to unsubscribe from all when unmounting

  useEffect$3(() => {
    const currentSubscriptions = subscriptions.current; // Restore subscriptions that were cleared due to StrictMode running this effect twice

    Recoil_differenceSets(recoilValuesUsed.current, new Set(currentSubscriptions.keys())).forEach(key => {
      const sub = subscribeToRecoilValue$1(storeRef.current, new AbstractRecoilValue$3(key), state => updateState(state, key), componentName);
      currentSubscriptions.set(key, sub);
    });
    return () => currentSubscriptions.forEach((_, key) => unsubscribeFrom(key));
  }, [componentName, storeRef, unsubscribeFrom, updateState]);
  return useMemo$1(() => {
    // eslint-disable-next-line no-shadow
    function useSetRecoilState(recoilState) {
      if (false) {}
      return newValueOrUpdater => {
        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);
      };
    } // eslint-disable-next-line no-shadow

    function useResetRecoilState(recoilState) {
      if (false) {}
      return () => setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);
    } // eslint-disable-next-line no-shadow

    function useRecoilValueLoadable(recoilValue) {
      var _storeState$nextTree;
      if (false) {}
      if (!recoilValuesUsed.current.has(recoilValue.key)) {
        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);
      } // TODO Restore optimization to memoize lookup

      const storeState = storeRef.current.getState();
      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, reactMode$3().early ? (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree : storeState.currentTree);
    } // eslint-disable-next-line no-shadow

    function useRecoilValue(recoilValue) {
      if (false) {}
      const loadable = useRecoilValueLoadable(recoilValue);
      return handleLoadable(loadable, recoilValue, storeRef);
    } // eslint-disable-next-line no-shadow

    function useRecoilState(recoilState) {
      if (false) {}
      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];
    } // eslint-disable-next-line no-shadow

    function useRecoilStateLoadable(recoilState) {
      if (false) {}
      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];
    }
    return {
      getRecoilValue: useRecoilValue,
      getRecoilValueLoadable: useRecoilValueLoadable,
      getRecoilState: useRecoilState,
      getRecoilStateLoadable: useRecoilStateLoadable,
      getSetRecoilState: useSetRecoilState,
      getResetRecoilState: useResetRecoilState
    };
  }, [recoilValuesUsed, storeRef]);
}
const recoilComponentGetRecoilValueCount_FOR_TESTING = {
  current: 0
};
function useRecoilValueLoadable_SYNC_EXTERNAL_STORE(recoilValue) {
  const storeRef = useStoreRef$2();
  const componentName = Recoil_useComponentName();
  const getSnapshot = useCallback$1(() => {
    var _storeState$nextTree2;
    if (false) {}
    const store = storeRef.current;
    const storeState = store.getState();
    const treeState = reactMode$3().early ? (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree : storeState.currentTree;
    const loadable = getRecoilValueAsLoadable$2(store, recoilValue, treeState);
    return {
      loadable,
      key: recoilValue.key
    };
  }, [storeRef, recoilValue]); // Memoize the state to avoid unnecessary rerenders

  const memoizePreviousSnapshot = useCallback$1(getState => {
    let prevState;
    return () => {
      var _prevState, _prevState2;
      const nextState = getState();
      if ((_prevState = prevState) !== null && _prevState !== void 0 && _prevState.loadable.is(nextState.loadable) && ((_prevState2 = prevState) === null || _prevState2 === void 0 ? void 0 : _prevState2.key) === nextState.key) {
        return prevState;
      }
      prevState = nextState;
      return nextState;
    };
  }, []);
  const getMemoizedSnapshot = useMemo$1(() => memoizePreviousSnapshot(getSnapshot), [getSnapshot, memoizePreviousSnapshot]);
  const subscribe = useCallback$1(notify => {
    const store = storeRef.current;
    const subscription = subscribeToRecoilValue$1(store, recoilValue, notify, componentName);
    return subscription.release;
  }, [storeRef, recoilValue, componentName]);
  return useSyncExternalStore$1(subscribe, getMemoizedSnapshot,
  // getSnapshot()
  getMemoizedSnapshot // getServerSnapshot() for SSR support
  ).loadable;
}
function useRecoilValueLoadable_MUTABLE_SOURCE(recoilValue) {
  const storeRef = useStoreRef$2();
  const getLoadable = useCallback$1(() => {
    var _storeState$nextTree3;
    const store = storeRef.current;
    const storeState = store.getState();
    const treeState = reactMode$3().early ? (_storeState$nextTree3 = storeState.nextTree) !== null && _storeState$nextTree3 !== void 0 ? _storeState$nextTree3 : storeState.currentTree : storeState.currentTree;
    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);
  }, [storeRef, recoilValue]);
  const getLoadableWithTesting = useCallback$1(() => {
    if (false) {}
    return getLoadable();
  }, [getLoadable]);
  const componentName = Recoil_useComponentName();
  const subscribe = useCallback$1((_storeState, notify) => {
    const store = storeRef.current;
    const subscription = subscribeToRecoilValue$1(store, recoilValue, () => {
      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {
        return notify();
      } // Only re-render if the value has changed.
      // This will evaluate the atom/selector now as well as when the
      // component renders, but that may help with prefetching.

      const newLoadable = getLoadable();
      if (!prevLoadableRef.current.is(newLoadable)) {
        notify();
      } // If the component is suspended then the effect setting prevLoadableRef
      // will not run.  So, set the previous value here when its subscription
      // is fired to wake it up.  We can't just rely on this, though, because
      // this only executes when an atom/selector is dirty and the atom/selector
      // passed to the hook can dynamically change.

      prevLoadableRef.current = newLoadable;
    }, componentName);
    return subscription.release;
  }, [storeRef, recoilValue, componentName, getLoadable]);
  const source = useRecoilMutableSource$1();
  if (source == null) {
    throw Recoil_err('Recoil hooks must be used in components contained within a <RecoilRoot> component.');
  }
  const loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);
  const prevLoadableRef = useRef$4(loadable);
  useEffect$3(() => {
    prevLoadableRef.current = loadable;
  });
  return loadable;
}
function useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue) {
  const storeRef = useStoreRef$2();
  const componentName = Recoil_useComponentName(); // Accessors to get the current state

  const getLoadable = useCallback$1(() => {
    var _storeState$nextTree4;
    if (false) {}
    const store = storeRef.current;
    const storeState = store.getState();
    const treeState = reactMode$3().early ? (_storeState$nextTree4 = storeState.nextTree) !== null && _storeState$nextTree4 !== void 0 ? _storeState$nextTree4 : storeState.currentTree : storeState.currentTree;
    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);
  }, [storeRef, recoilValue]);
  const getState = useCallback$1(() => ({
    loadable: getLoadable(),
    key: recoilValue.key
  }), [getLoadable, recoilValue.key]); // Memoize state snapshots

  const updateState = useCallback$1(prevState => {
    const nextState = getState();
    return prevState.loadable.is(nextState.loadable) && prevState.key === nextState.key ? prevState : nextState;
  }, [getState]); // Subscribe to Recoil state changes

  useEffect$3(() => {
    const subscription = subscribeToRecoilValue$1(storeRef.current, recoilValue, _state => {
      setState(updateState);
    }, componentName); // Update state in case we are using a different key

    setState(updateState);
    return subscription.release;
  }, [componentName, recoilValue, storeRef, updateState]); // Get the current state

  const [state, setState] = useState$1(getState); // If we changed keys, then return the state for the new key.
  // This is important in case the old key would cause the component to suspend.
  // We don't have to set the new state here since the subscribing effect above
  // will do that.

  return state.key !== recoilValue.key ? getState().loadable : state.loadable;
}
function useRecoilValueLoadable_LEGACY(recoilValue) {
  const storeRef = useStoreRef$2(); // eslint-disable-next-line fb-www/react-no-unused-state-hook

  const [, forceUpdate] = useState$1([]);
  const componentName = Recoil_useComponentName();
  const getLoadable = useCallback$1(() => {
    var _storeState$nextTree5;
    if (false) {}
    const store = storeRef.current;
    const storeState = store.getState();
    const treeState = reactMode$3().early ? (_storeState$nextTree5 = storeState.nextTree) !== null && _storeState$nextTree5 !== void 0 ? _storeState$nextTree5 : storeState.currentTree : storeState.currentTree;
    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);
  }, [storeRef, recoilValue]);
  const loadable = getLoadable();
  const prevLoadableRef = useRef$4(loadable);
  useEffect$3(() => {
    prevLoadableRef.current = loadable;
  });
  useEffect$3(() => {
    const store = storeRef.current;
    const storeState = store.getState();
    const subscription = subscribeToRecoilValue$1(store, recoilValue, _state => {
      var _prevLoadableRef$curr;
      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {
        return forceUpdate([]);
      }
      const newLoadable = getLoadable();
      if (!((_prevLoadableRef$curr = prevLoadableRef.current) !== null && _prevLoadableRef$curr !== void 0 && _prevLoadableRef$curr.is(newLoadable))) {
        forceUpdate(newLoadable);
      }
      prevLoadableRef.current = newLoadable;
    }, componentName);
    /**
     * Since we're subscribing in an effect we need to update to the latest
     * value of the atom since it may have changed since we rendered. We can
     * go ahead and do that now, unless we're in the middle of a batch --
     * in which case we should do it at the end of the batch, due to the
     * following edge case: Suppose an atom is updated in another useEffect
     * of this same component. Then the following sequence of events occur:
     * 1. Atom is updated and subs fired (but we may not be subscribed
     *    yet depending on order of effects, so we miss this) Updated value
     *    is now in nextTree, but not currentTree.
     * 2. This effect happens. We subscribe and update.
     * 3. From the update we re-render and read currentTree, with old value.
     * 4. Batcher's effect sets currentTree to nextTree.
     * In this sequence we miss the update. To avoid that, add the update
     * to queuedComponentCallback if a batch is in progress.
     */

    if (storeState.nextTree) {
      store.getState().queuedComponentCallbacks_DEPRECATED.push(() => {
        prevLoadableRef.current = null;
        forceUpdate([]);
      });
    } else {
      var _prevLoadableRef$curr2;
      if (!Recoil_gkx('recoil_suppress_rerender_in_callback')) {
        return forceUpdate([]);
      }
      const newLoadable = getLoadable();
      if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) !== null && _prevLoadableRef$curr2 !== void 0 && _prevLoadableRef$curr2.is(newLoadable))) {
        forceUpdate(newLoadable);
      }
      prevLoadableRef.current = newLoadable;
    }
    return subscription.release;
  }, [componentName, getLoadable, recoilValue, storeRef]);
  return loadable;
}
/**
  Like useRecoilValue(), but either returns the value if available or
  just undefined if not available for any reason, such as pending or error.
*/

function useRecoilValueLoadable(recoilValue) {
  if (false) {}
  if (Recoil_gkx('recoil_memory_managament_2020')) {
    // eslint-disable-next-line fb-www/react-hooks
    Recoil_useRetain(recoilValue);
  }
  return {
    TRANSITION_SUPPORT: useRecoilValueLoadable_TRANSITION_SUPPORT,
    // Recoil will attemp to detect if `useSyncExternalStore()` is supported with
    // `reactMode()` before calling it.  However, sometimes the host React
    // environment supports it but uses additional React renderers (such as with
    // `react-three-fiber`) which do not.  While this is technically a user issue
    // by using a renderer with React 18+ that doesn't fully support React 18 we
    // don't want to break users if it can be avoided. As the current renderer can
    // change at runtime, we need to dynamically check and fallback if necessary.
    SYNC_EXTERNAL_STORE: currentRendererSupportsUseSyncExternalStore$1() ? useRecoilValueLoadable_SYNC_EXTERNAL_STORE : useRecoilValueLoadable_TRANSITION_SUPPORT,
    MUTABLE_SOURCE: useRecoilValueLoadable_MUTABLE_SOURCE,
    LEGACY: useRecoilValueLoadable_LEGACY
  }[reactMode$3().mode](recoilValue);
}
/**
  Returns the value represented by the RecoilValue.
  If the value is pending, it will throw a Promise to suspend the component,
  if the value is an error it will throw it for the nearest React error boundary.
  This will also subscribe the component for any updates in the value.
  */

function useRecoilValue(recoilValue) {
  if (false) {}
  const storeRef = useStoreRef$2();
  const loadable = useRecoilValueLoadable(recoilValue);
  return handleLoadable(loadable, recoilValue, storeRef);
}
/**
  Returns a function that allows the value of a RecoilState to be updated, but does
  not subscribe the component to changes to that RecoilState.
*/

function useSetRecoilState(recoilState) {
  if (false) {}
  const storeRef = useStoreRef$2();
  return useCallback$1(newValueOrUpdater => {
    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);
  }, [storeRef, recoilState]);
}
/**
  Returns a function that will reset the value of a RecoilState to its default
*/

function useResetRecoilState(recoilState) {
  if (false) {}
  const storeRef = useStoreRef$2();
  return useCallback$1(() => {
    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);
  }, [storeRef, recoilState]);
}
/**
  Equivalent to useState(). Allows the value of the RecoilState to be read and written.
  Subsequent updates to the RecoilState will cause the component to re-render. If the
  RecoilState is pending, this will suspend the component and initiate the
  retrieval of the value. If evaluating the RecoilState resulted in an error, this will
  throw the error so that the nearest React error boundary can catch it.
*/

function es_useRecoilState(recoilState) {
  if (false) {}
  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];
}
/**
  Like useRecoilState(), but does not cause Suspense or React error handling. Returns
  an object that indicates whether the RecoilState is available, pending, or
  unavailable due to an error.
*/

function useRecoilStateLoadable(recoilState) {
  if (false) {}
  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];
}
function useSetUnvalidatedAtomValues() {
  const storeRef = useStoreRef$2();
  return (values, transactionMetadata = {}) => {
    batchUpdates$2(() => {
      storeRef.current.addTransactionMetadata(transactionMetadata);
      values.forEach((value, key) => setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value));
    });
  };
}
/**
 * Experimental variants of hooks with support for useTransition()
 */

function useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {
  if (false) {}
  if (Recoil_gkx('recoil_memory_managament_2020')) {
    // eslint-disable-next-line fb-www/react-hooks
    Recoil_useRetain(recoilValue);
  }
  return useRecoilValueLoadable_TRANSITION_SUPPORT(recoilValue);
}
function useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilValue) {
  if (false) {}
  const storeRef = useStoreRef$2();
  const loadable = useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE(recoilValue);
  return handleLoadable(loadable, recoilValue, storeRef);
}
function useRecoilState_TRANSITION_SUPPORT_UNSTABLE(recoilState) {
  if (false) {}
  return [useRecoilValue_TRANSITION_SUPPORT_UNSTABLE(recoilState), useSetRecoilState(recoilState)];
}
var Recoil_Hooks = {
  recoilComponentGetRecoilValueCount_FOR_TESTING,
  useRecoilInterface: useRecoilInterface_DEPRECATED,
  useRecoilState: es_useRecoilState,
  useRecoilStateLoadable,
  useRecoilValue,
  useRecoilValueLoadable,
  useResetRecoilState,
  useSetRecoilState,
  useSetUnvalidatedAtomValues,
  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE,
  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE,
  useRecoilState_TRANSITION_SUPPORT_UNSTABLE
};

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Returns a map containing all of the keys + values from the original map where
 * the given callback returned true.
 */

function filterMap(map, callback) {
  const result = new Map();
  for (const [key, value] of map) {
    if (callback(value, key)) {
      result.set(key, value);
    }
  }
  return result;
}
var Recoil_filterMap = filterMap;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */
/**
 * Returns a set containing all of the values from the original set where
 * the given callback returned true.
 */

function filterSet(set, callback) {
  const result = new Set();
  for (const value of set) {
    if (callback(value)) {
      result.add(value);
    }
  }
  return result;
}
var Recoil_filterSet = filterSet;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function mergeMaps(...maps) {
  const result = new Map();
  for (let i = 0; i < maps.length; i++) {
    const iterator = maps[i].keys();
    let nextKey;
    while (!(nextKey = iterator.next()).done) {
      // $FlowIssue[incompatible-call] - map/iterator knows nothing about flow types
      result.set(nextKey.value, maps[i].get(nextKey.value));
    }
  }
  return result;
}
var Recoil_mergeMaps = mergeMaps;
const {
  batchUpdates: batchUpdates$3
} = Recoil_Batching;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$3,
  getNode: getNode$4,
  nodes: nodes$1
} = Recoil_Node;
const {
  useStoreRef: useStoreRef$3
} = Recoil_RecoilRoot;
const {
  AbstractRecoilValue: AbstractRecoilValue$4,
  setRecoilValueLoadable: setRecoilValueLoadable$1
} = Recoil_RecoilValueInterface;
const {
  SUSPENSE_TIMEOUT_MS: SUSPENSE_TIMEOUT_MS$2
} = Recoil_Retention;
const {
  cloneSnapshot: cloneSnapshot$1
} = Recoil_Snapshot$1;
const {
  useCallback: useCallback$2,
  useEffect: useEffect$4,
  useRef: useRef$5,
  useState: useState$2
} = react;
const {
  isSSR: isSSR$3
} = Recoil_Environment;
function useTransactionSubscription(callback) {
  const storeRef = useStoreRef$3();
  useEffect$4(() => {
    const sub = storeRef.current.subscribeToTransactions(callback);
    return sub.release;
  }, [callback, storeRef]);
}
function externallyVisibleAtomValuesInState(state) {
  const atomValues = state.atomValues.toMap();
  const persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, (v, k) => {
    const node = getNode$4(k);
    const persistence = node.persistence_UNSTABLE;
    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';
  }), v => v.contents); // Merge in nonvalidated atoms; we may not have defs for them but they will
  // all have persistence on or they wouldn't be there in the first place.

  return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);
}

/**
  Calls the given callback after any atoms have been modified and the consequent
  component re-renders have been committed. This is intended for persisting
  the values of the atoms to storage. The stored values can then be restored
  using the useSetUnvalidatedAtomValues hook.

  The callback receives the following info:

  atomValues: The current value of every atom that is both persistable (persistence
              type not set to 'none') and whose value is available (not in an
              error or loading state).

  previousAtomValues: The value of every persistable and available atom before
               the transaction began.

  atomInfo: A map containing the persistence settings for each atom. Every key
            that exists in atomValues will also exist in atomInfo.

  modifiedAtoms: The set of atoms that were written to during the transaction.

  transactionMetadata: Arbitrary information that was added via the
          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues
          transaction, to avoid loops.
*/
function useTransactionObservation_DEPRECATED(callback) {
  useTransactionSubscription(useCallback$2(store => {
    let previousTree = store.getState().previousTree;
    const currentTree = store.getState().currentTree;
    if (!previousTree) {
      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');
      previousTree = store.getState().currentTree; // attempt to trundle on
    }

    const atomValues = externallyVisibleAtomValuesInState(currentTree);
    const previousAtomValues = externallyVisibleAtomValuesInState(previousTree);
    const atomInfo = Recoil_mapMap(nodes$1, node => {
      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;
      return {
        persistence_UNSTABLE: {
          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',
          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false
        }
      };
    }); // Filter on existance in atomValues so that externally-visible rules
    // are also applied to modified atoms (specifically exclude selectors):

    const modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, k => atomValues.has(k) || previousAtomValues.has(k));
    callback({
      atomValues,
      previousAtomValues,
      atomInfo,
      modifiedAtoms,
      transactionMetadata: {
        ...currentTree.transactionMetadata
      }
    });
  }, [callback]));
}
function useRecoilTransactionObserver(callback) {
  useTransactionSubscription(useCallback$2(store => {
    const snapshot = cloneSnapshot$1(store, 'latest');
    const previousSnapshot = cloneSnapshot$1(store, 'previous');
    callback({
      snapshot,
      previousSnapshot
    });
  }, [callback]));
} // Return a snapshot of the current state and subscribe to all state changes

function useRecoilSnapshot() {
  const storeRef = useStoreRef$3();
  const [snapshot, setSnapshot] = useState$2(() => cloneSnapshot$1(storeRef.current));
  const previousSnapshot = Recoil_usePrevious(snapshot);
  const timeoutID = useRef$5();
  const releaseRef = useRef$5();
  useTransactionSubscription(useCallback$2(store => setSnapshot(cloneSnapshot$1(store)), [])); // Retain snapshot for duration component is mounted

  useEffect$4(() => {
    const release = snapshot.retain(); // Release the retain from the rendering call

    if (timeoutID.current && !isSSR$3) {
      var _releaseRef$current;
      window.clearTimeout(timeoutID.current);
      timeoutID.current = null;
      (_releaseRef$current = releaseRef.current) === null || _releaseRef$current === void 0 ? void 0 : _releaseRef$current.call(releaseRef);
      releaseRef.current = null;
    }
    return () => {
      // Defer the release.  If "Fast Refresh"" is used then the component may
      // re-render with the same state.  The previous cleanup will then run and
      // then the new effect will run. We don't want the snapshot to be released
      // by that cleanup before the new effect has a chance to retain it again.
      // Use timeout of 10 to workaround Firefox issue: https://github.com/facebookexperimental/Recoil/issues/1936
      window.setTimeout(release, 10);
    };
  }, [snapshot]); // Retain snapshot until above effect is run.
  // Release after a threshold in case component is suspended.

  if (previousSnapshot !== snapshot && !isSSR$3) {
    // Release the previous snapshot
    if (timeoutID.current) {
      var _releaseRef$current2;
      window.clearTimeout(timeoutID.current);
      timeoutID.current = null;
      (_releaseRef$current2 = releaseRef.current) === null || _releaseRef$current2 === void 0 ? void 0 : _releaseRef$current2.call(releaseRef);
      releaseRef.current = null;
    }
    releaseRef.current = snapshot.retain();
    timeoutID.current = window.setTimeout(() => {
      var _releaseRef$current3;
      timeoutID.current = null;
      (_releaseRef$current3 = releaseRef.current) === null || _releaseRef$current3 === void 0 ? void 0 : _releaseRef$current3.call(releaseRef);
      releaseRef.current = null;
    }, SUSPENSE_TIMEOUT_MS$2);
  }
  return snapshot;
}
function gotoSnapshot(store, snapshot) {
  var _storeState$nextTree;
  const storeState = store.getState();
  const prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;
  const next = snapshot.getStore_INTERNAL().getState().currentTree;
  batchUpdates$3(() => {
    const keysToUpdate = new Set();
    for (const keys of [prev.atomValues.keys(), next.atomValues.keys()]) {
      for (const key of keys) {
        var _prev$atomValues$get, _next$atomValues$get;
        if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$4(key).shouldRestoreFromSnapshots) {
          keysToUpdate.add(key);
        }
      }
    }
    keysToUpdate.forEach(key => {
      setRecoilValueLoadable$1(store, new AbstractRecoilValue$4(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$3);
    });
    store.replaceState(state => ({
      ...state,
      stateID: snapshot.getID()
    }));
  });
}
function useGotoRecoilSnapshot() {
  const storeRef = useStoreRef$3();
  return useCallback$2(snapshot => gotoSnapshot(storeRef.current, snapshot), [storeRef]);
}
var Recoil_SnapshotHooks = {
  useRecoilSnapshot,
  gotoSnapshot,
  useGotoRecoilSnapshot,
  useRecoilTransactionObserver,
  useTransactionObservation_DEPRECATED,
  useTransactionSubscription_DEPRECATED: useTransactionSubscription
};
const {
  peekNodeInfo: peekNodeInfo$2
} = Recoil_FunctionalCore;
const {
  useStoreRef: useStoreRef$4
} = Recoil_RecoilRoot;
function useGetRecoilValueInfo() {
  const storeRef = useStoreRef$4();
  return ({
    key
  }) => peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);
}
var Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;
const {
  reactMode: reactMode$4
} = Recoil_ReactMode;
const {
  RecoilRoot: RecoilRoot$1,
  useStoreRef: useStoreRef$5
} = Recoil_RecoilRoot;
const {
  useMemo: useMemo$2
} = react;
function useRecoilBridgeAcrossReactRoots() {
  // The test fails when using useMutableSource(), but only if act() is used
  // for the nested root.  So, this may only be a testing environment issue.
  if (reactMode$4().mode === 'MUTABLE_SOURCE') {
    // eslint-disable-next-line fb-www/no-console
    console.warn('Warning: There are known issues using useRecoilBridgeAcrossReactRoots() in recoil_mutable_source rendering mode.  Please consider upgrading to recoil_sync_external_store mode.');
  }
  const store = useStoreRef$5().current;
  return useMemo$2(() => {
    // eslint-disable-next-line no-shadow
    function RecoilBridge({
      children
    }) {
      return /*#__PURE__*/react.createElement(RecoilRoot$1, {
        store_INTERNAL: store
      }, children);
    }
    return RecoilBridge;
  }, [store]);
}
var Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;
const {
  loadableWithValue: loadableWithValue$1
} = Recoil_Loadable$1;
const {
  initializeNode: initializeNode$3
} = Recoil_FunctionalCore;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$4,
  getNode: getNode$5
} = Recoil_Node;
const {
  copyTreeState: copyTreeState$1,
  getRecoilValueAsLoadable: getRecoilValueAsLoadable$3,
  invalidateDownstreams: invalidateDownstreams$1,
  writeLoadableToTreeState: writeLoadableToTreeState$1
} = Recoil_RecoilValueInterface;
function isAtom(recoilValue) {
  return getNode$5(recoilValue.key).nodeType === 'atom';
}
class TransactionInterfaceImpl {
  constructor(store, treeState) {
    es_defineProperty(this, "_store", void 0);
    es_defineProperty(this, "_treeState", void 0);
    es_defineProperty(this, "_changes", void 0);
    es_defineProperty(this, "get", recoilValue => {
      if (this._changes.has(recoilValue.key)) {
        // $FlowIssue[incompatible-return]
        return this._changes.get(recoilValue.key);
      }
      if (!isAtom(recoilValue)) {
        throw Recoil_err('Reading selectors within atomicUpdate is not supported');
      }
      const loadable = getRecoilValueAsLoadable$3(this._store, recoilValue, this._treeState);
      if (loadable.state === 'hasValue') {
        return loadable.contents;
      } else if (loadable.state === 'hasError') {
        throw loadable.contents;
      } else {
        throw Recoil_err(`Expected Recoil atom ${recoilValue.key} to have a value, but it is in a loading state.`);
      }
    });
    es_defineProperty(this, "set", (recoilState, valueOrUpdater) => {
      if (!isAtom(recoilState)) {
        throw Recoil_err('Setting selectors within atomicUpdate is not supported');
      }
      if (typeof valueOrUpdater === 'function') {
        const current = this.get(recoilState);
        this._changes.set(recoilState.key, valueOrUpdater(current)); // flowlint-line unclear-type:off
      } else {
        // Initialize atom and run effects if not initialized yet
        initializeNode$3(this._store, recoilState.key, 'set');
        this._changes.set(recoilState.key, valueOrUpdater);
      }
    });
    es_defineProperty(this, "reset", recoilState => {
      this.set(recoilState, DEFAULT_VALUE$4);
    });
    this._store = store;
    this._treeState = treeState;
    this._changes = new Map();
  } // Allow destructing
  // eslint-disable-next-line fb-www/extra-arrow-initializer

  newTreeState_INTERNAL() {
    if (this._changes.size === 0) {
      return this._treeState;
    }
    const newState = copyTreeState$1(this._treeState);
    for (const [k, v] of this._changes) {
      writeLoadableToTreeState$1(newState, k, loadableWithValue$1(v));
    }
    invalidateDownstreams$1(this._store, newState);
    return newState;
  }
}
function atomicUpdater(store) {
  return fn => {
    store.replaceState(treeState => {
      const changeset = new TransactionInterfaceImpl(store, treeState);
      fn(changeset);
      return changeset.newTreeState_INTERNAL();
    });
  };
}
var Recoil_AtomicUpdates = {
  atomicUpdater
};
var Recoil_AtomicUpdates_1 = Recoil_AtomicUpdates.atomicUpdater;
var Recoil_AtomicUpdates$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  atomicUpdater: Recoil_AtomicUpdates_1
});

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function es_invariant(condition, message) {
  if (!condition) {
    throw new Error(message);
  }
}
var invariant_1 = es_invariant;

// @oss-only

var Recoil_invariant = invariant_1;
const {
  atomicUpdater: atomicUpdater$1
} = Recoil_AtomicUpdates$1;
const {
  batchUpdates: batchUpdates$4
} = Recoil_Batching;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$5
} = Recoil_Node;
const {
  useStoreRef: useStoreRef$6
} = Recoil_RecoilRoot;
const {
  refreshRecoilValue: refreshRecoilValue$1,
  setRecoilValue: setRecoilValue$3
} = Recoil_RecoilValueInterface;
const {
  cloneSnapshot: cloneSnapshot$2
} = Recoil_Snapshot$1;
const {
  gotoSnapshot: gotoSnapshot$1
} = Recoil_SnapshotHooks;
const {
  useCallback: useCallback$3
} = react;
class Sentinel {}
const SENTINEL = new Sentinel();
function recoilCallback(store, fn, args, extraInterface) {
  let ret = SENTINEL;
  let releaseSnapshot;
  batchUpdates$4(() => {
    const errMsg = 'useRecoilCallback() expects a function that returns a function: ' + 'it accepts a function of the type (RecoilInterface) => (Args) => ReturnType ' + 'and returns a callback function (Args) => ReturnType, where RecoilInterface is ' + 'an object {snapshot, set, ...} and Args and ReturnType are the argument and return ' + 'types of the callback you want to create.  Please see the docs ' + 'at recoiljs.org for details.';
    if (typeof fn !== 'function') {
      throw Recoil_err(errMsg);
    } // Clone the snapshot lazily to avoid overhead if the callback does not use it.
    // Note that this means the snapshot may represent later state from when
    // the callback was called if it first accesses the snapshot asynchronously.

    const callbackInterface = Recoil_lazyProxy({
      ...(extraInterface !== null && extraInterface !== void 0 ? extraInterface : {}),
      // flowlint-line unclear-type:off
      set: (node, newValue) => setRecoilValue$3(store, node, newValue),
      reset: node => setRecoilValue$3(store, node, DEFAULT_VALUE$5),
      refresh: node => refreshRecoilValue$1(store, node),
      gotoSnapshot: snapshot => gotoSnapshot$1(store, snapshot),
      transact_UNSTABLE: transaction => atomicUpdater$1(store)(transaction)
    }, {
      snapshot: () => {
        const snapshot = cloneSnapshot$2(store);
        releaseSnapshot = snapshot.retain();
        return snapshot;
      }
    });
    const callback = fn(callbackInterface);
    if (typeof callback !== 'function') {
      throw Recoil_err(errMsg);
    }
    ret = callback(...args);
  });
  !!(ret instanceof Sentinel) ?  false ? 0 : Recoil_invariant(false) : void 0;
  if (Recoil_isPromise(ret)) {
    ret.finally(() => {
      var _releaseSnapshot;
      (_releaseSnapshot = releaseSnapshot) === null || _releaseSnapshot === void 0 ? void 0 : _releaseSnapshot();
    });
  } else {
    var _releaseSnapshot2;
    (_releaseSnapshot2 = releaseSnapshot) === null || _releaseSnapshot2 === void 0 ? void 0 : _releaseSnapshot2();
  }
  return ret;
}
function useRecoilCallback(fn, deps) {
  const storeRef = useStoreRef$6();
  return useCallback$3(
  // $FlowIssue[incompatible-call]
  (...args) => {
    return recoilCallback(storeRef.current, fn, args);
  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps
  );
}

var Recoil_useRecoilCallback = {
  recoilCallback,
  useRecoilCallback
};
const {
  useStoreRef: useStoreRef$7
} = Recoil_RecoilRoot;
const {
  refreshRecoilValue: refreshRecoilValue$2
} = Recoil_RecoilValueInterface;
const {
  useCallback: useCallback$4
} = react;
function useRecoilRefresher(recoilValue) {
  const storeRef = useStoreRef$7();
  return useCallback$4(() => {
    const store = storeRef.current;
    refreshRecoilValue$2(store, recoilValue);
  }, [recoilValue, storeRef]);
}
var Recoil_useRecoilRefresher = useRecoilRefresher;
const {
  atomicUpdater: atomicUpdater$2
} = Recoil_AtomicUpdates$1;
const {
  useStoreRef: useStoreRef$8
} = Recoil_RecoilRoot;
const {
  useMemo: useMemo$3
} = react;
function useRecoilTransaction(fn, deps) {
  const storeRef = useStoreRef$8();
  return useMemo$3(() => (...args) => {
    const atomicUpdate = atomicUpdater$2(storeRef.current);
    atomicUpdate(transactionInterface => {
      fn(transactionInterface)(...args);
    });
  }, deps != null ? [...deps, storeRef] : undefined // eslint-disable-line fb-www/react-hooks-deps
  );
}

var Recoil_useRecoilTransaction = useRecoilTransaction;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

class WrappedValue {
  constructor(value) {
    es_defineProperty(this, "value", void 0);
    this.value = value;
  }
}
var Recoil_Wrapper = {
  WrappedValue
};
var Recoil_Wrapper_1 = Recoil_Wrapper.WrappedValue;
var Recoil_Wrapper$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  WrappedValue: Recoil_Wrapper_1
});
const {
  isFastRefreshEnabled: isFastRefreshEnabled$2
} = Recoil_ReactMode;
class ChangedPathError extends Error {}
class TreeCache {
  // $FlowIssue[unclear-type]
  constructor(options) {
    var _options$onHit, _options$onSet, _options$mapNodeValue;
    es_defineProperty(this, "_name", void 0);
    es_defineProperty(this, "_numLeafs", void 0);
    es_defineProperty(this, "_root", void 0);
    es_defineProperty(this, "_onHit", void 0);
    es_defineProperty(this, "_onSet", void 0);
    es_defineProperty(this, "_mapNodeValue", void 0);
    this._name = options === null || options === void 0 ? void 0 : options.name;
    this._numLeafs = 0;
    this._root = null;
    this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : () => {};
    this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : () => {};
    this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : val => val;
  }
  size() {
    return this._numLeafs;
  } // $FlowIssue[unclear-type]

  root() {
    return this._root;
  }
  get(getNodeValue, handlers) {
    var _this$getLeafNode;
    return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;
  }
  getLeafNode(getNodeValue, handlers) {
    if (this._root == null) {
      return undefined;
    } // Iterate down the tree based on the current node values until we hit a leaf
    // $FlowIssue[unclear-type]

    let node = this._root;
    while (node) {
      handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);
      if (node.type === 'leaf') {
        this._onHit(node);
        return node;
      }
      const nodeValue = this._mapNodeValue(getNodeValue(node.nodeKey));
      node = node.branches.get(nodeValue);
    }
    return undefined;
  }
  set(route, value, handlers) {
    const addLeaf = () => {
      var _node2, _node3, _this$_root2, _handlers$onNodeVisit2;

      // First, setup the branch nodes for the route:
      // Iterate down the tree to find or add branch nodes following the route
      let node;
      let branchKey;
      for (const [nodeKey, nodeValue] of route) {
        var _node, _handlers$onNodeVisit, _this$_root;

        // If the previous root was a leaf, while we not have a get(), it means
        // the selector has inconsistent values or implementation changed.
        const root = this._root;
        if ((root === null || root === void 0 ? void 0 : root.type) === 'leaf') {
          throw this.invalidCacheError();
        } // node now refers to the next node down in the tree

        const parent = node; // $FlowFixMe[prop-missing]
        // $FlowFixMe[incompatible-type]

        node = parent ? parent.branches.get(branchKey) : root; // $FlowFixMe[prop-missing]
        // $FlowFixMe[incompatible-type]

        node = (_node = node) !== null && _node !== void 0 ? _node : {
          type: 'branch',
          nodeKey,
          parent,
          branches: new Map(),
          branchKey
        }; // If we found an existing node, confirm it has a consistent value

        if (node.type !== 'branch' || node.nodeKey !== nodeKey) {
          throw this.invalidCacheError();
        } // Add the branch node to the tree

        parent === null || parent === void 0 ? void 0 : parent.branches.set(branchKey, node);
        handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, node); // Prepare for next iteration and install root if it is new.

        branchKey = this._mapNodeValue(nodeValue);
        this._root = (_this$_root = this._root) !== null && _this$_root !== void 0 ? _this$_root : node;
      } // Second, setup the leaf node:
      // If there is an existing leaf for this route confirm it is consistent

      const oldLeaf = node ? (_node2 = node) === null || _node2 === void 0 ? void 0 : _node2.branches.get(branchKey) : this._root;
      if (oldLeaf != null && (oldLeaf.type !== 'leaf' || oldLeaf.branchKey !== branchKey)) {
        throw this.invalidCacheError();
      } // Create a new or replacement leaf.

      const leafNode = {
        type: 'leaf',
        value,
        parent: node,
        branchKey
      }; // Install the leaf and call handlers

      (_node3 = node) === null || _node3 === void 0 ? void 0 : _node3.branches.set(branchKey, leafNode);
      this._root = (_this$_root2 = this._root) !== null && _this$_root2 !== void 0 ? _this$_root2 : leafNode;
      this._numLeafs++;
      this._onSet(leafNode);
      handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, leafNode);
    };
    try {
      addLeaf();
    } catch (error) {
      // If the cache was stale or observed inconsistent values, such as with
      // Fast Refresh, then clear it and rebuild with the new values.
      if (error instanceof ChangedPathError) {
        this.clear();
        addLeaf();
      } else {
        throw error;
      }
    }
  } // Returns true if leaf was actually deleted from the tree

  delete(leaf) {
    const root = this.root();
    if (!root) {
      return false;
    }
    if (leaf === root) {
      this._root = null;
      this._numLeafs = 0;
      return true;
    } // Iterate up from the leaf deleteing it from it's parent's branches.

    let node = leaf.parent;
    let branchKey = leaf.branchKey;
    while (node) {
      var _node4;
      node.branches.delete(branchKey); // Stop iterating if we hit the root.

      if (node === root) {
        if (node.branches.size === 0) {
          this._root = null;
          this._numLeafs = 0;
        } else {
          this._numLeafs--;
        }
        return true;
      } // Stop iterating if there are other branches since we don't need to
      // remove any more nodes.

      if (node.branches.size > 0) {
        break;
      } // Iterate up to our parent

      branchKey = (_node4 = node) === null || _node4 === void 0 ? void 0 : _node4.branchKey;
      node = node.parent;
    } // Confirm that the leaf we are deleting is actually attached to our tree

    for (; node !== root; node = node.parent) {
      if (node == null) {
        return false;
      }
    }
    this._numLeafs--;
    return true;
  }
  clear() {
    this._numLeafs = 0;
    this._root = null;
  }
  invalidCacheError() {
    const CHANGED_PATH_ERROR_MESSAGE = isFastRefreshEnabled$2() ? 'Possible Fast Refresh module reload detected.  ' + 'This may also be caused by an selector returning inconsistent values. ' + 'Resetting cache.' : 'Invalid cache values.  This happens when selectors do not return ' + 'consistent values for the same input dependency values.  That may also ' + 'be caused when using Fast Refresh to change a selector implementation.  ' + 'Resetting cache.';
    Recoil_recoverableViolation(CHANGED_PATH_ERROR_MESSAGE + (this._name != null ? ` - ${this._name}` : ''));
    throw new ChangedPathError();
  }
}
var Recoil_TreeCache = {
  TreeCache
};
var Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;
var Recoil_TreeCache$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  TreeCache: Recoil_TreeCache_1
});
class LRUCache {
  constructor(options) {
    var _options$mapKey;
    es_defineProperty(this, "_maxSize", void 0);
    es_defineProperty(this, "_size", void 0);
    es_defineProperty(this, "_head", void 0);
    es_defineProperty(this, "_tail", void 0);
    es_defineProperty(this, "_map", void 0);
    es_defineProperty(this, "_keyMapper", void 0);
    this._maxSize = options.maxSize;
    this._size = 0;
    this._head = null;
    this._tail = null;
    this._map = new Map();
    this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;
  }
  head() {
    return this._head;
  }
  tail() {
    return this._tail;
  }
  size() {
    return this._size;
  }
  maxSize() {
    return this._maxSize;
  }
  has(key) {
    return this._map.has(this._keyMapper(key));
  }
  get(key) {
    const mappedKey = this._keyMapper(key);
    const node = this._map.get(mappedKey);
    if (!node) {
      return undefined;
    }
    this.set(key, node.value);
    return node.value;
  }
  set(key, val) {
    const mappedKey = this._keyMapper(key);
    const existingNode = this._map.get(mappedKey);
    if (existingNode) {
      this.delete(key);
    }
    const head = this.head();
    const node = {
      key,
      right: head,
      left: null,
      value: val
    };
    if (head) {
      head.left = node;
    } else {
      this._tail = node;
    }
    this._map.set(mappedKey, node);
    this._head = node;
    this._size++;
    this._maybeDeleteLRU();
  }
  _maybeDeleteLRU() {
    if (this.size() > this.maxSize()) {
      this.deleteLru();
    }
  }
  deleteLru() {
    const tail = this.tail();
    if (tail) {
      this.delete(tail.key);
    }
  }
  delete(key) {
    const mappedKey = this._keyMapper(key);
    if (!this._size || !this._map.has(mappedKey)) {
      return;
    }
    const node = Recoil_nullthrows(this._map.get(mappedKey));
    const right = node.right;
    const left = node.left;
    if (right) {
      right.left = node.left;
    }
    if (left) {
      left.right = node.right;
    }
    if (node === this.head()) {
      this._head = right;
    }
    if (node === this.tail()) {
      this._tail = left;
    }
    this._map.delete(mappedKey);
    this._size--;
  }
  clear() {
    this._size = 0;
    this._head = null;
    this._tail = null;
    this._map = new Map();
  }
}
var Recoil_LRUCache = {
  LRUCache
};
var Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;
var Recoil_LRUCache$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  LRUCache: Recoil_LRUCache_1
});
const {
  LRUCache: LRUCache$1
} = Recoil_LRUCache$1;
const {
  TreeCache: TreeCache$1
} = Recoil_TreeCache$1;
function treeCacheLRU({
  name,
  maxSize,
  mapNodeValue = v => v
}) {
  const lruCache = new LRUCache$1({
    maxSize
  });
  const cache = new TreeCache$1({
    name,
    mapNodeValue,
    onHit: node => {
      lruCache.set(node, true);
    },
    onSet: node => {
      const lruNode = lruCache.tail();
      lruCache.set(node, true);
      if (lruNode && cache.size() > maxSize) {
        cache.delete(lruNode.key);
      }
    }
  });
  return cache;
}
var Recoil_treeCacheLRU = treeCacheLRU;
const TIME_WARNING_THRESHOLD_MS = 15;
function es_stringify(x, opt, key) {
  // A optimization to avoid the more expensive JSON.stringify() for simple strings
  // This may lose protection for u2028 and u2029, though.
  if (typeof x === 'string' && !x.includes('"') && !x.includes('\\')) {
    return `"${x}"`;
  } // Handle primitive types

  switch (typeof x) {
    case 'undefined':
      return '';
    // JSON.stringify(undefined) returns undefined, but we always want to return a string

    case 'boolean':
      return x ? 'true' : 'false';
    case 'number':
    case 'symbol':
      // case 'bigint': // BigInt is not supported in www
      return String(x);
    case 'string':
      // Add surrounding quotes and escape internal quotes
      return JSON.stringify(x);
    case 'function':
      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {
        throw Recoil_err('Attempt to serialize function in a Recoil cache key');
      }
      return `__FUNCTION(${x.name})__`;
  }
  if (x === null) {
    return 'null';
  } // Fallback case for unknown types

  if (typeof x !== 'object') {
    var _JSON$stringify;
    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';
  } // Deal with all promises as equivalent for now.

  if (Recoil_isPromise(x)) {
    return '__PROMISE__';
  } // Arrays handle recursive stringification

  if (Array.isArray(x)) {
    return `[${x.map((v, i) => es_stringify(v, opt, i.toString()))}]`;
  } // If an object defines a toJSON() method, then use that to override the
  // serialization.  This matches the behavior of JSON.stringify().
  // Pass the key for compatibility.
  // Immutable.js collections define this method to allow us to serialize them.

  if (typeof x.toJSON === 'function') {
    // flowlint-next-line unclear-type: off
    return es_stringify(x.toJSON(key), opt, key);
  } // For built-in Maps, sort the keys in a stable order instead of the
  // default insertion order.  Support non-string keys.

  if (x instanceof Map) {
    const obj = {};
    for (const [k, v] of x) {
      // Stringify will escape any nested quotes
      obj[typeof k === 'string' ? k : es_stringify(k, opt)] = v;
    }
    return es_stringify(obj, opt, key);
  } // For built-in Sets, sort the keys in a stable order instead of the
  // default insertion order.

  if (x instanceof Set) {
    return es_stringify(Array.from(x).sort((a, b) => es_stringify(a, opt).localeCompare(es_stringify(b, opt))), opt, key);
  } // Anything else that is iterable serialize as an Array.

  if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {
    // flowlint-next-line unclear-type: off
    return es_stringify(Array.from(x), opt, key);
  } // For all other Objects, sort the keys in a stable order.

  return `{${Object.keys(x).filter(k => x[k] !== undefined).sort() // stringify the key to add quotes and escape any nested slashes or quotes.
  .map(k => `${es_stringify(k, opt)}:${es_stringify(x[k], opt, k)}`).join(',')}}`;
} // Utility similar to JSON.stringify() except:
// * Serialize built-in Sets as an Array
// * Serialize built-in Maps as an Object.  Supports non-string keys.
// * Serialize other iterables as arrays
// * Sort the keys of Objects and Maps to have a stable order based on string conversion.
//    This overrides their default insertion order.
// * Still uses toJSON() of any object to override serialization
// * Support Symbols (though don't guarantee uniqueness)
// * We could support BigInt, but Flow doesn't seem to like it.
// See Recoil_stableStringify-test.js for examples

function stableStringify(x, opt = {
  allowFunctions: false
}) {
  if (false) {}
  return es_stringify(x, opt);
}
var Recoil_stableStringify = stableStringify;
const {
  TreeCache: TreeCache$2
} = Recoil_TreeCache$1;
const defaultPolicy = {
  equality: 'reference',
  eviction: 'keep-all',
  maxSize: Infinity
};
function treeCacheFromPolicy({
  equality = defaultPolicy.equality,
  eviction = defaultPolicy.eviction,
  maxSize = defaultPolicy.maxSize
} = defaultPolicy, name) {
  const valueMapper = getValueMapper(equality);
  return getTreeCache(eviction, maxSize, valueMapper, name);
}
function getValueMapper(equality) {
  switch (equality) {
    case 'reference':
      return val => val;
    case 'value':
      return val => Recoil_stableStringify(val);
  }
  throw Recoil_err(`Unrecognized equality policy ${equality}`);
}
function getTreeCache(eviction, maxSize, mapNodeValue, name) {
  switch (eviction) {
    case 'keep-all':
      return new TreeCache$2({
        name,
        mapNodeValue
      });
    case 'lru':
      return Recoil_treeCacheLRU({
        name,
        maxSize: Recoil_nullthrows(maxSize),
        mapNodeValue
      });
    case 'most-recent':
      return Recoil_treeCacheLRU({
        name,
        maxSize: 1,
        mapNodeValue
      });
  }
  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);
}
var Recoil_treeCacheFromPolicy = treeCacheFromPolicy;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

function isNode(object) {
  var _ownerDocument, _doc$defaultView;
  if (typeof window === 'undefined') {
    return false;
  }
  const doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;
  const defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;
  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}
var Recoil_isNode = (/* unused pure expression or super */ null && (isNode));
const {
  isReactNative: isReactNative$1,
  isWindow: isWindow$1
} = Recoil_Environment;
function shouldNotBeFrozen(value) {
  // Primitives and functions:
  if (value === null || typeof value !== 'object') {
    return true;
  } // React elements:

  switch (typeof value.$$typeof) {
    case 'symbol':
      return true;
    case 'number':
      return true;
  } // Immutable structures:

  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {
    return true;
  } // DOM nodes:

  if (Recoil_isNode(value)) {
    return true;
  }
  if (Recoil_isPromise(value)) {
    return true;
  }
  if (value instanceof Error) {
    return true;
  }
  if (ArrayBuffer.isView(value)) {
    return true;
  } // Some environments, just as Jest, don't work with the instanceof check

  if (!isReactNative$1 && isWindow$1(value)) {
    return true;
  }
  return false;
} // Recursively freeze a value to enforce it is read-only.
// This may also have minimal performance improvements for enumerating
// objects (based on browser implementations, of course)

function deepFreezeValue(value) {
  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {
    return;
  }
  Object.freeze(value); // Make all properties read-only

  for (const key in value) {
    // $FlowIssue[method-unbinding] added when improving typing for this parameters
    if (Object.prototype.hasOwnProperty.call(value, key)) {
      const prop = value[key]; // Prevent infinite recurssion for circular references.

      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {
        deepFreezeValue(prop);
      }
    }
  }
  Object.seal(value); // This also makes existing properties non-configurable.
}

var Recoil_deepFreezeValue = (/* unused pure expression or super */ null && (deepFreezeValue));

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * This is a stub for some integration into FB internal stuff
 *
 * 
 * @format
 * @oncall recoil
 */
function startPerfBlock(_id) {
  return () => null;
}
var Recoil_PerformanceTimings = {
  startPerfBlock
};
const {
  isLoadable: isLoadable$1,
  loadableWithError: loadableWithError$1,
  loadableWithPromise: loadableWithPromise$1,
  loadableWithValue: loadableWithValue$2
} = Recoil_Loadable$1;
const {
  WrappedValue: WrappedValue$1
} = Recoil_Wrapper$1;
const {
  getNodeLoadable: getNodeLoadable$2,
  peekNodeLoadable: peekNodeLoadable$1,
  setNodeValue: setNodeValue$3
} = Recoil_FunctionalCore;
const {
  saveDepsToStore: saveDepsToStore$1
} = Recoil_Graph;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$6,
  getConfigDeletionHandler: getConfigDeletionHandler$1,
  getNode: getNode$6,
  registerNode: registerNode$1
} = Recoil_Node;
const {
  isRecoilValue: isRecoilValue$3
} = Recoil_RecoilValue$1;
const {
  markRecoilValueModified: markRecoilValueModified$1
} = Recoil_RecoilValueInterface;
const {
  retainedByOptionWithDefault: retainedByOptionWithDefault$1
} = Recoil_Retention;
const {
  recoilCallback: recoilCallback$1
} = Recoil_useRecoilCallback;
const {
  startPerfBlock: startPerfBlock$1
} = Recoil_PerformanceTimings;
class Canceled {}
const CANCELED = new Canceled();
/**
 * An ExecutionID is an arbitrary ID that lets us distinguish executions from
 * each other. This is necessary as we need a way of solving this problem:
 * "given 3 async executions, only update state for the 'latest' execution when
 * it finishes running regardless of when the other 2 finish". ExecutionIDs
 * provide a convenient way of identifying executions so that we can track and
 * manage them over time.
 */

const dependencyStack = []; // for detecting circular dependencies.

const waitingStores = new Map();
const getNewExecutionID = (() => {
  let executionID = 0;
  return () => executionID++;
})();
/* eslint-disable no-redeclare */

function selector(options) {
  let recoilValue = null;
  const {
    key,
    get,
    cachePolicy_UNSTABLE: cachePolicy
  } = options;
  const set = options.set != null ? options.set : undefined; // flow

  if (false) {} // This is every discovered dependency across all executions

  const discoveredDependencyNodeKeys = new Set();
  const cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {
    equality: 'reference',
    eviction: 'keep-all'
  }, key);
  const retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);
  const executionInfoMap = new Map();
  let liveStoresCount = 0;
  function selectorIsLive() {
    return !Recoil_gkx('recoil_memory_managament_2020') || liveStoresCount > 0;
  }
  function selectorInit(store) {
    store.getState().knownSelectors.add(key);
    liveStoresCount++;
    return () => {
      liveStoresCount--;
    };
  }
  function selectorShouldDeleteConfigOnRelease() {
    return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();
  }
  function resolveAsync(store, state, executionID, loadable, depValues) {
    setCache(state, loadable, depValues);
    notifyStoresOfResolvedAsync(store, executionID);
  }
  function notifyStoresOfResolvedAsync(store, executionID) {
    if (isLatestExecution(store, executionID)) {
      clearExecutionInfo(store);
    }
    notifyWaitingStores(executionID, true);
  }
  /**
   * Notify stores to pull the selector again if a new async dep was discovered.
   * 1) Async selector adds a new dep but doesn't resolve yet.
   *    Note that deps for an async selector are based on the state when the
   *    evaluation started, in order to provide a consistent picture of state.
   * 2) But, new value of dep based on the current state might cause the selector
   *    to resolve or resolve differently.
   * 3) Therefore, this notification will pull the selector based on the current
   *    state for the components
   */

  function notifyStoresOfNewAsyncDep(store, executionID) {
    if (isLatestExecution(store, executionID)) {
      const executionInfo = Recoil_nullthrows(getExecutionInfo(store));
      executionInfo.stateVersions.clear();
      notifyWaitingStores(executionID, false);
    }
  }
  function notifyWaitingStores(executionID, clearWaitlist) {
    const stores = waitingStores.get(executionID);
    if (stores != null) {
      for (const waitingStore of stores) {
        markRecoilValueModified$1(waitingStore, Recoil_nullthrows(recoilValue));
      }
      if (clearWaitlist) {
        waitingStores.delete(executionID);
      }
    }
  }
  function markStoreWaitingForResolvedAsync(store, executionID) {
    let stores = waitingStores.get(executionID);
    if (stores == null) {
      waitingStores.set(executionID, stores = new Set());
    }
    stores.add(store);
  }
  /**
   * This function attaches a then() and a catch() to a promise that was
   * returned from a selector's get() (either explicitly or implicitly by
   * running a function that uses the "async" keyword). If a selector's get()
   * returns a promise, we have two possibilities:
   *
   * 1. The promise will resolve, in which case it will have completely finished
   *    executing without any remaining pending dependencies. No more retries
   *    are needed and we can proceed with updating the cache and notifying
   *    subscribers (if it is the latest execution, otherwise only the cache
   *    will be updated and subscriptions will not be fired). This is the case
   *    handled by the attached then() handler.
   *
   * 2. The promise will throw because it either has an error or it came across
   *    an async dependency that has not yet resolved, in which case we will
   *    call wrapDepdencyPromise(), whose responsibility is to handle dependency
   *    promises. This case is handled by the attached catch() handler.
   *
   * Both branches will eventually resolve to the final result of the selector
   * (or an error if a real error occurred).
   *
   * The execution will run to completion even if it is stale, and its value
   * will be cached. But stale executions will not update global state or update
   * executionInfo as that is the responsibility of the 'latest' execution.
   *
   * Note this function should not be passed a promise that was thrown--AKA a
   * dependency promise. Dependency promises should be passed to
   * wrapPendingDependencyPromise()).
   */

  function wrapResultPromise(store, promise, state, depValues, executionID, loadingDepsState) {
    return promise.then(value => {
      if (!selectorIsLive()) {
        // The selector was released since the request began; ignore the response.
        clearExecutionInfo(store);
        throw CANCELED;
      }
      const loadable = loadableWithValue$2(value);
      resolveAsync(store, state, executionID, loadable, depValues);
      return value;
    }).catch(errorOrPromise => {
      if (!selectorIsLive()) {
        // The selector was released since the request began; ignore the response.
        clearExecutionInfo(store);
        throw CANCELED;
      }
      if (Recoil_isPromise(errorOrPromise)) {
        return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionID, loadingDepsState);
      }
      const loadable = loadableWithError$1(errorOrPromise);
      resolveAsync(store, state, executionID, loadable, depValues);
      throw errorOrPromise;
    });
  }
  /**
   * This function attaches a then() and a catch() to a promise that was
   * thrown from a selector's get(). If a selector's get() throws a promise,
   * we have two possibilities:
   *
   * 1. The promise will resolve, meaning one of our selector's dependencies is
   *    now available and we should "retry" our get() by running it again. This
   *    is the case handled by the attached then() handler.
   *
   * 2. The promise will throw because something went wrong with the dependency
   *    promise (in other words a real error occurred). This case is handled by
   *    the attached catch() handler. If the dependency promise throws, it is
   *    _always_ a real error and not another dependency promise (any dependency
   *    promises would have been handled upstream).
   *
   * The then() branch will eventually resolve to the final result of the
   * selector (or an error if a real error occurs), and the catch() will always
   * resolve to an error because the dependency promise is a promise that was
   * wrapped upstream, meaning it will only resolve to its real value or to a
   * real error.
   *
   * The execution will run to completion even if it is stale, and its value
   * will be cached. But stale executions will not update global state or update
   * executionInfo as that is the responsibility of the 'latest' execution.
   *
   * Note this function should not be passed a promise that was returned from
   * get(). The intention is that this function is only passed promises that
   * were thrown due to a pending dependency. Promises returned by get() should
   * be passed to wrapResultPromise() instead.
   */

  function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionID, loadingDepsState) {
    return promise.then(resolvedDep => {
      if (!selectorIsLive()) {
        // The selector was released since the request began; ignore the response.
        clearExecutionInfo(store);
        throw CANCELED;
      } // Check if we are handling a pending Recoil dependency or if the user
      // threw their own Promise to "suspend" a selector evaluation.  We need
      // to check that the loadingDepPromise actually matches the promise that
      // we caught in case the selector happened to catch the promise we threw
      // for a pending Recoil dependency from `getRecoilValue()` and threw
      // their own promise instead.

      if (loadingDepsState.loadingDepKey != null && loadingDepsState.loadingDepPromise === promise) {
        /**
         * Note for async atoms, this means we are changing the atom's value
         * in the store for the given version. This should be alright because
         * the version of state is now stale and a new version will have
         * already been triggered by the atom being resolved (see this logic
         * in Recoil_atom.js)
         */
        state.atomValues.set(loadingDepsState.loadingDepKey, loadableWithValue$2(resolvedDep));
      } else {
        /**
         * If resolvedDepKey is not defined, the promise was a user-thrown
         * promise. User-thrown promises are an advanced feature and they
         * should be avoided in almost all cases. Using `loadable.map()` inside
         * of selectors for loading loadables and then throwing that mapped
         * loadable's promise is an example of a user-thrown promise.
         *
         * When we hit a user-thrown promise, we have to bail out of an optimization
         * where we bypass calculating selector cache keys for selectors that
         * have been previously seen for a given state (these selectors are saved in
         * state.atomValues) to avoid stale state as we have no way of knowing
         * what state changes happened (if any) in result to the promise resolving.
         *
         * Ideally we would only bail out selectors that are in the chain of
         * dependencies for this selector, but there's currently no way to get
         * a full list of a selector's downstream nodes because the state that
         * is executing may be a discarded tree (so store.getGraph(state.version)
         * will be empty), and the full dep tree may not be in the selector
         * caches in the case where the selector's cache was cleared. To solve
         * for this we would have to keep track of all running selector
         * executions and their downstream deps. Because this only covers edge
         * cases, that complexity might not be justifyable.
         */
        store.getState().knownSelectors.forEach(nodeKey => {
          state.atomValues.delete(nodeKey);
        });
      }
      /**
       * Optimization: Now that the dependency has resolved, let's try hitting
       * the cache in case the dep resolved to a value we have previously seen.
       *
       * TODO:
       * Note this optimization is not perfect because it only prevents re-executions
       * _after_ the point where an async dependency is found. Any code leading
       * up to the async dependency may have run unnecessarily. The ideal case
       * would be to wait for the async dependency to resolve first, check the
       * cache, and prevent _any_ execution of the selector if the resulting
       * value of the dependency leads to a path that is found in the cache.
       * The ideal case is more difficult to implement as it would require that
       * we capture and wait for the the async dependency right after checking
       * the cache. The current approach takes advantage of the fact that running
       * the selector already has a code path that lets us exit early when
       * an async dep resolves.
       */

      const cachedLoadable = getLoadableFromCacheAndUpdateDeps(store, state);
      if (cachedLoadable && cachedLoadable.state !== 'loading') {
        /**
         * This has to notify stores of a resolved async, even if there is no
         * current pending execution for the following case:
         * 1) A component renders with this pending loadable.
         * 2) The upstream dependency resolves.
         * 3) While processing some other selector it reads this one, such as
         *    while traversing its dependencies.  At this point it gets the
         *    new resolved value synchronously and clears the current
         *    execution ID.  The component wasn't getting the value itself,
         *    though, so it still has the pending loadable.
         * 4) When this code executes the current execution id was cleared
         *    and it wouldn't notify the component of the new value.
         *
         * I think this is only an issue with "early" rendering since the
         * components got their value using the in-progress execution.
         * We don't have a unit test for this case yet.  I'm not sure it is
         * necessary with recoil_transition_support mode.
         */
        if (isLatestExecution(store, executionID) || getExecutionInfo(store) == null) {
          notifyStoresOfResolvedAsync(store, executionID);
        }
        if (cachedLoadable.state === 'hasValue') {
          return cachedLoadable.contents;
        } else {
          throw cachedLoadable.contents;
        }
      }
      /**
       * If this execution is stale, let's check to see if there is some in
       * progress execution with a matching state. If we find a match, then
       * we can take the value from that in-progress execution. Note this may
       * sound like an edge case, but may be very common in cases where a
       * loading dependency resolves from loading to having a value (thus
       * possibly triggering a re-render), and React re-renders before the
       * chained .then() functions run, thus starting a new execution as the
       * dep has changed value. Without this check we will run the selector
       * twice (once in the new execution and once again in this .then(), so
       * this check is necessary to keep unnecessary re-executions to a
       * minimum).
       *
       * Also note this code does not check across all executions that may be
       * running. It only optimizes for the _latest_ execution per store as
       * we currently do not maintain a list of all currently running executions.
       * This means in some cases we may run selectors more than strictly
       * necessary when there are multiple executions running for the same
       * selector. This may be a valid tradeoff as checking for dep changes
       * across all in-progress executions may take longer than just
       * re-running the selector. This will be app-dependent, and maybe in the
       * future we can make the behavior configurable. An ideal fix may be
       * to extend the tree cache to support caching loading states.
       */

      if (!isLatestExecution(store, executionID)) {
        const executionInfo = getInProgressExecutionInfo(store, state);
        if (executionInfo != null) {
          /**
           * Returning promise here without wrapping as the wrapper logic was
           * already done upstream when this promise was generated.
           */
          return executionInfo.loadingLoadable.contents;
        }
      } // Retry the selector evaluation now that the dependency has resolved

      const [loadable, depValues] = evaluateSelectorGetter(store, state, executionID);
      if (loadable.state !== 'loading') {
        resolveAsync(store, state, executionID, loadable, depValues);
      }
      if (loadable.state === 'hasError') {
        throw loadable.contents;
      }
      return loadable.contents;
    }).catch(error => {
      // The selector was released since the request began; ignore the response.
      if (error instanceof Canceled) {
        throw CANCELED;
      }
      if (!selectorIsLive()) {
        clearExecutionInfo(store);
        throw CANCELED;
      }
      const loadable = loadableWithError$1(error);
      resolveAsync(store, state, executionID, loadable, existingDeps);
      throw error;
    });
  }
  function updateDeps(store, state, deps, executionID) {
    var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;
    if (isLatestExecution(store, executionID) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {
      var _store$getState$nextT, _store$getState3, _store$getState3$next;
      saveDepsToStore$1(key, deps, store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);
    }
    for (const nodeKey of deps) {
      discoveredDependencyNodeKeys.add(nodeKey);
    }
  }
  function evaluateSelectorGetter(store, state, executionID) {
    const endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here

    let duringSynchronousExecution = true;
    let duringAsynchronousExecution = true;
    const finishEvaluation = () => {
      endPerfBlock();
      duringAsynchronousExecution = false;
    };
    let result;
    let resultIsError = false;
    let loadable;
    const loadingDepsState = {
      loadingDepKey: null,
      loadingDepPromise: null
    };
    /**
     * Starting a fresh set of deps that we'll be using to update state. We're
     * starting a new set versus adding it in existing state deps because
     * the version of state that we update deps for may be a more recent version
     * than the version the selector was called with. This is because the latest
     * execution will update the deps of the current/latest version of state
     * (This is safe to do because the fact that the selector is the latest
     * execution means the deps we discover below are our best guess at the
     * deps for the current/latest state in the store)
     */

    const depValues = new Map();
    function getRecoilValue({
      key: depKey
    }) {
      const depLoadable = getNodeLoadable$2(store, state, depKey);
      depValues.set(depKey, depLoadable); // We need to update asynchronous dependencies as we go so the selector
      // knows if it has to restart evaluation if one of them is updated before
      // the asynchronous selector completely resolves.

      if (!duringSynchronousExecution) {
        updateDeps(store, state, new Set(depValues.keys()), executionID);
        notifyStoresOfNewAsyncDep(store, executionID);
      }
      switch (depLoadable.state) {
        case 'hasValue':
          return depLoadable.contents;
        case 'hasError':
          throw depLoadable.contents;
        case 'loading':
          loadingDepsState.loadingDepKey = depKey;
          loadingDepsState.loadingDepPromise = depLoadable.contents;
          throw depLoadable.contents;
      }
      throw Recoil_err('Invalid Loadable state');
    }
    const getCallback = fn => {
      return (...args) => {
        if (duringAsynchronousExecution) {
          throw Recoil_err('Callbacks from getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can work with Recoil state without a subscription.');
        }
        !(recoilValue != null) ?  false ? 0 : Recoil_invariant(false) : void 0;
        return recoilCallback$1(store, fn, args, {
          node: recoilValue
        } // flowlint-line unclear-type:off
        );
      };
    };

    try {
      result = get({
        get: getRecoilValue,
        getCallback
      });
      result = isRecoilValue$3(result) ? getRecoilValue(result) : result;
      if (isLoadable$1(result)) {
        if (result.state === 'hasError') {
          resultIsError = true;
        }
        result = result.contents;
      }
      if (Recoil_isPromise(result)) {
        result = wrapResultPromise(store, result, state, depValues, executionID, loadingDepsState).finally(finishEvaluation);
      } else {
        finishEvaluation();
      }
      result = result instanceof WrappedValue$1 ? result.value : result;
    } catch (errorOrDepPromise) {
      result = errorOrDepPromise;
      if (Recoil_isPromise(result)) {
        result = wrapPendingDependencyPromise(store, result, state, depValues, executionID, loadingDepsState).finally(finishEvaluation);
      } else {
        resultIsError = true;
        finishEvaluation();
      }
    }
    if (resultIsError) {
      loadable = loadableWithError$1(result);
    } else if (Recoil_isPromise(result)) {
      loadable = loadableWithPromise$1(result);
    } else {
      loadable = loadableWithValue$2(result);
    }
    duringSynchronousExecution = false;
    updateExecutionInfoDepValues(store, executionID, depValues);
    updateDeps(store, state, new Set(depValues.keys()), executionID);
    return [loadable, depValues];
  }
  function getLoadableFromCacheAndUpdateDeps(store, state) {
    // First, look up in the state cache
    // If it's here, then the deps in the store should already be valid.
    let cachedLoadable = state.atomValues.get(key);
    if (cachedLoadable != null) {
      return cachedLoadable;
    } // Second, look up in the selector cache and update the deps in the store

    const depsAfterCacheLookup = new Set();
    try {
      cachedLoadable = cache.get(nodeKey => {
        !(typeof nodeKey === 'string') ?  false ? 0 : Recoil_invariant(false) : void 0;
        return getNodeLoadable$2(store, state, nodeKey).contents;
      }, {
        onNodeVisit: node => {
          if (node.type === 'branch' && node.nodeKey !== key) {
            depsAfterCacheLookup.add(node.nodeKey);
          }
        }
      });
    } catch (error) {
      throw Recoil_err(`Problem with cache lookup for selector "${key}": ${error.message}`);
    }
    if (cachedLoadable) {
      var _getExecutionInfo;

      // Cache the results in the state to allow for cheaper lookup than
      // iterating the tree cache of dependencies.
      state.atomValues.set(key, cachedLoadable);
      /**
       * Ensure store contains correct dependencies if we hit the cache so that
       * the store deps and cache are in sync for a given state. This is important
       * because store deps are normally updated when new executions are created,
       * but cache hits don't trigger new executions but they still _may_ signify
       * a change in deps in the store if the store deps for this state are empty
       * or stale.
       */

      updateDeps(store, state, depsAfterCacheLookup, (_getExecutionInfo = getExecutionInfo(store)) === null || _getExecutionInfo === void 0 ? void 0 : _getExecutionInfo.executionID);
    }
    return cachedLoadable;
  }
  /**
   * Given a tree state, this function returns a Loadable of the current state.
   *
   * The selector's get() function will only be re-evaluated if _both_ of the
   * following statements are true:
   *
   * 1. The current dep values from the given state produced a cache key that
   *    was not found in the cache.
   * 2. There is no currently running async execution OR there is an
   *    async execution that is running, but after comparing the dep values in
   *    the given state with the dep values that the execution has discovered so
   *    far we find that at least one dep value has changed, in which case we
   *    start a new execution (the previously running execution will continue to
   *    run to completion, but only the new execution will be deemed the
   *    'latest' execution, meaning it will be the only execution that will
   *    update global state when it is finished. Any non-latest executions will
   *    run to completion and update the selector cache but not global state).
   */

  function getSelectorLoadableAndUpdateDeps(store, state) {
    // First, see if our current state is cached
    const cachedVal = getLoadableFromCacheAndUpdateDeps(store, state);
    if (cachedVal != null) {
      clearExecutionInfo(store);
      return cachedVal;
    } // Second, check if there is already an ongoing execution based on the current state

    const inProgressExecutionInfo = getInProgressExecutionInfo(store, state);
    if (inProgressExecutionInfo != null) {
      var _inProgressExecutionI;
      if (((_inProgressExecutionI = inProgressExecutionInfo.loadingLoadable) === null || _inProgressExecutionI === void 0 ? void 0 : _inProgressExecutionI.state) === 'loading') {
        markStoreWaitingForResolvedAsync(store, inProgressExecutionInfo.executionID);
      } // FIXME: check after the fact to see if we made the right choice by waiting

      return inProgressExecutionInfo.loadingLoadable;
    } // Third, start a new evaluation of the selector

    const newExecutionID = getNewExecutionID();
    const [loadable, newDepValues] = evaluateSelectorGetter(store, state, newExecutionID);
    /**
     * Conditionally updates the cache with a given loadable.
     *
     * We only cache loadables that are not loading because our cache keys are
     * based on dep values, which are in an unfinished state for loadables that
     * have a 'loading' state (new deps may be discovered while the selector
     * runs its async code). We never want to cache partial dependencies b/c it
     * could lead to errors, such as prematurely returning the result based on a
     * partial list of deps-- we need the full list of deps to ensure that we
     * are returning the correct result from cache.
     */

    if (loadable.state === 'loading') {
      setExecutionInfo(store, newExecutionID, loadable, newDepValues, state);
      markStoreWaitingForResolvedAsync(store, newExecutionID);
    } else {
      clearExecutionInfo(store);
      setCache(state, loadable, newDepValues);
    }
    return loadable;
  }
  /**
   * Searches execution info across all stores to see if there is an in-progress
   * execution whose dependency values match the values of the requesting store.
   */

  function getInProgressExecutionInfo(store, state) {
    // Sort the pending executions so that our current store is checked first.
    const pendingExecutions = Recoil_concatIterables([executionInfoMap.has(store) ? [Recoil_nullthrows(executionInfoMap.get(store))] : [], Recoil_mapIterable(Recoil_filterIterable(executionInfoMap, ([s]) => s !== store), ([, execInfo]) => execInfo)]);
    function anyDepChanged(execDepValues) {
      for (const [depKey, execLoadable] of execDepValues) {
        if (!getNodeLoadable$2(store, state, depKey).is(execLoadable)) {
          return true;
        }
      }
      return false;
    }
    for (const execInfo of pendingExecutions) {
      if (
      // If this execution was already checked to be valid with this version
      // of state, then let's use it!
      execInfo.stateVersions.get(state.version) ||
      // If the deps for the execution match our current state, then it's valid
      !anyDepChanged(execInfo.depValuesDiscoveredSoFarDuringAsyncWork)) {
        execInfo.stateVersions.set(state.version, true);
        return execInfo;
      } else {
        execInfo.stateVersions.set(state.version, false);
      }
    }
    return undefined;
  }
  function getExecutionInfo(store) {
    return executionInfoMap.get(store);
  }
  /**
   * This function will update the selector's execution info when the selector
   * has either finished running an execution or has started a new execution. If
   * the given loadable is in a 'loading' state, the intention is that a new
   * execution has started. Otherwise, the intention is that an execution has
   * just finished.
   */

  function setExecutionInfo(store, newExecutionID, loadable, depValues, state) {
    executionInfoMap.set(store, {
      depValuesDiscoveredSoFarDuringAsyncWork: depValues,
      executionID: newExecutionID,
      loadingLoadable: loadable,
      stateVersions: new Map([[state.version, true]])
    });
  }
  function updateExecutionInfoDepValues(store, executionID, depValues) {
    // We only need to bother updating the deps for the latest execution because
    // that's all getInProgressExecutionInfo() will be looking for.
    if (isLatestExecution(store, executionID)) {
      const executionInfo = getExecutionInfo(store);
      if (executionInfo != null) {
        executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;
      }
    }
  }
  function clearExecutionInfo(store) {
    executionInfoMap.delete(store);
  }
  function isLatestExecution(store, executionID) {
    var _getExecutionInfo2;
    return executionID === ((_getExecutionInfo2 = getExecutionInfo(store)) === null || _getExecutionInfo2 === void 0 ? void 0 : _getExecutionInfo2.executionID);
  }
  /**
   * FIXME: dep keys should take into account the state of the loadable to
   * prevent the edge case where a loadable with an error and a loadable with
   * an error as a value are treated as the same thing incorrectly. For example
   * these two should be treated differently:
   *
   * selector({key: '', get: () => new Error('hi')});
   * selector({key: '', get () => {throw new Error('hi')}});
   *
   * With current implementation they are treated the same
   */

  function depValuesToDepRoute(depValues) {
    return Array.from(depValues.entries()).map(([depKey, valLoadable]) => [depKey, valLoadable.contents]);
  }
  function setCache(state, loadable, depValues) {
    if (false) {}
    state.atomValues.set(key, loadable);
    try {
      cache.set(depValuesToDepRoute(depValues), loadable);
    } catch (error) {
      throw Recoil_err(`Problem with setting cache for selector "${key}": ${error.message}`);
    }
  }
  function detectCircularDependencies(fn) {
    if (dependencyStack.includes(key)) {
      const message = `Recoil selector has circular dependencies: ${dependencyStack.slice(dependencyStack.indexOf(key)).join(' \u2192 ')}`;
      return loadableWithError$1(Recoil_err(message));
    }
    dependencyStack.push(key);
    try {
      return fn();
    } finally {
      dependencyStack.pop();
    }
  }
  function selectorPeek(store, state) {
    const cachedLoadable = state.atomValues.get(key);
    if (cachedLoadable != null) {
      return cachedLoadable;
    }
    return cache.get(nodeKey => {
      var _peekNodeLoadable;
      !(typeof nodeKey === 'string') ?  false ? 0 : Recoil_invariant(false) : void 0;
      return (_peekNodeLoadable = peekNodeLoadable$1(store, state, nodeKey)) === null || _peekNodeLoadable === void 0 ? void 0 : _peekNodeLoadable.contents;
    });
  }
  function selectorGet(store, state) {
    return detectCircularDependencies(() => getSelectorLoadableAndUpdateDeps(store, state));
  }
  function invalidateSelector(state) {
    state.atomValues.delete(key);
  }
  function clearSelectorCache(store, treeState) {
    !(recoilValue != null) ?  false ? 0 : Recoil_invariant(false) : void 0;
    for (const nodeKey of discoveredDependencyNodeKeys) {
      var _node$clearCache;
      const node = getNode$6(nodeKey);
      (_node$clearCache = node.clearCache) === null || _node$clearCache === void 0 ? void 0 : _node$clearCache.call(node, store, treeState);
    }
    discoveredDependencyNodeKeys.clear();
    invalidateSelector(treeState);
    cache.clear();
    markRecoilValueModified$1(store, recoilValue);
  }
  if (set != null) {
    /**
     * ES5 strict mode prohibits defining non-top-level function declarations,
     * so don't use function declaration syntax here
     */
    const selectorSet = (store, state, newValue) => {
      let syncSelectorSetFinished = false;
      const writes = new Map();
      function getRecoilValue({
        key: depKey
      }) {
        if (syncSelectorSetFinished) {
          throw Recoil_err('Recoil: Async selector sets are not currently supported.');
        }
        const loadable = getNodeLoadable$2(store, state, depKey);
        if (loadable.state === 'hasValue') {
          return loadable.contents;
        } else if (loadable.state === 'loading') {
          const msg = `Getting value of asynchronous atom or selector "${depKey}" in a pending state while setting selector "${key}" is not yet supported.`;
          Recoil_recoverableViolation(msg);
          throw Recoil_err(msg);
        } else {
          throw loadable.contents;
        }
      }
      function setRecoilState(recoilState, valueOrUpdater) {
        if (syncSelectorSetFinished) {
          const msg = 'Recoil: Async selector sets are not currently supported.';
          Recoil_recoverableViolation(msg);
          throw Recoil_err(msg);
        }
        const setValue = typeof valueOrUpdater === 'function' ?
        // cast to any because we can't restrict type S from being a function itself without losing support for opaque types
        // flowlint-next-line unclear-type:off
        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;
        const upstreamWrites = setNodeValue$3(store, state, recoilState.key, setValue);
        upstreamWrites.forEach((v, k) => writes.set(k, v));
      }
      function resetRecoilState(recoilState) {
        setRecoilState(recoilState, DEFAULT_VALUE$6);
      }
      const ret = set({
        set: setRecoilState,
        get: getRecoilValue,
        reset: resetRecoilState
      }, newValue); // set should be a void method, but if the user makes it `async`, then it
      // will return a Promise, which we don't currently support.

      if (ret !== undefined) {
        throw Recoil_isPromise(ret) ? Recoil_err('Recoil: Async selector sets are not currently supported.') : Recoil_err('Recoil: selector set should be a void function.');
      }
      syncSelectorSetFinished = true;
      return writes;
    };
    return recoilValue = registerNode$1({
      key,
      nodeType: 'selector',
      peek: selectorPeek,
      get: selectorGet,
      set: selectorSet,
      init: selectorInit,
      invalidate: invalidateSelector,
      clearCache: clearSelectorCache,
      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,
      dangerouslyAllowMutability: options.dangerouslyAllowMutability,
      shouldRestoreFromSnapshots: false,
      retainedBy
    });
  } else {
    return recoilValue = registerNode$1({
      key,
      nodeType: 'selector',
      peek: selectorPeek,
      get: selectorGet,
      init: selectorInit,
      invalidate: invalidateSelector,
      clearCache: clearSelectorCache,
      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,
      dangerouslyAllowMutability: options.dangerouslyAllowMutability,
      shouldRestoreFromSnapshots: false,
      retainedBy
    });
  }
}
/* eslint-enable no-redeclare */
// $FlowIssue[incompatible-use]
// $FlowFixMe[missing-local-annot]

selector.value = value => new WrappedValue$1(value);
var Recoil_selector = selector;

// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';
// @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');
const {
  isLoadable: isLoadable$2,
  loadableWithError: loadableWithError$2,
  loadableWithPromise: loadableWithPromise$2,
  loadableWithValue: loadableWithValue$3
} = Recoil_Loadable$1;
const {
  WrappedValue: WrappedValue$2
} = Recoil_Wrapper$1;
const {
  peekNodeInfo: peekNodeInfo$3
} = Recoil_FunctionalCore;
const {
  DEFAULT_VALUE: DEFAULT_VALUE$7,
  DefaultValue: DefaultValue$2,
  getConfigDeletionHandler: getConfigDeletionHandler$2,
  registerNode: registerNode$2,
  setConfigDeletionHandler: setConfigDeletionHandler$1
} = Recoil_Node;
const {
  isRecoilValue: isRecoilValue$4
} = Recoil_RecoilValue$1;
const {
  getRecoilValueAsLoadable: getRecoilValueAsLoadable$4,
  markRecoilValueModified: markRecoilValueModified$2,
  setRecoilValue: setRecoilValue$4,
  setRecoilValueLoadable: setRecoilValueLoadable$2
} = Recoil_RecoilValueInterface;
const {
  retainedByOptionWithDefault: retainedByOptionWithDefault$2
} = Recoil_Retention;
const unwrap = x => x instanceof WrappedValue$2 ? x.value : x;
function baseAtom(options) {
  const {
    key,
    persistence_UNSTABLE: persistence
  } = options;
  const retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);
  let liveStoresCount = 0;
  function unwrapPromise(promise) {
    return loadableWithPromise$2(promise.then(value => {
      defaultLoadable = loadableWithValue$3(value);
      return value;
    }).catch(error => {
      defaultLoadable = loadableWithError$2(error);
      throw error;
    }));
  }
  let defaultLoadable = Recoil_isPromise(options.default) ? unwrapPromise(options.default) : isLoadable$2(options.default) ? options.default.state === 'loading' ? unwrapPromise(options.default.contents) : options.default : loadableWithValue$3(unwrap(options.default));
  maybeFreezeValueOrPromise(defaultLoadable.contents);
  let cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom
  // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>

  const cleanupEffectsByStore = new Map();
  function maybeFreezeValueOrPromise(valueOrPromise) {
    if (false) {}
    return valueOrPromise;
  }
  function wrapPendingPromise(store, promise) {
    const wrappedPromise = promise.then(value => {
      var _store$getState$nextT, _state$atomValues$get;
      const state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;
      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {
        setRecoilValue$4(store, node, value);
      }
      return value;
    }).catch(error => {
      var _store$getState$nextT2, _state$atomValues$get2;
      const state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;
      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {
        setRecoilValueLoadable$2(store, node, loadableWithError$2(error));
      }
      throw error;
    });
    return wrappedPromise;
  }
  function initAtom(store, initState, trigger) {
    var _options$effects;
    liveStoresCount++;
    const cleanupAtom = () => {
      var _cleanupEffectsByStor;
      liveStoresCount--;
      (_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor === void 0 ? void 0 : _cleanupEffectsByStor.forEach(cleanup => cleanup());
      cleanupEffectsByStore.delete(store);
    };
    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve

    if (defaultLoadable.state === 'loading') {
      const notifyDefaultSubscribers = () => {
        var _store$getState$nextT3;
        const state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;
        if (!state.atomValues.has(key)) {
          markRecoilValueModified$2(store, node);
        }
      };
      defaultLoadable.contents.finally(notifyDefaultSubscribers);
    } ///////////////////
    // Run Atom Effects
    ///////////////////

    const effects = (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE;
    if (effects != null) {
      // This state is scoped by Store, since this is in the initAtom() closure
      let initValue = DEFAULT_VALUE$7;
      let isDuringInit = true;
      let isInitError = false;
      let pendingSetSelf = null;
      function getLoadable(recoilValue) {
        // Normally we can just get the current value of another atom.
        // But for our own value we need to check if there is a pending
        // initialized value or get the fallback default value.
        if (isDuringInit && recoilValue.key === key) {
          // Cast T to S
          const retValue = initValue; // flowlint-line unclear-type:off

          return retValue instanceof DefaultValue$2 ? peekAtom(store, initState) // flowlint-line unclear-type:off
          : Recoil_isPromise(retValue) ? loadableWithPromise$2(retValue.then(v => v instanceof DefaultValue$2 ?
          // Cast T to S
          defaultLoadable.toPromise() // flowlint-line unclear-type:off
          : v)) : loadableWithValue$3(retValue);
        }
        return getRecoilValueAsLoadable$4(store, recoilValue);
      }
      function getPromise(recoilValue) {
        return getLoadable(recoilValue).toPromise();
      }
      function getInfo_UNSTABLE(recoilValue) {
        var _store$getState$nextT4;
        const info = peekNodeInfo$3(store, (_store$getState$nextT4 = store.getState().nextTree) !== null && _store$getState$nextT4 !== void 0 ? _store$getState$nextT4 : store.getState().currentTree, recoilValue.key);
        return isDuringInit && recoilValue.key === key && !(initValue instanceof DefaultValue$2) ? {
          ...info,
          isSet: true,
          loadable: getLoadable(recoilValue)
        } : info;
      }
      const setSelf = effect => valueOrUpdater => {
        if (isDuringInit) {
          const currentLoadable = getLoadable(node);
          const currentValue = currentLoadable.state === 'hasValue' ? currentLoadable.contents : DEFAULT_VALUE$7;
          initValue = typeof valueOrUpdater === 'function' ?
          // cast to any because we can't restrict T from being a function without losing support for opaque types
          valueOrUpdater(currentValue) // flowlint-line unclear-type:off
          : valueOrUpdater;
          if (Recoil_isPromise(initValue)) {
            initValue = initValue.then(value => {
              // Avoid calling onSet() when setSelf() initializes with a Promise
              pendingSetSelf = {
                effect,
                value
              };
              return value;
            });
          }
        } else {
          if (Recoil_isPromise(valueOrUpdater)) {
            throw Recoil_err('Setting atoms to async values is not implemented.');
          }
          if (typeof valueOrUpdater !== 'function') {
            pendingSetSelf = {
              effect,
              value: unwrap(valueOrUpdater)
            };
          }
          setRecoilValue$4(store, node, typeof valueOrUpdater === 'function' ? currentValue => {
            const newValue = unwrap(
            // cast to any because we can't restrict T from being a function without losing support for opaque types
            valueOrUpdater(currentValue) // flowlint-line unclear-type:off
            );

            pendingSetSelf = {
              effect,
              value: newValue
            };
            return newValue;
          } : unwrap(valueOrUpdater));
        }
      };
      const resetSelf = effect => () => setSelf(effect)(DEFAULT_VALUE$7);
      const onSet = effect => handler => {
        var _cleanupEffectsByStor2;
        const {
          release
        } = store.subscribeToTransactions(currentStore => {
          var _currentTree$atomValu;

          // eslint-disable-next-line prefer-const
          let {
            currentTree,
            previousTree
          } = currentStore.getState();
          if (!previousTree) {
            Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');
            previousTree = currentTree; // attempt to trundle on
          }

          const newLoadable = (_currentTree$atomValu = currentTree.atomValues.get(key)) !== null && _currentTree$atomValu !== void 0 ? _currentTree$atomValu : defaultLoadable;
          if (newLoadable.state === 'hasValue') {
            var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;
            const newValue = newLoadable.contents;
            const oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;
            const oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$7; // TODO This isn't actually valid, use as a placeholder for now.
            // Ignore atom value changes that were set via setSelf() in the same effect.
            // We will still properly call the handler if there was a subsequent
            // set from something other than an atom effect which was batched
            // with the `setSelf()` call.  However, we may incorrectly ignore
            // the handler if the subsequent batched call happens to set the
            // atom to the exact same value as the `setSelf()`.   But, in that
            // case, it was kind of a noop, so the semantics are debatable..

            if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {
              handler(newValue, oldValue, !currentTree.atomValues.has(key));
            } else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {
              pendingSetSelf = null;
            }
          }
        }, key);
        cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor2 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor2 !== void 0 ? _cleanupEffectsByStor2 : []), release]);
      };
      for (const effect of effects) {
        try {
          const cleanup = effect({
            node,
            storeID: store.storeID,
            parentStoreID_UNSTABLE: store.parentStoreID,
            trigger,
            setSelf: setSelf(effect),
            resetSelf: resetSelf(effect),
            onSet: onSet(effect),
            getPromise,
            getLoadable,
            getInfo_UNSTABLE
          });
          if (cleanup != null) {
            var _cleanupEffectsByStor3;
            cleanupEffectsByStore.set(store, [...((_cleanupEffectsByStor3 = cleanupEffectsByStore.get(store)) !== null && _cleanupEffectsByStor3 !== void 0 ? _cleanupEffectsByStor3 : []), cleanup]);
          }
        } catch (error) {
          initValue = error;
          isInitError = true;
        }
      }
      isDuringInit = false; // Mutate initial state in place since we know there are no other subscribers
      // since we are the ones initializing on first use.

      if (!(initValue instanceof DefaultValue$2)) {
        var _store$getState$nextT5;
        const initLoadable = isInitError ? loadableWithError$2(initValue) : Recoil_isPromise(initValue) ? loadableWithPromise$2(wrapPendingPromise(store, initValue)) : loadableWithValue$3(unwrap(initValue));
        maybeFreezeValueOrPromise(initLoadable.contents);
        initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.
        // This could happen if the atom was first initialized in an action that
        // also updated some other atom's state.

        (_store$getState$nextT5 = store.getState().nextTree) === null || _store$getState$nextT5 === void 0 ? void 0 : _store$getState$nextT5.atomValues.set(key, initLoadable);
      }
    }
    return cleanupAtom;
  }
  function peekAtom(_store, state) {
    var _ref, _state$atomValues$get3;
    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : cachedAnswerForUnvalidatedValue) !== null && _ref !== void 0 ? _ref : defaultLoadable;
  }
  function getAtom(_store, state) {
    if (state.atomValues.has(key)) {
      // Atom value is stored in state:
      return Recoil_nullthrows(state.atomValues.get(key));
    } else if (state.nonvalidatedAtoms.has(key)) {
      // Atom value is stored but needs validation before use.
      // We might have already validated it and have a cached validated value:
      if (cachedAnswerForUnvalidatedValue != null) {
        return cachedAnswerForUnvalidatedValue;
      }
      if (persistence == null) {
        Recoil_expectationViolation(`Tried to restore a persisted value for atom ${key} but it has no persistence settings.`);
        return defaultLoadable;
      }
      const nonvalidatedValue = state.nonvalidatedAtoms.get(key);
      const validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$7);
      const validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$3(validatorResult);
      cachedAnswerForUnvalidatedValue = validatedValueLoadable;
      return cachedAnswerForUnvalidatedValue;
    } else {
      return defaultLoadable;
    }
  }
  function invalidateAtom() {
    cachedAnswerForUnvalidatedValue = undefined;
  }
  function setAtom(_store, state, newValue) {
    // Bail out if we're being set to the existing value, or if we're being
    // reset but have no stored value (validated or unvalidated) to reset from:
    if (state.atomValues.has(key)) {
      const existing = Recoil_nullthrows(state.atomValues.get(key));
      if (existing.state === 'hasValue' && newValue === existing.contents) {
        return new Map();
      }
    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {
      return new Map();
    }
    maybeFreezeValueOrPromise(newValue);
    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use

    return new Map().set(key, loadableWithValue$3(newValue));
  }
  function shouldDeleteConfigOnReleaseAtom() {
    return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;
  }
  const node = registerNode$2({
    key,
    nodeType: 'atom',
    peek: peekAtom,
    get: getAtom,
    set: setAtom,
    init: initAtom,
    invalidate: invalidateAtom,
    shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,
    dangerouslyAllowMutability: options.dangerouslyAllowMutability,
    persistence_UNSTABLE: options.persistence_UNSTABLE ? {
      type: options.persistence_UNSTABLE.type,
      backButton: options.persistence_UNSTABLE.backButton
    } : undefined,
    shouldRestoreFromSnapshots: true,
    retainedBy
  });
  return node;
} // prettier-ignore

function atom(options) {
  if (false) {}
  const {
    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,
    ...restOptions
  } = options;
  const optionsDefault = 'default' in options ?
  // $FlowIssue[incompatible-type] No way to refine in Flow that property is not defined
  options.default : new Promise(() => {});
  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms
  // for now, since scoped atoms don't support async defaults
  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)
  // @fb-only: || (isLoadable(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)
  ) {
    return atomWithFallback({
      ...restOptions,
      default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,
    }); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS
    // @fb-only: && !isPromise(optionsDefault)
    // @fb-only: && !isLoadable(optionsDefault)
    // @fb-only: ) {
    // @fb-only: return scopedAtom<T>({
    // @fb-only: ...restOptions,
    // @fb-only: default: unwrap<T>(optionsDefault),
    // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,
    // @fb-only: });
  } else {
    return baseAtom({
      ...restOptions,
      default: optionsDefault
    });
  }
}
function atomWithFallback(options) {
  const base = atom({
    ...options,
    default: DEFAULT_VALUE$7,
    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : {
      ...options.persistence_UNSTABLE,
      validator: storedValue => storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$7)
    },
    // TODO Hack for now.
    effects: options.effects,
    // flowlint-line unclear-type: off
    effects_UNSTABLE: options.effects_UNSTABLE // flowlint-line unclear-type: off
  });

  const sel = Recoil_selector({
    key: `${options.key}__withFallback`,
    get: ({
      get
    }) => {
      const baseValue = get(base);
      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;
    },
    set: ({
      set
    }, newValue) => set(base, newValue),
    // This selector does not need to cache as it is a wrapper selector
    // and the selector within the wrapper selector will have a cache
    // option by default
    cachePolicy_UNSTABLE: {
      eviction: 'most-recent'
    },
    dangerouslyAllowMutability: options.dangerouslyAllowMutability
  });
  setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));
  return sel;
} // $FlowFixMe[missing-local-annot]

atom.value = value => new WrappedValue$2(value);
var Recoil_atom = atom;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 * @oncall recoil
 */

class MapCache {
  constructor(options) {
    var _options$mapKey;
    es_defineProperty(this, "_map", void 0);
    es_defineProperty(this, "_keyMapper", void 0);
    this._map = new Map();
    this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : v => v;
  }
  size() {
    return this._map.size;
  }
  has(key) {
    return this._map.has(this._keyMapper(key));
  }
  get(key) {
    return this._map.get(this._keyMapper(key));
  }
  set(key, val) {
    this._map.set(this._keyMapper(key), val);
  }
  delete(key) {
    this._map.delete(this._keyMapper(key));
  }
  clear() {
    this._map.clear();
  }
}
var Recoil_MapCache = {
  MapCache
};
var Recoil_MapCache_1 = Recoil_MapCache.MapCache;
var Recoil_MapCache$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  MapCache: Recoil_MapCache_1
});
const {
  LRUCache: LRUCache$2
} = Recoil_LRUCache$1;
const {
  MapCache: MapCache$1
} = Recoil_MapCache$1;
const defaultPolicy$1 = {
  equality: 'reference',
  eviction: 'none',
  maxSize: Infinity
};
function cacheFromPolicy({
  equality = defaultPolicy$1.equality,
  eviction = defaultPolicy$1.eviction,
  maxSize = defaultPolicy$1.maxSize
} = defaultPolicy$1) {
  const valueMapper = getValueMapper$1(equality);
  const cache = getCache(eviction, maxSize, valueMapper);
  return cache;
}
function getValueMapper$1(equality) {
  switch (equality) {
    case 'reference':
      return val => val;
    case 'value':
      return val => Recoil_stableStringify(val);
  }
  throw Recoil_err(`Unrecognized equality policy ${equality}`);
}
function getCache(eviction, maxSize, mapKey) {
  switch (eviction) {
    case 'keep-all':
      return new MapCache$1({
        mapKey
      });
    case 'lru':
      return new LRUCache$2({
        mapKey,
        maxSize: Recoil_nullthrows(maxSize)
      });
    case 'most-recent':
      return new LRUCache$2({
        mapKey,
        maxSize: 1
      });
  }
  throw Recoil_err(`Unrecognized eviction policy ${eviction}`);
}
var Recoil_cacheFromPolicy = cacheFromPolicy;

// @fb-only: import type {ScopeRules} from 'Recoil_ScopedAtom';

const {
  setConfigDeletionHandler: setConfigDeletionHandler$2
} = Recoil_Node;

// Process scopeRules to handle any entries which are functions taking parameters
// prettier-ignore
// @fb-only: function mapScopeRules<P>(
// @fb-only: scopeRules?: ParameterizedScopeRules<P>,
// @fb-only: param: P,
// @fb-only: ): ScopeRules | void {
// @fb-only: return scopeRules?.map(rule =>
// @fb-only: Array.isArray(rule)
// @fb-only: ? rule.map(entry => (typeof entry === 'function' ? entry(param) : entry))
// @fb-only: : rule,
// @fb-only: );
// @fb-only: }

/*
A function which returns an atom based on the input parameter.

Each unique parameter returns a unique atom. E.g.,

  const f = atomFamily(...);
  f({a: 1}) => an atom
  f({a: 2}) => a different atom

This allows components to persist local, private state using atoms.  Each
instance of the component may have a different key, which it uses as the
parameter for a family of atoms; in this way, each component will have
its own atom not shared by other instances.  These state keys may be composed
into children's state keys as well.
*/
function atomFamily(options) {
  var _options$cachePolicyF, _options$cachePolicyF2;
  const atomCache = Recoil_cacheFromPolicy({
    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',
    eviction: 'keep-all'
  }); // Simple atomFamily implementation to cache individual atoms based
  // on the parameter value equality.

  return params => {
    var _stableStringify, _options$effects;
    const cachedAtom = atomCache.get(params);
    if (cachedAtom != null) {
      return cachedAtom;
    }
    const {
      cachePolicyForParams_UNSTABLE,
      ...atomOptions
    } = options;
    const optionsDefault = 'default' in options ?
    // $FlowIssue[incompatible-type] No way to refine in Flow that property is not defined
    options.default : new Promise(() => {});
    const newAtom = Recoil_atom({
      ...atomOptions,
      key: `${options.key}__${(_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}`,
      default: typeof optionsDefault === 'function' ?
      // The default was parameterized
      // Flow doesn't know that T isn't a function, so we need to case to any
      // $FlowIssue[incompatible-use]
      optionsDefault(params) :
      // Default may be a static value, promise, or RecoilValue
      optionsDefault,
      retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE,
      effects: typeof options.effects === 'function' ? options.effects(params) : typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : (_options$effects = options.effects) !== null && _options$effects !== void 0 ? _options$effects : options.effects_UNSTABLE // prettier-ignore
      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(
      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,
      // @fb-only: params,
      // @fb-only: ),
    });

    atomCache.set(params, newAtom);
    setConfigDeletionHandler$2(newAtom.key, () => {
      atomCache.delete(params);
    });
    return newAtom;
  };
}
var Recoil_atomFamily = atomFamily;
const {
  setConfigDeletionHandler: setConfigDeletionHandler$3
} = Recoil_Node;

// Keep in mind the parameter needs to be serializable as a cahche key
// using Recoil_stableStringify

// Add a unique index to each selector in case the cache implementation allows
// duplicate keys based on equivalent stringified parameters
let nextIndex = 0;
/* eslint-disable no-redeclare */

// Return a function that returns members of a family of selectors of the same type
// E.g.,
//
// const s = selectorFamily(...);
// s({a: 1}) => a selector
// s({a: 2}) => a different selector
//
// By default, the selectors are distinguished by distinct values of the
// parameter based on value equality, not reference equality.  This allows using
// object literals or other equivalent objects at callsites to not create
// duplicate cache entries.  This behavior may be overridden with the
// cacheImplementationForParams option.
function selectorFamily(options) {
  var _options$cachePolicyF, _options$cachePolicyF2;
  const selectorCache = Recoil_cacheFromPolicy({
    equality: (_options$cachePolicyF = (_options$cachePolicyF2 = options.cachePolicyForParams_UNSTABLE) === null || _options$cachePolicyF2 === void 0 ? void 0 : _options$cachePolicyF2.equality) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : 'value',
    eviction: 'keep-all'
  });
  return params => {
    var _stableStringify;

    // Throw an error with selector key so that it is clear which
    // selector is causing an error
    let cachedSelector;
    try {
      cachedSelector = selectorCache.get(params);
    } catch (error) {
      throw Recoil_err(`Problem with cache lookup for selector ${options.key}: ${error.message}`);
    }
    if (cachedSelector != null) {
      return cachedSelector;
    }
    const myKey = `${options.key}__selectorFamily/${(_stableStringify = Recoil_stableStringify(params, {
      // It is possible to use functions in parameters if the user uses
      // a cache with reference equality thanks to the incrementing index.
      allowFunctions: true
    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'}/${nextIndex++}`; // Append index in case values serialize to the same key string

    const myGet = callbacks => options.get(params)(callbacks);
    const myCachePolicy = options.cachePolicy_UNSTABLE;
    const retainedBy = typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;
    let newSelector;
    if (options.set != null) {
      const set = options.set;
      const mySet = (callbacks, newValue) => set(params)(callbacks, newValue);
      newSelector = Recoil_selector({
        key: myKey,
        get: myGet,
        set: mySet,
        cachePolicy_UNSTABLE: myCachePolicy,
        dangerouslyAllowMutability: options.dangerouslyAllowMutability,
        retainedBy_UNSTABLE: retainedBy
      });
    } else {
      newSelector = Recoil_selector({
        key: myKey,
        get: myGet,
        cachePolicy_UNSTABLE: myCachePolicy,
        dangerouslyAllowMutability: options.dangerouslyAllowMutability,
        retainedBy_UNSTABLE: retainedBy
      });
    }
    selectorCache.set(params, newSelector);
    setConfigDeletionHandler$3(newSelector.key, () => {
      selectorCache.delete(params);
    });
    return newSelector;
  };
}
/* eslint-enable no-redeclare */

var Recoil_selectorFamily = selectorFamily;

// flowlint-next-line unclear-type:off

const constantSelector = Recoil_selectorFamily({
  key: '__constant',
  get: constant => () => constant,
  cachePolicyForParams_UNSTABLE: {
    equality: 'reference'
  }
}); // Function that returns a selector which always produces the
// same constant value.  It may be called multiple times with the
// same value, based on reference equality, and will provide the
// same selector.

function constSelector(constant) {
  return constantSelector(constant);
}
var Recoil_constSelector = constSelector;

// flowlint-next-line unclear-type:off

const throwingSelector = Recoil_selectorFamily({
  key: '__error',
  get: message => () => {
    throw Recoil_err(message);
  },
  // TODO Why?
  cachePolicyForParams_UNSTABLE: {
    equality: 'reference'
  }
}); // Function that returns a selector which always throws an error
// with the provided message.

function errorSelector(message) {
  return throwingSelector(message);
}
var Recoil_errorSelector = errorSelector;

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Wraps another recoil value and prevents writing to it.
 *
 * 
 * @format
 * @oncall recoil
 */

function readOnlySelector(atom) {
  // flowlint-next-line unclear-type: off
  return atom;
}
var Recoil_readOnlySelector = readOnlySelector;
const {
  loadableWithError: loadableWithError$3,
  loadableWithPromise: loadableWithPromise$3,
  loadableWithValue: loadableWithValue$4
} = Recoil_Loadable$1;

/////////////////
//  TRUTH TABLE
/////////////////
// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled
//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise
//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise
//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]
//
//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise
//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]
//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]
// Issue parallel requests for all dependencies and return the current
// status if they have results, have some error, or are still pending.

function concurrentRequests(getRecoilValue, deps) {
  const results = Array(deps.length).fill(undefined);
  const exceptions = Array(deps.length).fill(undefined);
  for (const [i, dep] of deps.entries()) {
    try {
      results[i] = getRecoilValue(dep);
    } catch (e) {
      // exceptions can either be Promises of pending results or real errors
      exceptions[i] = e;
    }
  }
  return [results, exceptions];
}
function isError(exp) {
  return exp != null && !Recoil_isPromise(exp);
}
function unwrapDependencies(dependencies) {
  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(key => dependencies[key]);
}
function wrapResults(dependencies,
/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's
 * LTI update could not be added via codemod */
results) {
  return Array.isArray(dependencies) ? results :
  // Object.getOwnPropertyNames() has consistent key ordering with ES6
  Object.getOwnPropertyNames(dependencies).reduce((out, key, idx) => ({
    ...out,
    [key]: results[idx]
  }), {});
}
function wrapLoadables(dependencies, results, exceptions) {
  const output = exceptions.map((exception, idx) => exception == null ? loadableWithValue$4(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));
  return wrapResults(dependencies, output);
}
function combineAsyncResultsWithSyncResults(syncResults, asyncResults) {
  return asyncResults.map((result, idx) =>
  /**
   * it's important we use === undefined as opposed to == null, because the
   * resolved value of the async promise could be `null`, in which case we
   * don't want to use syncResults[idx], which would be undefined. If async
   * promise resolves to `undefined`, that's ok because `syncResults[idx]`
   * will also be `undefined`. That's a little hacky, but it works.
   */
  result === undefined ? syncResults[idx] : result);
} // Selector that requests all dependencies in parallel and immediately returns
// current results without waiting.

const waitForNone = Recoil_selectorFamily({
  key: '__waitForNone',
  get: dependencies => ({
    get
  }) => {
    // Issue requests for all dependencies in parallel.
    const deps = unwrapDependencies(dependencies);
    const [results, exceptions] = concurrentRequests(get, deps); // Always return the current status of the results; never block.

    return wrapLoadables(dependencies, results, exceptions);
  },
  dangerouslyAllowMutability: true
}); // Selector that requests all dependencies in parallel and waits for at least
// one to be available before returning results.  It will only error if all
// dependencies have errors.

const waitForAny = Recoil_selectorFamily({
  key: '__waitForAny',
  get: dependencies => ({
    get
  }) => {
    // Issue requests for all dependencies in parallel.
    // Exceptions can either be Promises of pending results or real errors
    const deps = unwrapDependencies(dependencies);
    const [results, exceptions] = concurrentRequests(get, deps); // If any results are available, value or error, return the current status

    if (exceptions.some(exp => !Recoil_isPromise(exp))) {
      return wrapLoadables(dependencies, results, exceptions);
    } // Otherwise, return a promise that will resolve when the next result is
    // available, whichever one happens to be next.  But, if all pending
    // dependencies end up with errors, then reject the promise.

    return new Promise(resolve => {
      for (const [i, exp] of exceptions.entries()) {
        if (Recoil_isPromise(exp)) {
          exp.then(result => {
            results[i] = result;
            exceptions[i] = undefined;
            resolve(wrapLoadables(dependencies, results, exceptions));
          }).catch(error => {
            exceptions[i] = error;
            resolve(wrapLoadables(dependencies, results, exceptions));
          });
        }
      }
    });
  },
  dangerouslyAllowMutability: true
}); // Selector that requests all dependencies in parallel and waits for all to be
// available before returning a value.  It will error if any dependencies error.

const waitForAll = Recoil_selectorFamily({
  key: '__waitForAll',
  get: dependencies => ({
    get
  }) => {
    // Issue requests for all dependencies in parallel.
    // Exceptions can either be Promises of pending results or real errors
    const deps = unwrapDependencies(dependencies);
    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results

    if (exceptions.every(exp => exp == null)) {
      return wrapResults(dependencies, results);
    } // If we have any errors, throw the first error

    const error = exceptions.find(isError);
    if (error != null) {
      throw error;
    } // Otherwise, return a promise that will resolve when all results are available

    return Promise.all(exceptions).then(exceptionResults => wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults)));
  },
  dangerouslyAllowMutability: true
});
const waitForAllSettled = Recoil_selectorFamily({
  key: '__waitForAllSettled',
  get: dependencies => ({
    get
  }) => {
    // Issue requests for all dependencies in parallel.
    // Exceptions can either be Promises of pending results or real errors
    const deps = unwrapDependencies(dependencies);
    const [results, exceptions] = concurrentRequests(get, deps); // If all results are available, return the results

    if (exceptions.every(exp => !Recoil_isPromise(exp))) {
      return wrapLoadables(dependencies, results, exceptions);
    } // Wait for all results to settle

    return Promise.all(exceptions.map((exp, i) => Recoil_isPromise(exp) ? exp.then(result => {
      results[i] = result;
      exceptions[i] = undefined;
    }).catch(error => {
      results[i] = undefined;
      exceptions[i] = error;
    }) : null)) // Then wrap them as loadables
    .then(() => wrapLoadables(dependencies, results, exceptions));
  },
  dangerouslyAllowMutability: true
});
const noWait = Recoil_selectorFamily({
  key: '__noWait',
  get: dependency => ({
    get
  }) => {
    try {
      return Recoil_selector.value(loadableWithValue$4(get(dependency)));
    } catch (exception) {
      return Recoil_selector.value(Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception));
    }
  },
  dangerouslyAllowMutability: true
});
var Recoil_WaitFor = {
  waitForNone,
  waitForAny,
  waitForAll,
  waitForAllSettled,
  noWait
};
const {
  RecoilLoadable
} = Recoil_Loadable$1;
const {
  DefaultValue: DefaultValue$3
} = Recoil_Node;
const {
  RecoilRoot: RecoilRoot$2,
  useRecoilStoreID: useRecoilStoreID$1
} = Recoil_RecoilRoot;
const {
  isRecoilValue: isRecoilValue$5
} = Recoil_RecoilValue$1;
const {
  retentionZone: retentionZone$1
} = Recoil_RetentionZone;
const {
  freshSnapshot: freshSnapshot$2
} = Recoil_Snapshot$1;
const {
  useRecoilState: useRecoilState$1,
  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,
  useRecoilStateLoadable: useRecoilStateLoadable$1,
  useRecoilValue: useRecoilValue$1,
  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,
  useRecoilValueLoadable: useRecoilValueLoadable$1,
  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,
  useResetRecoilState: useResetRecoilState$1,
  useSetRecoilState: useSetRecoilState$1
} = Recoil_Hooks;
const {
  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,
  useRecoilSnapshot: useRecoilSnapshot$1,
  useRecoilTransactionObserver: useRecoilTransactionObserver$1
} = Recoil_SnapshotHooks;
const {
  useRecoilCallback: useRecoilCallback$1
} = Recoil_useRecoilCallback;
const {
  noWait: noWait$1,
  waitForAll: waitForAll$1,
  waitForAllSettled: waitForAllSettled$1,
  waitForAny: waitForAny$1,
  waitForNone: waitForNone$1
} = Recoil_WaitFor;
var Recoil_index = {
  // Types
  DefaultValue: DefaultValue$3,
  isRecoilValue: isRecoilValue$5,
  RecoilLoadable,
  // Global Recoil environment settiongs
  RecoilEnv: Recoil_RecoilEnv,
  // Recoil Root
  RecoilRoot: RecoilRoot$2,
  useRecoilStoreID: useRecoilStoreID$1,
  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,
  // Atoms/Selectors
  atom: Recoil_atom,
  selector: Recoil_selector,
  // Convenience Atoms/Selectors
  atomFamily: Recoil_atomFamily,
  selectorFamily: Recoil_selectorFamily,
  constSelector: Recoil_constSelector,
  errorSelector: Recoil_errorSelector,
  readOnlySelector: Recoil_readOnlySelector,
  // Concurrency Helpers for Atoms/Selectors
  noWait: noWait$1,
  waitForNone: waitForNone$1,
  waitForAny: waitForAny$1,
  waitForAll: waitForAll$1,
  waitForAllSettled: waitForAllSettled$1,
  // Hooks for Atoms/Selectors
  useRecoilValue: useRecoilValue$1,
  useRecoilValueLoadable: useRecoilValueLoadable$1,
  useRecoilState: useRecoilState$1,
  useRecoilStateLoadable: useRecoilStateLoadable$1,
  useSetRecoilState: useSetRecoilState$1,
  useResetRecoilState: useResetRecoilState$1,
  useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,
  useRecoilRefresher_UNSTABLE: Recoil_useRecoilRefresher,
  useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE: useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE$1,
  useRecoilValue_TRANSITION_SUPPORT_UNSTABLE: useRecoilValue_TRANSITION_SUPPORT_UNSTABLE$1,
  useRecoilState_TRANSITION_SUPPORT_UNSTABLE: useRecoilState_TRANSITION_SUPPORT_UNSTABLE$1,
  // Hooks for complex operations
  useRecoilCallback: useRecoilCallback$1,
  useRecoilTransaction_UNSTABLE: Recoil_useRecoilTransaction,
  // Snapshots
  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,
  useRecoilSnapshot: useRecoilSnapshot$1,
  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,
  snapshot_UNSTABLE: freshSnapshot$2,
  // Memory Management
  useRetain: Recoil_useRetain,
  retentionZone: retentionZone$1
};
var Recoil_index_1 = Recoil_index.DefaultValue;
var Recoil_index_2 = Recoil_index.isRecoilValue;
var Recoil_index_3 = Recoil_index.RecoilLoadable;
var Recoil_index_4 = Recoil_index.RecoilEnv;
var Recoil_index_5 = Recoil_index.RecoilRoot;
var Recoil_index_6 = Recoil_index.useRecoilStoreID;
var Recoil_index_7 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;
var Recoil_index_8 = Recoil_index.atom;
var Recoil_index_9 = Recoil_index.selector;
var Recoil_index_10 = Recoil_index.atomFamily;
var Recoil_index_11 = Recoil_index.selectorFamily;
var Recoil_index_12 = Recoil_index.constSelector;
var Recoil_index_13 = Recoil_index.errorSelector;
var Recoil_index_14 = Recoil_index.readOnlySelector;
var Recoil_index_15 = Recoil_index.noWait;
var Recoil_index_16 = Recoil_index.waitForNone;
var Recoil_index_17 = Recoil_index.waitForAny;
var Recoil_index_18 = Recoil_index.waitForAll;
var Recoil_index_19 = Recoil_index.waitForAllSettled;
var Recoil_index_20 = Recoil_index.useRecoilValue;
var Recoil_index_21 = Recoil_index.useRecoilValueLoadable;
var Recoil_index_22 = Recoil_index.useRecoilState;
var Recoil_index_23 = Recoil_index.useRecoilStateLoadable;
var Recoil_index_24 = Recoil_index.useSetRecoilState;
var Recoil_index_25 = Recoil_index.useResetRecoilState;
var Recoil_index_26 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;
var Recoil_index_27 = Recoil_index.useRecoilRefresher_UNSTABLE;
var Recoil_index_28 = Recoil_index.useRecoilValueLoadable_TRANSITION_SUPPORT_UNSTABLE;
var Recoil_index_29 = Recoil_index.useRecoilValue_TRANSITION_SUPPORT_UNSTABLE;
var Recoil_index_30 = Recoil_index.useRecoilState_TRANSITION_SUPPORT_UNSTABLE;
var Recoil_index_31 = Recoil_index.useRecoilCallback;
var Recoil_index_32 = Recoil_index.useRecoilTransaction_UNSTABLE;
var Recoil_index_33 = Recoil_index.useGotoRecoilSnapshot;
var Recoil_index_34 = Recoil_index.useRecoilSnapshot;
var Recoil_index_35 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;
var Recoil_index_36 = Recoil_index.snapshot_UNSTABLE;
var Recoil_index_37 = Recoil_index.useRetain;
var Recoil_index_38 = Recoil_index.retentionZone;
/* harmony default export */ var recoil_es = ((/* unused pure expression or super */ null && (Recoil_index)));

;// CONCATENATED MODULE: ./src/widgets/root_widget_wrapper.tsx



var root_widget_wrapper_excluded = ["children"];



// Components


// QueryClient


// Providers





// Router


// Utils


// Recoil


// Types

// TODO: change constants
var apiUrl = "https://restapi.bookvisit.com";
var languageId = "1";
var RootWidgetWrapper = function RootWidgetWrapper(_ref) {
  var children = _ref.children,
    props = objectWithoutProperties_objectWithoutProperties(_ref, root_widget_wrapper_excluded);
  var queryClient = new QueryClient();
  var _React$useState = react.useState(true),
    _React$useState2 = slicedToArray_slicedToArray(_React$useState, 2),
    fetchingToken = _React$useState2[0],
    setFetchingToken = _React$useState2[1];
  var _React$useState3 = react.useState(),
    _React$useState4 = slicedToArray_slicedToArray(_React$useState3, 2),
    apiToken = _React$useState4[0],
    setApiToken = _React$useState4[1];
  var isTokenExpired = function isTokenExpired() {
    var cachedToken = localStorage.getItem("bv_dev_jwt");
    if (!cachedToken) {
      return true;
    }
    var parsedJwt = helpers_parseJwt(cachedToken);
    if ("exp" in parsedJwt) {
      return Date.now() >= parsedJwt.exp * 1000;
    }
    return true;
  };
  var fetchToken = /*#__PURE__*/function () {
    var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(force) {
      var result, t;
      return regenerator_default().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!(!force && !isTokenExpired())) {
              _context.next = 4;
              break;
            }
            setApiToken(localStorage.getItem("bv_dev_jwt"));
            _context.next = 24;
            break;
          case 4:
            _context.prev = 4;
            _context.next = 7;
            return fetch("".concat(apiUrl, "/api/authentication/online-token?organizationId=0&languageId=").concat(languageId), {
              method: "get",
              credentials: "include",
              mode: "cors"
            });
          case 7:
            result = _context.sent;
            if (!result.ok) {
              _context.next = 16;
              break;
            }
            _context.next = 11;
            return result.text();
          case 11:
            t = _context.sent;
            localStorage.setItem("bv_dev_jwt", t);
            setApiToken(t);
            _context.next = 19;
            break;
          case 16:
            _context.next = 18;
            return result.text();
          case 18:
            throw _context.sent;
          case 19:
            _context.next = 24;
            break;
          case 21:
            _context.prev = 21;
            _context.t0 = _context["catch"](4);
            console.error("failed to fetch token, error: ".concat(JSON.stringify(_context.t0)));
          case 24:
            setFetchingToken(false);
          case 25:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[4, 21]]);
    }));
    return function fetchToken(_x) {
      return _ref2.apply(this, arguments);
    };
  }();
  var onSubmitHandler = function onSubmitHandler(e, apiFunc) {
    e.preventDefault();

    //   TODO: Send data to endpoint
    if (props.openOption === "redirect") {
      //   Redirect...
    } else {
      //   New window...
    }
  };
  react.useEffect(function () {
    fetchToken(false);
  }, []);
  if (fetchingToken) return /*#__PURE__*/react.createElement(react.Fragment, null);
  return /*#__PURE__*/react.createElement(WidgetForm, {
    onSubmit: onSubmitHandler
  }, /*#__PURE__*/react.createElement(react.Suspense, {
    fallback: null
  }, /*#__PURE__*/react.createElement(HashRouter, null, /*#__PURE__*/react.createElement(MantineProvider, null, /*#__PURE__*/react.createElement(ModalsProvider, null, /*#__PURE__*/react.createElement(es.QueryClientProvider, {
    client: queryClient
  }, /*#__PURE__*/react.createElement(APIContextProvider, {
    channelId: props.channelId,
    apiUrl: apiUrl,
    languageId: "1",
    multiPropertyId: props.channelId,
    token: apiToken,
    currencyCode: "SEK",
    firstDayOfWeek: "Monday",
    languageCulture: "en-US",
    specificCulture: "en-GB"
  }, /*#__PURE__*/react.createElement(TranslationsContextProvider, null, /*#__PURE__*/react.createElement(Recoil_index_5, null, children)))))))));
};
;// CONCATENATED MODULE: ./src/reservation/default_style.ts

var subtitleFontSize = "20";
var bodyBoldFontWeight = "700";
var buttonTextTransform = "initial";
var bodyFontSize = "15";
var bodyFontFamily = "'Open Sans', sans-serif";
var mainRoundedCorners = "0";
var bodyColor = "000";
var buttonBackground = "666666";
var buttonBorderColor = "666666";
var buttonColor = "fff";
var lightAccentColor = "F3F0ED";
var titleColor = "000";
var linkColor = "336699";
var dividerBorderColor = "ccc";
var darkAccentColor = "999999";
var frameworkBackground = "fff";

/**
 * 
 * @param name Name of the property.
 * @param default The default value to use if the property has not been configured in backoffice and no preferred or fallback property is used.
 * @param preferredPropName The name of another property. If that property has been configured in backoffice, then that value will be used.
 * @param fallbackPropName The name of another property. If the preferredPropName property has not been configured in backoffice but the fallbackPropName one has, that value will be used.
 * @returns 
 */

var BV_MediaQueries = {
  veryLarge: "(min-width: 1200px)",
  large: "(min-width: 1200px)",
  small: "(max-width: 1199px)",
  verySmall: "(max-width: 600px)",
  max1000px: "(max-width: 1000px)"
};
var DefaultStyle = [{
  name: "inputColor",
  default: bodyColor,
  preferredPropName: "bodyColor"
}, {
  name: "frameworkHeaderColor",
  default: undefined
}, {
  name: "frameworkBackground",
  default: frameworkBackground
}, {
  name: "frameworkMaxWidth",
  default: "1200px"
}, {
  name: "mainRoundedCorners",
  default: mainRoundedCorners
}, {
  name: "columnsGutter",
  default: "45px"
}, {
  name: "dividerBorderWidth",
  default: "1px"
}, {
  name: "dividerBorderColor",
  default: dividerBorderColor
}, {
  name: "framworkPaddingMobile",
  default: "20px"
}, {
  name: "frameworkPaddingDesktop",
  default: "30px"
}, {
  name: "spacerLgMobile",
  default: "30px"
}, {
  name: "spacerLgDesktop",
  default: "40px"
}, {
  name: "bodyFontFamily",
  default: bodyFontFamily
}, {
  name: "bodyFontSize",
  default: bodyFontSize
}, {
  name: "bodyColor",
  default: bodyColor
}, {
  name: "bodyLineHeight",
  default: "1.5"
}, {
  name: "bodyFontWeight",
  default: "400"
}, {
  name: "bodyBoldFontWeight",
  default: bodyBoldFontWeight
}, {
  name: "smallFontSize",
  default: "13",
  preferredPropName: "bodyFontSize"
}, {
  name: "bodyLargeFontSize",
  default: bodyFontSize,
  preferredPropName: "bodyFontSize",
  transform: function transform(_ref) {
    var value = _ref.value,
      isConfiguredInAdmin = _ref.isConfiguredInAdmin;
    if (isConfiguredInAdmin) {
      //dont mutate this value if its the configured bodyLargeFontSize from admin
      return value;
    }
    var numberValue = value.replace(/\D/g, '');
    var newValue = +numberValue + 2;
    return "".concat(newValue);
  }
}, {
  name: "descriptionFontSize",
  default: "16"
}, {
  name: "descriptionLineHeight",
  default: "1.5"
}, {
  name: "bodyMutedOpacity",
  default: ".7"
}, {
  name: "titleFontFamily",
  default: "'Open Sans', sans-serif"
}, {
  name: "titleFontSize",
  default: "26"
}, {
  name: "titleFontWeight",
  default: "bold"
}, {
  name: "titleTextTransform",
  default: "initial"
}, {
  name: "titleColor",
  default: titleColor
}, {
  name: "titleLineHeight",
  default: "1.3"
}, {
  name: "titleLetterSpacing",
  default: "0"
}, {
  name: "subtitleFontFamily",
  default: "'Open Sans', sans-serif"
}, {
  name: "subtitleFontSize",
  default: subtitleFontSize
}, {
  name: "subtitleFontSmaller",
  default: subtitleFontSize,
  preferredPropName: "subtitleFontSize"
}, {
  name: "subtitleFontWeight",
  default: "bold"
}, {
  name: "subtitleTextTransform",
  default: "initial"
}, {
  name: "subtitleColor",
  default: "000"
}, {
  name: "subtitleLineHeight",
  default: "1.3"
}, {
  name: "subtitleLetterSpacing",
  default: "0"
}, {
  name: "buttonBackground",
  default: darkAccentColor,
  preferredPropName: "darkAccentColor"
}, {
  name: "buttonBorderColor",
  default: darkAccentColor,
  fallbackPropName: "darkAccentColor",
  preferredPropName: "buttonBackground"
}, {
  name: "buttonTextTransform",
  default: buttonTextTransform
}, {
  name: "buttonFontWeight",
  default: bodyBoldFontWeight,
  preferredPropName: "bodyBoldFontWeight"
}, {
  name: "buttonFontSize",
  default: bodyFontSize,
  preferredPropName: "bodyFontSize"
}, {
  name: "buttonFontFamily",
  default: bodyFontFamily,
  preferredPropName: "bodyFontFamily"
}, {
  name: "buttonColor",
  default: buttonColor
}, {
  name: "buttonRoundedCorners",
  default: "3",
  preferredPropName: "mainRoundedCorners"
}, {
  name: "buttonBorderWidth",
  default: "1px"
}, {
  name: "buttonLetterSpacing",
  default: "0"
}, {
  name: "inputBorderWidth",
  default: "1px"
}, {
  name: "inputTextBoxShadow",
  default: "none"
}, {
  name: "inputBorderColor",
  default: "#ccc"
}, {
  name: "inputBackground",
  default: "#fff"
}, {
  name: "inputRoundedCorners",
  default: mainRoundedCorners,
  preferredPropName: "mainRoundedCorners"
}, {
  name: "sidebarRoundedCorners",
  default: mainRoundedCorners,
  preferredPropName: "mainRoundedCorners"
}, {
  name: "sidebarBorderColor",
  default: "ccc"
}, {
  name: "sidebarBorderWidth",
  default: "0px"
}, {
  name: "sidebarColor",
  default: bodyColor,
  preferredPropName: "bodyColor"
}, {
  name: "sidebarBoxShadow",
  default: "none"
}, {
  name: "sidebarHeaderColor",
  default: "fff"
}, {
  name: "sidebarHeaderBackground",
  default: darkAccentColor,
  fallbackPropName: "darkAccentColor"
}, {
  name: "sidebarHeaderBottomBorderWidth",
  default: "0"
}, {
  name: "sidebarHeaderBottomBorderColor",
  default: "999"
}, {
  name: "sidebarContentBackground",
  default: lightAccentColor
}, {
  name: "sidebarSubtitleColor",
  default: "000"
}, {
  name: "sidebarSubtitleBackground",
  default: "e6e6e6"
}, {
  name: "sidebarButtonBackground",
  default: buttonBackground,
  preferredPropName: "buttonBackground",
  fallbackPropName: "darkAccentColor"
}, {
  name: "sidebarButtonBorderColor",
  default: buttonBorderColor,
  preferredPropName: "buttonBorderColor",
  fallbackPropName: "darkAccentColor"
}, {
  name: "sidebarButtonColor",
  default: buttonColor,
  preferredPropName: "buttonColor"
}, {
  name: "calendarMarkerColor",
  default: darkAccentColor,
  preferredPropName: "darkAccentColor"
}, {
  name: "calendarMarkerWaitingListColor",
  default: "5e9c9e"
}, {
  name: "calendarMarkerSisterHotelColor",
  default: "ffc485"
}, {
  name: "calendarSelectedDayColor",
  default: "fff"
}, {
  name: "linkColor",
  default: linkColor,
  fallbackPropName: "darkAccentColor"
}, {
  name: "lightAccentColor",
  default: lightAccentColor
}, {
  name: "darkAccentColor",
  default: darkAccentColor
}, {
  name: "accentDarkFontColor",
  default: "fff"
}, {
  name: "selectedDarkFontColor",
  default: "fff",
  fallbackPropName: "accentDarkFontColor"
}, {
  name: "darkSelectedColor",
  default: "339900",
  fallbackPropName: "darkAccentColor"
}, {
  //REWARDCARD BACKGROUND
  name: "colorRewardLight",
  default: lightAccentColor,
  fallbackPropName: "cardBackground",
  transform: function transform(_ref2) {
    var fallbackPropValue = _ref2.fallbackPropValue,
      isConfiguredInAdmin = _ref2.isConfiguredInAdmin,
      value = _ref2.value;
    return isConfiguredInAdmin ? value : fallbackPropValue !== null && fallbackPropValue !== void 0 ? fallbackPropValue : lightAccentColor;
  }
}, {
  //REWARDCARD COLOR
  name: "colorRewardDark",
  default: bodyColor,
  fallbackPropName: "cardColor",
  transform: function transform(_ref3) {
    var fallbackPropValue = _ref3.fallbackPropValue,
      isConfiguredInAdmin = _ref3.isConfiguredInAdmin,
      value = _ref3.value;
    return isConfiguredInAdmin ? value : fallbackPropValue !== null && fallbackPropValue !== void 0 ? fallbackPropValue : bodyColor;
  }
}, {
  name: "colorMessageLight",
  default: "fbebb3"
}, {
  name: "colorNotAvailLight",
  default: "f5cdcd"
}, {
  name: "offerColorDark",
  default: "cc0000"
}, {
  name: "validDarkColor",
  default: "339900"
}, {
  name: "invalidDarkColor",
  default: "f01919"
}, {
  name: "topSearchBackgroundColor",
  default: "fff"
}, {
  name: "topSearchColor",
  default: "000"
}, {
  name: "topSearchStepBorderColor",
  default: "d7d7d7"
}, {
  name: "popoutRoundedCorners",
  default: mainRoundedCorners,
  preferredPropName: "mainRoundedCorners"
}, {
  name: "popoutBoxShadow",
  default: "0 1px 4px rgba(0,0,0,0.4)"
}, {
  name: "popoutBackground",
  default: "fff"
}, {
  name: "popoutColor",
  default: bodyColor,
  preferredPropName: "bodyColor"
}, {
  name: "cardBackground",
  default: lightAccentColor,
  preferredPropName: "lightAccentColor"
}, {
  name: "cardColor",
  default: bodyColor,
  preferredPropName: "bodyColor"
}, {
  name: "cardTitleColor",
  default: titleColor,
  preferredPropName: "titleColor"
}, {
  name: "cardLinkColor",
  default: linkColor,
  preferredPropName: "linkColor",
  fallbackPropName: "darkAccentColor"
}, {
  name: "cardDividerColor",
  default: dividerBorderColor,
  preferredPropName: "dividerBorderColor"
}, {
  name: "cardInnerBackground",
  default: "#FFFFFF"
}, {
  name: "cardBorderWidth",
  default: "0"
}, {
  name: "cardBorderRadius",
  default: mainRoundedCorners,
  preferredPropName: "mainRoundedCorners"
}, {
  name: "sidebarWidth",
  default: "350px"
}, {
  name: "mainVerticalPadding",
  default: "30px"
}, {
  name: "mainHorizontalPadding",
  default: "20px"
}, {
  name: "bookingBorderColor",
  default: "#aaa"
}, {
  name: "bookingBorderWidth",
  default: "1px"
}, {
  name: "bookingDividerBorderWidth",
  default: "1px"
}, {
  name: "bookingBoxBackgroundColor",
  default: "#fff"
}, {
  name: "bookingBoxShadow",
  default: "none"
}, {
  name: "bookingBorderRadius",
  default: "0"
}, {
  name: "stepCounterBackground",
  default: "#f0f0f0"
}, {
  name: "stepCounterTopPadding",
  default: "10px"
}, {
  name: "stepCounterBottomPadding",
  default: "10px"
}, {
  name: "stepCounterColor",
  default: "#ccc"
}, {
  name: "stepCounterActiveColor",
  default: "#000"
}, {
  name: "stepCounterLinkColor",
  default: "#336699"
}, {
  name: "stepCounterBottomBorderWidth",
  default: "0"
}, {
  name: "stepCounterBottomBorderColor",
  default: "#ccc"
}, {
  name: "deviceLarge",
  default: "1000px"
}, {
  name: "deviceSmall",
  default: "750px"
}, {
  name: "deviceXSmall",
  default: "500px"
}, {
  name: "widgetPlatePadding",
  default: "0"
}, {
  name: "widgetPlateBackground",
  default: "none"
}, {
  name: "widgetPlateBorderRadius",
  default: "none"
}, {
  name: "widgetPlateColor",
  default: "#000"
}, {
  name: "widgetSectionBorderWidth",
  default: "1px"
}, {
  name: "widgetSectionBorderColor",
  default: "#ccc"
}, {
  name: "validLightColor",
  default: "#eaf5e5"
}, {
  name: "invalidLightColor",
  default: "#fde4e4"
}, {
  name: "colorScore",
  default: "#44b480"
}, {
  name: "lightSelectedColor",
  default: "#dfe8c9"
}, {
  name: "colorIncludedLight",
  default: "#e8edd4"
}, {
  name: "colorIncludedDark",
  default: "#32730a"
}, {
  name: "colorCalendarSelected",
  default: newShade("#999999", -20)
}, {
  name: "summaryBarColor",
  default: "#999999"
}, {
  name: "buttonBackground50to1",
  default: "#666666"
}, {
  name: "buttonBackground50to2",
  default: "#666666"
}, {
  name: "buttonBackground100",
  default: "#666666"
}, {
  name: "popoutBorderColor",
  default: "#ccc"
}, {
  name: "popoutBorderWidth",
  default: "0px"
}, {
  name: "formColor",
  default: bodyColor,
  preferredPropName: "inputColor",
  transform: function transform(_ref4) {
    var value = _ref4.value,
      isConfiguredInAdmin = _ref4.isConfiguredInAdmin,
      preferredPropValue = _ref4.preferredPropValue;
    if (!isConfiguredInAdmin && preferredPropValue) {
      return preferredPropValue;
    }
    return value;
  }
}, {
  name: "formBackground",
  default: "#fff",
  preferredPropName: "inputBackground"
}, {
  name: "formBorderColor",
  default: "#ccc",
  preferredPropName: "inputBorderColor"
}, {
  name: "sidebarLinkColor",
  preferredPropName: "linkColor",
  transform: function transform(_ref5) {
    var value = _ref5.value,
      isConfiguredInAdmin = _ref5.isConfiguredInAdmin,
      preferredPropValue = _ref5.preferredPropValue;
    if (!isConfiguredInAdmin && preferredPropValue) {
      return preferredPropValue;
    }
    return value;
  }
}];
;// CONCATENATED MODULE: ./src/shared_components/jshelpers.ts


function jshelpers_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = jshelpers_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function jshelpers_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return jshelpers_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return jshelpers_arrayLikeToArray(o, minLen); }
function jshelpers_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function jshelpers_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function jshelpers_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? jshelpers_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : jshelpers_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// @ts-nocheck


function propToHSL(prop, hsla, brightness) {
  if (!hsla[prop]) {
    return;
  }
  var color = hexToHSLA("#".concat(hsla[prop]));
  brightness[prop] = color.isDark ? "dark" : "light";
  hsla[prop] = color.color;
}
function replaceValues(arr1, arr2) {
  var returnArray = jshelpers_objectSpread({}, arr1);
  for (var _i = 0, _Object$entries = Object.entries(returnArray); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 1),
      key = _Object$entries$_i[0];
    var lowercaseKey = key.toLowerCase();
    if (arr2[key]) {
      returnArray[key] = arr2[key];
    }
    if ((lowercaseKey.includes("color") || lowercaseKey.includes("background")) && returnArray[key] && !returnArray[key].includes("#")) {
      returnArray[key] = "#".concat(returnArray[key]);
    }
  }
  for (var _i2 = 0, _Object$entries2 = Object.entries(arr2); _i2 < _Object$entries2.length; _i2++) {
    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 1),
      _key = _Object$entries2$_i[0];
    if (!returnArray[_key]) {
      returnArray[_key] = arr2[_key];
    }
  }
  return returnArray;
}
function buildCSS(channelCSS) {
  var finalCSS = jshelpers_objectSpread({}, channelCSS);

  //IF NOT CONFIGURED FROM ADMIN, SET DEFAULT VALUES
  var _iterator = jshelpers_createForOfIteratorHelper(DefaultStyle.filter(function (x) {
      return x.default !== undefined && x.default !== null;
    })),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var prop = _step.value;
      var fromAdmin = finalCSS[prop.name];
      if (fromAdmin === null || fromAdmin === undefined) {
        finalCSS[prop.name] = prop.default;
      }
    }

    //IF FALLBACKVALUE IS CONFIGURED, USE THAT (IF CONFIGURED FROM ADMIN)
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = jshelpers_createForOfIteratorHelper(DefaultStyle.filter(function (x) {
      return x.fallbackPropName !== undefined && x.fallbackPropName !== null;
    })),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _prop = _step2.value;
      var fallbackPropValue = channelCSS[_prop.fallbackPropName];
      var _fromAdmin = channelCSS[_prop.name];
      if ((_fromAdmin === null || _fromAdmin === undefined) && fallbackPropValue !== null && fallbackPropValue !== undefined) {
        finalCSS[_prop.name] = fallbackPropValue;
      }
    }

    //IF PREFERRED PROP VALUE IS CONFIGURED, USE THAT (IF CONFIGURED FROM ADMIN)
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  var _iterator3 = jshelpers_createForOfIteratorHelper(DefaultStyle.filter(function (x) {
      return x.preferredPropName !== undefined && x.preferredPropName !== null;
    })),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var _prop2 = _step3.value;
      var preferredPropValue = channelCSS[_prop2.preferredPropName];
      var _fromAdmin2 = channelCSS[_prop2.name];
      if ((_fromAdmin2 === null || _fromAdmin2 === undefined) && preferredPropValue !== null && preferredPropValue !== undefined) {
        finalCSS[_prop2.name] = preferredPropValue;
      }
    }

    //APPLY TRANSFORMS
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  var _iterator4 = jshelpers_createForOfIteratorHelper(DefaultStyle.filter(function (x) {
      return x.transform !== undefined && x.transform !== null;
    })),
    _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
      var _prop3 = _step4.value;
      var _fromAdmin3 = channelCSS[_prop3.name];
      var isConfiguredInAdmin = _fromAdmin3 !== null && _fromAdmin3 !== undefined;
      var currentValue = finalCSS[_prop3.name];
      var _preferredPropValue = finalCSS[_prop3.preferredPropName];
      var _fallbackPropValue = finalCSS[_prop3.fallbackPropName];
      if (currentValue !== null) {
        finalCSS[_prop3.name] = _prop3.transform({
          value: currentValue,
          isConfiguredInAdmin: isConfiguredInAdmin,
          preferredPropValue: _preferredPropValue,
          fallbackPropValue: _fallbackPropValue
        });
      }
    }

    //ADD THE CORRECT PREFIX/SUFFIX FOR FONTS, COLORS ETC.
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  for (var _i3 = 0, _Object$entries3 = Object.entries(finalCSS); _i3 < _Object$entries3.length; _i3++) {
    var _Object$entries3$_i = slicedToArray_slicedToArray(_Object$entries3[_i3], 2),
      key = _Object$entries3$_i[0],
      value = _Object$entries3$_i[1];
    if (finalCSS[key] === undefined) {
      continue;
    }
    var lowercaseKey = key.toLowerCase();
    //MAKE SURE HEX COLORS START WITH # 
    if ((lowercaseKey.includes("color") || lowercaseKey.includes("background")) && finalCSS[key] && !"".concat(value).includes("#")) {
      finalCSS[key] = "#".concat(value);
    }

    //MAKE SURE FONTSIZES ENDS WITH PX
    if (lowercaseKey.includes("fontsize") && finalCSS[key] && !"".concat(value).includes("px")) {
      finalCSS[key] = "".concat(value, "px");
    } else if (lowercaseKey.includes("fontsmaller") && finalCSS[key] && !"".concat(value).includes("px")) {
      finalCSS[key] = "".concat(value, "px");
    }

    //MAKE SURE ROUNDEDCORNERS ENDS WITH PX
    if ((lowercaseKey.includes("roundedcorners") || lowercaseKey.includes("radius")) && finalCSS[key] && !"".concat(value).includes("px")) {
      finalCSS[key] = "".concat(value, "px");
    }

    //MAKE SURE WIDTHS ENDS WITH PX
    if (lowercaseKey.includes("width") && finalCSS[key] && !"".concat(value).includes("px")) {
      finalCSS[key] = "".concat(value, "px");
    }

    //MAKE SURE LETTERSPACINGS ENDS WITH EM
    if (lowercaseKey.includes("letterspacing") && finalCSS[key] && !"".concat(value).includes("em")) {
      if (!isNaN(value)) {
        finalCSS[key] = "".concat(value, "em");
      }
    }

    //MAKE SURE GUTTERS ENDS WITH PX
    if (lowercaseKey.includes("gutter") && finalCSS[key] && !"".concat(value).includes("px")) {
      if (!isNaN(value)) {
        finalCSS[key] = "".concat(value, "px");
      }
    }

    //REMOVE ANY ; CHARACTERS, SOMETIMES PRESENT IN FOR EXAMPLE FONTFAMILY VALUES
    if ("".concat(value).includes(';')) {
      finalCSS[key] = "".concat(value).replace(';', '');
    }
  }
  console.log("DEFAULT STYLE", DefaultStyle);
  console.log("CHANNEL STYLE", channelCSS);
  console.log("FINAL STYLE", finalCSS);
  return finalCSS;
}
function jshelpers_addBoxShadow(shadowColor, horizontalLength, verticalLength, blurRadius, spreadRadius, transparenceLevel) {
  var color = jshelpers_hexToRgb(shadowColor);
  return "".concat(horizontalLength, "px ").concat(verticalLength, "px ").concat(blurRadius, "px ").concat(spreadRadius, "px rgba(").concat(color.R, ",").concat(color.G, ",").concat(color.B, ",").concat(transparenceLevel, ");");
}
function jshelpers_hexToRgb(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {
    R: parseInt(result[1], 16),
    G: parseInt(result[2], 16),
    B: parseInt(result[3], 16)
  } : null;
}
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/property_list/interfaces.ts
var PropertyConferenceAttribute;
(function (PropertyConferenceAttribute) {
  PropertyConferenceAttribute["Avskilt"] = "Avskilt";
  PropertyConferenceAttribute["IdyllisktL\xE4ge"] = "Idylliskt l\xE4ge";
  PropertyConferenceAttribute["KustSj\xF6"] = "Kust & Sj\xF6";
  PropertyConferenceAttribute["Naturn\xE4raAvkoppling"] = "Naturn\xE4ra & avkoppling";
  PropertyConferenceAttribute["SlottHerrg\xE5rd"] = "Slott & Herrg\xE5rd";
  PropertyConferenceAttribute["Sm\xE5stadscharm"] = "Sm\xE5stadscharm";
})(PropertyConferenceAttribute || (PropertyConferenceAttribute = {}));
var PropertyOtherAttribute;
(function (PropertyOtherAttribute) {
  PropertyOtherAttribute["CovidCleanCertifierad"] = "CovidClean certifierad";
  PropertyOtherAttribute["DigitalaProduktioner"] = "Digitala produktioner";
  PropertyOtherAttribute["ListadeWhiteGuide"] = "Listade i White Guide";
  PropertyOtherAttribute["MedlemSvanensN\xE4tverk"] = "Medlem i Svanens n\xE4tverk";
  PropertyOtherAttribute["MedlemVisita"] = "Medlem i Visita";
  PropertyOtherAttribute["M\xF6jlighetTillHybridm\xF6te"] = "M\xF6jlighet till hybridm\xF6te";
})(PropertyOtherAttribute || (PropertyOtherAttribute = {}));
var PropertySortType;
(function (PropertySortType) {
  PropertySortType["SORT"] = "Sortering";
  PropertySortType["PRICE"] = "L\xE4gsta pris";
  PropertySortType["ALPHABETICAL"] = "Alfabetisk";
})(PropertySortType || (PropertySortType = {}));
;// CONCATENATED MODULE: ./src/reservation/multiproperty/atoms.ts





var MultiPropertyInfoState = Recoil_index_8({
  key: "MultiPropertyInfoState",
  default: undefined
});
var ShowLeafletMapState = Recoil_index_8({
  key: "ShowLeafletMapState",
  default: true
});
var SelectedPropertyIDState = Recoil_index_8({
  key: "SelectedPropertyIDState",
  default: undefined
});
var StepperIndexState = Recoil_index_8({
  key: "StepperIndexState",
  default: 0
});
var PropertyFilterState = Recoil_index_8({
  key: "PropertyFilterState",
  default: []
});
var ShouldFilterProperties = Recoil_index_8({
  key: "ShouldFilterProperties",
  default: true
});
var PropertyListPage = Recoil_index_8({
  key: "PropertyListPage",
  default: 0
});
var PropertiesList = Recoil_index_8({
  key: "PropertiesList",
  default: []
});
var PlacesListState = Recoil_index_8({
  key: "PlacesListState",
  default: []
});
var SortedPropertiesList = Recoil_index_9({
  key: "SortedPropertiesList",
  get: function get(_ref) {
    var _sortFunctions;
    var _get = _ref.get;
    var sortFunctions = (_sortFunctions = {}, defineProperty_defineProperty(_sortFunctions, PropertySortType.SORT, function (a, b) {
      return 1;
    }), defineProperty_defineProperty(_sortFunctions, PropertySortType.ALPHABETICAL, function (a, b) {
      if (a.name && b.name) {
        if (a.name === b.name) return 0;
        return a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;
      }
      return 1;
    }), defineProperty_defineProperty(_sortFunctions, PropertySortType.PRICE, function (a, b) {
      // if (a. === b.priceDisplay) return 0
      // return a.priceDisplay > b.priceDisplay ? 1 : -1
      return 1;
    }), _sortFunctions);
    var sortType = _get(PropertiesSortState);
    var properties = _get(PropertiesList);
    return _toConsumableArray(properties).sort(sortFunctions[sortType]);
  }
});
var FilteredPropertiesList = Recoil_index_9({
  key: "FilteredPropertiesList",
  get: function get(_ref2) {
    var _get2 = _ref2.get;
    var allProperties = _get2(SortedPropertiesList);
    var filterState = _get2(PropertyFilterState);
    return utilities_utilities.getFilteredProperties(allProperties, filterState);
  }
});
var PaginatedPropertiesList = Recoil_index_11({
  key: "PaginatedPropertiesList",
  get: function get(_ref3) {
    var itemsPerPage = _ref3.itemsPerPage;
    return function (_ref4) {
      var get = _ref4.get;
      var filtered = get(ShouldFilterProperties);
      var page = get(PropertyListPage);
      var properties = filtered ? get(FilteredPropertiesList) : get(PropertiesList);
      var totalPages = Math.ceil(properties.length / itemsPerPage);
      var returnArray;
      if (page >= 0 && page < totalPages) {
        if (page < totalPages - 1) returnArray = properties.slice(0, (page + 1) * itemsPerPage);else returnArray = properties;
      } else {
        returnArray = properties;
      }
      return {
        properties: returnArray,
        totalCount: properties.length
      };
    };
  }
});
var PropertiesSortState = Recoil_index_8({
  key: "PropertiesSortState",
  default: PropertySortType.ALPHABETICAL
});
var ConferenceStepperIndexState = Recoil_index_8({
  key: "ConferenceStepperIndexState",
  default: 0
});
var RateNumberState = Recoil_index_8({
  key: "RateNumberState",
  default: {}
});
var NavbarBottomPosition = Recoil_index_8({
  key: "NavbarBottomPosition",
  default: 0
});
var StickyMapBottomPosition = Recoil_index_8({
  key: "StickyMapBottomPosition",
  default: 0
});
var CurrentChannelIdState = Recoil_index_8({
  key: "CurrentChannelIdState",
  default: undefined
});
;// CONCATENATED MODULE: ./src/reservation/atoms.ts








var firstDayOfWeekState = Recoil_index_8({
  key: "firstDayOfWeekState",
  default: undefined
});
var languageCultureState = Recoil_index_8({
  key: "languageCultureState",
  default: undefined
});
var languageIdState = Recoil_index_8({
  key: "languageIdState",
  default: undefined
});
var editReservationBookingCodeState = Recoil_index_8({
  key: "editReservationBookingCodeState",
  default: undefined
});
var specificCultureState = Recoil_index_8({
  key: "specificCultureState",
  default: undefined
});
var unlockedCampaignStateInner = Recoil_index_10({
  key: "unlockedCampaignStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_unlocked_campaign_".concat(channelId))];
  }
});
var unlockedCampaignState = Recoil_index_9({
  key: "unlockedCampaignState",
  get: function get(_ref) {
    var _get = _ref.get;
    var channelInfo = _get(channelInfoState);
    return _get(unlockedCampaignStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref2, newValue) {
    var _set = _ref2.set,
      get = _ref2.get;
    var channelInfo = get(channelInfoState);
    _set(unlockedCampaignStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var searchOptionsFilterState = Recoil_index_9({
  key: "searchOptionsFilterState",
  get: function get(_ref3) {
    var _get2 = _ref3.get;
    var channelInfo = _get2(channelInfoState);
    if (!(channelInfo !== null && channelInfo !== void 0 && channelInfo.channelId)) {
      return;
    }
    var promoCode = _get2(appliedPromoCodeState);
    var corpCode = _get2(appliedCorpCodeState);
    var agentCode = _get2(appliedAgentCodeState);
    var mpPromoCode = _get2(appliedMPPromoCodeState);
    var mpCorpCode = _get2(appliedMPCorpCodeState({
      channelId: channelInfo.channelId,
      multipropertyId: undefined
    }));
    var mpAgentCode = _get2(appliedMPAgentCodeState);
    var selectedObject = _get2(selectedObjectState);
    var options = {
      addOnContent: AddOnContentType.Full,
      includeFullyBooked: true,
      includePackages: true,
      includeRooms: true,
      packageContent: PackageContentType.Full,
      roomContent: RoomContentType.Full
    };
    if ((selectedObject === null || selectedObject === void 0 ? void 0 : selectedObject.objectType) === "Package" && selectedObject.objectId !== undefined) {
      options.packageId = selectedObject.objectId;
    }
    if (promoCode) {
      options.promoCode = promoCode;
    }
    if (corpCode) {
      options.corpCode = corpCode;
    }
    if (agentCode) {
      options.agentCode = agentCode;
    }
    if (mpPromoCode) {
      options.mpPromoCode = mpPromoCode;
    }
    if (mpCorpCode) {
      options.mpCorpCode = mpCorpCode;
    }
    if (mpAgentCode) {
      options.mpAgentCode = mpAgentCode;
    }
    return options;
  }
});
var searchOptionsRoomConfigsState = Recoil_index_8({
  key: "searchOptionsRoomConfigsState",
  default: sessionStorage.getItem("bv_room_configs") ? JSON.parse(sessionStorage.getItem("bv_room_configs")) : [{
    NrOfAdults: 2,
    Children: [],
    Id: GenerateID()
  }],
  effects: [sessionStorageEffect("bv_room_configs")]
});
var searchOptionsSelectedAccommodationTypesStateInner = Recoil_index_10({
  key: "searchOptionsSelectedAccommodationTypesStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_acco_types_".concat(channelId))];
  }
});
var selectedCalendarMonthIndex = Recoil_index_9({
  key: "selectedCalendarMonthIndex",
  get: function get(_ref4) {
    var _get3 = _ref4.get;
    var channelInfo = _get3(channelInfoState);
    return _get3(selectedCalendarMonthIndexInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref5, newValue) {
    var _set2 = _ref5.set,
      get = _ref5.get;
    var channelInfo = get(channelInfoState);
    _set2(selectedCalendarMonthIndexInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var currencyFormatterState = Recoil_index_8({
  key: "currencyFormatterState",
  default: undefined
});
var dateFormatterState = Recoil_index_8({
  key: "dateFormatterState",
  default: undefined
});
var imageServerUrl = Recoil_index_8({
  key: "imageServerUrl",
  default: undefined
});
var selectedCalendarMonthIndexInner = Recoil_index_10({
  key: "selectedCalendarMonthIndexInner",
  default: "0",
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_month_index_".concat(channelId))];
  }
});
var searchOptionsSelectedAccommodationTypesState = Recoil_index_9({
  key: "searchOptionsSelectedAccommodationTypes",
  get: function get(_ref6) {
    var _get4 = _ref6.get;
    var channelInfo = _get4(channelInfoState);
    return _get4(searchOptionsSelectedAccommodationTypesStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref7, newValue) {
    var _set3 = _ref7.set,
      get = _ref7.get;
    var channelInfo = get(channelInfoState);
    _set3(searchOptionsSelectedAccommodationTypesStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var appliedMPPromoCodeStateInner = Recoil_index_10({
  key: "appliedMPPromoCodeStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_mp_promo_code_".concat(channelId))];
  }
});
var appliedMPPromoCodeState = Recoil_index_9({
  key: "appliedMPPromoCodeState",
  get: function get(_ref8) {
    var _get5 = _ref8.get;
    var channelInfo = _get5(channelInfoState);
    return _get5(appliedMPPromoCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref9, newValue) {
    var _set4 = _ref9.set,
      get = _ref9.get;
    var channelInfo = get(channelInfoState);
    _set4(appliedMPPromoCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var appliedMPCorpCodeStateInner = Recoil_index_10({
  key: "appliedMPCorpCodeStateInner",
  default: undefined,
  effects: function effects(_ref10) {
    var channelId = _ref10.channelId,
      multipropertyId = _ref10.multipropertyId;
    return [sessionStorageEffect("bv_mp_corp_code_".concat(channelId, "_").concat(multipropertyId))];
  }
});
var appliedMPCorpCodeState = Recoil_index_11({
  key: "appliedMPCorpCodeState",
  get: function get(_ref11) {
    var channelId = _ref11.channelId,
      multipropertyId = _ref11.multipropertyId;
    return /*#__PURE__*/function () {
      var _ref13 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(_ref12) {
        var get;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              get = _ref12.get;
              return _context.abrupt("return", get(appliedMPCorpCodeStateInner({
                channelId: channelId,
                multipropertyId: multipropertyId
              })));
            case 2:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref13.apply(this, arguments);
      };
    }();
  },
  set: function set(_ref14) {
    var channelId = _ref14.channelId,
      multipropertyId = _ref14.multipropertyId;
    return function (_ref15, newValue) {
      var set = _ref15.set;
      set(appliedMPCorpCodeStateInner({
        channelId: channelId,
        multipropertyId: multipropertyId
      }), newValue);
    };
  }
});
var appliedMPAgentCodeStateInner = Recoil_index_10({
  key: "appliedMPAgentCodeStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_mp_agent_code_".concat(channelId))];
  }
});
var appliedMPAgentCodeState = Recoil_index_9({
  key: "appliedMPAgentCodeState",
  get: function get(_ref16) {
    var _get6 = _ref16.get;
    var channelInfo = _get6(channelInfoState);
    return _get6(appliedMPAgentCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref17, newValue) {
    var _set5 = _ref17.set,
      get = _ref17.get;
    var channelInfo = get(channelInfoState);
    _set5(appliedMPAgentCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var appliedPromoCodeStateInner = Recoil_index_10({
  key: "appliedPromoCodeStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_promo_code_".concat(channelId))];
  }
});
var appliedPromoCodeState = Recoil_index_9({
  key: "appliedPromoCodeState",
  get: function get(_ref18) {
    var _get7 = _ref18.get;
    var channelInfo = _get7(channelInfoState);
    return _get7(appliedPromoCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref19, newValue) {
    var _set6 = _ref19.set,
      get = _ref19.get;
    var channelInfo = get(channelInfoState);
    _set6(appliedPromoCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var appliedCorpCodeStateInner = Recoil_index_10({
  key: "appliedCorpCodeStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_corp_code_".concat(channelId))];
  }
});
var appliedCorpCodeState = Recoil_index_9({
  key: "appliedCorpCodeState",
  get: function get(_ref20) {
    var _get8 = _ref20.get;
    var channelInfo = _get8(channelInfoState);
    return _get8(appliedCorpCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref21, newValue) {
    var _set7 = _ref21.set,
      get = _ref21.get;
    var channelInfo = get(channelInfoState);
    _set7(appliedCorpCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var appliedAgentCodeStateInner = Recoil_index_10({
  key: "appliedAgentCodeStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_agent_code_".concat(channelId))];
  }
});
var appliedAgentCodeState = Recoil_index_9({
  key: "appliedAgentCodeState",
  get: function get(_ref22) {
    var _get9 = _ref22.get;
    var channelInfo = _get9(channelInfoState);
    return _get9(appliedAgentCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref23, newValue) {
    var _set8 = _ref23.set,
      get = _ref23.get;
    var channelInfo = get(channelInfoState);
    _set8(appliedAgentCodeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var searchOptionsState = Recoil_index_9({
  key: "searchOptionsState",
  get: function get(_ref24) {
    var _calendarOptions$sele, _calendarOptions$sele2, _calendarOptions$sele3, _calendarOptions$sele4;
    var _get10 = _ref24.get;
    var channelInfo = _get10(channelInfoState);
    var filter = _get10(searchOptionsFilterState);
    var roomConfigs = _get10(searchOptionsRoomConfigsState).map(function (room) {
      var _room$Children$filter;
      return {
        adults: room.NrOfAdults,
        ageGroupDescription: undefined,
        childAges: (_room$Children$filter = room.Children.filter(function (x) {
          return x.Age !== undefined;
        }).map(function (c) {
          return +c.Age;
        })) !== null && _room$Children$filter !== void 0 ? _room$Children$filter : [],
        sharerAge: room.SharerAge
      };
    });
    var accommodationType = _get10(searchOptionsSelectedAccommodationTypesState);
    var calendarOptions = _get10(calendarOptionsState);
    return {
      roomConfigs: roomConfigs,
      filter: filter,
      startDate: ((_calendarOptions$sele = calendarOptions.selectedDates) === null || _calendarOptions$sele === void 0 ? void 0 : _calendarOptions$sele.startDate) !== undefined ? new Date((_calendarOptions$sele2 = calendarOptions.selectedDates) === null || _calendarOptions$sele2 === void 0 ? void 0 : _calendarOptions$sele2.startDate) : undefined,
      endDate: ((_calendarOptions$sele3 = calendarOptions.selectedDates) === null || _calendarOptions$sele3 === void 0 ? void 0 : _calendarOptions$sele3.endDate) !== undefined ? new Date((_calendarOptions$sele4 = calendarOptions.selectedDates) === null || _calendarOptions$sele4 === void 0 ? void 0 : _calendarOptions$sele4.endDate) : undefined,
      channelId: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId,
      accommodationType: accommodationType
    };
  }
});
function sessionStorageEffect(key) {
  return function (_ref25) {
    var setSelf = _ref25.setSelf,
      onSet = _ref25.onSet;
    var savedValue = sessionStorage.getItem(key);
    if (savedValue != null) {
      setSelf(JSON.parse(savedValue));
    }
    onSet(function (newValue, _, isReset) {
      isReset || !newValue ? sessionStorage.removeItem(key) : sessionStorage.setItem(key, JSON.stringify(newValue));
    });
  };
}
var innerCachedSearchResultState = Recoil_index_8({
  key: "innerCachedSearchResultState",
  default: sessionStorage.getItem("bv_searchresult") ? JSON.parse(sessionStorage.getItem("bv_searchresult")) : undefined,
  effects: [sessionStorageEffect("bv_searchresult")]
});
var cachedSearchResultState = Recoil_index_9({
  key: "cachedSearchResultState",
  get: function get(_ref26) {
    var _cachedSearch$accommo;
    var _get11 = _ref26.get;
    var channelInfo = _get11(channelInfoState);
    var cachedSearch = _get11(innerCachedSearchResultState);
    if ((channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId) === (cachedSearch === null || cachedSearch === void 0 ? void 0 : (_cachedSearch$accommo = cachedSearch.accommodationSearch) === null || _cachedSearch$accommo === void 0 ? void 0 : _cachedSearch$accommo.channelId)) {
      return cachedSearch;
    }
    return undefined;
  },
  set: function set(_ref27, newValue) {
    var _set9 = _ref27.set;
    _set9(innerCachedSearchResultState, newValue);
  }
});
var innerCachedConferenceSearchResultState = Recoil_index_10({
  key: "innerCachedConferenceSearchResultState",
  default: function _default(channelId) {
    var savedState = sessionStorage.getItem("bv_searchresult_conf_".concat(channelId));
    if (savedState) {
      return JSON.parse(savedState);
    }
    return undefined;
  },
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_searchresult_conf_".concat(channelId))];
  }
});
var calendarOptionsState = Recoil_index_9({
  key: "calendarBaseState",
  get: function get(_ref28) {
    var _get12 = _ref28.get;
    var selectedStartDate = _get12(selectedCalendarStartDate);
    var selectedEndDate = _get12(selectedCalendarEndDate);
    var showYouSearchedFor = _get12(showYouSearchedForState);
    var selectedObject = _get12(selectedObjectState);
    return {
      selectedDates: {
        startDate: selectedStartDate,
        endDate: selectedEndDate
      },
      selectedObject: selectedObject,
      showYouSearchedFor: showYouSearchedFor
    };
  }
});
var selectedCalendarStartDateInner = Recoil_index_10({
  key: "selectedCalendarStartDateInner",
  default: new Date().toISOString(),
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_calendar_start_date_".concat(channelId))];
  }
});
var selectedCalendarStartDate = Recoil_index_9({
  key: "selectedCalendarStartDateState",
  get: function get(_ref29) {
    var _mpChannelInfo$multiP;
    var _get13 = _ref29.get;
    var channelInfo = _get13(channelInfoState);
    var mpChannelInfo = _get13(MultiPropertyInfoState);
    return _get13(selectedCalendarStartDateInner((_mpChannelInfo$multiP = mpChannelInfo === null || mpChannelInfo === void 0 ? void 0 : mpChannelInfo.multiPropertyId) !== null && _mpChannelInfo$multiP !== void 0 ? _mpChannelInfo$multiP : channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId));
  },
  set: function set(_ref30, newValue) {
    var _mpChannelInfo$multiP2;
    var _set10 = _ref30.set,
      get = _ref30.get;
    var channelInfo = get(channelInfoState);
    var mpChannelInfo = get(MultiPropertyInfoState);
    _set10(selectedCalendarStartDateInner((_mpChannelInfo$multiP2 = mpChannelInfo === null || mpChannelInfo === void 0 ? void 0 : mpChannelInfo.multiPropertyId) !== null && _mpChannelInfo$multiP2 !== void 0 ? _mpChannelInfo$multiP2 : channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId), newValue);
  }
});
var selectedCalendarEndDateInner = Recoil_index_10({
  key: "selectedCalendarEndDateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_calendar_end_date_".concat(channelId))];
  }
});
var selectedCalendarEndDate = Recoil_index_9({
  key: "selectedCalendarEndDateState",
  get: function get(_ref31) {
    var _ref32;
    var _get14 = _ref31.get;
    var channelInfo = _get14(channelInfoState);
    var mpChannelInfo = _get14(MultiPropertyInfoState);
    return _get14(selectedCalendarEndDateInner((_ref32 = channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId) !== null && _ref32 !== void 0 ? _ref32 : mpChannelInfo === null || mpChannelInfo === void 0 ? void 0 : mpChannelInfo.multiPropertyId));
  },
  set: function set(_ref33, newValue) {
    var _ref34;
    var _set11 = _ref33.set,
      get = _ref33.get;
    var channelInfo = get(channelInfoState);
    var mpChannelInfo = get(MultiPropertyInfoState);
    _set11(selectedCalendarEndDateInner((_ref34 = channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId) !== null && _ref34 !== void 0 ? _ref34 : mpChannelInfo === null || mpChannelInfo === void 0 ? void 0 : mpChannelInfo.multiPropertyId), newValue);
  }
});
var showYouSearchedForState = Recoil_index_8({
  key: "showYouSearchedForState",
  default: false
});
var selectedObjectState = Recoil_index_8({
  key: "selectedObjectState",
  default: undefined
});

/** Only used for edit reservation. */
var appliedStyleState = Recoil_index_8({
  key: "appliedStyleState",
  default: undefined
});
var styleOverridesState = Recoil_index_8({
  key: "styleOverridesState",
  default: {}
});
var APIObject = Recoil_index_8({
  key: "APIObjectState",
  default: undefined
});
var ScopedAPI = Recoil_index_10({
  key: "scopedAPIState",
  default: function _default(_ref35) {
    var jwtToken = _ref35.jwtToken,
      apiUrl = _ref35.apiUrl;
    return new Client({
      getAuthorization: function getAuthorization() {
        return "Bearer ".concat(jwtToken);
      }
    }, apiUrl);
  }
});
var ScopedChannelStyle = Recoil_index_11({
  key: "ScopedChannelStyle",
  get: function get(_ref36) {
    var channelId = _ref36.channelId,
      apiUrl = _ref36.apiUrl,
      jwtToken = _ref36.jwtToken;
    return /*#__PURE__*/function () {
      var _ref38 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee2(_ref37) {
        var get, overrides, API, getStyleRs, retVal;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              get = _ref37.get;
              overrides = get(styleOverridesState);
              API = get(ScopedAPI({
                apiUrl: apiUrl,
                jwtToken: jwtToken
              }));
              _context2.next = 5;
              return API.channelStyleV1(channelId);
            case 5:
              getStyleRs = _context2.sent;
              retVal = {
                css: buildCSS(getStyleRs.css),
                style: getStyleRs.style,
                originalCSS: getStyleRs.css
              };
              if (overrides !== null && overrides !== void 0 && overrides.accommodationPresentationType) {
                retVal.style.accommodationPresentationType = overrides.accommodationPresentationType;
              }
              if (overrides !== null && overrides !== void 0 && overrides.packagePresentationType) {
                retVal.style.packagePresentationType = overrides.packagePresentationType;
              }
              if (overrides !== null && overrides !== void 0 && overrides.resultOptionsPresentationType) {
                retVal.style.resultOptionsPresentationType = overrides.resultOptionsPresentationType;
              }
              if (overrides !== null && overrides !== void 0 && overrides.roomsInPackagePresentationType) {
                retVal.style.roomsInPackagePresentationType = overrides.roomsInPackagePresentationType;
              }
              if (overrides !== null && overrides !== void 0 && overrides.extrasPresentationType) {
                retVal.style.extrasPresentationType = overrides.extrasPresentationType;
              }
              return _context2.abrupt("return", retVal);
            case 13:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function (_x2) {
        return _ref38.apply(this, arguments);
      };
    }();
  }
});
var ScopedStyle = Recoil_index_11({
  key: 'scopedStyleState',
  get: function get(_ref39) {
    var jwtToken = _ref39.jwtToken,
      apiUrl = _ref39.apiUrl,
      multiPropertyId = _ref39.multiPropertyId;
    return /*#__PURE__*/function () {
      var _ref41 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee3(_ref40) {
        var get, api, style;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              get = _ref40.get;
              api = get(ScopedAPI({
                jwtToken: jwtToken,
                apiUrl: apiUrl
              }));
              _context3.next = 4;
              return api.multipropertiesMultipropertyStyleV1(multiPropertyId);
            case 4:
              style = _context3.sent;
              return _context3.abrupt("return", {
                css: buildCSS(style),
                originalCSS: style
              });
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x3) {
        return _ref41.apply(this, arguments);
      };
    }();
  }
});
var ReactCheckoutEnabled = Recoil_index_8({
  key: "ReactCheckoutEnabledState",
  default: false
});
var filteredRates = Recoil_index_11({
  key: "filteredRatesState",
  get: function get(roomId) {
    return function (_ref42) {
      var _searchResult$roomsRe, _searchResult$roomsRe2, _allRates$filter;
      var get = _ref42.get;
      var selectedObject = get(selectedObjectState);
      var searchResult = get(cachedSearchResultState);

      //FILTER DOWN TO ALL RATES WITH NR AVAILABLE > 0
      var allRates = (_searchResult$roomsRe = searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$roomsRe2 = searchResult.roomsResult) === null || _searchResult$roomsRe2 === void 0 ? void 0 : _searchResult$roomsRe2.filter(function (x) {
        return x !== undefined && x.nrAvailable && x.nrAvailable > 0 && x.roomId === roomId;
      }).flatMap(function (x) {
        return x.rateAlternatives;
      })) !== null && _searchResult$roomsRe !== void 0 ? _searchResult$roomsRe : [];
      return (_allRates$filter = allRates === null || allRates === void 0 ? void 0 : allRates.filter(function (rateAlternative) {
        if ((selectedObject === null || selectedObject === void 0 ? void 0 : selectedObject.objectType) === "Package" && (rateAlternative === null || rateAlternative === void 0 ? void 0 : rateAlternative.packageId) !== selectedObject.objectId) {
          //IF IN PACKAGE VIEW, FILTER OUT RATES FOR OTHER PACKAGES
          return false;
        }
        if ((selectedObject === null || selectedObject === void 0 ? void 0 : selectedObject.objectType) === "Accommodation" && Boolean(rateAlternative === null || rateAlternative === void 0 ? void 0 : rateAlternative.packageId)) {
          var _searchResult$package;
          //IF NOT IN PACKAGE VIEW, FILTER OUT PACKAGES THAT DOESNT HAVE displayAsRatePlanHitInRoomSearchResult
          var packageDetails = searchResult === null || searchResult === void 0 ? void 0 : (_searchResult$package = searchResult.packageContent) === null || _searchResult$package === void 0 ? void 0 : _searchResult$package.find(function (pkg) {
            return pkg.id === (rateAlternative === null || rateAlternative === void 0 ? void 0 : rateAlternative.packageId);
          });
          if (packageDetails && !packageDetails.displayAsRatePlanHitInRoomSearchResult) {
            return false;
          }
        }
        return true;
      })) !== null && _allRates$filter !== void 0 ? _allRates$filter : [];
    };
  }
});
var cheapestAvailableRoomRate = Recoil_index_11({
  key: "cheapestRoomRateState",
  get: function get(roomId) {
    return function (_ref43) {
      var get = _ref43.get;
      var rates = get(filteredRates(roomId));
      var all = rates.flatMap(function (x) {
        return x.ratesPerRoomConfig.flatMap(function (y) {
          return y.totalPrice;
        });
      });
      var sorted = all.sort(function (a, b) {
        return (a === null || a === void 0 ? void 0 : a.priceInclVAT) - (b === null || b === void 0 ? void 0 : b.priceInclVAT);
      });
      return sorted[0];
    };
  }
});
var onlineUserContextState = Recoil_index_8({
  key: "onlineUserContextState",
  default: undefined
});
var channelInfoState = Recoil_index_8({
  key: "channelInfoState",
  default: undefined
});
var editReservationRateSelectedMethodOverrideState = Recoil_index_8({
  key: "editReservationRateSelectedMethodOverrideState",
  default: {
    onRateClicked: function onRateClicked(hitKey) {}
  }
});
var editReservationBookingDataState = Recoil_index_8({
  key: "editReservationBookingDataState",
  default: undefined
});
var onListPageLoadedState = Recoil_index_8({
  key: "onListPageLoadedState",
  default: function _default() {}
});
;// CONCATENATED MODULE: ./src/reservation/multiproperty/hooks/useMultiPropertyInfo.ts






var useMultiPropertyInfo = function useMultiPropertyInfo() {
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var API = Recoil_index_20(ScopedAPI({
    jwtToken: apiContext.token,
    apiUrl: apiContext.apiUrl
  }));
  var setMultiPropertyInfo = Recoil_index_24(MultiPropertyInfoState);
  return (0,es.useQuery)(["multipropertyInfo", apiContext.multiPropertyId], function () {
    return API.multipropertiesMultipropertyInfoV1(+apiContext.languageId, apiContext.multiPropertyId);
  }, {
    staleTime: Infinity,
    refetchOnWindowFocus: false,
    suspense: true,
    onSuccess: function onSuccess(data) {
      setMultiPropertyInfo(data);
    }
  });
};
;// CONCATENATED MODULE: ./src/widgets/interfaces.ts
var WidgetLayout;
(function (WidgetLayout) {
  WidgetLayout["Standard1Column"] = "Standard1Column";
  WidgetLayout["Standard1ColumnCompact"] = "Standard1ColumnCompact";
  WidgetLayout["Standard2Columns"] = "Standard2Columns";
  WidgetLayout["Standard2ColumnsCompact"] = "Standard2ColumnsCompact";
  WidgetLayout["Calendar2Columns"] = "Calendar2Columns";
  WidgetLayout["StandardWide"] = "StandardWide";
  WidgetLayout["StandardWideCompact"] = "StandardWideCompact";
  WidgetLayout["Large2Columns"] = "Large2Columns";
  WidgetLayout["Large3Columns"] = "Large3Columns";
  WidgetLayout["Standard1ColumnSimplify"] = "Standard1ColumnSimplify";
  WidgetLayout["LinkOnly"] = "LinkOnly";
  WidgetLayout["Standard1ColumnPlate"] = "Standard1ColumnPlate";
})(WidgetLayout || (WidgetLayout = {}));
// EXTERNAL MODULE: ./node_modules/react-responsive/dist/react-responsive.js
var react_responsive = __webpack_require__(4952);
;// CONCATENATED MODULE: ./src/hooks/useAPI.ts



var baseUrl = (/* unused pure expression or super */ null && ( false ? 0 : "/"));
var useAPI = function useAPI() {
  var apiContext = useAPIContext();
  var scopedAPI = Recoil_index_20(ScopedAPI({
    apiUrl: apiContext.apiUrl,
    jwtToken: apiContext.token
  }));
  return [scopedAPI, apiContext.channelId, apiContext.apiUrl, apiContext.token, apiContext.languageId];
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/atoms.ts





var ConferenceTypeStateInner = Recoil_index_10({
  key: "selectedConferenceTypeStateInner",
  default: "conference",
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_conference_type_".concat(channelId))];
  }
});
var ConferenceTypeState = Recoil_index_9({
  key: "selectedConferenceTypeState",
  get: function get(_ref) {
    var _get = _ref.get;
    var channelInfo = _get(MultiPropertyInfoState);
    return _get(ConferenceTypeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId));
  },
  set: function set(_ref2, newValue) {
    var _set = _ref2.set,
      get = _ref2.get;
    var channelInfo = get(MultiPropertyInfoState);
    if (channelInfo) {
      _set(ConferenceTypeStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId), newValue);
    }
  }
});
var ConferenceTimeState = Recoil_index_8({
  key: "ConferenceTimeState",
  default: {
    0: {
      startTime: new Date("July 1, 1999, 09:00"),
      endTime: new Date("July 1, 1999, 17:00"),
      checked: true
    }
  }
});
var NumberOfNightsState = Recoil_index_8({
  key: "NumberOfNightsState",
  default: 1
});
var ParticipantsStateInner = Recoil_index_10({
  key: "ParticipantsStateInner",
  default: {
    singleRoomAmount: 0,
    doubleRoomAmount: 0,
    personAmount: 1
  },
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_conference_participants_".concat(channelId))];
  }
});
var ParticipantsDropdownState = Recoil_index_9({
  key: "ParticipantsDropdownState",
  get: function get(_ref3) {
    var _get2 = _ref3.get;
    var channelInfo = _get2(MultiPropertyInfoState);
    return _get2(ParticipantsStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId));
  },
  set: function set(_ref4, newValue) {
    var _set2 = _ref4.set,
      get = _ref4.get;
    var channelInfo = get(MultiPropertyInfoState);
    if (channelInfo) _set2(ParticipantsStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId), newValue);
  }
});
var LocationStateInner = Recoil_index_10({
  key: "selectedPlaceStateInner",
  default: undefined,
  effects: function effects(channelId) {
    return [sessionStorageEffect("bv_selected_conference_place_".concat(channelId))];
  }
});
var LocationDropdownState = Recoil_index_9({
  key: "LocationDropdownState",
  get: function get(_ref5) {
    var _get3 = _ref5.get;
    var channelInfo = _get3(MultiPropertyInfoState);
    return _get3(LocationStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId));
  },
  set: function set(_ref6, newValue) {
    var _set3 = _ref6.set,
      get = _ref6.get;
    var channelInfo = get(MultiPropertyInfoState);
    if (channelInfo) _set3(LocationStateInner(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyId), newValue);
  }
});
var MPSearchOptionsState = Recoil_index_9({
  key: "MPSearchOptionsState",
  get: function get(_ref7) {
    var _get4 = _ref7.get;
    var mpInfo = _get4(MultiPropertyInfoState);
    var startDate = _get4(selectedCalendarStartDate);
    var numberOfNights = _get4(NumberOfNightsState);
    var numberOfParticipants = _get4(ParticipantsDropdownState);
    var conferenceTimes = _get4(ConferenceTimeState);
    var locationId = _get4(LocationDropdownState);
    var meetingOccasions = Object.keys(conferenceTimes).filter(function (key) {
      return conferenceTimes[key].checked;
    }).map(function (key) {
      var _conferenceTimes$key$, _conferenceTimes$key$2;
      var meetingOccasionDate = add(new Date(startDate), {
        days: parseInt(key) - 1
      });
      return {
        date: meetingOccasionDate,
        startTime: (_conferenceTimes$key$ = conferenceTimes[key].startTime) === null || _conferenceTimes$key$ === void 0 ? void 0 : _conferenceTimes$key$.toISOString(),
        endTime: (_conferenceTimes$key$2 = conferenceTimes[key].endTime) === null || _conferenceTimes$key$2 === void 0 ? void 0 : _conferenceTimes$key$2.toISOString()
      };
    });
    var geoNodeId = locationId !== null && locationId !== void 0 && locationId.isPlace ? locationId.value : undefined;
    var channelId = !(locationId !== null && locationId !== void 0 && locationId.isPlace) ? locationId === null || locationId === void 0 ? void 0 : locationId.value : undefined;
    return {
      channelId: channelId,
      geoNodeId: geoNodeId,
      startDate: new Date(startDate),
      numberOfNights: numberOfNights,
      nrParticipants: numberOfParticipants.personAmount,
      nrSingleRooms: numberOfParticipants.singleRoomAmount,
      nrDoubleRooms: numberOfParticipants.doubleRoomAmount,
      meetingOccasions: meetingOccasions,
      languageId: 1,
      multiPropertyId: mpInfo === null || mpInfo === void 0 ? void 0 : mpInfo.multiPropertyId
    };
  }
});
var ConferenceSearchResultState = Recoil_index_8({
  key: "ConferenceSearchResultState",
  default: undefined
});
var MPSearchValidationState = Recoil_index_8({
  key: "MPSearchValidationState",
  default: undefined
});
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/isDate/index.js
function isDate_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    isDate_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    isDate_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }
  return isDate_typeof(obj);
}

/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param {*} value - the value to check
 * @returns {boolean} true if the given value is a date
 * @throws {TypeError} 1 arguments required
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */

function isDate(value) {
  requiredArgs(1, arguments);
  return value instanceof Date || isDate_typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/isValid/index.js



/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */

function isValid(dirtyDate) {
  requiredArgs(1, arguments);
  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {
    return false;
  }
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js


var MILLISECONDS_IN_DAY = 86400000;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = '0' + output;
  }
  return sign + output;
}
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

var formatters = {
  // Year
  y: function y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function M(date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function d(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return dayPeriodEnumValue.toUpperCase();
      case 'aaa':
        return dayPeriodEnumValue;
      case 'aaaaa':
        return dayPeriodEnumValue[0];
      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function h(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
/* harmony default export */ var lightFormatters = (formatters);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/_lib/format/formatters/index.js







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */
var formatters_formatters = {
  // Era
  G: function G(date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B

      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ

      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function y(date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }
    return lightFormatters.y(date, token);
  },
  // Local week-numbering year
  Y: function Y(date, token, localize, options) {
    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    } // Ordinal number

    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    } // Padding

    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date); // Padding

    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function Q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'QQ':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...

      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'qq':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...

      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function M(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      case 'M':
      case 'MM':
        return lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th

      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D

      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December

      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function L(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12

      case 'LL':
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th

      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D

      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December

      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function w(date, token, localize, options) {
    var week = getUTCWeek(date, options);
    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function I(date, token, localize) {
    var isoWeek = getUTCISOWeek(date);
    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function d(date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }
    return lightFormatters.d(date, token);
  },
  // Day of year
  D: function D(date, token, localize) {
    var dayOfYear = getUTCDayOfYear(date);
    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function E(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function e(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th

      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function c(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th

      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T

      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu

      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday

      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function i(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02

      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd

      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue

      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function a(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }
    switch (token) {
      case 'b':
      case 'bb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function h(date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return lightFormatters.h(date, token);
  },
  // Hour [0-23]
  H: function H(date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }
    return lightFormatters.H(date, token);
  },
  // Hour [0-11]
  K: function K(date, token, localize) {
    var hours = date.getUTCHours() % 12;
    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function k(date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function m(date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }
    return lightFormatters.m(date, token);
  },
  // Second
  s: function s(date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }
    return lightFormatters.s(date, token);
  },
  // Fraction of second
  S: function S(date, token) {
    return lightFormatters.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return 'Z';
    }
    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`

      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`

      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`

      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`

      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function O(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function z(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function t(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
/* harmony default export */ var format_formatters = (formatters_formatters);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/format/index.js










 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var format_formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var format_longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var format_escapedStringRegExp = /^'([^]*?)'?$/;
var format_doubleQuoteRegExp = /''/g;
var format_unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions = getDefaultOptions();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;
  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }
  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376

  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(format_longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = format_longFormatters[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join('').match(format_formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return format_cleanEscapedString(substring);
    }
    var formatter = format_formatters[firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }
    if (firstCharacter.match(format_unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }
    return substring;
  }).join('');
  return result;
}
function format_cleanEscapedString(input) {
  var matched = input.match(format_escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(format_doubleQuoteRegExp, "'");
}
;// CONCATENATED MODULE: ./src/widgets/conference/hooks/useMultipropertyWidgetSearch.ts











var useMultipropertyWidgetSearch = function useMultipropertyWidgetSearch() {
  var mpSearchOptions = Recoil_index_20(MPSearchOptionsState);
  var conferenceType = Recoil_index_20(ConferenceTypeState);
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var conferenceTimes = Recoil_index_20(ConferenceTimeState);
  var setMPSearchValidation = Recoil_index_24(MPSearchValidationState);
  var queryClient = (0,es.useQueryClient)();
  var _useMultiPropertyInfo = useMultiPropertyInfo(),
    mpInfo = _useMultiPropertyInfo.data;
  var _useAPI = useAPI(),
    _useAPI2 = slicedToArray_slicedToArray(_useAPI, 1),
    API = _useAPI2[0];
  var makeSearch = (0,react_production_min.useCallback)( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee() {
    var meetingOccasions, searchOptions, result;
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          meetingOccasions = Object.keys(conferenceTimes).filter(function (key) {
            return conferenceTimes[key].checked;
          }).map(function (key) {
            var meetingOccasionDate = add(new Date(selectedStartDate), {
              days: parseInt(key)
            });
            return {
              date: meetingOccasionDate,
              startTime: format(conferenceTimes[key].startTime, "HH:mm"),
              endTime: format(conferenceTimes[key].endTime, "HH:mm")
            };
          });
          searchOptions = {
            multiPropertyId: mpInfo === null || mpInfo === void 0 ? void 0 : mpInfo.multiPropertyId,
            geoNodeId: mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.geoNodeId,
            startDate: mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.startDate,
            nrNights: conferenceType === "conference" ? 0 : mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.numberOfNights,
            numberOfSingleRooms: (mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.nrSingleRooms) === 0 ? undefined : mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.nrSingleRooms,
            numberOfDoubleRooms: (mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.nrDoubleRooms) === 0 ? undefined : mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.nrDoubleRooms,
            numberOfParticipants: mpSearchOptions === null || mpSearchOptions === void 0 ? void 0 : mpSearchOptions.nrParticipants,
            meetingOccasions: meetingOccasions
            // mpCorpCode,
            // mpPromoCode,
            // roomConfig
          };
          _context.next = 4;
          return queryClient.fetchQuery("widgetmultipropertysearch", function () {
            return API.widgetMultipropertyWidgetSearchV1(searchOptions);
          });
        case 4:
          result = _context.sent;
          if (result) {
            window.location.replace(result === null || result === void 0 ? void 0 : result.redirectUrl);
          }
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), []);
  var validateSearchOptions = (0,react_production_min.useCallback)(function () {
    var hasMissingConferenceTimes = Object.keys(conferenceTimes).some(function (key) {
      if (conferenceType === "conference") {
        return conferenceTimes[key].startTime === undefined || conferenceTimes[key].endTime === undefined;
      } else {
        return conferenceTimes[key].checked && (conferenceTimes[key].startTime === undefined || conferenceTimes[key].endTime === undefined);
      }
    });
    var hasNoStartDate = !selectedStartDate;
    setMPSearchValidation(function () {
      return {
        missingConferenceTimes: hasMissingConferenceTimes ? "Missing conference times" : undefined,
        noStartDate: hasNoStartDate ? "Start date is required" : undefined
      };
    });
    console.log(hasMissingConferenceTimes, hasNoStartDate);
    console.log(conferenceTimes, selectedStartDate);
    return hasNoStartDate || hasMissingConferenceTimes;
  }, [conferenceTimes, selectedStartDate]);
  return {
    makeSearch: makeSearch,
    validateSearchOptions: validateSearchOptions
  };
};
;// CONCATENATED MODULE: ./src/widgets/atoms.ts

var WidgetConfigState = Recoil_index_8({
  key: "WidgetConfigState",
  default: undefined
});
;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/is-element/is-element.js

function isElement(value) {
  if (Array.isArray(value) || value === null) {
    return false;
  }
  if (typeof value === "object") {
    if (value.type === react.Fragment) {
      return false;
    }
    return true;
  }
  return false;
}

;// CONCATENATED MODULE: ./node_modules/@floating-ui/core/dist/floating-ui.core.browser.min.mjs
function t(t){return t.split("-")[1]}function e(t){return"y"===t?"height":"width"}function n(t){return t.split("-")[0]}function o(t){return["top","bottom"].includes(n(t))?"x":"y"}function i(i,r,a){let{reference:l,floating:s}=i;const c=l.x+l.width/2-s.width/2,f=l.y+l.height/2-s.height/2,u=o(r),m=e(u),g=l[m]/2-s[m]/2,d="x"===u;let p;switch(n(r)){case"top":p={x:c,y:l.y-s.height};break;case"bottom":p={x:c,y:l.y+l.height};break;case"right":p={x:l.x+l.width,y:f};break;case"left":p={x:l.x-s.width,y:f};break;default:p={x:l.x,y:l.y}}switch(t(r)){case"start":p[u]-=g*(a&&d?-1:1);break;case"end":p[u]+=g*(a&&d?-1:1)}return p}const floating_ui_core_browser_min_r=async(t,e,n)=>{const{placement:o="bottom",strategy:r="absolute",middleware:a=[],platform:l}=n,s=a.filter(Boolean),c=await(null==l.isRTL?void 0:l.isRTL(e));let f=await l.getElementRects({reference:t,floating:e,strategy:r}),{x:u,y:m}=i(f,o,c),g=o,d={},p=0;for(let n=0;n<s.length;n++){const{name:a,fn:h}=s[n],{x:y,y:x,data:w,reset:v}=await h({x:u,y:m,initialPlacement:o,placement:g,strategy:r,middlewareData:d,rects:f,platform:l,elements:{reference:t,floating:e}});u=null!=y?y:u,m=null!=x?x:m,d={...d,[a]:{...d[a],...w}},v&&p<=50&&(p++,"object"==typeof v&&(v.placement&&(g=v.placement),v.rects&&(f=!0===v.rects?await l.getElementRects({reference:t,floating:e,strategy:r}):v.rects),({x:u,y:m}=i(f,g,c))),n=-1)}return{x:u,y:m,placement:g,strategy:r,middlewareData:d}};function a(t){return"number"!=typeof t?function(t){return{top:0,right:0,bottom:0,left:0,...t}}(t):{top:t,right:t,bottom:t,left:t}}function l(t){return{...t,top:t.y,left:t.x,right:t.x+t.width,bottom:t.y+t.height}}async function floating_ui_core_browser_min_s(t,e){var n;void 0===e&&(e={});const{x:o,y:i,platform:r,rects:s,elements:c,strategy:f}=t,{boundary:u="clippingAncestors",rootBoundary:m="viewport",elementContext:g="floating",altBoundary:d=!1,padding:p=0}=e,h=a(p),y=c[d?"floating"===g?"reference":"floating":g],x=l(await r.getClippingRect({element:null==(n=await(null==r.isElement?void 0:r.isElement(y)))||n?y:y.contextElement||await(null==r.getDocumentElement?void 0:r.getDocumentElement(c.floating)),boundary:u,rootBoundary:m,strategy:f})),w="floating"===g?{...s.floating,x:o,y:i}:s.reference,v=await(null==r.getOffsetParent?void 0:r.getOffsetParent(c.floating)),b=await(null==r.isElement?void 0:r.isElement(v))&&await(null==r.getScale?void 0:r.getScale(v))||{x:1,y:1},R=l(r.convertOffsetParentRelativeRectToViewportRelativeRect?await r.convertOffsetParentRelativeRectToViewportRelativeRect({rect:w,offsetParent:v,strategy:f}):w);return{top:(x.top-R.top+h.top)/b.y,bottom:(R.bottom-x.bottom+h.bottom)/b.y,left:(x.left-R.left+h.left)/b.x,right:(R.right-x.right+h.right)/b.x}}const floating_ui_core_browser_min_c=Math.min,f=Math.max;function u(t,e,n){return f(t,floating_ui_core_browser_min_c(e,n))}const floating_ui_core_browser_min_m=n=>({name:"arrow",options:n,async fn(i){const{element:r,padding:l=0}=n||{},{x:s,y:c,placement:f,rects:m,platform:g}=i;if(null==r)return{};const d=a(l),p={x:s,y:c},h=o(f),y=e(h),x=await g.getDimensions(r),w="y"===h?"top":"left",v="y"===h?"bottom":"right",b=m.reference[y]+m.reference[h]-p[h]-m.floating[y],R=p[h]-m.reference[h],A=await(null==g.getOffsetParent?void 0:g.getOffsetParent(r));let P=A?"y"===h?A.clientHeight||0:A.clientWidth||0:0;0===P&&(P=m.floating[y]);const T=b/2-R/2,O=d[w],D=P-x[y]-d[v],E=P/2-x[y]/2+T,L=u(O,E,D),k=null!=t(f)&&E!=L&&m.reference[y]/2-(E<O?d[w]:d[v])-x[y]/2<0;return{[h]:p[h]-(k?E<O?O-E:D-E:0),data:{[h]:L,centerOffset:E-L}}}}),floating_ui_core_browser_min_g=["top","right","bottom","left"],d=floating_ui_core_browser_min_g.reduce(((t,e)=>t.concat(e,e+"-start",e+"-end")),[]),p={left:"right",right:"left",bottom:"top",top:"bottom"};function h(t){return t.replace(/left|right|bottom|top/g,(t=>p[t]))}function floating_ui_core_browser_min_y(n,i,r){void 0===r&&(r=!1);const a=t(n),l=o(n),s=e(l);let c="x"===l?a===(r?"end":"start")?"right":"left":"start"===a?"bottom":"top";return i.reference[s]>i.floating[s]&&(c=h(c)),{main:c,cross:h(c)}}const floating_ui_core_browser_min_x={start:"end",end:"start"};function floating_ui_core_browser_min_w(t){return t.replace(/start|end/g,(t=>floating_ui_core_browser_min_x[t]))}const floating_ui_core_browser_min_v=function(e){return void 0===e&&(e={}),{name:"autoPlacement",options:e,async fn(o){var i,r,a;const{rects:l,middlewareData:c,placement:f,platform:u,elements:m}=o,{alignment:g,allowedPlacements:p=d,autoAlignment:h=!0,...x}=e,v=void 0!==g||p===d?function(e,o,i){return(e?[...i.filter((n=>t(n)===e)),...i.filter((n=>t(n)!==e))]:i.filter((t=>n(t)===t))).filter((n=>!e||t(n)===e||!!o&&floating_ui_core_browser_min_w(n)!==n))}(g||null,h,p):p,b=await floating_ui_core_browser_min_s(o,x),R=(null==(i=c.autoPlacement)?void 0:i.index)||0,A=v[R];if(null==A)return{};const{main:P,cross:T}=floating_ui_core_browser_min_y(A,l,await(null==u.isRTL?void 0:u.isRTL(m.floating)));if(f!==A)return{reset:{placement:v[0]}};const O=[b[n(A)],b[P],b[T]],D=[...(null==(r=c.autoPlacement)?void 0:r.overflows)||[],{placement:A,overflows:O}],E=v[R+1];if(E)return{data:{index:R+1,overflows:D},reset:{placement:E}};const L=D.slice().sort(((t,e)=>t.overflows[0]-e.overflows[0])),k=null==(a=L.find((t=>{let{overflows:e}=t;return e.every((t=>t<=0))})))?void 0:a.placement,B=k||L[0].placement;return B!==f?{data:{index:R+1,overflows:D},reset:{placement:B}}:{}}}};const floating_ui_core_browser_min_b=function(e){return void 0===e&&(e={}),{name:"flip",options:e,async fn(o){var i;const{placement:r,middlewareData:a,rects:l,initialPlacement:c,platform:f,elements:u}=o,{mainAxis:m=!0,crossAxis:g=!0,fallbackPlacements:d,fallbackStrategy:p="bestFit",fallbackAxisSideDirection:x="none",flipAlignment:v=!0,...b}=e,R=n(r),A=n(c)===c,P=await(null==f.isRTL?void 0:f.isRTL(u.floating)),T=d||(A||!v?[h(c)]:function(t){const e=h(t);return[floating_ui_core_browser_min_w(t),e,floating_ui_core_browser_min_w(e)]}(c));d||"none"===x||T.push(...function(e,o,i,r){const a=t(e);let l=function(t,e,n){const o=["left","right"],i=["right","left"],r=["top","bottom"],a=["bottom","top"];switch(t){case"top":case"bottom":return n?e?i:o:e?o:i;case"left":case"right":return e?r:a;default:return[]}}(n(e),"start"===i,r);return a&&(l=l.map((t=>t+"-"+a)),o&&(l=l.concat(l.map(floating_ui_core_browser_min_w)))),l}(c,v,x,P));const O=[c,...T],D=await floating_ui_core_browser_min_s(o,b),E=[];let L=(null==(i=a.flip)?void 0:i.overflows)||[];if(m&&E.push(D[R]),g){const{main:t,cross:e}=floating_ui_core_browser_min_y(r,l,P);E.push(D[t],D[e])}if(L=[...L,{placement:r,overflows:E}],!E.every((t=>t<=0))){var k;const t=((null==(k=a.flip)?void 0:k.index)||0)+1,e=O[t];if(e)return{data:{index:t,overflows:L},reset:{placement:e}};let n="bottom";switch(p){case"bestFit":{var B;const t=null==(B=L.map((t=>[t,t.overflows.filter((t=>t>0)).reduce(((t,e)=>t+e),0)])).sort(((t,e)=>t[1]-e[1]))[0])?void 0:B[0].placement;t&&(n=t);break}case"initialPlacement":n=c}if(r!==n)return{reset:{placement:n}}}return{}}}};function floating_ui_core_browser_min_R(t,e){return{top:t.top-e.height,right:t.right-e.width,bottom:t.bottom-e.height,left:t.left-e.width}}function floating_ui_core_browser_min_A(t){return floating_ui_core_browser_min_g.some((e=>t[e]>=0))}const floating_ui_core_browser_min_P=function(t){return void 0===t&&(t={}),{name:"hide",options:t,async fn(e){const{strategy:n="referenceHidden",...o}=t,{rects:i}=e;switch(n){case"referenceHidden":{const t=floating_ui_core_browser_min_R(await floating_ui_core_browser_min_s(e,{...o,elementContext:"reference"}),i.reference);return{data:{referenceHiddenOffsets:t,referenceHidden:floating_ui_core_browser_min_A(t)}}}case"escaped":{const t=floating_ui_core_browser_min_R(await floating_ui_core_browser_min_s(e,{...o,altBoundary:!0}),i.floating);return{data:{escapedOffsets:t,escaped:floating_ui_core_browser_min_A(t)}}}default:return{}}}}},floating_ui_core_browser_min_T=function(t){return void 0===t&&(t={}),{name:"inline",options:t,async fn(e){const{placement:i,elements:r,rects:s,platform:u,strategy:m}=e,{padding:g=2,x:d,y:p}=t,h=l(u.convertOffsetParentRelativeRectToViewportRelativeRect?await u.convertOffsetParentRelativeRectToViewportRelativeRect({rect:s.reference,offsetParent:await(null==u.getOffsetParent?void 0:u.getOffsetParent(r.floating)),strategy:m}):s.reference),y=await(null==u.getClientRects?void 0:u.getClientRects(r.reference))||[],x=a(g);const w=await u.getElementRects({reference:{getBoundingClientRect:function(){if(2===y.length&&y[0].left>y[1].right&&null!=d&&null!=p)return y.find((t=>d>t.left-x.left&&d<t.right+x.right&&p>t.top-x.top&&p<t.bottom+x.bottom))||h;if(y.length>=2){if("x"===o(i)){const t=y[0],e=y[y.length-1],o="top"===n(i),r=t.top,a=e.bottom,l=o?t.left:e.left,s=o?t.right:e.right;return{top:r,bottom:a,left:l,right:s,width:s-l,height:a-r,x:l,y:r}}const t="left"===n(i),e=f(...y.map((t=>t.right))),r=floating_ui_core_browser_min_c(...y.map((t=>t.left))),a=y.filter((n=>t?n.left===r:n.right===e)),l=a[0].top,s=a[a.length-1].bottom;return{top:l,bottom:s,left:r,right:e,width:e-r,height:s-l,x:r,y:l}}return h}},floating:r.floating,strategy:m});return s.reference.x!==w.reference.x||s.reference.y!==w.reference.y||s.reference.width!==w.reference.width||s.reference.height!==w.reference.height?{reset:{rects:w}}:{}}}};const floating_ui_core_browser_min_O=function(e){return void 0===e&&(e=0),{name:"offset",options:e,async fn(i){const{x:r,y:a}=i,l=await async function(e,i){const{placement:r,platform:a,elements:l}=e,s=await(null==a.isRTL?void 0:a.isRTL(l.floating)),c=n(r),f=t(r),u="x"===o(r),m=["left","top"].includes(c)?-1:1,g=s&&u?-1:1,d="function"==typeof i?i(e):i;let{mainAxis:p,crossAxis:h,alignmentAxis:y}="number"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return f&&"number"==typeof y&&(h="end"===f?-1*y:y),u?{x:h*g,y:p*m}:{x:p*m,y:h*g}}(i,e);return{x:r+l.x,y:a+l.y,data:l}}}};function floating_ui_core_browser_min_D(t){return"x"===t?"y":"x"}const floating_ui_core_browser_min_E=function(t){return void 0===t&&(t={}),{name:"shift",options:t,async fn(e){const{x:i,y:r,placement:a}=e,{mainAxis:l=!0,crossAxis:c=!1,limiter:f={fn:t=>{let{x:e,y:n}=t;return{x:e,y:n}}},...m}=t,g={x:i,y:r},d=await floating_ui_core_browser_min_s(e,m),p=o(n(a)),h=floating_ui_core_browser_min_D(p);let y=g[p],x=g[h];if(l){const t="y"===p?"bottom":"right";y=u(y+d["y"===p?"top":"left"],y,y-d[t])}if(c){const t="y"===h?"bottom":"right";x=u(x+d["y"===h?"top":"left"],x,x-d[t])}const w=f.fn({...e,[p]:y,[h]:x});return{...w,data:{x:w.x-i,y:w.y-r}}}}},floating_ui_core_browser_min_L=function(t){return void 0===t&&(t={}),{options:t,fn(e){const{x:i,y:r,placement:a,rects:l,middlewareData:s}=e,{offset:c=0,mainAxis:f=!0,crossAxis:u=!0}=t,m={x:i,y:r},g=o(a),d=floating_ui_core_browser_min_D(g);let p=m[g],h=m[d];const y="function"==typeof c?c(e):c,x="number"==typeof y?{mainAxis:y,crossAxis:0}:{mainAxis:0,crossAxis:0,...y};if(f){const t="y"===g?"height":"width",e=l.reference[g]-l.floating[t]+x.mainAxis,n=l.reference[g]+l.reference[t]-x.mainAxis;p<e?p=e:p>n&&(p=n)}if(u){var w,v;const t="y"===g?"width":"height",e=["top","left"].includes(n(a)),o=l.reference[d]-l.floating[t]+(e&&(null==(w=s.offset)?void 0:w[d])||0)+(e?0:x.crossAxis),i=l.reference[d]+l.reference[t]+(e?0:(null==(v=s.offset)?void 0:v[d])||0)-(e?x.crossAxis:0);h<o?h=o:h>i&&(h=i)}return{[g]:p,[d]:h}}}},floating_ui_core_browser_min_k=function(e){return void 0===e&&(e={}),{name:"size",options:e,async fn(o){const{placement:i,rects:r,platform:a,elements:l}=o,{apply:c=(()=>{}),...u}=e,m=await floating_ui_core_browser_min_s(o,u),g=n(i),d=t(i);let p,h;"top"===g||"bottom"===g?(p=g,h=d===(await(null==a.isRTL?void 0:a.isRTL(l.floating))?"start":"end")?"left":"right"):(h=g,p="end"===d?"top":"bottom");const y=f(m.left,0),x=f(m.right,0),w=f(m.top,0),v=f(m.bottom,0),b={availableHeight:r.floating.height-(["left","right"].includes(i)?2*(0!==w||0!==v?w+v:f(m.top,m.bottom)):m[p]),availableWidth:r.floating.width-(["top","bottom"].includes(i)?2*(0!==y||0!==x?y+x:f(m.left,m.right)):m[h])};await c({...o,...b});const R=await a.getDimensions(l.floating);return r.floating.width!==R.width||r.floating.height!==R.height?{reset:{rects:!0}}:{}}}};

;// CONCATENATED MODULE: ./node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.min.mjs
function floating_ui_dom_browser_min_n(t){var e;return(null==(e=t.ownerDocument)?void 0:e.defaultView)||window}function floating_ui_dom_browser_min_o(t){return floating_ui_dom_browser_min_n(t).getComputedStyle(t)}function floating_ui_dom_browser_min_i(t){return floating_ui_dom_browser_min_f(t)?(t.nodeName||"").toLowerCase():""}let floating_ui_dom_browser_min_r;function floating_ui_dom_browser_min_l(){if(floating_ui_dom_browser_min_r)return floating_ui_dom_browser_min_r;const t=navigator.userAgentData;return t&&Array.isArray(t.brands)?(floating_ui_dom_browser_min_r=t.brands.map((t=>t.brand+"/"+t.version)).join(" "),floating_ui_dom_browser_min_r):navigator.userAgent}function floating_ui_dom_browser_min_c(t){return t instanceof floating_ui_dom_browser_min_n(t).HTMLElement}function floating_ui_dom_browser_min_s(t){return t instanceof floating_ui_dom_browser_min_n(t).Element}function floating_ui_dom_browser_min_f(t){return t instanceof floating_ui_dom_browser_min_n(t).Node}function floating_ui_dom_browser_min_u(t){if("undefined"==typeof ShadowRoot)return!1;return t instanceof floating_ui_dom_browser_min_n(t).ShadowRoot||t instanceof ShadowRoot}function floating_ui_dom_browser_min_a(t){const{overflow:e,overflowX:n,overflowY:i,display:r}=floating_ui_dom_browser_min_o(t);return/auto|scroll|overlay|hidden|clip/.test(e+i+n)&&!["inline","contents"].includes(r)}function floating_ui_dom_browser_min_d(t){return["table","td","th"].includes(floating_ui_dom_browser_min_i(t))}function floating_ui_dom_browser_min_h(t){const e=/firefox/i.test(floating_ui_dom_browser_min_l()),n=floating_ui_dom_browser_min_o(t),i=n.backdropFilter||n.WebkitBackdropFilter;return"none"!==n.transform||"none"!==n.perspective||!!i&&"none"!==i||e&&"filter"===n.willChange||e&&!!n.filter&&"none"!==n.filter||["transform","perspective"].some((t=>n.willChange.includes(t)))||["paint","layout","strict","content"].some((t=>{const e=n.contain;return null!=e&&e.includes(t)}))}function floating_ui_dom_browser_min_p(){return!/^((?!chrome|android).)*safari/i.test(floating_ui_dom_browser_min_l())}function floating_ui_dom_browser_min_g(t){return["html","body","#document"].includes(floating_ui_dom_browser_min_i(t))}const floating_ui_dom_browser_min_m=Math.min,floating_ui_dom_browser_min_y=Math.max,floating_ui_dom_browser_min_x=Math.round;function floating_ui_dom_browser_min_w(t){const e=floating_ui_dom_browser_min_o(t);let n=parseFloat(e.width),i=parseFloat(e.height);const r=t.offsetWidth,l=t.offsetHeight,c=floating_ui_dom_browser_min_x(n)!==r||floating_ui_dom_browser_min_x(i)!==l;return c&&(n=r,i=l),{width:n,height:i,fallback:c}}function floating_ui_dom_browser_min_v(t){return floating_ui_dom_browser_min_s(t)?t:t.contextElement}const floating_ui_dom_browser_min_b={x:1,y:1};function floating_ui_dom_browser_min_L(t){const e=floating_ui_dom_browser_min_v(t);if(!floating_ui_dom_browser_min_c(e))return floating_ui_dom_browser_min_b;const n=e.getBoundingClientRect(),{width:o,height:i,fallback:r}=floating_ui_dom_browser_min_w(e);let l=(r?floating_ui_dom_browser_min_x(n.width):n.width)/o,s=(r?floating_ui_dom_browser_min_x(n.height):n.height)/i;return l&&Number.isFinite(l)||(l=1),s&&Number.isFinite(s)||(s=1),{x:l,y:s}}function floating_ui_dom_browser_min_E(t,e,o,i){var r,l;void 0===e&&(e=!1),void 0===o&&(o=!1);const c=t.getBoundingClientRect(),f=floating_ui_dom_browser_min_v(t);let u=floating_ui_dom_browser_min_b;e&&(i?floating_ui_dom_browser_min_s(i)&&(u=floating_ui_dom_browser_min_L(i)):u=floating_ui_dom_browser_min_L(t));const a=f?floating_ui_dom_browser_min_n(f):window,d=!floating_ui_dom_browser_min_p()&&o;let h=(c.left+(d&&(null==(r=a.visualViewport)?void 0:r.offsetLeft)||0))/u.x,g=(c.top+(d&&(null==(l=a.visualViewport)?void 0:l.offsetTop)||0))/u.y,m=c.width/u.x,y=c.height/u.y;if(f){const t=floating_ui_dom_browser_min_n(f),e=i&&floating_ui_dom_browser_min_s(i)?floating_ui_dom_browser_min_n(i):i;let o=t.frameElement;for(;o&&i&&e!==t;){const t=floating_ui_dom_browser_min_L(o),e=o.getBoundingClientRect(),i=getComputedStyle(o);e.x+=(o.clientLeft+parseFloat(i.paddingLeft))*t.x,e.y+=(o.clientTop+parseFloat(i.paddingTop))*t.y,h*=t.x,g*=t.y,m*=t.x,y*=t.y,h+=e.x,g+=e.y,o=floating_ui_dom_browser_min_n(o).frameElement}}return{width:m,height:y,top:g,right:h+m,bottom:g+y,left:h,x:h,y:g}}function floating_ui_dom_browser_min_R(t){return((floating_ui_dom_browser_min_f(t)?t.ownerDocument:t.document)||window.document).documentElement}function floating_ui_dom_browser_min_T(t){return floating_ui_dom_browser_min_s(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function floating_ui_dom_browser_min_C(t){return floating_ui_dom_browser_min_E(floating_ui_dom_browser_min_R(t)).left+floating_ui_dom_browser_min_T(t).scrollLeft}function floating_ui_dom_browser_min_F(t,e,n){const o=floating_ui_dom_browser_min_c(e),r=floating_ui_dom_browser_min_R(e),l=floating_ui_dom_browser_min_E(t,!0,"fixed"===n,e);let s={scrollLeft:0,scrollTop:0};const f={x:0,y:0};if(o||!o&&"fixed"!==n)if(("body"!==floating_ui_dom_browser_min_i(e)||floating_ui_dom_browser_min_a(r))&&(s=floating_ui_dom_browser_min_T(e)),floating_ui_dom_browser_min_c(e)){const t=floating_ui_dom_browser_min_E(e,!0);f.x=t.x+e.clientLeft,f.y=t.y+e.clientTop}else r&&(f.x=floating_ui_dom_browser_min_C(r));return{x:l.left+s.scrollLeft-f.x,y:l.top+s.scrollTop-f.y,width:l.width,height:l.height}}function floating_ui_dom_browser_min_W(t){if("html"===floating_ui_dom_browser_min_i(t))return t;const e=t.assignedSlot||t.parentNode||(floating_ui_dom_browser_min_u(t)?t.host:null)||floating_ui_dom_browser_min_R(t);return floating_ui_dom_browser_min_u(e)?e.host:e}function floating_ui_dom_browser_min_D(t){return floating_ui_dom_browser_min_c(t)&&"fixed"!==floating_ui_dom_browser_min_o(t).position?t.offsetParent:null}function floating_ui_dom_browser_min_S(t){const e=floating_ui_dom_browser_min_n(t);let r=floating_ui_dom_browser_min_D(t);for(;r&&floating_ui_dom_browser_min_d(r)&&"static"===floating_ui_dom_browser_min_o(r).position;)r=floating_ui_dom_browser_min_D(r);return r&&("html"===floating_ui_dom_browser_min_i(r)||"body"===floating_ui_dom_browser_min_i(r)&&"static"===floating_ui_dom_browser_min_o(r).position&&!floating_ui_dom_browser_min_h(r))?e:r||function(t){let e=floating_ui_dom_browser_min_W(t);for(;floating_ui_dom_browser_min_c(e)&&!floating_ui_dom_browser_min_g(e);){if(floating_ui_dom_browser_min_h(e))return e;e=floating_ui_dom_browser_min_W(e)}return null}(t)||e}function floating_ui_dom_browser_min_A(t){const e=floating_ui_dom_browser_min_W(t);return floating_ui_dom_browser_min_g(e)?t.ownerDocument.body:floating_ui_dom_browser_min_c(e)&&floating_ui_dom_browser_min_a(e)?e:floating_ui_dom_browser_min_A(e)}function floating_ui_dom_browser_min_H(t,e){var o;void 0===e&&(e=[]);const i=floating_ui_dom_browser_min_A(t),r=i===(null==(o=t.ownerDocument)?void 0:o.body),l=floating_ui_dom_browser_min_n(i);return r?e.concat(l,l.visualViewport||[],floating_ui_dom_browser_min_a(i)?i:[]):e.concat(i,floating_ui_dom_browser_min_H(i))}function floating_ui_dom_browser_min_O(e,i,r){return"viewport"===i?l(function(t,e){const o=floating_ui_dom_browser_min_n(t),i=floating_ui_dom_browser_min_R(t),r=o.visualViewport;let l=i.clientWidth,c=i.clientHeight,s=0,f=0;if(r){l=r.width,c=r.height;const t=floating_ui_dom_browser_min_p();(t||!t&&"fixed"===e)&&(s=r.offsetLeft,f=r.offsetTop)}return{width:l,height:c,x:s,y:f}}(e,r)):floating_ui_dom_browser_min_s(i)?function(t,e){const n=floating_ui_dom_browser_min_E(t,!0,"fixed"===e),o=n.top+t.clientTop,i=n.left+t.clientLeft,r=floating_ui_dom_browser_min_c(t)?floating_ui_dom_browser_min_L(t):{x:1,y:1},l=t.clientWidth*r.x,s=t.clientHeight*r.y,f=i*r.x,u=o*r.y;return{top:u,left:f,right:f+l,bottom:u+s,x:f,y:u,width:l,height:s}}(i,r):l(function(t){var e;const n=floating_ui_dom_browser_min_R(t),i=floating_ui_dom_browser_min_T(t),r=null==(e=t.ownerDocument)?void 0:e.body,l=floating_ui_dom_browser_min_y(n.scrollWidth,n.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),c=floating_ui_dom_browser_min_y(n.scrollHeight,n.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0);let s=-i.scrollLeft+floating_ui_dom_browser_min_C(t);const f=-i.scrollTop;return"rtl"===floating_ui_dom_browser_min_o(r||n).direction&&(s+=floating_ui_dom_browser_min_y(n.clientWidth,r?r.clientWidth:0)-l),{width:l,height:c,x:s,y:f}}(floating_ui_dom_browser_min_R(e)))}const floating_ui_dom_browser_min_P={getClippingRect:function(t){let{element:e,boundary:n,rootBoundary:r,strategy:l}=t;const c="clippingAncestors"===n?function(t,e){const n=e.get(t);if(n)return n;let r=floating_ui_dom_browser_min_H(t).filter((t=>floating_ui_dom_browser_min_s(t)&&"body"!==floating_ui_dom_browser_min_i(t))),l=null;const c="fixed"===floating_ui_dom_browser_min_o(t).position;let f=c?floating_ui_dom_browser_min_W(t):t;for(;floating_ui_dom_browser_min_s(f)&&!floating_ui_dom_browser_min_g(f);){const t=floating_ui_dom_browser_min_o(f),e=floating_ui_dom_browser_min_h(f);(c?e||l:e||"static"!==t.position||!l||!["absolute","fixed"].includes(l.position))?l=t:r=r.filter((t=>t!==f)),f=floating_ui_dom_browser_min_W(f)}return e.set(t,r),r}(e,this._c):[].concat(n),f=[...c,r],u=f[0],a=f.reduce(((t,n)=>{const o=floating_ui_dom_browser_min_O(e,n,l);return t.top=floating_ui_dom_browser_min_y(o.top,t.top),t.right=floating_ui_dom_browser_min_m(o.right,t.right),t.bottom=floating_ui_dom_browser_min_m(o.bottom,t.bottom),t.left=floating_ui_dom_browser_min_y(o.left,t.left),t}),floating_ui_dom_browser_min_O(e,u,l));return{width:a.right-a.left,height:a.bottom-a.top,x:a.left,y:a.top}},convertOffsetParentRelativeRectToViewportRelativeRect:function(t){let{rect:e,offsetParent:n,strategy:o}=t;const r=floating_ui_dom_browser_min_c(n),l=floating_ui_dom_browser_min_R(n);if(n===l)return e;let s={scrollLeft:0,scrollTop:0},f={x:1,y:1};const u={x:0,y:0};if((r||!r&&"fixed"!==o)&&(("body"!==floating_ui_dom_browser_min_i(n)||floating_ui_dom_browser_min_a(l))&&(s=floating_ui_dom_browser_min_T(n)),floating_ui_dom_browser_min_c(n))){const t=floating_ui_dom_browser_min_E(n);f=floating_ui_dom_browser_min_L(n),u.x=t.x+n.clientLeft,u.y=t.y+n.clientTop}return{width:e.width*f.x,height:e.height*f.y,x:e.x*f.x-s.scrollLeft*f.x+u.x,y:e.y*f.y-s.scrollTop*f.y+u.y}},isElement:floating_ui_dom_browser_min_s,getDimensions:function(t){return floating_ui_dom_browser_min_w(t)},getOffsetParent:floating_ui_dom_browser_min_S,getDocumentElement:floating_ui_dom_browser_min_R,getScale:floating_ui_dom_browser_min_L,async getElementRects(t){let{reference:e,floating:n,strategy:o}=t;const i=this.getOffsetParent||floating_ui_dom_browser_min_S,r=this.getDimensions;return{reference:floating_ui_dom_browser_min_F(e,await i(n),o),floating:{x:0,y:0,...await r(n)}}},getClientRects:t=>Array.from(t.getClientRects()),isRTL:t=>"rtl"===floating_ui_dom_browser_min_o(t).direction};function floating_ui_dom_browser_min_z(t,e,n,o){void 0===o&&(o={});const{ancestorScroll:i=!0,ancestorResize:r=!0,elementResize:l=!0,animationFrame:c=!1}=o,f=i&&!c,u=f||r?[...floating_ui_dom_browser_min_s(t)?floating_ui_dom_browser_min_H(t):t.contextElement?floating_ui_dom_browser_min_H(t.contextElement):[],...floating_ui_dom_browser_min_H(e)]:[];u.forEach((t=>{f&&t.addEventListener("scroll",n,{passive:!0}),r&&t.addEventListener("resize",n)}));let a,d=null;if(l){let o=!0;d=new ResizeObserver((()=>{o||n(),o=!1})),floating_ui_dom_browser_min_s(t)&&!c&&d.observe(t),floating_ui_dom_browser_min_s(t)||!t.contextElement||c||d.observe(t.contextElement),d.observe(e)}let h=c?floating_ui_dom_browser_min_E(t):null;return c&&function e(){const o=floating_ui_dom_browser_min_E(t);!h||o.x===h.x&&o.y===h.y&&o.width===h.width&&o.height===h.height||n();h=o,a=requestAnimationFrame(e)}(),n(),()=>{var t;u.forEach((t=>{f&&t.removeEventListener("scroll",n),r&&t.removeEventListener("resize",n)})),null==(t=d)||t.disconnect(),d=null,c&&cancelAnimationFrame(a)}}const floating_ui_dom_browser_min_V=(t,n,o)=>{const i=new Map,r={platform:floating_ui_dom_browser_min_P,...o},l={...r.platform,_c:i};return floating_ui_core_browser_min_r(t,n,{...r,platform:l})};

;// CONCATENATED MODULE: ./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js






/**
 * Positions an inner element of the floating element such that it is centered
 * to the reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */
const arrow = options => {
  const {
    element,
    padding
  } = options;
  function isRef(value) {
    return Object.prototype.hasOwnProperty.call(value, 'current');
  }
  return {
    name: 'arrow',
    options,
    fn(args) {
      if (isRef(element)) {
        if (element.current != null) {
          return floating_ui_core_browser_min_m({
            element: element.current,
            padding
          }).fn(args);
        }
        return {};
      } else if (element) {
        return floating_ui_core_browser_min_m({
          element,
          padding
        }).fn(args);
      }
      return {};
    }
  };
};
var index = typeof document !== 'undefined' ? react_production_min.useLayoutEffect : react_production_min.useEffect;

// Fork of `fast-deep-equal` that only does the comparisons we need and compares
// functions
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === 'function' && a.toString() === b.toString()) {
    return true;
  }
  let length, i, keys;
  if (a && b && typeof a == 'object') {
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0;) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0;) {
      const key = keys[i];
      if (key === '_owner' && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function useLatestRef(value) {
  const ref = react_production_min.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = 'bottom',
    strategy = 'absolute',
    middleware = [],
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = react_production_min.useState({
    x: null,
    y: null,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = react_production_min.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const referenceRef = react_production_min.useRef(null);
  const floatingRef = react_production_min.useRef(null);
  const dataRef = react_production_min.useRef(data);
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const [reference, _setReference] = react_production_min.useState(null);
  const [floating, _setFloating] = react_production_min.useState(null);
  const setReference = react_production_min.useCallback(node => {
    if (referenceRef.current !== node) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = react_production_min.useCallback(node => {
    if (floatingRef.current !== node) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const update = react_production_min.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    floating_ui_dom_browser_min_V(referenceRef.current, floatingRef.current, {
      middleware: latestMiddleware,
      placement,
      strategy
    }).then(data => {
      const fullData = {
        ...data,
        isPositioned: true
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        react_dom_production_min.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData(data => ({
        ...data,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = react_production_min.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (reference && floating) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(reference, floating, update);
      } else {
        update();
      }
    }
  }, [reference, floating, update, whileElementsMountedRef]);
  const refs = react_production_min.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = react_production_min.useMemo(() => ({
    reference,
    floating
  }), [reference, floating]);
  return react_production_min.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    reference: setReference,
    floating: setFloating
  }), [data, update, refs, elements, setReference, setFloating]);
}

;// CONCATENATED MODULE: ./node_modules/@floating-ui/react-dom-interactions/dist/floating-ui.react-dom-interactions.esm.js






var floating_ui_react_dom_interactions_esm_index = typeof document !== 'undefined' ? react_production_min.useLayoutEffect : react_production_min.useEffect;
function createPubSub() {
  const map = new Map();
  return {
    emit(event, data) {
      var _map$get;
      (_map$get = map.get(event)) == null ? void 0 : _map$get.forEach(handler => handler(data));
    },
    on(event, listener) {
      map.set(event, [...(map.get(event) || []), listener]);
    },
    off(event, listener) {
      map.set(event, (map.get(event) || []).filter(l => l !== listener));
    }
  };
}
let serverHandoffComplete = false;
let count = 0;
const genId = () => "floating-ui-" + count++;
function useFloatingId() {
  const [id, setId] = react_production_min.useState(() => serverHandoffComplete ? genId() : undefined);
  floating_ui_react_dom_interactions_esm_index(() => {
    if (id == null) {
      setId(genId());
    } // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  react_production_min.useEffect(() => {
    if (!serverHandoffComplete) {
      serverHandoffComplete = true;
    }
  }, []);
  return id;
} // `toString()` prevents bundlers from trying to `import { useId } from 'react'`

const floating_ui_react_dom_interactions_esm_useReactId = react_namespaceObject[/*#__PURE__*/'useId'.toString()];
/**
 * Uses React 18's built-in `useId()` when available, or falls back to a
 * slightly less performant (requiring a double render) implementation for
 * earlier React versions.
 * @see https://floating-ui.com/docs/useId
 */

const floating_ui_react_dom_interactions_esm_useId = floating_ui_react_dom_interactions_esm_useReactId != null ? floating_ui_react_dom_interactions_esm_useReactId : useFloatingId;
const FloatingNodeContext = /*#__PURE__*/react_production_min.createContext(null);
const FloatingTreeContext = /*#__PURE__*/react_production_min.createContext(null);
const useFloatingParentNodeId = () => {
  var _React$useContext$id, _React$useContext;
  return (_React$useContext$id = (_React$useContext = react_production_min.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) != null ? _React$useContext$id : null;
};
const useFloatingTree = () => react_production_min.useContext(FloatingTreeContext);
/**
 * Registers a node into the floating tree, returning its id.
 */

const useFloatingNodeId = () => {
  const id = floating_ui_react_dom_interactions_esm_useId();
  const tree = useFloatingTree();
  const parentId = useFloatingParentNodeId();
  floating_ui_react_dom_interactions_esm_index(() => {
    const node = {
      id,
      parentId
    };
    tree == null ? void 0 : tree.addNode(node);
    return () => {
      tree == null ? void 0 : tree.removeNode(node);
    };
  }, [tree, id, parentId]);
  return id;
};
/**
 * Provides parent node context for nested floating elements.
 * @see https://floating-ui.com/docs/FloatingTree
 */

const FloatingNode = _ref => {
  let {
    children,
    id
  } = _ref;
  const parentId = useFloatingParentNodeId();
  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {
    value: React.useMemo(() => ({
      id,
      parentId
    }), [id, parentId])
  }, children);
};
/**
 * Provides context for nested floating elements when they are not children of
 * each other on the DOM (i.e. portalled to a common node, rather than their
 * respective parent).
 * @see https://floating-ui.com/docs/FloatingTree
 */

const FloatingTree = _ref2 => {
  let {
    children
  } = _ref2;
  const nodesRef = React.useRef([]);
  const addNode = React.useCallback(node => {
    nodesRef.current = [...nodesRef.current, node];
  }, []);
  const removeNode = React.useCallback(node => {
    nodesRef.current = nodesRef.current.filter(n => n !== node);
  }, []);
  const events = React.useState(() => createPubSub())[0];
  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {
    value: React.useMemo(() => ({
      nodesRef,
      addNode,
      removeNode,
      events
    }), [nodesRef, addNode, removeNode, events])
  }, children);
};
function getDocument(floating) {
  var _floating$ownerDocume;
  return (_floating$ownerDocume = floating == null ? void 0 : floating.ownerDocument) != null ? _floating$ownerDocume : document;
}
function getWindow(value) {
  var _getDocument$defaultV;
  return (_getDocument$defaultV = getDocument(value).defaultView) != null ? _getDocument$defaultV : window;
}
function floating_ui_react_dom_interactions_esm_isElement(value) {
  return value ? value instanceof getWindow(value).Element : false;
}
function isHTMLElement(value) {
  return value ? value instanceof getWindow(value).HTMLElement : false;
}

// `toString()` prevents bundlers from trying to `import { useInsertionEffect } from 'react'`
const floating_ui_react_dom_interactions_esm_useInsertionEffect = react_namespaceObject[/*#__PURE__*/'useInsertionEffect'.toString()];
function useEvent(callback) {
  const ref = react_production_min.useRef(() => {
    if (false) {}
  });
  if (floating_ui_react_dom_interactions_esm_useInsertionEffect) {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    floating_ui_react_dom_interactions_esm_useInsertionEffect(() => {
      ref.current = callback;
    });
  } else {
    ref.current = callback;
  }
  return react_production_min.useCallback(function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current(...args);
  }, []);
}
function floating_ui_react_dom_interactions_esm_useFloating(_temp) {
  let {
    open = false,
    onOpenChange: unstable_onOpenChange,
    whileElementsMounted,
    placement,
    middleware,
    strategy,
    nodeId
  } = _temp === void 0 ? {} : _temp;
  const [domReference, setDomReference] = react_production_min.useState(null);
  const tree = useFloatingTree();
  const domReferenceRef = react_production_min.useRef(null);
  const dataRef = react_production_min.useRef({});
  const events = react_production_min.useState(() => createPubSub())[0];
  const position = useFloating({
    placement,
    middleware,
    strategy,
    whileElementsMounted
  });
  const onOpenChange = useEvent(unstable_onOpenChange);
  const refs = react_production_min.useMemo(() => ({
    ...position.refs,
    domReference: domReferenceRef
  }), [position.refs]);
  const context = react_production_min.useMemo(() => ({
    ...position,
    refs,
    dataRef,
    nodeId,
    events,
    open,
    onOpenChange,
    _: {
      domReference
    }
  }), [position, nodeId, events, open, onOpenChange, refs, domReference]);
  floating_ui_react_dom_interactions_esm_index(() => {
    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);
    if (node) {
      node.context = context;
    }
  });
  const {
    reference
  } = position;
  const setReference = react_production_min.useCallback(node => {
    if (floating_ui_react_dom_interactions_esm_isElement(node) || node === null) {
      context.refs.domReference.current = node;
      setDomReference(node);
    }
    reference(node);
  }, [reference, context.refs]);
  return react_production_min.useMemo(() => ({
    ...position,
    context,
    refs,
    reference: setReference
  }), [position, refs, context, setReference]);
}
function mergeProps(userProps, propsList, elementKey) {
  const map = new Map();
  return {
    ...(elementKey === 'floating' && {
      tabIndex: -1
    }),
    ...userProps,
    ...propsList.map(value => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {
      if (!props) {
        return acc;
      }
      Object.entries(props).forEach(_ref => {
        let [key, value] = _ref;
        if (key.indexOf('on') === 0) {
          if (!map.has(key)) {
            map.set(key, []);
          }
          if (typeof value === 'function') {
            var _map$get;
            (_map$get = map.get(key)) == null ? void 0 : _map$get.push(value);
            acc[key] = function () {
              var _map$get2;
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.forEach(fn => fn(...args));
            };
          }
        } else {
          acc[key] = value;
        }
      });
      return acc;
    }, {})
  };
}
const useInteractions = function (propsList) {
  if (propsList === void 0) {
    propsList = [];
  }

  // The dependencies are a dynamic array, so we can't use the linter's
  // suggestion to add it to the deps array.
  const deps = propsList;
  const getReferenceProps = react_production_min.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  deps);
  const getFloatingProps = react_production_min.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  deps);
  const getItemProps = react_production_min.useCallback(userProps => mergeProps(userProps, propsList, 'item'),
  // eslint-disable-next-line react-hooks/exhaustive-deps
  deps);
  return react_production_min.useMemo(() => ({
    getReferenceProps,
    getFloatingProps,
    getItemProps
  }), [getReferenceProps, getFloatingProps, getItemProps]);
};
function getChildren(nodes, id) {
  var _nodes$filter;
  let allChildren = (_nodes$filter = nodes.filter(node => {
    var _node$context;
    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);
  })) != null ? _nodes$filter : [];
  let currentChildren = allChildren;
  while (currentChildren.length) {
    var _nodes$filter2;
    currentChildren = (_nodes$filter2 = nodes.filter(node => {
      var _currentChildren;
      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {
        var _node$context2;
        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);
      });
    })) != null ? _nodes$filter2 : [];
    allChildren = allChildren.concat(currentChildren);
  }
  return allChildren;
}
function isPointInPolygon(point, polygon) {
  const [x, y] = point;
  let isInside = false;
  const length = polygon.length;
  for (let i = 0, j = length - 1; i < length; j = i++) {
    const [xi, yi] = polygon[i] || [0, 0];
    const [xj, yj] = polygon[j] || [0, 0];
    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) {
      isInside = !isInside;
    }
  }
  return isInside;
}
function safePolygon(_temp) {
  let {
    restMs = 0,
    buffer = 0.5,
    blockPointerEvents = true,
    debug = null
  } = _temp === void 0 ? {} : _temp;
  let timeoutId;
  let polygonIsDestroyed = false;
  const fn = _ref => {
    let {
      x,
      y,
      placement,
      refs,
      onClose,
      nodeId,
      tree,
      leave = false
    } = _ref;
    return function onPointerMove(event) {
      var _refs$domReference$cu, _refs$floating$curren, _refs$floating$curren2;
      clearTimeout(timeoutId);
      function close() {
        clearTimeout(timeoutId);
        onClose();
      }
      if (event.pointerType && event.pointerType !== 'mouse') {
        return;
      }
      const {
        clientX,
        clientY
      } = event;
      const target = 'composedPath' in event ? event.composedPath()[0] : event.target;
      const targetNode = target; // If the pointer is over the reference, there is no need to run the logic

      if (event.type === 'pointermove' && (_refs$domReference$cu = refs.domReference.current) != null && _refs$domReference$cu.contains(targetNode)) {
        return;
      } // Prevent overlapping floating element from being stuck in an open-close
      // loop: https://github.com/floating-ui/floating-ui/issues/1910

      if (event.type === 'mouseleave' && floating_ui_react_dom_interactions_esm_isElement(event.relatedTarget) && (_refs$floating$curren = refs.floating.current) != null && _refs$floating$curren.contains(event.relatedTarget)) {
        return;
      } // If any nested child is open, abort.

      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {
        let {
          context
        } = _ref2;
        return context == null ? void 0 : context.open;
      })) {
        return;
      } // The cursor landed, so we destroy the polygon logic

      if ((_refs$floating$curren2 = refs.floating.current) != null && _refs$floating$curren2.contains(targetNode) && !leave) {
        polygonIsDestroyed = true;
        return;
      }
      if (!refs.domReference.current || !refs.floating.current || placement == null || x == null || y == null) {
        return;
      }
      const refRect = refs.domReference.current.getBoundingClientRect();
      const rect = refs.floating.current.getBoundingClientRect();
      const side = placement.split('-')[0];
      const cursorLeaveFromRight = x > rect.right - rect.width / 2;
      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2; // If the pointer is leaving from the opposite side, the "buffer" logic
      // creates a point where the floating element remains open, but should be
      // ignored.
      // A constant of 1 handles floating point rounding errors.

      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {
        return close();
      } // Ignore when the cursor is within the rectangular trough between the
      // two elements. Since the triangle is created from the cursor point,
      // which can start beyond the ref element's edge, traversing back and
      // forth from the ref to the floating element can cause it to close. This
      // ensures it always remains open in that case.

      switch (side) {
        case 'top':
          if (clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= refRect.top + 1) {
            return;
          }
          break;
        case 'bottom':
          if (clientX >= rect.left && clientX <= rect.right && clientY >= refRect.bottom - 1 && clientY <= rect.bottom) {
            return;
          }
          break;
        case 'left':
          if (clientX >= rect.left && clientX <= refRect.left + 1 && clientY >= rect.top && clientY <= rect.bottom) {
            return;
          }
          break;
        case 'right':
          if (clientX >= refRect.right - 1 && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom) {
            return;
          }
          break;
      }
      if (polygonIsDestroyed) {
        return close();
      }
      function getPolygon(_ref3) {
        let [x, y] = _ref3;
        const isFloatingWider = rect.width > refRect.width;
        const isFloatingTaller = rect.height > refRect.height;
        switch (side) {
          case 'top':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'bottom':
            {
              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];
              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
          case 'left':
            {
              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];
              return [...commonPoints, cursorPointOne, cursorPointTwo];
            }
          case 'right':
            {
              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];
              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];
              return [cursorPointOne, cursorPointTwo, ...commonPoints];
            }
        }
      }
      const poly = getPolygon([x, y]);
      if (false) {}
      if (!isPointInPolygon([clientX, clientY], poly)) {
        close();
      } else if (restMs) {
        timeoutId = setTimeout(onClose, restMs);
      }
    };
  };
  fn.__options = {
    blockPointerEvents
  };
  return fn;
}
const DEFAULT_ID = 'floating-ui-root';
const useFloatingPortalNode = function (_temp) {
  let {
    id = DEFAULT_ID,
    enabled = true
  } = _temp === void 0 ? {} : _temp;
  const [portalEl, setPortalEl] = React.useState(null);
  floating_ui_react_dom_interactions_esm_index(() => {
    if (!enabled) {
      return;
    }
    const rootNode = document.getElementById(id);
    if (rootNode) {
      setPortalEl(rootNode);
    } else {
      const newPortalEl = document.createElement('div');
      newPortalEl.id = id;
      setPortalEl(newPortalEl);
      if (!document.body.contains(newPortalEl)) {
        document.body.appendChild(newPortalEl);
      }
    }
  }, [id, enabled]);
  return portalEl;
};
/**
 * Portals your floating element outside of the main app node.
 * @see https://floating-ui.com/docs/FloatingPortal
 */

const FloatingPortal = _ref => {
  let {
    children,
    id = DEFAULT_ID,
    root = null
  } = _ref;
  const portalNode = useFloatingPortalNode({
    id,
    enabled: !root
  });
  if (root) {
    return /*#__PURE__*/createPortal(children, root);
  }
  if (portalNode) {
    return /*#__PURE__*/createPortal(children, portalNode);
  }
  return null;
};
function floating_ui_react_dom_interactions_esm_extends() {
  floating_ui_react_dom_interactions_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return floating_ui_react_dom_interactions_esm_extends.apply(this, arguments);
}

// Avoid Chrome DevTools blue warning
function getPlatform() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.platform) {
    return uaData.platform;
  }
  return navigator.platform;
}
function getUserAgent() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands) {
    return uaData.brands.map(_ref => {
      let {
        brand,
        version
      } = _ref;
      return brand + "/" + version;
    }).join(' ');
  }
  return navigator.userAgent;
}
const floating_ui_react_dom_interactions_esm_identifier = 'data-floating-ui-scroll-lock';
/**
 * Provides base styling for a fixed overlay element to dim content or block
 * pointer events behind a floating element.
 * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.
 * @see https://floating-ui.com/docs/FloatingOverlay
 */

const FloatingOverlay = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function FloatingOverlay(_ref, ref) {
  let {
    lockScroll = false,
    ...rest
  } = _ref;
  floating_ui_react_dom_interactions_esm_index(() => {
    var _window$visualViewpor, _window$visualViewpor2, _window$visualViewpor3, _window$visualViewpor4;
    if (!lockScroll) {
      return;
    }
    const alreadyLocked = document.body.hasAttribute(floating_ui_react_dom_interactions_esm_identifier);
    if (alreadyLocked) {
      return;
    }
    document.body.setAttribute(floating_ui_react_dom_interactions_esm_identifier, ''); // RTL <body> scrollbar

    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;
    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';
    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth; // Only iOS doesn't respect `overflow: hidden` on document.body, and this
    // technique has fewer side effects.

    if (!/iP(hone|ad|od)|iOS/.test(getPlatform())) {
      Object.assign(document.body.style, {
        overflow: 'hidden',
        [paddingProp]: scrollbarWidth + "px"
      });
      return () => {
        document.body.removeAttribute(floating_ui_react_dom_interactions_esm_identifier);
        Object.assign(document.body.style, {
          overflow: '',
          [paddingProp]: ''
        });
      };
    } // iOS 12 does not support `visuaViewport`.

    const offsetLeft = (_window$visualViewpor = (_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetLeft) != null ? _window$visualViewpor : 0;
    const offsetTop = (_window$visualViewpor3 = (_window$visualViewpor4 = window.visualViewport) == null ? void 0 : _window$visualViewpor4.offsetTop) != null ? _window$visualViewpor3 : 0;
    const scrollX = window.pageXOffset;
    const scrollY = window.pageYOffset;
    Object.assign(document.body.style, {
      position: 'fixed',
      overflow: 'hidden',
      top: -(scrollY - Math.floor(offsetTop)) + "px",
      left: -(scrollX - Math.floor(offsetLeft)) + "px",
      right: '0',
      [paddingProp]: scrollbarWidth + "px"
    });
    return () => {
      Object.assign(document.body.style, {
        position: '',
        overflow: '',
        top: '',
        left: '',
        right: '',
        [paddingProp]: ''
      });
      document.body.removeAttribute(floating_ui_react_dom_interactions_esm_identifier);
      window.scrollTo(scrollX, scrollY);
    };
  }, [lockScroll]);
  return /*#__PURE__*/React.createElement("div", floating_ui_react_dom_interactions_esm_extends({
    ref: ref
  }, rest, {
    style: {
      position: 'fixed',
      overflow: 'auto',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      ...rest.style
    }
  }));
})));

/**
 * Find the real active element. Traverses into shadowRoots.
 */
function activeElement(doc) {
  let activeElement = doc.activeElement;
  while (((_activeElement = activeElement) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {
    var _activeElement, _activeElement$shadow;
    activeElement = activeElement.shadowRoot.activeElement;
  }
  return activeElement;
}
function getAncestors(nodes, id) {
  var _nodes$find;
  let allAncestors = [];
  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;
  while (currentParentId) {
    const currentNode = nodes.find(node => node.id === currentParentId);
    currentParentId = currentNode == null ? void 0 : currentNode.parentId;
    if (currentNode) {
      allAncestors = allAncestors.concat(currentNode);
    }
  }
  return allAncestors;
}
function getTarget(event) {
  if ('composedPath' in event) {
    return event.composedPath()[0];
  } // TS thinks `event` is of type never as it assumes all browsers support
  // `composedPath()`, but browsers without shadow DOM don't.

  return event.target;
}
const TYPEABLE_SELECTOR = "input:not([type='hidden']):not([disabled])," + "[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
function isTypeableElement(element) {
  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
function floating_ui_react_dom_interactions_esm_useLatestRef(value) {
  const ref = (0,react_production_min.useRef)(value);
  floating_ui_react_dom_interactions_esm_index(() => {
    ref.current = value;
  });
  return ref;
}
function floating_ui_react_dom_interactions_esm_focus(el, preventScroll) {
  if (preventScroll === void 0) {
    preventScroll = false;
  }

  // `mousedown` clicks occur before `focus`, so the button will steal the
  // focus unless we wait a frame.
  requestAnimationFrame(() => {
    el == null ? void 0 : el.focus({
      preventScroll
    });
  });
}
const SELECTOR = 'select:not([disabled]),a[href],button:not([disabled]),[tabindex],' + 'iframe,object,embed,area[href],audio[controls],video[controls],' + TYPEABLE_SELECTOR;
const FocusGuard = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function FocusGuard(props, ref) {
  return /*#__PURE__*/React.createElement("span", floating_ui_react_dom_interactions_esm_extends({}, props, {
    ref: ref,
    tabIndex: 0,
    style: {
      position: 'fixed',
      opacity: '0',
      pointerEvents: 'none',
      outline: '0'
    }
  }));
})));

/**
 * Provides focus management for the floating element.
 * @see https://floating-ui.com/docs/FloatingFocusManager
 */
function FloatingFocusManager(_ref) {
  let {
    context: {
      refs,
      nodeId,
      onOpenChange,
      dataRef,
      events
    },
    children,
    order = ['content'],
    endGuard = true,
    initialFocus = 0,
    returnFocus = true,
    modal = true
  } = _ref;
  const orderRef = floating_ui_react_dom_interactions_esm_useLatestRef(order);
  const tree = useFloatingTree();
  const getTabbableElements = React.useCallback(() => {
    return orderRef.current.map(type => {
      if (type === 'reference') {
        return refs.domReference.current;
      }
      if (refs.floating.current && type === 'floating') {
        return refs.floating.current;
      }
      if (type === 'content') {
        var _refs$floating$curren, _refs$floating$curren2;
        return Array.from((_refs$floating$curren = (_refs$floating$curren2 = refs.floating.current) == null ? void 0 : _refs$floating$curren2.querySelectorAll(SELECTOR)) != null ? _refs$floating$curren : []);
      }
      return null;
    }).flat().filter(el => {
      if (el === refs.floating.current || el === refs.domReference.current) {
        return true;
      }
      if (isHTMLElement(el)) {
        var _el$getAttribute;
        const tabIndex = (_el$getAttribute = el.getAttribute('tabindex')) != null ? _el$getAttribute : '0';
        return tabIndex[0].trim() !== '-';
      }
    });
  }, [orderRef, refs]);
  React.useEffect(() => {
    if (!modal) {
      return;
    } // If the floating element has no focusable elements inside it, fallback
    // to focusing the floating element and preventing tab navigation

    const noTabbableContentElements = getTabbableElements().filter(el => el !== refs.floating.current && el !== refs.domReference.current).length === 0;
    function onKeyDown(event) {
      if (event.key === 'Tab') {
        if (noTabbableContentElements) {
          stopEvent(event);
        }
        const els = getTabbableElements();
        const target = getTarget(event);
        if (orderRef.current[0] === 'reference' && target === refs.domReference.current) {
          stopEvent(event);
          if (event.shiftKey) {
            floating_ui_react_dom_interactions_esm_focus(els[els.length - 1]);
          } else {
            floating_ui_react_dom_interactions_esm_focus(els[1]);
          }
        }
        if (orderRef.current[1] === 'floating' && target === refs.floating.current && event.shiftKey) {
          stopEvent(event);
          floating_ui_react_dom_interactions_esm_focus(els[0]);
        }
      }
    }
    const doc = getDocument(refs.floating.current);
    doc.addEventListener('keydown', onKeyDown);
    return () => {
      doc.removeEventListener('keydown', onKeyDown);
    };
  }, [modal, getTabbableElements, orderRef, refs]);
  React.useEffect(() => {
    let isPointerDown = false;
    function onFocusOut(event) {
      var _refs$floating$curren3, _getAncestors;
      const relatedTarget = event.relatedTarget;
      const focusMovedOutsideFloating = !((_refs$floating$curren3 = refs.floating.current) != null && _refs$floating$curren3.contains(relatedTarget));
      const focusMovedOutsideReference = floating_ui_react_dom_interactions_esm_isElement(refs.domReference.current) && !refs.domReference.current.contains(relatedTarget);
      const isChildOpen = tree && getChildren(tree.nodesRef.current, nodeId).length > 0;
      const isParentRelated = tree && event.currentTarget === refs.domReference.current && ((_getAncestors = getAncestors(tree.nodesRef.current, nodeId)) == null ? void 0 : _getAncestors.some(node => {
        var _node$context, _node$context$refs$fl;
        return (_node$context = node.context) == null ? void 0 : (_node$context$refs$fl = _node$context.refs.floating.current) == null ? void 0 : _node$context$refs$fl.contains(relatedTarget);
      }));
      if (focusMovedOutsideFloating && focusMovedOutsideReference && !isChildOpen && !isParentRelated && !isPointerDown) {
        onOpenChange(false);
      }
    }
    function onPointerDown() {
      // In Safari, buttons *lose* focus when pressing them. This causes the
      // reference `focusout` to fire, which closes the floating element.
      isPointerDown = true;
      setTimeout(() => {
        isPointerDown = false;
      });
    }
    const floating = refs.floating.current;
    const reference = refs.domReference.current;
    if (floating && isHTMLElement(reference)) {
      if (!modal) {
        floating.addEventListener('focusout', onFocusOut);
        reference.addEventListener('focusout', onFocusOut);
        reference.addEventListener('pointerdown', onPointerDown);
      }
      let cleanup;
      if (modal) {
        if (orderRef.current.includes('reference')) {
          cleanup = hideOthers([reference, floating]);
        } else {
          cleanup = hideOthers(floating);
        }
      }
      return () => {
        if (!modal) {
          floating.removeEventListener('focusout', onFocusOut);
          reference.removeEventListener('focusout', onFocusOut);
          reference.removeEventListener('pointerdown', onPointerDown);
        }
        cleanup == null ? void 0 : cleanup();
      };
    }
  }, [nodeId, tree, modal, onOpenChange, orderRef, dataRef, getTabbableElements, refs]);
  React.useEffect(() => {
    const floating = refs.floating.current;
    const doc = getDocument(floating);
    let returnFocusValue = returnFocus;
    let preventReturnFocusScroll = false;
    let previouslyFocusedElement = activeElement(doc);
    if (previouslyFocusedElement === doc.body && refs.domReference.current) {
      previouslyFocusedElement = refs.domReference.current;
    }
    if (typeof initialFocus === 'number') {
      var _getTabbableElements$;
      const el = (_getTabbableElements$ = getTabbableElements()[initialFocus]) != null ? _getTabbableElements$ : floating;
      floating_ui_react_dom_interactions_esm_focus(el, el === floating);
    } else if (isHTMLElement(initialFocus.current)) {
      var _initialFocus$current;
      const el = (_initialFocus$current = initialFocus.current) != null ? _initialFocus$current : floating;
      floating_ui_react_dom_interactions_esm_focus(el, el === floating);
    } // Dismissing via outside press should always ignore `returnFocus` to
    // prevent unwanted scrolling.

    function onDismiss(allowReturnFocus) {
      if (allowReturnFocus === void 0) {
        allowReturnFocus = false;
      }
      if (typeof allowReturnFocus === 'object') {
        returnFocusValue = true;
        preventReturnFocusScroll = allowReturnFocus.preventScroll;
      } else {
        returnFocusValue = allowReturnFocus;
      }
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
      if (returnFocusValue && isHTMLElement(previouslyFocusedElement)) {
        floating_ui_react_dom_interactions_esm_focus(previouslyFocusedElement, preventReturnFocusScroll);
      }
    };
  }, [getTabbableElements, initialFocus, returnFocus, refs, events]);
  const isTypeableCombobox = () => {
    var _refs$domReference$cu;
    return ((_refs$domReference$cu = refs.domReference.current) == null ? void 0 : _refs$domReference$cu.getAttribute('role')) === 'combobox' && isTypeableElement(refs.domReference.current);
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, modal && /*#__PURE__*/React.createElement(FocusGuard, {
    onFocus: event => {
      if (isTypeableCombobox()) {
        return;
      }
      stopEvent(event);
      const els = getTabbableElements();
      if (order[0] === 'reference') {
        floating_ui_react_dom_interactions_esm_focus(els[0]);
      } else {
        floating_ui_react_dom_interactions_esm_focus(els[els.length - 1]);
      }
    }
  }), /*#__PURE__*/React.cloneElement(children, order.includes('floating') ? {
    tabIndex: 0
  } : {}), modal && endGuard && /*#__PURE__*/React.createElement(FocusGuard, {
    onFocus: event => {
      if (isTypeableCombobox()) {
        return;
      }
      stopEvent(event);
      floating_ui_react_dom_interactions_esm_focus(getTabbableElements()[0]);
    }
  }));
}
function floating_ui_react_dom_interactions_esm_usePrevious(value) {
  const ref = (0,react_production_min.useRef)();
  floating_ui_react_dom_interactions_esm_index(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
}
function getDelay(value, prop, pointerType) {
  if (pointerType && pointerType !== 'mouse') {
    return 0;
  }
  if (typeof value === 'number') {
    return value;
  }
  return value == null ? void 0 : value[prop];
}

/**
 * Adds hover event listeners that change the open state, like CSS :hover.
 * @see https://floating-ui.com/docs/useHover
 */
const useHover = function (context, _temp) {
  let {
    enabled = true,
    delay = 0,
    handleClose = null,
    mouseOnly = false,
    restMs = 0,
    move = true
  } = _temp === void 0 ? {} : _temp;
  const {
    open,
    onOpenChange,
    dataRef,
    events,
    refs,
    _
  } = context;
  const tree = useFloatingTree();
  const parentId = useFloatingParentNodeId();
  const handleCloseRef = floating_ui_react_dom_interactions_esm_useLatestRef(handleClose);
  const delayRef = floating_ui_react_dom_interactions_esm_useLatestRef(delay);
  const previousOpen = floating_ui_react_dom_interactions_esm_usePrevious(open);
  const pointerTypeRef = react_production_min.useRef();
  const timeoutRef = react_production_min.useRef();
  const handlerRef = react_production_min.useRef();
  const restTimeoutRef = react_production_min.useRef();
  const blockMouseMoveRef = react_production_min.useRef(true);
  const performedPointerEventsMutationRef = react_production_min.useRef(false);
  const isHoverOpen = react_production_min.useCallback(() => {
    var _dataRef$current$open;
    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;
    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';
  }, [dataRef]);
  react_production_min.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onDismiss() {
      clearTimeout(timeoutRef.current);
      clearTimeout(restTimeoutRef.current);
      blockMouseMoveRef.current = true;
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
    };
  }, [enabled, events, refs]);
  react_production_min.useEffect(() => {
    if (!enabled || !handleCloseRef.current) {
      return;
    }
    function onLeave() {
      if (isHoverOpen()) {
        onOpenChange(false);
      }
    }
    const html = getDocument(refs.floating.current).documentElement;
    html.addEventListener('mouseleave', onLeave);
    return () => {
      html.removeEventListener('mouseleave', onLeave);
    };
  }, [refs, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);
  const closeWithDelay = react_production_min.useCallback(function (runElseBranch) {
    if (runElseBranch === void 0) {
      runElseBranch = true;
    }
    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);
    if (closeDelay && !handlerRef.current) {
      clearTimeout(timeoutRef.current);
      timeoutRef.current = setTimeout(() => onOpenChange(false), closeDelay);
    } else if (runElseBranch) {
      clearTimeout(timeoutRef.current);
      onOpenChange(false);
    }
  }, [delayRef, onOpenChange]);
  const cleanupPointerMoveHandler = react_production_min.useCallback(() => {
    if (handlerRef.current) {
      getDocument(refs.floating.current).removeEventListener('pointermove', handlerRef.current);
      handlerRef.current = undefined;
    }
  }, [refs]);
  const clearPointerEvents = react_production_min.useCallback(() => {
    getDocument(refs.floating.current).body.style.pointerEvents = '';
    performedPointerEventsMutationRef.current = false;
  }, [refs]); // Registering the mouse events on the reference directly to bypass React's
  // delegation system. If the cursor was on a disabled element and then entered
  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.

  react_production_min.useEffect(() => {
    if (!enabled) {
      return;
    }
    function isClickLikeOpenEvent() {
      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;
    }
    function onMouseEnter(event) {
      clearTimeout(timeoutRef.current);
      blockMouseMoveRef.current = false;
      if (mouseOnly && pointerTypeRef.current !== 'mouse' || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {
        return;
      }
      dataRef.current.openEvent = event;
      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);
      if (openDelay) {
        timeoutRef.current = setTimeout(() => {
          onOpenChange(true);
        }, openDelay);
      } else {
        onOpenChange(true);
      }
    }
    function onMouseLeave(event) {
      if (isClickLikeOpenEvent()) {
        return;
      }
      const doc = getDocument(refs.floating.current);
      clearTimeout(restTimeoutRef.current);
      if (handleCloseRef.current) {
        clearTimeout(timeoutRef.current);
        handlerRef.current && doc.removeEventListener('pointermove', handlerRef.current);
        handlerRef.current = handleCloseRef.current({
          ...context,
          tree,
          x: event.clientX,
          y: event.clientY,
          onClose() {
            clearPointerEvents();
            cleanupPointerMoveHandler();
            closeWithDelay();
          }
        });
        doc.addEventListener('pointermove', handlerRef.current);
        return;
      }
      closeWithDelay();
    } // Ensure the floating element closes after scrolling even if the pointer
    // did not move.
    // https://github.com/floating-ui/floating-ui/discussions/1692

    function onScrollMouseLeave(event) {
      if (isClickLikeOpenEvent()) {
        return;
      }
      handleCloseRef.current == null ? void 0 : handleCloseRef.current({
        ...context,
        tree,
        x: event.clientX,
        y: event.clientY,
        leave: true,
        onClose() {
          clearPointerEvents();
          cleanupPointerMoveHandler();
          closeWithDelay();
        }
      })(event);
    }
    const floating = refs.floating.current;
    const reference = refs.domReference.current;
    if (floating_ui_react_dom_interactions_esm_isElement(reference)) {
      open && reference.addEventListener('mouseleave', onScrollMouseLeave);
      floating == null ? void 0 : floating.addEventListener('mouseleave', onScrollMouseLeave);
      move && reference.addEventListener('mousemove', onMouseEnter, {
        once: true
      });
      reference.addEventListener('mouseenter', onMouseEnter);
      reference.addEventListener('mouseleave', onMouseLeave);
      return () => {
        open && reference.removeEventListener('mouseleave', onScrollMouseLeave);
        floating == null ? void 0 : floating.removeEventListener('mouseleave', onScrollMouseLeave);
        move && reference.removeEventListener('mousemove', onMouseEnter);
        reference.removeEventListener('mouseenter', onMouseEnter);
        reference.removeEventListener('mouseleave', onMouseLeave);
      };
    }
  }, [
  // Ensure the effect is re-run when the reference changes.
  // https://github.com/floating-ui/floating-ui/issues/1833
  _.domReference, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupPointerMoveHandler, clearPointerEvents, onOpenChange, open, tree, refs, delayRef, handleCloseRef, dataRef]); // Block pointer-events of every element other than the reference and floating
  // while the floating element is open and has a `handleClose` handler. Also
  // handles nested floating elements.
  // https://github.com/floating-ui/floating-ui/issues/1722

  floating_ui_react_dom_interactions_esm_index(() => {
    if (!enabled) {
      return;
    }
    if (open && handleCloseRef.current && handleCloseRef.current.__options.blockPointerEvents && isHoverOpen()) {
      getDocument(refs.floating.current).body.style.pointerEvents = 'none';
      performedPointerEventsMutationRef.current = true;
      const reference = refs.domReference.current;
      const floating = refs.floating.current;
      if (floating_ui_react_dom_interactions_esm_isElement(reference) && floating) {
        var _tree$nodesRef$curren, _tree$nodesRef$curren2;
        const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.refs.floating.current;
        if (parentFloating) {
          parentFloating.style.pointerEvents = '';
        }
        reference.style.pointerEvents = 'auto';
        floating.style.pointerEvents = 'auto';
        return () => {
          reference.style.pointerEvents = '';
          floating.style.pointerEvents = '';
        };
      }
    }
  }, [enabled, open, parentId, refs, tree, handleCloseRef, dataRef, isHoverOpen]);
  floating_ui_react_dom_interactions_esm_index(() => {
    if (previousOpen && !open) {
      pointerTypeRef.current = undefined;
      cleanupPointerMoveHandler();
      clearPointerEvents();
    }
  });
  react_production_min.useEffect(() => {
    return () => {
      cleanupPointerMoveHandler();
      clearTimeout(timeoutRef.current);
      clearTimeout(restTimeoutRef.current);
      if (performedPointerEventsMutationRef.current) {
        clearPointerEvents();
      }
    };
  }, [enabled, cleanupPointerMoveHandler, clearPointerEvents]);
  return react_production_min.useMemo(() => {
    if (!enabled) {
      return {};
    }
    function setPointerRef(event) {
      pointerTypeRef.current = event.pointerType;
    }
    return {
      reference: {
        onPointerDown: setPointerRef,
        onPointerEnter: setPointerRef,
        onMouseMove() {
          if (open || restMs === 0) {
            return;
          }
          clearTimeout(restTimeoutRef.current);
          restTimeoutRef.current = setTimeout(() => {
            if (!blockMouseMoveRef.current) {
              onOpenChange(true);
            }
          }, restMs);
        }
      },
      floating: {
        onMouseEnter() {
          clearTimeout(timeoutRef.current);
        },
        onMouseLeave() {
          closeWithDelay(false);
        }
      }
    };
  }, [enabled, restMs, open, onOpenChange, closeWithDelay]);
};
const FloatingDelayGroupContext = /*#__PURE__*/react_production_min.createContext({
  delay: 1000,
  initialDelay: 1000,
  currentId: null,
  setCurrentId: () => {},
  setState: () => {}
});
const useDelayGroupContext = () => react_production_min.useContext(FloatingDelayGroupContext);
/**
 * Provides context for a group of floating elements that should share a
 * `delay`.
 * @see https://floating-ui.com/docs/FloatingDelayGroup
 */

const FloatingDelayGroup = _ref => {
  let {
    children,
    delay
  } = _ref;
  const [state, setState] = react_production_min.useState({
    delay,
    initialDelay: delay,
    currentId: null
  });
  const setCurrentId = react_production_min.useCallback(currentId => {
    setState(state => ({
      ...state,
      currentId
    }));
  }, []);
  return /*#__PURE__*/react_production_min.createElement(FloatingDelayGroupContext.Provider, {
    value: react_production_min.useMemo(() => ({
      ...state,
      setState,
      setCurrentId
    }), [state, setState, setCurrentId])
  }, children);
};
const useDelayGroup = (_ref2, _ref3) => {
  let {
    open,
    onOpenChange
  } = _ref2;
  let {
    id
  } = _ref3;
  const {
    currentId,
    initialDelay,
    setState
  } = useDelayGroupContext();
  react_production_min.useEffect(() => {
    if (currentId) {
      setState(state => ({
        ...state,
        delay: {
          open: 1,
          close: getDelay(initialDelay, 'close')
        }
      }));
      if (currentId !== id) {
        onOpenChange(false);
      }
    }
  }, [id, onOpenChange, setState, currentId, initialDelay]);
  react_production_min.useEffect(() => {
    if (!open && currentId === id) {
      onOpenChange(false);
      setState(state => ({
        ...state,
        delay: initialDelay,
        currentId: null
      }));
    }
  }, [open, setState, currentId, id, onOpenChange, initialDelay]);
};
function getArgsWithCustomFloatingHeight(args, prop) {
  return {
    ...args,
    rects: {
      ...args.rects,
      floating: {
        ...args.rects.floating,
        height: args.elements.floating[prop]
      }
    }
  };
}
const inner = options => ({
  name: 'inner',
  options,
  async fn(middlewareArguments) {
    const {
      listRef,
      overflowRef,
      onFallbackChange,
      offset: innerOffset = 0,
      index = 0,
      minItemsVisible = 4,
      referenceOverflowThreshold = 0,
      ...detectOverflowOptions
    } = options;
    const {
      rects,
      elements: {
        floating
      }
    } = middlewareArguments;
    const item = listRef.current[index];
    if (false) {}
    if (!item) {
      return {};
    }
    const nextArgs = {
      ...middlewareArguments,
      ...(await offset(-item.offsetTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(middlewareArguments))
    };
    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, 'scrollHeight'), detectOverflowOptions);
    const refOverflow = await detectOverflow(nextArgs, {
      ...detectOverflowOptions,
      elementContext: 'reference'
    });
    const diffY = Math.max(0, overflow.top);
    const nextY = nextArgs.y + diffY;
    const maxHeight = Math.max(0, floating.scrollHeight - diffY - Math.max(0, overflow.bottom));
    floating.style.maxHeight = maxHeight + "px";
    floating.scrollTop = diffY; // There is not enough space, fallback to standard anchored positioning

    if (onFallbackChange) {
      if (floating.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {
        flushSync(() => onFallbackChange(true));
      } else {
        flushSync(() => onFallbackChange(false));
      }
    }
    if (overflowRef) {
      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({
        ...nextArgs,
        y: nextY
      }, 'offsetHeight'), detectOverflowOptions);
    }
    return {
      y: nextY
    };
  }
});
const useInnerOffset = (_ref, _ref2) => {
  let {
    open,
    refs
  } = _ref;
  let {
    enabled = true,
    overflowRef,
    onChange: unstable_onChange
  } = _ref2;
  const onChange = useEvent(unstable_onChange);
  const controlledScrollingRef = React.useRef(false);
  const prevScrollTopRef = React.useRef(null);
  const initialOverflowRef = React.useRef(null);
  React.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onWheel(e) {
      if (e.ctrlKey || !el || overflowRef.current == null) {
        return;
      }
      const dY = e.deltaY;
      const isAtTop = overflowRef.current.top >= -0.5;
      const isAtBottom = overflowRef.current.bottom >= -0.5;
      const remainingScroll = el.scrollHeight - el.clientHeight;
      const sign = dY < 0 ? -1 : 1;
      const method = dY < 0 ? 'max' : 'min';
      if (el.scrollHeight <= el.clientHeight) {
        return;
      }
      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {
        e.preventDefault();
        flushSync(() => {
          onChange(d => d + Math[method](dY, remainingScroll * sign));
        });
      } else if (/firefox/i.test(getUserAgent())) {
        // Needed to propagate scrolling during momentum scrolling phase once
        // it gets limited by the boundary. UX improvement, not critical.
        el.scrollTop += dY;
      }
    }
    const el = refs.floating.current;
    if (open && el) {
      el.addEventListener('wheel', onWheel); // Wait for the position to be ready.

      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
        if (overflowRef.current != null) {
          initialOverflowRef.current = {
            ...overflowRef.current
          };
        }
      });
      return () => {
        prevScrollTopRef.current = null;
        initialOverflowRef.current = null;
        el.removeEventListener('wheel', onWheel);
      };
    }
  }, [enabled, open, refs, overflowRef, onChange]);
  return React.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      floating: {
        onKeyDown() {
          controlledScrollingRef.current = true;
        },
        onWheel() {
          controlledScrollingRef.current = false;
        },
        onPointerMove() {
          controlledScrollingRef.current = false;
        },
        onScroll() {
          const el = refs.floating.current;
          if (!overflowRef.current || !el || !controlledScrollingRef.current) {
            return;
          }
          if (prevScrollTopRef.current !== null) {
            const scrollDiff = el.scrollTop - prevScrollTopRef.current;
            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {
              flushSync(() => onChange(d => d + scrollDiff));
            }
          } // [Firefox] Wait for the height change to have been applied.

          requestAnimationFrame(() => {
            prevScrollTopRef.current = el.scrollTop;
          });
        }
      }
    };
  }, [enabled, overflowRef, refs, onChange]);
};

/**
 * Adds relevant screen reader props for a given element `role`.
 * @see https://floating-ui.com/docs/useRole
 */
const useRole = function (_ref, _temp) {
  let {
    open
  } = _ref;
  let {
    enabled = true,
    role = 'dialog'
  } = _temp === void 0 ? {} : _temp;
  const rootId = floating_ui_react_dom_interactions_esm_useId();
  const referenceId = floating_ui_react_dom_interactions_esm_useId();
  return react_production_min.useMemo(() => {
    const floatingProps = {
      id: rootId,
      role
    };
    if (!enabled) {
      return {};
    }
    if (role === 'tooltip') {
      return {
        reference: {
          'aria-describedby': open ? rootId : undefined
        },
        floating: floatingProps
      };
    }
    return {
      reference: {
        'aria-expanded': open ? 'true' : 'false',
        'aria-haspopup': role === 'alertdialog' ? 'dialog' : role,
        'aria-controls': open ? rootId : undefined,
        ...(role === 'listbox' && {
          role: 'combobox'
        }),
        ...(role === 'menu' && {
          id: referenceId
        })
      },
      floating: {
        ...floatingProps,
        ...(role === 'menu' && {
          'aria-labelledby': referenceId
        })
      }
    };
  }, [enabled, role, open, rootId, referenceId]);
};
function isButtonTarget(event) {
  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';
}
function isSpaceIgnored(element) {
  return isTypeableElement(element);
}

/**
 * Adds click event listeners that change the open state.
 * @see https://floating-ui.com/docs/useClick
 */
const useClick = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    dataRef,
    refs
  } = _ref;
  let {
    enabled = true,
    event: eventOption = 'click',
    toggle = true,
    ignoreMouse = false,
    keyboardHandlers = true
  } = _temp === void 0 ? {} : _temp;
  const pointerTypeRef = React.useRef();
  return React.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        onPointerDown(event) {
          pointerTypeRef.current = event.pointerType;
        },
        onMouseDown(event) {
          // Ignore all buttons except for the "main" button.
          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button
          if (event.button !== 0) {
            return;
          }
          if (pointerTypeRef.current === 'mouse' && ignoreMouse) {
            return;
          }
          if (eventOption === 'click') {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {
              onOpenChange(false);
            }
          } else {
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onClick(event) {
          if (eventOption === 'mousedown' && pointerTypeRef.current) {
            pointerTypeRef.current = undefined;
            return;
          }
          if (pointerTypeRef.current === 'mouse' && ignoreMouse) {
            return;
          }
          if (open) {
            if (toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {
              onOpenChange(false);
            }
          } else {
            onOpenChange(true);
          }
          dataRef.current.openEvent = event.nativeEvent;
        },
        onKeyDown(event) {
          pointerTypeRef.current = undefined;
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event)) {
            return;
          }
          if (event.key === ' ' && !isSpaceIgnored(refs.domReference.current)) {
            // Prvent scrolling
            event.preventDefault();
          }
          if (event.key === 'Enter') {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        },
        onKeyUp(event) {
          if (!keyboardHandlers) {
            return;
          }
          if (isButtonTarget(event) || isSpaceIgnored(refs.domReference.current)) {
            return;
          }
          if (event.key === ' ') {
            if (open) {
              if (toggle) {
                onOpenChange(false);
              }
            } else {
              onOpenChange(true);
            }
          }
        }
      }
    };
  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, refs, toggle, open, onOpenChange]);
};

/**
 * Check whether the event.target is within the provided node. Uses event.composedPath if available for custom element support.
 *
 * @param event The event whose target/composedPath to check
 * @param node The node to check against
 * @returns Whether the event.target/composedPath is within the node.
 */
function isEventTargetWithin(event, node) {
  if (node == null) {
    return false;
  }
  if ('composedPath' in event) {
    return event.composedPath().includes(node);
  } // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't

  const e = event;
  return e.target != null && node.contains(e.target);
}
const bubbleHandlerKeys = {
  pointerdown: 'onPointerDown',
  mousedown: 'onMouseDown',
  click: 'onClick'
};
const captureHandlerKeys = {
  pointerdown: 'onPointerDownCapture',
  mousedown: 'onMouseDownCapture',
  click: 'onClickCapture'
};

/**
 * Adds listeners that dismiss (close) the floating element.
 * @see https://floating-ui.com/docs/useDismiss
 */
const useDismiss = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    refs,
    events,
    nodeId
  } = _ref;
  let {
    enabled = true,
    escapeKey = true,
    outsidePress = true,
    outsidePressEvent = 'pointerdown',
    referencePress = false,
    referencePressEvent = 'pointerdown',
    ancestorScroll = false,
    bubbles = true
  } = _temp === void 0 ? {} : _temp;
  const tree = useFloatingTree();
  const nested = useFloatingParentNodeId() != null;
  const insideReactTreeRef = react_production_min.useRef(false);
  react_production_min.useEffect(() => {
    if (!open || !enabled) {
      return;
    }
    function onKeyDown(event) {
      if (event.key === 'Escape') {
        if (!bubbles && tree && getChildren(tree.nodesRef.current, nodeId).length > 0) {
          return;
        }
        events.emit('dismiss', {
          preventScroll: false
        });
        onOpenChange(false);
      }
    }
    function onOutsidePress(event) {
      // Given developers can stop the propagation of the synthetic event,
      // we can only be confident with a positive value.
      const insideReactTree = insideReactTreeRef.current;
      insideReactTreeRef.current = false;
      if (insideReactTree) {
        return;
      }
      const target = getTarget(event); // Check if the click occurred on the scrollbar

      if (floating_ui_react_dom_interactions_esm_isElement(target) && refs.floating.current) {
        var _refs$floating$curren;
        const win = (_refs$floating$curren = refs.floating.current.ownerDocument.defaultView) != null ? _refs$floating$curren : window;
        const canScrollX = target.scrollWidth > target.clientWidth;
        const canScrollY = target.scrollHeight > target.clientHeight;
        let xCond = canScrollY && event.offsetX > target.clientWidth; // In some browsers it is possible to change the <body> (or window)
        // scrollbar to the left side, but is very rare and is difficult to
        // check for. Plus, for modal dialogs with backdrops, it is more
        // important that the backdrop is checked but not so much the window.

        if (canScrollY) {
          const isRTL = win.getComputedStyle(target).direction === 'rtl';
          if (isRTL) {
            xCond = event.offsetX <= target.offsetWidth - target.clientWidth;
          }
        }
        if (xCond || canScrollX && event.offsetY > target.clientHeight) {
          return;
        }
      }
      const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {
        var _node$context;
        return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.refs.floating.current);
      });
      if (isEventTargetWithin(event, refs.floating.current) || isEventTargetWithin(event, refs.domReference.current) || targetIsInsideChildren) {
        return;
      }
      if (!bubbles && tree && getChildren(tree.nodesRef.current, nodeId).length > 0) {
        return;
      }
      events.emit('dismiss', nested ? {
        preventScroll: true
      } : false);
      onOpenChange(false);
    }
    function onScroll() {
      onOpenChange(false);
    }
    const doc = getDocument(refs.floating.current);
    escapeKey && doc.addEventListener('keydown', onKeyDown);
    outsidePress && doc.addEventListener(outsidePressEvent, onOutsidePress);
    let ancestors = [];
    if (ancestorScroll) {
      if (floating_ui_react_dom_interactions_esm_isElement(refs.domReference.current)) {
        ancestors = floating_ui_dom_browser_min_H(refs.domReference.current);
      }
      if (floating_ui_react_dom_interactions_esm_isElement(refs.floating.current)) {
        ancestors = ancestors.concat(floating_ui_dom_browser_min_H(refs.floating.current));
      }
      if (!floating_ui_react_dom_interactions_esm_isElement(refs.reference.current) && refs.reference.current &&
      // @ts-expect-error is VirtualElement
      refs.reference.current.contextElement) {
        ancestors = ancestors.concat(
        // @ts-expect-error is VirtualElement
        floating_ui_dom_browser_min_H(refs.reference.current.contextElement));
      }
    } // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)

    ancestors = ancestors.filter(ancestor => {
      var _doc$defaultView;
      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);
    });
    ancestors.forEach(ancestor => {
      ancestor.addEventListener('scroll', onScroll, {
        passive: true
      });
    });
    return () => {
      escapeKey && doc.removeEventListener('keydown', onKeyDown);
      outsidePress && doc.removeEventListener(outsidePressEvent, onOutsidePress);
      ancestors.forEach(ancestor => {
        ancestor.removeEventListener('scroll', onScroll);
      });
    };
  }, [escapeKey, outsidePress, outsidePressEvent, events, tree, nodeId, open, onOpenChange, ancestorScroll, enabled, bubbles, refs, nested]);
  react_production_min.useEffect(() => {
    insideReactTreeRef.current = false;
  }, [outsidePress, outsidePressEvent]);
  return react_production_min.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        [bubbleHandlerKeys[referencePressEvent]]: () => {
          if (referencePress) {
            events.emit('dismiss');
            onOpenChange(false);
          }
        }
      },
      floating: {
        [captureHandlerKeys[outsidePressEvent]]: () => {
          insideReactTreeRef.current = true;
        }
      }
    };
  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange]);
};

/**
 * Adds focus event listeners that change the open state, like CSS :focus.
 * @see https://floating-ui.com/docs/useFocus
 */
const useFocus = function (_ref, _temp) {
  let {
    open,
    onOpenChange,
    dataRef,
    refs,
    events
  } = _ref;
  let {
    enabled = true,
    keyboardOnly = true
  } = _temp === void 0 ? {} : _temp;
  const pointerTypeRef = react_production_min.useRef('');
  const blockFocusRef = react_production_min.useRef(false);
  const timeoutRef = react_production_min.useRef();
  react_production_min.useEffect(() => {
    var _doc$defaultView;
    if (!enabled) {
      return;
    }
    const doc = getDocument(refs.floating.current);
    const win = (_doc$defaultView = doc.defaultView) != null ? _doc$defaultView : window;
    function onBlur() {
      if (!open && isHTMLElement(refs.domReference.current)) {
        refs.domReference.current.blur();
      }
    }
    win.addEventListener('blur', onBlur);
    return () => {
      win.removeEventListener('blur', onBlur);
    };
  }, [refs, open, enabled]);
  react_production_min.useEffect(() => {
    if (!enabled) {
      return;
    }
    function onDismiss() {
      blockFocusRef.current = true;
    }
    events.on('dismiss', onDismiss);
    return () => {
      events.off('dismiss', onDismiss);
    };
  }, [events, enabled]);
  react_production_min.useEffect(() => {
    return () => {
      clearTimeout(timeoutRef.current);
    };
  }, []);
  return react_production_min.useMemo(() => {
    if (!enabled) {
      return {};
    }
    return {
      reference: {
        onPointerDown(_ref2) {
          let {
            pointerType
          } = _ref2;
          pointerTypeRef.current = pointerType;
          blockFocusRef.current = !!(pointerType && keyboardOnly);
        },
        onPointerLeave() {
          blockFocusRef.current = false;
        },
        onFocus(event) {
          var _dataRef$current$open, _refs$domReference$cu, _dataRef$current$open2;
          if (blockFocusRef.current) {
            return;
          } // Dismiss with click should ignore the subsequent `focus` trigger, but
          // only if the click originated inside the reference element.

          if (event.type === 'focus' && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === 'mousedown' && (_refs$domReference$cu = refs.domReference.current) != null && _refs$domReference$cu.contains((_dataRef$current$open2 = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open2.target)) {
            return;
          }
          dataRef.current.openEvent = event.nativeEvent;
          onOpenChange(true);
        },
        onBlur(event) {
          const target = event.relatedTarget; // Wait for the window blur listener to fire.

          timeoutRef.current = setTimeout(() => {
            var _refs$floating$curren, _refs$domReference$cu2;

            // When focusing the reference element (e.g. regular click), then
            // clicking into the floating element, prevent it from hiding.
            // Note: it must be focusable, e.g. `tabindex="-1"`.
            if ((_refs$floating$curren = refs.floating.current) != null && _refs$floating$curren.contains(target) || (_refs$domReference$cu2 = refs.domReference.current) != null && _refs$domReference$cu2.contains(target)) {
              return;
            }
            blockFocusRef.current = false;
            onOpenChange(false);
          });
        }
      }
    };
  }, [enabled, keyboardOnly, refs, dataRef, onOpenChange]);
};
const ARROW_UP = 'ArrowUp';
const ARROW_DOWN = 'ArrowDown';
const ARROW_LEFT = 'ArrowLeft';
const ARROW_RIGHT = 'ArrowRight';
function isDifferentRow(index, cols, prevRow) {
  return Math.floor(index / cols) !== prevRow;
}
function isIndexOutOfBounds(listRef, index) {
  return index < 0 || index >= listRef.current.length;
}
function findNonDisabledIndex(listRef, _temp) {
  let {
    startingIndex = -1,
    decrement = false,
    disabledIndices,
    amount = 1
  } = _temp === void 0 ? {} : _temp;
  const list = listRef.current;
  let index = startingIndex;
  do {
    var _list$index, _list$index2;
    index = index + (decrement ? -amount : amount);
  } while (index >= 0 && index <= list.length - 1 && (disabledIndices ? disabledIndices.includes(index) : list[index] == null || ((_list$index = list[index]) == null ? void 0 : _list$index.hasAttribute('disabled')) || ((_list$index2 = list[index]) == null ? void 0 : _list$index2.getAttribute('aria-disabled')) === 'true'));
  return index;
}
function doSwitch(orientation, vertical, horizontal) {
  switch (orientation) {
    case 'vertical':
      return vertical;
    case 'horizontal':
      return horizontal;
    default:
      return vertical || horizontal;
  }
}
function isMainOrientationKey(key, orientation) {
  const vertical = key === ARROW_UP || key === ARROW_DOWN;
  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal);
}
function isMainOrientationToEndKey(key, orientation, rtl) {
  const vertical = key === ARROW_DOWN;
  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key == ' ' || key === '';
}
function isCrossOrientationOpenKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;
  const horizontal = key === ARROW_DOWN;
  return doSwitch(orientation, vertical, horizontal);
}
function isCrossOrientationCloseKey(key, orientation, rtl) {
  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;
  const horizontal = key === ARROW_UP;
  return doSwitch(orientation, vertical, horizontal);
}
function getMinIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    disabledIndices
  });
}
function getMaxIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    decrement: true,
    startingIndex: listRef.current.length,
    disabledIndices
  });
}

/**
 * Adds focus-managed indexed navigation via arrow keys to a list of items
 * within the floating element.
 * @see https://floating-ui.com/docs/useListNavigation
 */
const useListNavigation = function (_ref, _temp2) {
  let {
    open,
    onOpenChange,
    refs
  } = _ref;
  let {
    listRef,
    activeIndex,
    onNavigate: unstable_onNavigate = () => {},
    enabled = true,
    selectedIndex = null,
    allowEscape = false,
    loop = false,
    nested = false,
    rtl = false,
    virtual = false,
    focusItemOnOpen = 'auto',
    focusItemOnHover = true,
    openOnArrowKeyDown = true,
    disabledIndices = undefined,
    orientation = 'vertical',
    cols = 1
  } = _temp2 === void 0 ? {
    listRef: {
      current: []
    },
    activeIndex: null,
    onNavigate: () => {}
  } : _temp2;
  if (false) {}
  const parentId = useFloatingParentNodeId();
  const tree = useFloatingTree();
  const previousOpen = floating_ui_react_dom_interactions_esm_usePrevious(open);
  const onNavigate = useEvent(unstable_onNavigate);
  const previousOnNavigate = useEvent(floating_ui_react_dom_interactions_esm_usePrevious(unstable_onNavigate));
  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);
  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);
  const keyRef = React.useRef(null);
  const disabledIndicesRef = floating_ui_react_dom_interactions_esm_useLatestRef(disabledIndices);
  const blockPointerLeaveRef = React.useRef(false);
  const frameRef = React.useRef(-1);
  const [activeId, setActiveId] = React.useState();
  const focusItem = React.useCallback((listRef, indexRef) => {
    // `mousedown` clicks occur before `focus`, so the button will steal the
    // focus unless we wait a frame.
    frameRef.current = requestAnimationFrame(() => {
      if (virtual) {
        var _listRef$current$inde;
        setActiveId((_listRef$current$inde = listRef.current[indexRef.current]) == null ? void 0 : _listRef$current$inde.id);
      } else {
        var _listRef$current$inde2;
        (_listRef$current$inde2 = listRef.current[indexRef.current]) == null ? void 0 : _listRef$current$inde2.focus({
          preventScroll: true
        });
      }
    });
  }, [virtual]); // Sync `selectedIndex` to be the `activeIndex` upon opening the floating
  // element. Also, reset `activeIndex` upon closing the floating element.

  floating_ui_react_dom_interactions_esm_index(() => {
    if (!enabled) {
      return;
    }
    if (!previousOpen && open && focusItemOnOpenRef.current && selectedIndex != null) {
      onNavigate(selectedIndex);
    } // Unset `activeIndex`. Since the user can specify `onNavigate`
    // conditionally (onNavigate: open ? setActiveIndex : setSelectedIndex)
    // we store and call the previous function

    if (previousOpen && !open) {
      cancelAnimationFrame(frameRef.current);
      indexRef.current = -1;
      previousOnNavigate(null);
    }
  }, [open, previousOpen, selectedIndex, listRef, focusItem, enabled, onNavigate, previousOnNavigate]); // Sync `activeIndex` to be the focused item while the floating element is
  // open.

  floating_ui_react_dom_interactions_esm_index(() => {
    if (!enabled) {
      return;
    }
    if (open) {
      if (activeIndex == null) {
        if (selectedIndex != null) {
          return;
        } // Reset while the floating element was open (e.g. the list changed).

        if (previousOpen) {
          indexRef.current = -1;
          focusItem(listRef, indexRef);
        } // Initial sync

        if (!previousOpen && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {
          indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);
          onNavigate(indexRef.current);
          focusItem(listRef, indexRef);
        }
      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {
        indexRef.current = activeIndex;
        focusItem(listRef, indexRef);
      }
    }
  }, [open, previousOpen, activeIndex, selectedIndex, nested, listRef, onNavigate, focusItem, enabled, allowEscape, orientation, rtl, virtual, disabledIndicesRef]); // Ensure the parent floating element has focus when a nested child closes
  // to allow arrow key navigation to work after the pointer leaves the child.

  floating_ui_react_dom_interactions_esm_index(() => {
    if (!enabled) {
      return;
    }
    if (!open && previousOpen) {
      var _tree$nodesRef$curren, _tree$nodesRef$curren2;
      const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.refs.floating.current;
      if (parentFloating && !parentFloating.contains(activeElement(getDocument(parentFloating)))) {
        parentFloating.focus({
          preventScroll: true
        });
      }
    }
  }, [enabled, open, previousOpen, tree, parentId]);
  floating_ui_react_dom_interactions_esm_index(() => {
    keyRef.current = null;
  });
  return React.useMemo(() => {
    if (!enabled) {
      return {};
    }
    const disabledIndices = disabledIndicesRef.current;
    function onKeyDown(event) {
      blockPointerLeaveRef.current = true;
      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {
        stopEvent(event);
        onOpenChange(false);
        if (isHTMLElement(refs.domReference.current)) {
          refs.domReference.current.focus();
        }
        return;
      }
      const currentIndex = indexRef.current;
      const minIndex = getMinIndex(listRef, disabledIndices);
      const maxIndex = getMaxIndex(listRef, disabledIndices);
      if (event.key === 'Home') {
        indexRef.current = minIndex;
        onNavigate(indexRef.current);
      }
      if (event.key === 'End') {
        indexRef.current = maxIndex;
        onNavigate(indexRef.current);
      } // Grid navigation

      if (cols > 1) {
        const prevIndex = indexRef.current;
        if (event.key === ARROW_UP) {
          stopEvent(event);
          if (prevIndex === -1) {
            indexRef.current = maxIndex;
          } else {
            indexRef.current = findNonDisabledIndex(listRef, {
              startingIndex: prevIndex,
              amount: cols,
              decrement: true,
              disabledIndices
            });
            if (loop && (prevIndex - cols < minIndex || indexRef.current < 0)) {
              const col = prevIndex % cols;
              const maxCol = maxIndex % cols;
              const offset = maxIndex - (maxCol - col);
              if (maxCol === col) {
                indexRef.current = maxIndex;
              } else {
                indexRef.current = maxCol > col ? offset : offset - cols;
              }
            }
          }
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            indexRef.current = prevIndex;
          }
          onNavigate(indexRef.current);
        }
        if (event.key === ARROW_DOWN) {
          stopEvent(event);
          if (prevIndex === -1) {
            indexRef.current = minIndex;
          } else {
            indexRef.current = findNonDisabledIndex(listRef, {
              startingIndex: prevIndex,
              amount: cols,
              disabledIndices
            });
            if (loop && prevIndex + cols > maxIndex) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex % cols - cols,
                amount: cols,
                disabledIndices
              });
            }
          }
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            indexRef.current = prevIndex;
          }
          onNavigate(indexRef.current);
        } // Remains on the same row/column

        if (orientation === 'both') {
          const prevRow = Math.floor(prevIndex / cols);
          if (event.key === ARROW_RIGHT) {
            stopEvent(event);
            if (prevIndex % cols !== cols - 1) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex,
                disabledIndices
              });
              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {
                indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex - prevIndex % cols - 1,
                  disabledIndices
                });
              }
            } else if (loop) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex - prevIndex % cols - 1,
                disabledIndices
              });
            }
            if (isDifferentRow(indexRef.current, cols, prevRow)) {
              indexRef.current = prevIndex;
            }
          }
          if (event.key === ARROW_LEFT) {
            stopEvent(event);
            if (prevIndex % cols !== 0) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex,
                disabledIndices,
                decrement: true
              });
              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {
                indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex + (cols - prevIndex % cols),
                  decrement: true,
                  disabledIndices
                });
              }
            } else if (loop) {
              indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex + (cols - prevIndex % cols),
                decrement: true,
                disabledIndices
              });
            }
            if (isDifferentRow(indexRef.current, cols, prevRow)) {
              indexRef.current = prevIndex;
            }
          }
          const lastRow = Math.floor(maxIndex / cols) === prevRow;
          if (isIndexOutOfBounds(listRef, indexRef.current)) {
            if (loop && lastRow) {
              indexRef.current = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(listRef, {
                startingIndex: prevIndex - prevIndex % cols - 1,
                disabledIndices
              });
            } else {
              indexRef.current = prevIndex;
            }
          }
          onNavigate(indexRef.current);
          return;
        }
      }
      if (isMainOrientationKey(event.key, orientation)) {
        stopEvent(event); // Reset the index if no item is focused.

        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {
          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;
          onNavigate(indexRef.current);
          return;
        }
        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {
          if (loop) {
            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              disabledIndices
            });
          } else {
            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              disabledIndices
            }));
          }
        } else {
          if (loop) {
            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              decrement: true,
              disabledIndices
            });
          } else {
            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {
              startingIndex: currentIndex,
              decrement: true,
              disabledIndices
            }));
          }
        }
        if (isIndexOutOfBounds(listRef, indexRef.current)) {
          onNavigate(null);
        } else {
          onNavigate(indexRef.current);
        }
      }
    }
    return {
      reference: {
        ...(virtual && open && activeIndex != null && {
          'aria-activedescendant': activeId
        }),
        onKeyDown(event) {
          blockPointerLeaveRef.current = true;
          if (virtual && open) {
            return onKeyDown(event);
          }
          const isNavigationKey = event.key.indexOf('Arrow') === 0 || event.key === 'Enter' || event.key === ' ' || event.key === '';
          if (isNavigationKey) {
            keyRef.current = event.key;
          }
          if (nested) {
            if (isCrossOrientationOpenKey(event.key, orientation, rtl)) {
              stopEvent(event);
              if (open) {
                indexRef.current = getMinIndex(listRef, disabledIndices);
                onNavigate(indexRef.current);
              } else {
                onOpenChange(true);
              }
            }
            return;
          }
          if (isMainOrientationKey(event.key, orientation)) {
            if (selectedIndex != null) {
              indexRef.current = selectedIndex;
            }
            stopEvent(event);
            if (!open && openOnArrowKeyDown) {
              onOpenChange(true);
            } else {
              onKeyDown(event);
            }
            if (open) {
              onNavigate(indexRef.current);
            }
          }
        }
      },
      floating: {
        'aria-orientation': orientation === 'both' ? undefined : orientation,
        ...(virtual && activeIndex != null && {
          'aria-activedescendant': activeId
        }),
        onKeyDown,
        onPointerMove() {
          blockPointerLeaveRef.current = false;
        }
      },
      item: {
        onFocus(_ref2) {
          let {
            currentTarget
          } = _ref2;
          const index = listRef.current.indexOf(currentTarget);
          if (index !== -1) {
            onNavigate(index);
          }
        },
        onClick: _ref3 => {
          let {
            currentTarget
          } = _ref3;
          return currentTarget.focus({
            preventScroll: true
          });
        },
        // Safari
        ...(focusItemOnHover && {
          onMouseMove(_ref4) {
            let {
              currentTarget
            } = _ref4;
            const target = currentTarget;
            if (target) {
              const index = listRef.current.indexOf(target);
              if (index !== -1) {
                onNavigate(index);
              }
            }
          },
          onPointerLeave() {
            if (!blockPointerLeaveRef.current) {
              indexRef.current = -1;
              focusItem(listRef, indexRef);
              onNavigate(null);
              if (!virtual) {
                requestAnimationFrame(() => {
                  var _refs$floating$curren;
                  (_refs$floating$curren = refs.floating.current) == null ? void 0 : _refs$floating$curren.focus({
                    preventScroll: true
                  });
                });
              }
            }
          }
        })
      }
    };
  }, [activeId, disabledIndicesRef, listRef, enabled, orientation, rtl, virtual, open, activeIndex, nested, selectedIndex, openOnArrowKeyDown, focusItemOnHover, allowEscape, cols, loop, refs, focusItem, onNavigate, onOpenChange]);
};

/**
 * Provides a matching callback that can be used to focus an item as the user
 * types, often used in tandem with `useListNavigation()`.
 * @see https://floating-ui.com/docs/useTypeahead
 */
const useTypeahead = function (_ref, _temp) {
  var _ref2;
  let {
    open,
    dataRef
  } = _ref;
  let {
    listRef,
    activeIndex,
    onMatch: unstable_onMatch = () => {},
    enabled = true,
    findMatch = null,
    resetMs = 1000,
    ignoreKeys = [],
    selectedIndex = null
  } = _temp === void 0 ? {
    listRef: {
      current: []
    },
    activeIndex: null
  } : _temp;
  const timeoutIdRef = React.useRef();
  const stringRef = React.useRef('');
  const prevIndexRef = React.useRef((_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1);
  const matchIndexRef = React.useRef(null);
  const onMatch = useEvent(unstable_onMatch);
  const findMatchRef = floating_ui_react_dom_interactions_esm_useLatestRef(findMatch);
  const ignoreKeysRef = floating_ui_react_dom_interactions_esm_useLatestRef(ignoreKeys);
  floating_ui_react_dom_interactions_esm_index(() => {
    if (open) {
      clearTimeout(timeoutIdRef.current);
      matchIndexRef.current = null;
      stringRef.current = '';
    }
  }, [open]);
  floating_ui_react_dom_interactions_esm_index(() => {
    // Sync arrow key navigation but not typeahead navigation
    if (open && stringRef.current === '') {
      var _ref3;
      prevIndexRef.current = (_ref3 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref3 : -1;
    }
  }, [open, selectedIndex, activeIndex]);
  return React.useMemo(() => {
    if (!enabled) {
      return {};
    }
    function onKeyDown(event) {
      // Correctly scope nested non-portalled floating elements. Since the nested
      // floating element is inside of the another, we find the closest role
      // that indicates the floating element scope.
      const target = getTarget(event.nativeEvent);
      if (floating_ui_react_dom_interactions_esm_isElement(target) && (activeElement(getDocument(target)) !== event.currentTarget ? target.closest('[role="dialog"],[role="menu"],[role="listbox"],[role="tree"],[role="grid"]') !== event.currentTarget : false)) {
        return;
      }
      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {
        dataRef.current.typing = true;
        if (event.key === ' ') {
          stopEvent(event);
        }
      }
      const listContent = listRef.current;
      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||
      // Character key
      event.key.length !== 1 ||
      // Modifier key
      event.ctrlKey || event.metaKey || event.altKey) {
        return;
      } // Bail out if the list contains a word like "llama" or "aaron". TODO:
      // allow it in this case, too.

      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {
        var _text$, _text$2;
        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;
      }); // Allows the user to cycle through items that start with the same letter
      // in rapid succession

      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {
        stringRef.current = '';
        prevIndexRef.current = matchIndexRef.current;
      }
      stringRef.current += event.key;
      clearTimeout(timeoutIdRef.current);
      timeoutIdRef.current = setTimeout(() => {
        stringRef.current = '';
        prevIndexRef.current = matchIndexRef.current;
        dataRef.current.typing = false;
      }, resetMs);
      const prevIndex = prevIndexRef.current;
      const orderedList = [...listContent.slice((prevIndex != null ? prevIndex : 0) + 1), ...listContent.slice(0, (prevIndex != null ? prevIndex : 0) + 1)];
      const str = findMatchRef.current ? findMatchRef.current(orderedList, stringRef.current) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(stringRef.current.toLocaleLowerCase())) === 0);
      const index = str ? listContent.indexOf(str) : -1;
      if (index !== -1) {
        onMatch(index);
        matchIndexRef.current = index;
      }
    }
    return {
      reference: {
        onKeyDown
      },
      floating: {
        onKeyDown
      }
    };
  }, [enabled, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch]);
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/TooltipGroup/TooltipGroup.context.js

const TooltipGroupContext = (0,react_production_min.createContext)(false);
const TooltipGroupProvider = TooltipGroupContext.Provider;
const useTooltipGroupContext = () => (0,react_production_min.useContext)(TooltipGroupContext);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/TooltipGroup/TooltipGroup.js



function TooltipGroup({
  children,
  openDelay = 0,
  closeDelay = 0
}) {
  return /* @__PURE__ */react.createElement(TooltipGroupProvider, {
    value: true
  }, /* @__PURE__ */react.createElement(FloatingDelayGroup, {
    delay: {
      open: openDelay,
      close: closeDelay
    }
  }, children));
}
TooltipGroup.displayName = "@mantine/core/TooltipGroup";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/Tooltip.styles.js

var Tooltip_styles_defProp = Object.defineProperty;
var Tooltip_styles_defProps = Object.defineProperties;
var Tooltip_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Tooltip_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Tooltip_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Tooltip_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Tooltip_styles_defNormalProp = (obj, key, value) => key in obj ? Tooltip_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Tooltip_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Tooltip_styles_hasOwnProp.call(b, prop)) Tooltip_styles_defNormalProp(a, prop, b[prop]);
  if (Tooltip_styles_getOwnPropSymbols) for (var prop of Tooltip_styles_getOwnPropSymbols(b)) {
    if (Tooltip_styles_propIsEnum.call(b, prop)) Tooltip_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Tooltip_styles_spreadProps = (a, b) => Tooltip_styles_defProps(a, Tooltip_styles_getOwnPropDescs(b));
function getColors(theme, color) {
  if (!color) {
    return {
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[9],
      color: theme.white
    };
  }
  const colors = theme.fn.variant({
    variant: "filled",
    color,
    primaryFallback: false
  });
  return {
    backgroundColor: colors.background,
    color: colors.color
  };
}
var Tooltip_styles_useStyles = createStyles((theme, {
  color,
  radius,
  width,
  multiline
}) => ({
  tooltip: Tooltip_styles_spreadProps(Tooltip_styles_spreadValues(Tooltip_styles_spreadValues({}, theme.fn.fontStyles()), getColors(theme, color)), {
    lineHeight: theme.lineHeight,
    fontSize: theme.fontSizes.sm,
    borderRadius: theme.fn.radius(radius),
    padding: `calc(${theme.spacing.xs}px / 2) ${theme.spacing.xs}px`,
    position: "absolute",
    whiteSpace: multiline ? "unset" : "nowrap",
    pointerEvents: "none",
    width
  }),
  arrow: {
    backgroundColor: "inherit",
    border: 0,
    zIndex: 1
  }
}));
/* harmony default export */ var Tooltip_styles = (Tooltip_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/Tooltip.errors.js
const TOOLTIP_ERRORS = {
  children: "Tooltip component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported"
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/TooltipFloating/use-floating-tooltip.js


function useFloatingTooltip({
  offset,
  position
}) {
  const [opened, setOpened] = (0,react_production_min.useState)(false);
  const boundaryRef = (0,react_production_min.useRef)();
  const {
    x,
    y,
    reference,
    floating,
    refs,
    update,
    placement
  } = floating_ui_react_dom_interactions_esm_useFloating({
    placement: position,
    middleware: [floating_ui_core_browser_min_E({
      crossAxis: true,
      padding: 5,
      rootBoundary: "document"
    })]
  });
  const horizontalOffset = placement.includes("right") ? offset : position.includes("left") ? offset * -1 : 0;
  const verticalOffset = placement.includes("bottom") ? offset : position.includes("top") ? offset * -1 : 0;
  const handleMouseMove = (0,react_production_min.useCallback)(({
    clientX,
    clientY
  }) => {
    reference({
      getBoundingClientRect() {
        return {
          width: 0,
          height: 0,
          x: clientX,
          y: clientY,
          left: clientX + horizontalOffset,
          top: clientY + verticalOffset,
          right: clientX,
          bottom: clientY
        };
      }
    });
  }, [reference]);
  (0,react_production_min.useEffect)(() => {
    if (refs.floating.current) {
      const boundary = boundaryRef.current;
      boundary.addEventListener("mousemove", handleMouseMove);
      const parents = floating_ui_dom_browser_min_H(refs.floating.current);
      parents.forEach(parent => {
        parent.addEventListener("scroll", update);
      });
      return () => {
        boundary.removeEventListener("mousemove", handleMouseMove);
        parents.forEach(parent => {
          parent.removeEventListener("scroll", update);
        });
      };
    }
    return void 0;
  }, [reference, refs.floating, update, handleMouseMove, opened]);
  return {
    handleMouseMove,
    x,
    y,
    opened,
    setOpened,
    boundaryRef,
    floating
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/TooltipFloating/TooltipFloating.js









var TooltipFloating_defProp = Object.defineProperty;
var TooltipFloating_defProps = Object.defineProperties;
var TooltipFloating_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var TooltipFloating_getOwnPropSymbols = Object.getOwnPropertySymbols;
var TooltipFloating_hasOwnProp = Object.prototype.hasOwnProperty;
var TooltipFloating_propIsEnum = Object.prototype.propertyIsEnumerable;
var TooltipFloating_defNormalProp = (obj, key, value) => key in obj ? TooltipFloating_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var TooltipFloating_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (TooltipFloating_hasOwnProp.call(b, prop)) TooltipFloating_defNormalProp(a, prop, b[prop]);
  if (TooltipFloating_getOwnPropSymbols) for (var prop of TooltipFloating_getOwnPropSymbols(b)) {
    if (TooltipFloating_propIsEnum.call(b, prop)) TooltipFloating_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var TooltipFloating_spreadProps = (a, b) => TooltipFloating_defProps(a, TooltipFloating_getOwnPropDescs(b));
var TooltipFloating_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (TooltipFloating_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && TooltipFloating_getOwnPropSymbols) for (var prop of TooltipFloating_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && TooltipFloating_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const TooltipFloating_defaultProps = {
  refProp: "ref",
  withinPortal: true,
  offset: 10,
  position: "right",
  zIndex: getDefaultZIndex("popover")
};
function TooltipFloating(props) {
  var _b;
  const _a = useComponentDefaultProps("TooltipFloating", TooltipFloating_defaultProps, props),
    {
      children,
      refProp,
      withinPortal,
      style,
      className,
      classNames,
      styles,
      unstyled,
      radius,
      color,
      label,
      offset,
      position,
      multiline,
      width,
      zIndex,
      disabled
    } = _a,
    others = TooltipFloating_objRest(_a, ["children", "refProp", "withinPortal", "style", "className", "classNames", "styles", "unstyled", "radius", "color", "label", "offset", "position", "multiline", "width", "zIndex", "disabled"]);
  const {
    handleMouseMove,
    x,
    y,
    opened,
    boundaryRef,
    floating,
    setOpened
  } = useFloatingTooltip({
    offset,
    position
  });
  const {
    classes,
    cx
  } = Tooltip_styles({
    radius,
    color,
    multiline,
    width
  }, {
    name: "TooltipFloating",
    classNames,
    styles,
    unstyled
  });
  if (!isElement(children)) {
    throw new Error(TOOLTIP_ERRORS.children);
  }
  const targetRef = useMergedRef(boundaryRef, children.ref);
  const onMouseEnter = event => {
    var _a2, _b2;
    (_b2 = (_a2 = children.props).onMouseEnter) == null ? void 0 : _b2.call(_a2, event);
    handleMouseMove(event);
    setOpened(true);
  };
  const onMouseLeave = event => {
    var _a2, _b2;
    (_b2 = (_a2 = children.props).onMouseLeave) == null ? void 0 : _b2.call(_a2, event);
    setOpened(false);
  };
  if (disabled) {
    return /* @__PURE__ */react.createElement(react.Fragment, null, children);
  }
  return /* @__PURE__ */react.createElement(react.Fragment, null, /* @__PURE__ */react.createElement(OptionalPortal, {
    withinPortal
  }, /* @__PURE__ */react.createElement(Box, TooltipFloating_spreadProps(TooltipFloating_spreadValues({}, others), {
    ref: floating,
    className: cx(classes.tooltip, className),
    style: TooltipFloating_spreadProps(TooltipFloating_spreadValues({}, style), {
      zIndex,
      display: opened ? "block" : "none",
      top: y != null ? y : "",
      left: (_b = Math.round(x)) != null ? _b : ""
    })
  }), label)), (0,react_production_min.cloneElement)(children, TooltipFloating_spreadProps(TooltipFloating_spreadValues({}, children.props), {
    [refProp]: targetRef,
    onMouseEnter,
    onMouseLeave
  })));
}
TooltipFloating.displayName = "@mantine/core/TooltipFloating";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Floating/use-floating-auto-update.js



function useFloatingAutoUpdate({
  opened,
  floating,
  positionDependencies
}) {
  const [delayedUpdate, setDelayedUpdate] = (0,react_production_min.useState)(0);
  (0,react_production_min.useEffect)(() => {
    if (floating.refs.reference.current && floating.refs.floating.current) {
      return floating_ui_dom_browser_min_z(floating.refs.reference.current, floating.refs.floating.current, floating.update);
    }
    return void 0;
  }, [floating.refs.reference, floating.refs.floating, opened, delayedUpdate]);
  useDidUpdate(() => {
    floating.update();
  }, positionDependencies);
  useDidUpdate(() => {
    setDelayedUpdate(c => c + 1);
  }, [opened]);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/use-tooltip.js





function useTooltip(settings) {
  const [uncontrolledOpened, setUncontrolledOpened] = (0,react_production_min.useState)(false);
  const controlled = typeof settings.opened === "boolean";
  const opened = controlled ? settings.opened : uncontrolledOpened;
  const withinGroup = useTooltipGroupContext();
  const uid = useId();
  const {
    delay: groupDelay,
    currentId,
    setCurrentId
  } = useDelayGroupContext();
  const onChange = (0,react_production_min.useCallback)(_opened => {
    setUncontrolledOpened(_opened);
    if (_opened) {
      setCurrentId(uid);
    }
  }, [setCurrentId, uid]);
  const {
    x,
    y,
    reference,
    floating,
    context,
    refs,
    update,
    placement,
    middlewareData: {
      arrow: {
        x: arrowX,
        y: arrowY
      } = {}
    }
  } = floating_ui_react_dom_interactions_esm_useFloating({
    placement: settings.position,
    open: opened,
    onOpenChange: onChange,
    middleware: [floating_ui_core_browser_min_O(settings.offset), floating_ui_core_browser_min_E({
      padding: 8
    }), floating_ui_core_browser_min_b(), arrow({
      element: settings.arrowRef,
      padding: settings.arrowOffset
    }), ...(settings.inline ? [floating_ui_core_browser_min_T()] : [])]
  });
  const {
    getReferenceProps,
    getFloatingProps
  } = useInteractions([useHover(context, {
    enabled: settings.events.hover,
    delay: withinGroup ? groupDelay : {
      open: settings.openDelay,
      close: settings.closeDelay
    },
    mouseOnly: !settings.events.touch
  }), useFocus(context, {
    enabled: settings.events.focus,
    keyboardOnly: true
  }), useRole(context, {
    role: "tooltip"
  }), useDismiss(context, {
    enabled: typeof settings.opened === void 0
  }), useDelayGroup(context, {
    id: uid
  })]);
  useFloatingAutoUpdate({
    opened,
    positionDependencies: settings.positionDependencies,
    floating: {
      refs,
      update
    }
  });
  useDidUpdate(() => {
    var _a;
    (_a = settings.onPositionChange) == null ? void 0 : _a.call(settings, placement);
  }, [placement]);
  const isGroupPhase = opened && currentId && currentId !== uid;
  return {
    x,
    y,
    arrowX,
    arrowY,
    reference,
    floating,
    getFloatingProps,
    getReferenceProps,
    isGroupPhase,
    opened,
    placement
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Floating/get-floating-position/get-floating-position.js
function getFloatingPosition(dir, position) {
  if (dir === "rtl" && (position.includes("right") || position.includes("left"))) {
    const [side, placement] = position.split("-");
    const flippedPosition = side === "right" ? "left" : "right";
    return placement === void 0 ? flippedPosition : `${flippedPosition}-${placement}`;
  }
  return position;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Transition/Transition.js



function Transition({
  transition,
  duration = 250,
  exitDuration = duration,
  mounted,
  children,
  timingFunction,
  onExit,
  onEntered,
  onEnter,
  onExited
}) {
  const {
    transitionDuration,
    transitionStatus,
    transitionTimingFunction
  } = useTransition({
    mounted,
    exitDuration,
    duration,
    timingFunction,
    onExit,
    onEntered,
    onEnter,
    onExited
  });
  if (transitionDuration === 0) {
    return mounted ? /* @__PURE__ */react.createElement(react.Fragment, null, children({})) : null;
  }
  return transitionStatus === "exited" ? null : /* @__PURE__ */react.createElement(react.Fragment, null, children(getTransitionStyles({
    transition,
    duration: transitionDuration,
    state: transitionStatus,
    timingFunction: transitionTimingFunction
  })));
}
Transition.displayName = "@mantine/core/Transition";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Floating/FloatingArrow/get-arrow-position-styles.js
var get_arrow_position_styles_defProp = Object.defineProperty;
var get_arrow_position_styles_defProps = Object.defineProperties;
var get_arrow_position_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var get_arrow_position_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var get_arrow_position_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var get_arrow_position_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var get_arrow_position_styles_defNormalProp = (obj, key, value) => key in obj ? get_arrow_position_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var get_arrow_position_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (get_arrow_position_styles_hasOwnProp.call(b, prop)) get_arrow_position_styles_defNormalProp(a, prop, b[prop]);
  if (get_arrow_position_styles_getOwnPropSymbols) for (var prop of get_arrow_position_styles_getOwnPropSymbols(b)) {
    if (get_arrow_position_styles_propIsEnum.call(b, prop)) get_arrow_position_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var get_arrow_position_styles_spreadProps = (a, b) => get_arrow_position_styles_defProps(a, get_arrow_position_styles_getOwnPropDescs(b));
function horizontalSide(placement, arrowY, arrowOffset, arrowPosition) {
  if (placement === "center" || arrowPosition === "center") {
    return {
      top: arrowY
    };
  }
  if (placement === "end") {
    return {
      bottom: arrowOffset
    };
  }
  if (placement === "start") {
    return {
      top: arrowOffset
    };
  }
  return {};
}
function verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir) {
  if (placement === "center" || arrowPosition === "center") {
    return {
      left: arrowX
    };
  }
  if (placement === "end") {
    return {
      [dir === "ltr" ? "right" : "left"]: arrowOffset
    };
  }
  if (placement === "start") {
    return {
      [dir === "ltr" ? "left" : "right"]: arrowOffset
    };
  }
  return {};
}
const radiusByFloatingSide = {
  bottom: "borderTopLeftRadius",
  left: "borderTopRightRadius",
  right: "borderBottomLeftRadius",
  top: "borderBottomRightRadius"
};
function getArrowPositionStyles({
  position,
  withBorder,
  arrowSize,
  arrowOffset,
  arrowRadius,
  arrowPosition,
  arrowX,
  arrowY,
  dir
}) {
  const [side, placement = "center"] = position.split("-");
  const baseStyles = {
    width: arrowSize,
    height: arrowSize,
    transform: "rotate(45deg)",
    position: "absolute",
    [radiusByFloatingSide[side]]: arrowRadius
  };
  const arrowPlacement = withBorder ? -arrowSize / 2 - 1 : -arrowSize / 2;
  if (side === "left") {
    return get_arrow_position_styles_spreadProps(get_arrow_position_styles_spreadValues(get_arrow_position_styles_spreadValues({}, baseStyles), horizontalSide(placement, arrowY, arrowOffset, arrowPosition)), {
      right: arrowPlacement,
      borderLeft: 0,
      borderBottom: 0
    });
  }
  if (side === "right") {
    return get_arrow_position_styles_spreadProps(get_arrow_position_styles_spreadValues(get_arrow_position_styles_spreadValues({}, baseStyles), horizontalSide(placement, arrowY, arrowOffset, arrowPosition)), {
      left: arrowPlacement,
      borderRight: 0,
      borderTop: 0
    });
  }
  if (side === "top") {
    return get_arrow_position_styles_spreadProps(get_arrow_position_styles_spreadValues(get_arrow_position_styles_spreadValues({}, baseStyles), verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir)), {
      bottom: arrowPlacement,
      borderTop: 0,
      borderLeft: 0
    });
  }
  if (side === "bottom") {
    return get_arrow_position_styles_spreadProps(get_arrow_position_styles_spreadValues(get_arrow_position_styles_spreadValues({}, baseStyles), verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir)), {
      top: arrowPlacement,
      borderBottom: 0,
      borderRight: 0
    });
  }
  return {};
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Floating/FloatingArrow/FloatingArrow.js



var FloatingArrow_defProp = Object.defineProperty;
var FloatingArrow_defProps = Object.defineProperties;
var FloatingArrow_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var FloatingArrow_getOwnPropSymbols = Object.getOwnPropertySymbols;
var FloatingArrow_hasOwnProp = Object.prototype.hasOwnProperty;
var FloatingArrow_propIsEnum = Object.prototype.propertyIsEnumerable;
var FloatingArrow_defNormalProp = (obj, key, value) => key in obj ? FloatingArrow_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var FloatingArrow_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (FloatingArrow_hasOwnProp.call(b, prop)) FloatingArrow_defNormalProp(a, prop, b[prop]);
  if (FloatingArrow_getOwnPropSymbols) for (var prop of FloatingArrow_getOwnPropSymbols(b)) {
    if (FloatingArrow_propIsEnum.call(b, prop)) FloatingArrow_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var FloatingArrow_spreadProps = (a, b) => FloatingArrow_defProps(a, FloatingArrow_getOwnPropDescs(b));
var FloatingArrow_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (FloatingArrow_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && FloatingArrow_getOwnPropSymbols) for (var prop of FloatingArrow_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && FloatingArrow_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const FloatingArrow = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      withBorder,
      position,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      visible,
      arrowX,
      arrowY
    } = _b,
    others = FloatingArrow_objRest(_b, ["withBorder", "position", "arrowSize", "arrowOffset", "arrowRadius", "arrowPosition", "visible", "arrowX", "arrowY"]);
  const theme = useMantineTheme();
  if (!visible) {
    return null;
  }
  return /* @__PURE__ */react.createElement("div", FloatingArrow_spreadProps(FloatingArrow_spreadValues({}, others), {
    ref,
    style: getArrowPositionStyles({
      withBorder,
      position,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      dir: theme.dir,
      arrowX,
      arrowY
    })
  }));
});
FloatingArrow.displayName = "@mantine/core/FloatingArrow";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Tooltip/Tooltip.js














var Tooltip_defProp = Object.defineProperty;
var Tooltip_defProps = Object.defineProperties;
var Tooltip_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Tooltip_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Tooltip_hasOwnProp = Object.prototype.hasOwnProperty;
var Tooltip_propIsEnum = Object.prototype.propertyIsEnumerable;
var Tooltip_defNormalProp = (obj, key, value) => key in obj ? Tooltip_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Tooltip_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Tooltip_hasOwnProp.call(b, prop)) Tooltip_defNormalProp(a, prop, b[prop]);
  if (Tooltip_getOwnPropSymbols) for (var prop of Tooltip_getOwnPropSymbols(b)) {
    if (Tooltip_propIsEnum.call(b, prop)) Tooltip_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Tooltip_spreadProps = (a, b) => Tooltip_defProps(a, Tooltip_getOwnPropDescs(b));
var Tooltip_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Tooltip_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Tooltip_getOwnPropSymbols) for (var prop of Tooltip_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Tooltip_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Tooltip_defaultProps = {
  position: "top",
  refProp: "ref",
  withinPortal: false,
  inline: false,
  arrowSize: 4,
  arrowOffset: 5,
  arrowRadius: 0,
  arrowPosition: "side",
  offset: 5,
  transition: "fade",
  transitionDuration: 100,
  width: "auto",
  events: {
    hover: true,
    focus: false,
    touch: false
  },
  zIndex: getDefaultZIndex("popover"),
  positionDependencies: []
};
const _Tooltip = (0,react_production_min.forwardRef)((props, ref) => {
  const arrowRef = (0,react_production_min.useRef)(null);
  const _a = useComponentDefaultProps("Tooltip", Tooltip_defaultProps, props),
    {
      children,
      position,
      refProp,
      label,
      openDelay,
      closeDelay,
      onPositionChange,
      opened,
      withinPortal,
      radius,
      color,
      classNames,
      styles,
      unstyled,
      style,
      className,
      withArrow,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      offset,
      transition,
      transitionDuration,
      multiline,
      width,
      events,
      zIndex,
      disabled,
      positionDependencies,
      onClick,
      onMouseEnter,
      onMouseLeave,
      inline
    } = _a,
    others = Tooltip_objRest(_a, ["children", "position", "refProp", "label", "openDelay", "closeDelay", "onPositionChange", "opened", "withinPortal", "radius", "color", "classNames", "styles", "unstyled", "style", "className", "withArrow", "arrowSize", "arrowOffset", "arrowRadius", "arrowPosition", "offset", "transition", "transitionDuration", "multiline", "width", "events", "zIndex", "disabled", "positionDependencies", "onClick", "onMouseEnter", "onMouseLeave", "inline"]);
  const {
    classes,
    cx,
    theme
  } = Tooltip_styles({
    radius,
    color,
    width,
    multiline
  }, {
    name: "Tooltip",
    classNames,
    styles,
    unstyled
  });
  const tooltip = useTooltip({
    position: getFloatingPosition(theme.dir, position),
    closeDelay,
    openDelay,
    onPositionChange,
    opened,
    events,
    arrowRef,
    arrowOffset,
    offset: offset + (withArrow ? arrowSize / 2 : 0),
    positionDependencies: [...positionDependencies, children],
    inline
  });
  if (!isElement(children)) {
    throw new Error(TOOLTIP_ERRORS.children);
  }
  const targetRef = useMergedRef(tooltip.reference, children.ref, ref);
  return /* @__PURE__ */react.createElement(react.Fragment, null, /* @__PURE__ */react.createElement(OptionalPortal, {
    withinPortal
  }, /* @__PURE__ */react.createElement(Transition, {
    mounted: !disabled && tooltip.opened,
    transition,
    duration: tooltip.isGroupPhase ? 10 : transitionDuration
  }, transitionStyles => {
    var _a2, _b;
    return /* @__PURE__ */react.createElement(Box, Tooltip_spreadValues(Tooltip_spreadValues({}, others), tooltip.getFloatingProps({
      ref: tooltip.floating,
      className: classes.tooltip,
      style: Tooltip_spreadProps(Tooltip_spreadValues(Tooltip_spreadValues({}, style), transitionStyles), {
        zIndex,
        top: (_a2 = tooltip.y) != null ? _a2 : 0,
        left: (_b = tooltip.x) != null ? _b : 0
      })
    })), label, /* @__PURE__ */react.createElement(FloatingArrow, {
      ref: arrowRef,
      arrowX: tooltip.arrowX,
      arrowY: tooltip.arrowY,
      visible: withArrow,
      withBorder: false,
      position: tooltip.placement,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      className: classes.arrow
    }));
  })), (0,react_production_min.cloneElement)(children, tooltip.getReferenceProps(Tooltip_spreadValues({
    onClick,
    onMouseEnter,
    onMouseLeave,
    onMouseMove: props.onMouseMove,
    onPointerDown: props.onPointerDown,
    onPointerEnter: props.onPointerEnter,
    [refProp]: targetRef,
    className: cx(className, children.props.className)
  }, children.props))));
});
_Tooltip.Group = TooltipGroup;
_Tooltip.Floating = TooltipFloating;
_Tooltip.displayName = "@mantine/core/Tooltip";
const Tooltip = _Tooltip;

;// CONCATENATED MODULE: ./src/hooks/translations/useAccommodationTranslations.ts


var useAccommodationTranslations = function useAccommodationTranslations() {
  return react.useContext(TranslationsContext);
};
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Skeleton/Skeleton.styles.js

const fade = keyframes({
  "from, to": {
    opacity: 0.4
  },
  "50%": {
    opacity: 1
  }
});
var Skeleton_styles_useStyles = createStyles((theme, {
  height,
  width,
  radius,
  circle,
  animate
}) => ({
  root: {
    height,
    width: circle ? height : width,
    borderRadius: circle ? height : theme.fn.radius(radius),
    position: "relative",
    overflow: "hidden",
    WebkitTransform: "translateZ(0)"
  },
  visible: {
    "&::before": {
      content: '""',
      position: "absolute",
      background: theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.white,
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      zIndex: 10
    },
    "&::after": {
      content: '""',
      position: "absolute",
      background: theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[3],
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      animation: animate ? `${fade} 1500ms linear infinite` : "none",
      zIndex: 11
    }
  }
}));
/* harmony default export */ var Skeleton_styles = (Skeleton_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Skeleton/Skeleton.js




var Skeleton_defProp = Object.defineProperty;
var Skeleton_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Skeleton_hasOwnProp = Object.prototype.hasOwnProperty;
var Skeleton_propIsEnum = Object.prototype.propertyIsEnumerable;
var Skeleton_defNormalProp = (obj, key, value) => key in obj ? Skeleton_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Skeleton_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Skeleton_hasOwnProp.call(b, prop)) Skeleton_defNormalProp(a, prop, b[prop]);
  if (Skeleton_getOwnPropSymbols) for (var prop of Skeleton_getOwnPropSymbols(b)) {
    if (Skeleton_propIsEnum.call(b, prop)) Skeleton_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Skeleton_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Skeleton_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Skeleton_getOwnPropSymbols) for (var prop of Skeleton_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Skeleton_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Skeleton_defaultProps = {
  height: "auto",
  width: "100%",
  visible: true,
  animate: true
};
const Skeleton = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Skeleton", Skeleton_defaultProps, props),
    {
      height,
      width,
      visible,
      animate,
      className,
      circle,
      radius,
      unstyled
    } = _a,
    others = Skeleton_objRest(_a, ["height", "width", "visible", "animate", "className", "circle", "radius", "unstyled"]);
  const {
    classes,
    cx
  } = Skeleton_styles({
    height,
    width,
    circle,
    radius,
    animate
  }, {
    unstyled,
    name: "Skeleton"
  });
  return /* @__PURE__ */react.createElement(Box, Skeleton_spreadValues({
    className: cx(classes.root, {
      [classes.visible]: visible
    }, className),
    ref
  }, others));
});
Skeleton.displayName = "@mantine/core/Skeleton";

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-click-outside/use-click-outside.js

const DEFAULT_EVENTS = ["mousedown", "touchstart"];
function useClickOutside(handler, events, nodes) {
  const ref = (0,react_production_min.useRef)();
  (0,react_production_min.useEffect)(() => {
    const listener = event => {
      const {
        target
      } = event != null ? event : {};
      if (Array.isArray(nodes)) {
        const shouldIgnore = (target == null ? void 0 : target.hasAttribute("data-ignore-outside-clicks")) || !document.body.contains(target) && target.tagName !== "HTML";
        const shouldTrigger = nodes.every(node => !!node && !event.composedPath().includes(node));
        shouldTrigger && !shouldIgnore && handler();
      } else if (ref.current && !ref.current.contains(target)) {
        handler();
      }
    };
    (events || DEFAULT_EVENTS).forEach(fn => document.addEventListener(fn, listener));
    return () => {
      (events || DEFAULT_EVENTS).forEach(fn => document.removeEventListener(fn, listener));
    };
  }, [ref, handler, nodes]);
  return ref;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-uncontrolled/use-uncontrolled.js

function useUncontrolled({
  value,
  defaultValue,
  finalValue,
  onChange = () => {}
}) {
  const [uncontrolledValue, setUncontrolledValue] = (0,react_production_min.useState)(defaultValue !== void 0 ? defaultValue : finalValue);
  const handleUncontrolledChange = val => {
    setUncontrolledValue(val);
    onChange == null ? void 0 : onChange(val);
  };
  if (value !== void 0) {
    return [value, onChange, true];
  }
  return [uncontrolledValue, handleUncontrolledChange, false];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/use-popover.js



function getPopoverMiddlewares(options) {
  const middlewares = [floating_ui_core_browser_min_O(options.offset)];
  if (options.middlewares.shift) {
    middlewares.push(floating_ui_core_browser_min_E({
      limiter: floating_ui_core_browser_min_L()
    }));
  }
  if (options.middlewares.flip) {
    middlewares.push(floating_ui_core_browser_min_b());
  }
  if (options.middlewares.inline) {
    middlewares.push(floating_ui_core_browser_min_T());
  }
  middlewares.push(arrow({
    element: options.arrowRef,
    padding: options.arrowOffset
  }));
  return middlewares;
}
function usePopover(options) {
  const [_opened, setOpened] = useUncontrolled({
    value: options.opened,
    defaultValue: options.defaultOpened,
    finalValue: false,
    onChange: options.onChange
  });
  const onClose = () => {
    var _a;
    (_a = options.onClose) == null ? void 0 : _a.call(options);
    setOpened(false);
  };
  const onToggle = () => {
    var _a, _b;
    if (_opened) {
      (_a = options.onClose) == null ? void 0 : _a.call(options);
      setOpened(false);
    } else {
      (_b = options.onOpen) == null ? void 0 : _b.call(options);
      setOpened(true);
    }
  };
  const floating = floating_ui_react_dom_interactions_esm_useFloating({
    placement: options.position,
    middleware: [...getPopoverMiddlewares(options), ...(options.width === "target" ? [floating_ui_core_browser_min_k({
      apply({
        rects
      }) {
        var _a, _b;
        Object.assign((_b = (_a = floating.refs.floating.current) == null ? void 0 : _a.style) != null ? _b : {}, {
          width: `${rects.reference.width}px`
        });
      }
    })] : [])]
  });
  useFloatingAutoUpdate({
    opened: options.opened,
    positionDependencies: options.positionDependencies,
    floating
  });
  useDidUpdate(() => {
    var _a;
    (_a = options.onPositionChange) == null ? void 0 : _a.call(options, floating.placement);
  }, [floating.placement]);
  return {
    floating,
    controlled: typeof options.opened === "boolean",
    opened: _opened,
    onClose,
    onToggle
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/create-safe-context/create-safe-context.js

function createSafeContext(errorMessage) {
  const Context = (0,react_production_min.createContext)(null);
  const useSafeContext = () => {
    const ctx = (0,react_production_min.useContext)(Context);
    if (ctx === null) {
      throw new Error(errorMessage);
    }
    return ctx;
  };
  const Provider = ({
    children,
    value
  }) => /* @__PURE__ */react.createElement(Context.Provider, {
    value
  }, children);
  return [Provider, useSafeContext];
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/Popover.errors.js
const POPOVER_ERRORS = {
  context: "Popover component was not found in the tree",
  children: "Popover.Target component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported"
};

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/Popover.context.js


const [PopoverContextProvider, usePopoverContext] = createSafeContext(POPOVER_ERRORS.context);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/PopoverTarget/PopoverTarget.js






var PopoverTarget_defProp = Object.defineProperty;
var PopoverTarget_defProps = Object.defineProperties;
var PopoverTarget_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var PopoverTarget_getOwnPropSymbols = Object.getOwnPropertySymbols;
var PopoverTarget_hasOwnProp = Object.prototype.hasOwnProperty;
var PopoverTarget_propIsEnum = Object.prototype.propertyIsEnumerable;
var PopoverTarget_defNormalProp = (obj, key, value) => key in obj ? PopoverTarget_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var PopoverTarget_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (PopoverTarget_hasOwnProp.call(b, prop)) PopoverTarget_defNormalProp(a, prop, b[prop]);
  if (PopoverTarget_getOwnPropSymbols) for (var prop of PopoverTarget_getOwnPropSymbols(b)) {
    if (PopoverTarget_propIsEnum.call(b, prop)) PopoverTarget_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var PopoverTarget_spreadProps = (a, b) => PopoverTarget_defProps(a, PopoverTarget_getOwnPropDescs(b));
var PopoverTarget_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (PopoverTarget_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && PopoverTarget_getOwnPropSymbols) for (var prop of PopoverTarget_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && PopoverTarget_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const PopoverTarget_defaultProps = {
  refProp: "ref",
  popupType: "dialog"
};
const PopoverTarget = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("PopoverTarget", PopoverTarget_defaultProps, props),
    {
      children,
      refProp,
      popupType
    } = _a,
    others = PopoverTarget_objRest(_a, ["children", "refProp", "popupType"]);
  if (!isElement(children)) {
    throw new Error(POPOVER_ERRORS.children);
  }
  const forwardedProps = others;
  const ctx = usePopoverContext();
  const targetRef = useMergedRef(ctx.reference, children.ref, ref);
  const accessibleProps = ctx.withRoles ? {
    "aria-haspopup": popupType,
    "aria-expanded": ctx.opened,
    "aria-controls": ctx.getDropdownId(),
    id: ctx.getTargetId()
  } : {};
  return (0,react_production_min.cloneElement)(children, PopoverTarget_spreadValues(PopoverTarget_spreadProps(PopoverTarget_spreadValues(PopoverTarget_spreadValues(PopoverTarget_spreadValues({}, forwardedProps), accessibleProps), ctx.targetProps), {
    className: clsx_m(ctx.targetProps.className, forwardedProps.className, children.props.className),
    [refProp]: targetRef
  }), !ctx.controlled ? {
    onClick: ctx.onToggle
  } : null));
});
PopoverTarget.displayName = "@mantine/core/PopoverTarget";

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/noop/noop.js
const noop_noop = () => {};

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/close-on-escape/close-on-escape.js

function closeOnEscape(callback, options = {
  active: true
}) {
  if (typeof callback !== "function" || !options.active) {
    return options.onKeyDown || noop_noop;
  }
  return event => {
    var _a;
    if (event.key === "Escape") {
      callback(event);
      (_a = options.onTrigger) == null ? void 0 : _a.call(options);
    }
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/PopoverDropdown/PopoverDropdown.styles.js

var PopoverDropdown_styles_useStyles = createStyles((theme, {
  radius,
  shadow
}) => ({
  dropdown: {
    position: "absolute",
    backgroundColor: theme.white,
    background: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.white,
    border: `1px solid ${theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[2]}`,
    padding: `${theme.spacing.sm}px ${theme.spacing.md}px`,
    boxShadow: theme.shadows[shadow] || shadow || "none",
    borderRadius: theme.fn.radius(radius),
    "&:focus": {
      outline: 0
    }
  },
  arrow: {
    backgroundColor: "inherit",
    border: `1px solid ${theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[2]}`,
    zIndex: 1
  }
}));
/* harmony default export */ var PopoverDropdown_styles = (PopoverDropdown_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/FocusTrap/FocusTrap.js



function FocusTrap({
  children,
  active = true,
  refProp = "ref"
}) {
  const focusTrapRef = useFocusTrap(active);
  const ref = useMergedRef(focusTrapRef, children == null ? void 0 : children.ref);
  if (!isElement(children)) {
    return children;
  }
  return (0,react_production_min.cloneElement)(children, {
    [refProp]: ref
  });
}
FocusTrap.displayName = "@mantine/core/FocusTrap";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/PopoverDropdown/PopoverDropdown.js











var PopoverDropdown_defProp = Object.defineProperty;
var PopoverDropdown_defProps = Object.defineProperties;
var PopoverDropdown_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var PopoverDropdown_getOwnPropSymbols = Object.getOwnPropertySymbols;
var PopoverDropdown_hasOwnProp = Object.prototype.hasOwnProperty;
var PopoverDropdown_propIsEnum = Object.prototype.propertyIsEnumerable;
var PopoverDropdown_defNormalProp = (obj, key, value) => key in obj ? PopoverDropdown_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var PopoverDropdown_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (PopoverDropdown_hasOwnProp.call(b, prop)) PopoverDropdown_defNormalProp(a, prop, b[prop]);
  if (PopoverDropdown_getOwnPropSymbols) for (var prop of PopoverDropdown_getOwnPropSymbols(b)) {
    if (PopoverDropdown_propIsEnum.call(b, prop)) PopoverDropdown_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var PopoverDropdown_spreadProps = (a, b) => PopoverDropdown_defProps(a, PopoverDropdown_getOwnPropDescs(b));
var PopoverDropdown_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (PopoverDropdown_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && PopoverDropdown_getOwnPropSymbols) for (var prop of PopoverDropdown_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && PopoverDropdown_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const PopoverDropdown_defaultProps = {};
function PopoverDropdown(props) {
  const _a = useComponentDefaultProps("PopoverDropdown", PopoverDropdown_defaultProps, props),
    {
      style,
      className,
      children,
      onKeyDownCapture
    } = _a,
    others = PopoverDropdown_objRest(_a, ["style", "className", "children", "onKeyDownCapture"]);
  const ctx = usePopoverContext();
  const {
    classes,
    cx
  } = PopoverDropdown_styles({
    radius: ctx.radius,
    shadow: ctx.shadow
  }, {
    name: ctx.__staticSelector,
    classNames: ctx.classNames,
    styles: ctx.styles,
    unstyled: ctx.unstyled
  });
  const returnFocus = useFocusReturn({
    opened: ctx.opened,
    shouldReturnFocus: ctx.returnFocus
  });
  const accessibleProps = ctx.withRoles ? {
    "aria-labelledby": ctx.getTargetId(),
    id: ctx.getDropdownId(),
    role: "dialog"
  } : {};
  if (ctx.disabled) {
    return null;
  }
  return /* @__PURE__ */react.createElement(OptionalPortal, {
    withinPortal: ctx.withinPortal
  }, /* @__PURE__ */react.createElement(Transition, {
    mounted: ctx.opened,
    transition: ctx.transition,
    duration: ctx.transitionDuration,
    exitDuration: typeof ctx.exitTransitionDuration === "number" ? ctx.exitTransitionDuration : ctx.transitionDuration
  }, transitionStyles => {
    var _a2, _b;
    return /* @__PURE__ */react.createElement(FocusTrap, {
      active: ctx.trapFocus
    }, /* @__PURE__ */react.createElement(Box, PopoverDropdown_spreadValues(PopoverDropdown_spreadProps(PopoverDropdown_spreadValues({}, accessibleProps), {
      tabIndex: -1,
      key: ctx.placement,
      ref: ctx.floating,
      style: PopoverDropdown_spreadProps(PopoverDropdown_spreadValues(PopoverDropdown_spreadValues({}, style), transitionStyles), {
        zIndex: ctx.zIndex,
        top: (_a2 = ctx.y) != null ? _a2 : 0,
        left: (_b = ctx.x) != null ? _b : 0,
        width: ctx.width === "target" ? void 0 : ctx.width
      }),
      className: cx(classes.dropdown, className),
      onKeyDownCapture: closeOnEscape(ctx.onClose, {
        active: ctx.closeOnEscape,
        onTrigger: returnFocus,
        onKeyDown: onKeyDownCapture
      }),
      "data-position": ctx.placement
    }), others), children, /* @__PURE__ */react.createElement(FloatingArrow, {
      ref: ctx.arrowRef,
      arrowX: ctx.arrowX,
      arrowY: ctx.arrowY,
      visible: ctx.withArrow,
      withBorder: true,
      position: ctx.placement,
      arrowSize: ctx.arrowSize,
      arrowRadius: ctx.arrowRadius,
      arrowOffset: ctx.arrowOffset,
      arrowPosition: ctx.arrowPosition,
      className: classes.arrow
    })));
  }));
}
PopoverDropdown.displayName = "@mantine/core/PopoverDropdown";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Popover/Popover.js








var Popover_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Popover_hasOwnProp = Object.prototype.hasOwnProperty;
var Popover_propIsEnum = Object.prototype.propertyIsEnumerable;
var Popover_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Popover_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Popover_getOwnPropSymbols) for (var prop of Popover_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Popover_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Popover_defaultProps = {
  position: "bottom",
  offset: 8,
  positionDependencies: [],
  transition: "fade",
  transitionDuration: 150,
  middlewares: {
    flip: true,
    shift: true,
    inline: false
  },
  arrowSize: 7,
  arrowOffset: 5,
  arrowRadius: 0,
  arrowPosition: "side",
  closeOnClickOutside: true,
  withinPortal: false,
  closeOnEscape: true,
  trapFocus: false,
  withRoles: true,
  returnFocus: false,
  clickOutsideEvents: ["mousedown", "touchstart"],
  zIndex: getDefaultZIndex("popover"),
  __staticSelector: "Popover",
  width: "max-content"
};
function Popover_Popover(props) {
  var _b, _c, _d, _e, _f, _g;
  const arrowRef = (0,react_production_min.useRef)(null);
  const _a = useComponentDefaultProps("Popover", Popover_defaultProps, props),
    {
      children,
      position,
      offset,
      onPositionChange,
      positionDependencies,
      opened,
      transition,
      transitionDuration,
      width,
      middlewares,
      withArrow,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      unstyled,
      classNames,
      styles,
      closeOnClickOutside,
      withinPortal,
      closeOnEscape,
      clickOutsideEvents,
      trapFocus,
      onClose,
      onOpen,
      onChange,
      zIndex,
      radius,
      shadow,
      id,
      defaultOpened,
      exitTransitionDuration,
      __staticSelector,
      withRoles,
      disabled,
      returnFocus
    } = _a,
    others = Popover_objRest(_a, ["children", "position", "offset", "onPositionChange", "positionDependencies", "opened", "transition", "transitionDuration", "width", "middlewares", "withArrow", "arrowSize", "arrowOffset", "arrowRadius", "arrowPosition", "unstyled", "classNames", "styles", "closeOnClickOutside", "withinPortal", "closeOnEscape", "clickOutsideEvents", "trapFocus", "onClose", "onOpen", "onChange", "zIndex", "radius", "shadow", "id", "defaultOpened", "exitTransitionDuration", "__staticSelector", "withRoles", "disabled", "returnFocus"]);
  const [targetNode, setTargetNode] = (0,react_production_min.useState)(null);
  const [dropdownNode, setDropdownNode] = (0,react_production_min.useState)(null);
  const uid = useId(id);
  const theme = useMantineTheme();
  const popover = usePopover({
    middlewares,
    width,
    position: getFloatingPosition(theme.dir, position),
    offset: offset + (withArrow ? arrowSize / 2 : 0),
    arrowRef,
    arrowOffset,
    onPositionChange,
    positionDependencies,
    opened,
    defaultOpened,
    onChange,
    onOpen,
    onClose
  });
  useClickOutside(() => closeOnClickOutside && popover.onClose(), clickOutsideEvents, [targetNode, dropdownNode]);
  const reference = (0,react_production_min.useCallback)(node => {
    setTargetNode(node);
    popover.floating.reference(node);
  }, [popover.floating.reference]);
  const floating = (0,react_production_min.useCallback)(node => {
    setDropdownNode(node);
    popover.floating.floating(node);
  }, [popover.floating.floating]);
  return /* @__PURE__ */react.createElement(PopoverContextProvider, {
    value: {
      returnFocus,
      disabled,
      controlled: popover.controlled,
      reference,
      floating,
      x: popover.floating.x,
      y: popover.floating.y,
      arrowX: (_d = (_c = (_b = popover.floating) == null ? void 0 : _b.middlewareData) == null ? void 0 : _c.arrow) == null ? void 0 : _d.x,
      arrowY: (_g = (_f = (_e = popover.floating) == null ? void 0 : _e.middlewareData) == null ? void 0 : _f.arrow) == null ? void 0 : _g.y,
      opened: popover.opened,
      arrowRef,
      transition,
      transitionDuration,
      exitTransitionDuration,
      width,
      withArrow,
      arrowSize,
      arrowOffset,
      arrowRadius,
      arrowPosition,
      placement: popover.floating.placement,
      trapFocus,
      withinPortal,
      zIndex,
      radius,
      shadow,
      closeOnEscape,
      onClose: popover.onClose,
      onToggle: popover.onToggle,
      getTargetId: () => `${uid}-target`,
      getDropdownId: () => `${uid}-dropdown`,
      withRoles,
      targetProps: others,
      __staticSelector,
      classNames,
      styles,
      unstyled
    }
  }, children);
}
Popover_Popover.Target = PopoverTarget;
Popover_Popover.Dropdown = PopoverDropdown;
Popover_Popover.displayName = "@mantine/core/Popover";

;// CONCATENATED MODULE: ./src/shared_components/button_with_popover/button_with_popover.tsx

var button_with_popover_excluded = ["children", "showPopover", "popoverText", "onPopoverClose"];


//Hooks


//Components




//Lib


//Types

var ButtonWithPopover = function ButtonWithPopover(_ref) {
  var children = _ref.children,
    showPopover = _ref.showPopover,
    popoverText = _ref.popoverText,
    onPopoverClose = _ref.onPopoverClose,
    rest = objectWithoutProperties_objectWithoutProperties(_ref, button_with_popover_excluded);
  var theme = Ze();
  var bodyColorWithOpacity = helpers_hexToHSLA(theme.css.frameworkBackground, 40, .5);
  return /*#__PURE__*/react.createElement(Popover_Popover, {
    opened: showPopover,
    onClose: onPopoverClose,
    position: "top",
    withArrow: true,
    zIndex: 9999,
    trapFocus: false,
    closeOnEscape: false,
    transition: "pop",
    width: 260,
    styles: function styles() {
      return {
        dropdown: {
          body: {
            pointerEvents: "none"
          },
          root: {
            width: "100%"
          }
        }
      };
    }
  }, /*#__PURE__*/react.createElement(Popover_Popover.Target, null, /*#__PURE__*/react.createElement(button_Button, rest, children)), /*#__PURE__*/react.createElement(Popover_Popover.Dropdown, {
    sx: {
      background: theme.css.popoutBackground,
      color: theme.css.popoutColor,
      borderRadius: theme.css.popoutRoundedCorners,
      boxShadow: "0 1px 4px ".concat(bodyColorWithOpacity.isDark ? bodyColorWithOpacity.color : "rgba(0,0,0,.5)")
    }
  }, /*#__PURE__*/react.createElement(BodyText, {
    style: {
      color: "inherit"
    }
  }, popoverText)));
};
;// CONCATENATED MODULE: ./src/shared_components/styles.ts




var bodyColorWithOpacity = function bodyColorWithOpacity(theme) {
  return helpers_hexToHSLA(theme.css.frameworkBackground, 40, .5);
};
var Title = styled_components_esm.h1.withConfig({
  displayName: "styles__Title",
  componentId: "sc-3esqar-0"
})(["&&&{", "}"], function (_ref) {
  var theme = _ref.theme;
  return Ae(["letter-spacing:", ";line-height:", ";font-size:", ";font-weight:", ";text-transform:", ";font-family:", ";color:", ";"], theme.css.titleLetterSpacing, theme.css.titleLineHeight, theme.css.titleFontSize, theme.css.titleFontWeight, theme.css.titleTextTransform, theme.css.titleFontFamily, theme.css.titleColor);
});
var Subtitle = styled_components_esm.h1.withConfig({
  displayName: "styles__Subtitle",
  componentId: "sc-3esqar-1"
})(["&&&{", "}"], function (_ref2) {
  var theme = _ref2.theme,
    smaller = _ref2.smaller;
  return Ae(["letter-spacing:", ";line-height:", ";font-size:", ";font-weight:", ";text-transform:", ";font-family:", ";color:", ";text-overflow:ellipsis;overflow:hidden;"], theme.css.subtitleLetterSpacing, theme.css.subtitleLineHeight, smaller ? theme.css.subtitleFontSmaller : theme.css.subtitleFontSize, theme.css.subtitleFontWeight, theme.css.subtitleTextTransform, theme.css.subtitleFontFamily, theme.css.subtitleColor);
});
var CardTitle = styled_components_esm(Subtitle).withConfig({
  displayName: "styles__CardTitle",
  componentId: "sc-3esqar-2"
})(["", ""], function (_ref3) {
  var theme = _ref3.theme;
  return Ae(["color:", " !important;"], theme.css.cardTitleColor);
});
var Card = styled_components_esm.div.attrs(function (props) {
  return {
    className: props.fakeCard ? "bv_card_fake" : "bv_card",
    withTopArrow: props.withTopArrow,
    alignArrow: props.alignArrow,
    arrowColor: props.arrowColor,
    fakeCard: props.fakeCard
  };
}).withConfig({
  displayName: "styles__Card",
  componentId: "sc-3esqar-3"
})(["", " border-style:solid;position:relative;user-select:none;", " ", ""], function (_ref4) {
  var theme = _ref4.theme;
  return Ae(["background:", ";color:", ";box-shadow:", ";border-radius:", ";border-width:", ";border-color:", ";"], theme.css.cardBackground, theme.css.cardColor, theme.css.cardBoxShadow, theme.css.cardBorderRadius, theme.css.cardBorderWidth, theme.css.cardBorderColor);
}, function (_ref5) {
  var withTopArrow = _ref5.withTopArrow,
    arrowColor = _ref5.arrowColor,
    alignArrow = _ref5.alignArrow;
  return withTopArrow && Ae(["&:before{content:'';display:block;width:24px;height:24px;position:absolute;border-style:solid;transform:rotateZ(-45deg);z-index:0;border-bottom:0;border-left:0;background-clip:content-box;pointer-events:none;margin-top:5px;border-width:", ";border-color:", ";background:", ";top:calc(-12px - ", ");", " ", " ", "}&:after{content:'';pointer-events:none;display:block;position:absolute;width:100px;height:10px;z-index:2;background:", ";top:0;", " ", " ", "}"], function (_ref6) {
    var theme = _ref6.theme;
    return theme.css.cardBorderWidth;
  }, function (_ref7) {
    var theme = _ref7.theme;
    return theme.css.cardBorderColor;
  }, function (_ref8) {
    var theme = _ref8.theme;
    return arrowColor !== null && arrowColor !== void 0 ? arrowColor : theme.css.cardBackground;
  }, function (_ref9) {
    var theme = _ref9.theme;
    return theme.css.cardBorderWidth;
  }, alignArrow === "right" && Ae(["right:calc(25% - 12px);"]), alignArrow === "left" && Ae(["left:calc(25% - 12px);"]), !alignArrow && Ae(["left:calc(50% - 12px);"]), function (_ref10) {
    var theme = _ref10.theme;
    return arrowColor !== null && arrowColor !== void 0 ? arrowColor : theme.css.cardBackground;
  }, alignArrow === "right" && Ae(["right:calc(25% - 50px);"]), alignArrow === "left" && Ae(["left:calc(25% - 50px);"]), !alignArrow && Ae(["left:calc(50% - 50px);"]));
}, function (_ref11) {
  var fakeCard = _ref11.fakeCard;
  return !fakeCard && Ae(["& .bv_card{border-width:0;box-shadow:none;background:", ";}"], function (_ref12) {
    var theme = _ref12.theme;
    return theme.css.cardInnerBackground;
  });
});
var BodyTextStyle = Ae(["&&&{", " ", " ", " ", " ", " ", " position:relative;", " ", " :empty{display:none;}}"], function (_ref13) {
  var theme = _ref13.theme,
    bold = _ref13.bold,
    large = _ref13.large,
    muted = _ref13.muted,
    small = _ref13.small;
  return Ae(["font-size:", ";color:", ";font-weight:", ";font-family:", ";line-height:", ";"], large ? theme.css.bodyLargeFontSize : small ? theme.css.smallFontSize : theme.css.bodyFontSize, helpers_hexToHSLA(theme.css.bodyColor, undefined, muted ? +theme.css.bodyMutedOpacity : 1).color, bold ? theme.css.bodyBoldFontWeight : theme.css.bodyFontWeight, theme.css.bodyFontFamily, theme.css.bodyLineHeight);
}, function (_ref14) {
  var isSidebarText = _ref14.isSidebarText,
    theme = _ref14.theme,
    muted = _ref14.muted;
  return isSidebarText && Ae(["color:", ";"], helpers_hexToHSLA(theme.css.sidebarColor, undefined, muted ? +theme.css.bodyMutedOpacity : 1).color);
}, function (_ref15) {
  var isCardText = _ref15.isCardText,
    theme = _ref15.theme,
    muted = _ref15.muted;
  return isCardText && Ae(["color:", ";"], helpers_hexToHSLA(theme.css.cardColor, undefined, muted ? +theme.css.bodyMutedOpacity : 1).color);
}, function (_ref16) {
  var italic = _ref16.italic;
  return italic && Ae(["font-style:italic;"]);
}, function (_ref17) {
  var maxLines = _ref17.maxLines;
  return maxLines && Ae(["-webkit-line-clamp:", ";overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;"], maxLines);
}, function (_ref18) {
  var underline = _ref18.underline;
  return underline && Ae(["text-decoration:underline;"]);
}, function (_ref19) {
  var alert = _ref19.alert,
    theme = _ref19.theme;
  return alert && Ae(["color:", ";"], theme.css.offerColorDark);
}, function (_ref20) {
  var underlineOnHover = _ref20.underlineOnHover;
  return underlineOnHover && Ae(["&:hover{text-decoration:underline;}"]);
});
var BodyTextLabel = styled_components_esm.label.withConfig({
  displayName: "styles__BodyTextLabel",
  componentId: "sc-3esqar-4"
})(["", ""], BodyTextStyle);
var BodyText = styled_components_esm.p.withConfig({
  displayName: "styles__BodyText",
  componentId: "sc-3esqar-5"
})(["", ""], BodyTextStyle);
var CardText = styled_components_esm(BodyText).withConfig({
  displayName: "styles__CardText",
  componentId: "sc-3esqar-6"
})(["&&&{", "}:empty{display:none;}"], function (_ref21) {
  var theme = _ref21.theme,
    muted = _ref21.muted;
  return Ae(["color:", ";", ""], theme.css.cardColor, muted && Ae(["color:", ";"], helpers_hexToHSLA(theme.css.cardColor, undefined, +theme.css.bodyMutedOpacity).color));
});
var Input = styled_components_esm.input.withConfig({
  displayName: "styles__Input",
  componentId: "sc-3esqar-7"
})(["height:40px;padding-left:14px;background:", ";border-color:", ";border-width:", ";border-radius:", ";font-size:", ";font-family:", ";color:", ";box-shadow:", ";box-sizing:border-box;border-style:solid;&::-webkit-input-placeholder{color:", ";opacity:1;}&::-ms-input-placeholder{color:", ";opacity:1;}&::-moz-placeholder{color:", ";opacity:1;}&::-webkit-autofill{-webkit-box-shadow:0 0 0 1000px ", " inset;}", " ", " ", " &:disabled{background:", ";border-color:transparent;}", " ", ""], function (_ref22) {
  var theme = _ref22.theme;
  return theme.css.inputBackground;
}, function (_ref23) {
  var theme = _ref23.theme;
  return theme.css.inputBorderColor;
}, function (_ref24) {
  var theme = _ref24.theme;
  return theme.css.inputBorderWidth;
}, function (_ref25) {
  var theme = _ref25.theme;
  return theme.css.inputRoundedCorners;
}, function (_ref26) {
  var theme = _ref26.theme;
  return theme.css.bodyFontSize;
}, function (_ref27) {
  var theme = _ref27.theme;
  return theme.css.bodyFontFamily;
}, function (_ref28) {
  var theme = _ref28.theme;
  return theme.css.inputColor;
}, function (_ref29) {
  var theme = _ref29.theme;
  return theme.css.inputTextBoxShadow;
}, function (_ref30) {
  var theme = _ref30.theme;
  return helpers_hexToHSLA(theme.css.inputColor, undefined, .5).color;
}, function (_ref31) {
  var theme = _ref31.theme;
  return helpers_hexToHSLA(theme.css.inputColor, undefined, .5).color;
}, function (_ref32) {
  var theme = _ref32.theme;
  return helpers_hexToHSLA(theme.css.inputColor, undefined, .5).color;
}, function (_ref33) {
  var theme = _ref33.theme;
  return theme.css.inputBackground;
}, function (_ref34) {
  var fullWidth = _ref34.fullWidth;
  return fullWidth && Ae(["width:100%;"]);
}, function (_ref35) {
  var error = _ref35.error;
  return error && Ae(["border-color:red;color:#900;background:#ffe6e6;"]);
}, function (_ref36) {
  var verified = _ref36.verified;
  return verified && Ae(["border-color:#390;background:#eaf5e5;"]);
}, function (_ref37) {
  var theme = _ref37.theme;
  return helpers_hexToHSLA(theme.css.inputBackground, undefined, .50).color;
}, function (_ref38) {
  var inputContainer = _ref38.inputContainer;
  return inputContainer && Ae(["border-width:1px"]);
}, function (_ref39) {
  var theme = _ref39.theme;
  return theme.css.useInputTextBoxShadow && Ae(["box-shadow:", ";"], addBoxShadow(theme.css.inputTextBoxShadowColor, theme.css.inputTextBoxShadowHorizontalLength, theme.css.inputTextBoxShadowVerticalLength, theme.css.inputTextBoxShadowBlurRadius, theme.css.inputTextBoxShadowSpreadRadius, theme.css.inputTextBoxShadowColorTransparenceLevel));
});
var styles_Button = styled_components_esm.button.withConfig({
  displayName: "styles__Button",
  componentId: "sc-3esqar-8"
})(["", " position:relative;border-style:solid;width:100%;max-width:300px;cursor:pointer;min-height:40px;padding:5px 15px;", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " transition:width .5s;", ""], function (_ref40) {
  var theme = _ref40.theme;
  return Ae(["text-transform:", ";color:", ";border-radius:", ";border-color:", ";border-width:", ";font-weight:", ";font-size:", ";font-family:", ";background:", ";letter-spacing:", ";box-shadow:", ";"], theme.css.buttonTextTransform, theme.css.buttonColor, theme.css.buttonRoundedCorners, theme.css.buttonBorderColor, theme.css.buttonBorderWidth, theme.css.buttonFontWeight, theme.css.buttonFontSize, theme.css.buttonFontFamily, theme.css.buttonBackground, theme.css.buttonLetterSpacing, theme.css.buttonBoxShadow);
}, function (_ref41) {
  var noWrap = _ref41.noWrap;
  return noWrap && Ae(["white-space:nowrap;"]);
}, function (_ref42) {
  var deactivated = _ref42.deactivated;
  return deactivated && Ae(["opacity:.5;cursor:unset;"]);
}, function (_ref43) {
  var isSidebarButton = _ref43.isSidebarButton,
    theme = _ref43.theme;
  return isSidebarButton && Ae(["background:", ";color:", ";border-color:", ";"], theme.css.sidebarButtonBackground, theme.css.sidebarButtonColor, theme.css.sidebarButtonBorderColor);
}, function (_ref44) {
  var isLoading = _ref44.isLoading;
  return isLoading && Ae(["color:transparent !important;"]);
}, function (_ref45) {
  var selected = _ref45.selected,
    theme = _ref45.theme;
  return selected && Ae(["&&&{border-color:", ";background:", ";color:", ";}"], theme.css.darkSelectedColor, theme.css.darkSelectedColor, theme.css.selectedDarkFontColor);
}, function (_ref46) {
  var variant = _ref46.variant;
  return variant === "large" && Ae(["min-height:50px;padding:20px 0;"]);
}, function (_ref47) {
  var variant = _ref47.variant;
  return variant === "small" && Ae(["min-height:32px;padding:13px 0;font-size:", ";"], function (_ref48) {
    var theme = _ref48.theme;
    return theme.css.smallFontSize;
  });
}, function (_ref49) {
  var variant = _ref49.variant;
  return variant === "text" && Ae(["background:transparent;min-height:auto;border:0;width:auto;padding:0;color:", ";text-transform:none;letter-spacing:initial;box-shadow:unset;&:hover{text-decoration:underline;}"], function (_ref50) {
    var theme = _ref50.theme;
    return theme.css.linkColor;
  });
}, function (_ref51) {
  var variant = _ref51.variant,
    deactivated = _ref51.deactivated;
  return variant !== "text" && !deactivated && Ae(["&:hover{&::before{content:'';opacity:0.075;position:absolute;top:-1px;right:-1px;bottom:-1px;left:-1px;background-color:currentColor;border-radius:inherit;}}"]);
}, function (_ref52) {
  var inverted = _ref52.inverted,
    theme = _ref52.theme;
  return inverted && Ae(["color:", ";background:transparent;border-color:", ";"], theme.css.bodyColor, theme.css.dividerBorderColor);
}, function (_ref53) {
  var inFooter = _ref53.inFooter;
  return inFooter && Ae(["margin-right:40px;"]);
}, function (_ref54) {
  var largeScreenMinWidth = _ref54.largeScreenMinWidth,
    theme = _ref54.theme;
  return largeScreenMinWidth && Ae(["@media ", "{min-width:", ";}"], theme.mediaQueries.large, largeScreenMinWidth);
});
var RewardCard = {
  Card: styled_components_esm(Card).withConfig({
    displayName: "styles__Card",
    componentId: "sc-3esqar-9"
  })(["display:grid;grid-template-columns:60px 1fr;padding:25px;gap:20px;", " @media ", "{grid-template-columns:45px 1fr;padding:20px;gap:15px;}"], function (_ref55) {
    var theme = _ref55.theme,
      isRewardCard = _ref55.isRewardCard;
    return isRewardCard && Ae(["background:", ";", " color:", ";"], theme.css.colorRewardLight, theme.originalCSS.colorRewardLight && Ae(["border-color:", ";"], theme.css.colorRewardLight), theme.css.colorRewardDark);
  }, function (_ref56) {
    var theme = _ref56.theme;
    return theme.mediaQueries.verySmall;
  }),
  TitleAndSubtitle: styled_components_esm.div.withConfig({
    displayName: "styles__TitleAndSubtitle",
    componentId: "sc-3esqar-10"
  })(["display:flex;flex-direction:column;gap:5px;@media ", "{gap:10px;}"], function (_ref57) {
    var theme = _ref57.theme;
    return theme.mediaQueries.verySmall;
  }),
  Text: styled_components_esm(CardText).withConfig({
    displayName: "styles__Text",
    componentId: "sc-3esqar-11"
  })(["", ""], function (_ref58) {
    var theme = _ref58.theme;
    return Ae(["&&&{color:", ";}"], theme.css.colorRewardDark);
  }),
  IconContainer: styled_components_esm.div.withConfig({
    displayName: "styles__IconContainer",
    componentId: "sc-3esqar-12"
  })(["aspect-ratio:1/1;border-radius:100%;padding:12px;flex-shrink:0;display:grid;place-content:center;", ""], function (_ref59) {
    var theme = _ref59.theme;
    return Ae(["background:", ";"], theme.css.colorRewardDark);
  }),
  ButtonWithPopover: styled_components_esm(ButtonWithPopover).withConfig({
    displayName: "styles__ButtonWithPopover",
    componentId: "sc-3esqar-13"
  })(["&&&{width:max-content;border-bottom-left-radius:0;border-top-left-radius:0;", "}"], function (_ref60) {
    var theme = _ref60.theme;
    return Ae(["", "  "], Boolean(theme.originalCSS.colorRewardDark) && "\n          background: ".concat(theme.css.colorRewardDark, ";\n          border-color: ").concat(theme.css.colorRewardDark, ";\n        "));
  }),
  Button: styled_components_esm(styles_Button).withConfig({
    displayName: "styles__Button",
    componentId: "sc-3esqar-14"
  })(["&&&{", "}"], function (_ref61) {
    var theme = _ref61.theme,
      variant = _ref61.variant;
    return Ae(["font-size:", ";font-weight:", ";font-family:", ";", " ", ""], theme.css.smallFontSize, theme.css.bodyBoldFontWeight, theme.css.bodyFontFamily, variant !== "text" && Boolean(theme.originalCSS.colorRewardDark) && "\n        background: ".concat(theme.css.colorRewardDark, ";\n        border-color: ").concat(theme.css.colorRewardDark, ";\n        color: #fff;\n      "), variant === "text" && "\n        color: ".concat(theme.css.cardLinkColor, ";\n        ").concat(Boolean(theme.originalCSS.colorRewardDark) && Ae(["color:", ";"], theme.css.colorRewardDark), "\n      "));
  }),
  SecondaryButton: styled_components_esm(styles_Button).withConfig({
    displayName: "styles__SecondaryButton",
    componentId: "sc-3esqar-15"
  })(["", ""], function (_ref62) {
    var theme = _ref62.theme;
    return Boolean(theme.css.colorRewardDark) && Ae(["color:", ";border-color:", ";"], theme.css.colorRewardDark, helpers_hexToHSLA(theme.css.colorRewardDark, undefined, .3).color);
  }),
  Input: styled_components_esm(Input).withConfig({
    displayName: "styles__Input",
    componentId: "sc-3esqar-16"
  })(["", ""], function (_ref63) {
    var theme = _ref63.theme;
    return Ae(["width:100%;max-width:400px;border-color:", ";", ""], theme.css.buttonBackground, Boolean(theme.originalCSS.colorRewardDark) && "\n        border-color: ".concat(theme.css.colorRewardDark, ";\n      "));
  })
};
var SecondaryButton = styled_components_esm(styles_Button).withConfig({
  displayName: "styles__SecondaryButton",
  componentId: "sc-3esqar-17"
})(["&{", " ", "}"], function (_ref64) {
  var theme = _ref64.theme;
  return Ae(["color:", ";background:transparent;border-color:", ";"], theme.css.bodyColor, theme.css.dividerBorderColor);
}, function (_ref65) {
  var theme = _ref65.theme,
    sidebarBackground = _ref65.sidebarBackground;
  return sidebarBackground && Ae(["background:transparent;border-color:", ";color:", ";"], helpers_hexToHSLA(theme.css.sidebarColor, undefined, .3).color, theme.css.sidebarColor);
});
var BVTooltipStyle = function BVTooltipStyle(theme, isAlert) {
  return {
    border: 0,
    borderRadius: theme.css.popoutRoundedCorners,
    fontFamily: theme.css.bodyFontFamily,
    color: isAlert ? "#fff" : theme.css.bodyColor,
    background: isAlert ? "indianred" : "#fff",
    padding: "10px 12px",
    fontSize: theme.css.bodyFontSize,
    lineHeight: theme.css.bodyLineHeight,
    fontWeight: +theme.css.bodyFontWeight,
    boxShadow: "0 1px 4px ".concat(bodyColorWithOpacity(theme).isDark ? bodyColorWithOpacity(theme).color : "rgba(0,0,0,.5)")
  };
};
var InputPlus = styled_components_esm.span.withConfig({
  displayName: "styles__InputPlus",
  componentId: "sc-3esqar-18"
})(["position:absolute;color:", ";bottom:0;left:0;width:auto;padding:6px 0 6px 8px;border:2px solid transparent;background:0 0;box-shadow:none;opacity:.7;display:block;user-select:none;box-sizing:content-box;"], function (_ref66) {
  var theme = _ref66.theme;
  return theme.css.inputColor;
});
var Select = styled_components_esm.select.withConfig({
  displayName: "styles__Select",
  componentId: "sc-3esqar-19"
})(["height:40px;padding-left:12px;padding-top:0;padding-bottom:0;padding-right:0;background:", ";border-color:", ";border-width:", ";border-radius:", ";font-size:", ";font-family:", ";color:", ";box-shadow:", ";box-sizing:border-box;border-style:solid;", " ", " ", " &:disabled{background:#00000014;}", " ", ""], function (_ref67) {
  var theme = _ref67.theme;
  return theme.css.inputBackground;
}, function (_ref68) {
  var theme = _ref68.theme;
  return theme.css.inputBorderColor;
}, function (_ref69) {
  var theme = _ref69.theme;
  return theme.css.inputBorderWidth;
}, function (_ref70) {
  var theme = _ref70.theme;
  return theme.css.inputRoundedCorners;
}, function (_ref71) {
  var theme = _ref71.theme;
  return theme.css.bodyFontSize;
}, function (_ref72) {
  var theme = _ref72.theme;
  return theme.css.bodyFontFamily;
}, function (_ref73) {
  var theme = _ref73.theme;
  return theme.css.inputColor;
}, function (_ref74) {
  var theme = _ref74.theme;
  return theme.css.inputTextBoxShadow;
}, function (_ref75) {
  var fullWidth = _ref75.fullWidth;
  return fullWidth && Ae(["width:100%;"]);
}, function (_ref76) {
  var verified = _ref76.verified;
  return verified && Ae(["border-color:#390;background:#eaf5e5;"]);
}, function (_ref77) {
  var error = _ref77.error;
  return error && Ae(["border-color:red;color:#900;background:#ffe6e6;"]);
}, function (_ref78) {
  var theme = _ref78.theme;
  return theme.css.useInputTextBoxShadow && Ae(["box-shadow:", ";"], addBoxShadow(theme.css.inputTextBoxShadowColor, theme.css.inputTextBoxShadowHorizontalLength, theme.css.inputTextBoxShadowVerticalLength, theme.css.inputTextBoxShadowBlurRadius, theme.css.inputTextBoxShadowSpreadRadius, theme.css.inputTextBoxShadowColorTransparenceLevel));
}, function (_ref79) {
  var noChevron = _ref79.noChevron;
  return noChevron && Ae(["-moz-appearance:none;-webkit-appearance:none;"]);
});
var SlidingContainer = styled_components_esm.div.withConfig({
  displayName: "styles__SlidingContainer",
  componentId: "sc-3esqar-20"
})(["transition:all .5s;animation:slideIn .2s ease-out forwards;&.slideOut{animation:slideOut .2s ease-in forwards;}@keyframes slideIn{0%{transform:translateY(-10px);opacity:0;}100%{transform:translateY(0);opacity:1;}}@keyframes slideOut{0%{transform:translateY(0);opacity:1;}100%{transform:translateY(10px);opacity:0;}}"]);
var BVSkeleton = styled_components_esm(Skeleton).withConfig({
  displayName: "styles__BVSkeleton",
  componentId: "sc-3esqar-21"
})(["display:inherit;;opacity:", ";overflow:visible;", " ", " &::after{background:currentColor;}"], function (_ref80) {
  var visible = _ref80.visible;
  return visible ? ".15" : "1";
}, function (_ref81) {
  var autoWidth = _ref81.autoWidth;
  return autoWidth && Ae(["width:auto;"]);
}, function (_ref82) {
  var $maxContent = _ref82.$maxContent;
  return $maxContent && Ae(["max-width:max-content;"]);
});
var StyledSkeleton = styled_components_esm(Skeleton).withConfig({
  displayName: "styles__StyledSkeleton",
  componentId: "sc-3esqar-22"
})(["opacity:", ";overflow:visible;&::after{background:currentColor;}"], function (_ref83) {
  var visible = _ref83.visible;
  return visible ? ".15" : "1";
});
var CategoryDivider = styled_components_esm.div.withConfig({
  displayName: "styles__CategoryDivider",
  componentId: "sc-3esqar-23"
})(["display:grid;grid-template-columns:1fr auto 1fr;", " align-items:center;margin-bottom:15px;&:not(:first-of-type){margin-top:25px;}"], function (_ref84) {
  var twoColumns = _ref84.twoColumns;
  return twoColumns && Ae(["grid-template-columns:auto 1fr;"]);
});
var ActionsContainer = styled_components_esm.div.withConfig({
  displayName: "styles__ActionsContainer",
  componentId: "sc-3esqar-24"
})(["display:flex;flex-direction:row;align-items:center;justify-content:flex-end;"]);
var Panel = styled_components_esm.div.withConfig({
  displayName: "styles__Panel",
  componentId: "sc-3esqar-25"
})(["padding:25px;background:", ";border-color:", ";border-width:", ";border-radius:", ";border-style:solid;@media ", "{padding:20px;}"], function (_ref85) {
  var theme = _ref85.theme;
  return theme.css.cardBackground;
}, function (_ref86) {
  var theme = _ref86.theme;
  return theme.css.cardBorderColor;
}, function (_ref87) {
  var theme = _ref87.theme;
  return theme.css.cardBorderWidth;
}, function (_ref88) {
  var theme = _ref88.theme;
  return theme.css.cardBorderRadius;
}, function (_ref89) {
  var theme = _ref89.theme;
  return theme.mediaQueries.verySmall;
});
var InputsContainer = styled_components_esm.div.withConfig({
  displayName: "styles__InputsContainer",
  componentId: "sc-3esqar-26"
})(["width:100%;max-width:100%;padding:0;border-color:", ";border-radius:", ";border-width:2px;border-style:solid;"], function (_ref90) {
  var theme = _ref90.theme;
  return theme.css.inputBorderColor;
}, function (_ref91) {
  var theme = _ref91.theme;
  return theme.css.inputRoundedCorners;
});
var TextArea = styled_components_esm.textarea.withConfig({
  displayName: "styles__TextArea",
  componentId: "sc-3esqar-27"
})(["box-sizing:border-box;width:100%;max-width:100%;font-family:", ";border-radius:", ";border-color:", ";border-width:", ";background:", ";border-style:solid;padding:10px;height:80px;", ""], function (_ref92) {
  var theme = _ref92.theme;
  return theme.css.bodyFontFamily;
}, function (_ref93) {
  var theme = _ref93.theme;
  return theme.css.cardBorderRadius;
}, function (_ref94) {
  var theme = _ref94.theme;
  return theme.css.cardBorderColor;
}, function (_ref95) {
  var theme = _ref95.theme;
  return theme.css.cardBorderWidth;
}, function (_ref96) {
  var theme = _ref96.theme;
  return theme.css.cardBackground;
}, function (_ref97) {
  var theme = _ref97.theme;
  return Boolean(theme.css.inputTextBoxShadowColor) && Ae(["box-shadow:", ";"], addBoxShadow(theme.css.inputTextBoxShadowColor, theme.css.inputTextBoxShadowHorizontalLength, theme.css.inputTextBoxShadowVerticalLength, theme.css.inputTextBoxShadowBlurRadius, theme.css.inputTextBoxShadowSpreadRadius, theme.css.inputTextBoxShadowColorTransparenceLevel));
});
var AmenityItem = styled_components_esm(BodyText).withConfig({
  displayName: "styles__AmenityItem",
  componentId: "sc-3esqar-28"
})(["", ""], function (_ref98) {
  var withIcon = _ref98.withIcon;
  return !withIcon && Ae(["margin-right:7px;display:inline-block;gap:4px;&:before{content:'\\2022';}"]);
});
;// CONCATENATED MODULE: ./src/shared_components/button/styles.ts

var Dot = styled_components_esm.div.withConfig({
  displayName: "styles__Dot",
  componentId: "sc-1r93gl3-0"
})(["width:6px;height:6px;background:", ";border-radius:100%;opacity:.5;animation-timing-function:ease-in-out;animation-duration:1.2s;", ""], function (_ref) {
  var theme = _ref.theme,
    color = _ref.color;
  return color || "currentColor";
}, function (_ref2) {
  var inverted = _ref2.inverted,
    theme = _ref2.theme,
    color = _ref2.color;
  return inverted && Ae(["background:", ";"], color || theme.css.buttonBackground);
});
var LoaderContainer = styled_components_esm.div.withConfig({
  displayName: "styles__LoaderContainer",
  componentId: "sc-1r93gl3-1"
})(["display:flex;gap:4px;@keyframes dots-fade{0%,80%,to{transform:scale(0.6);opacity:0.3}40%{transform:scale(1);opacity:1}}> ", ":nth-child(1){animation-name:dots-fade;animation-iteration-count:infinite;}> ", ":nth-child(2){animation-name:dots-fade;animation-delay:.15s;animation-iteration-count:infinite;}> ", ":nth-child(3){animation-name:dots-fade;animation-delay:.3s;animation-iteration-count:infinite;}"], Dot, Dot, Dot);
;// CONCATENATED MODULE: ./src/shared_components/loader.tsx


var loader_Loader = function Loader(_ref) {
  var inverted = _ref.inverted,
    color = _ref.color;
  return /*#__PURE__*/react.createElement(LoaderContainer, null, /*#__PURE__*/react.createElement(Dot, {
    color: color,
    inverted: inverted
  }), /*#__PURE__*/react.createElement(Dot, {
    color: color,
    inverted: inverted
  }), /*#__PURE__*/react.createElement(Dot, {
    color: color,
    inverted: inverted
  }));
};
/* harmony default export */ var loader = (loader_Loader);
;// CONCATENATED MODULE: ./src/shared_components/button/button.tsx


function button_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function button_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? button_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : button_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }




var withIconStyle = {
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  gap: "6px"
};
var button_Button = react.forwardRef(function (props, ref) {
  var _props$loadingColor;
  var theme = Ze();
  if (props.withIcon && !props.hidden) {
    props = button_objectSpread(button_objectSpread({}, props), {}, {
      style: button_objectSpread(button_objectSpread({}, props.style), withIconStyle)
    });
  }
  if (props.circular) {
    props = button_objectSpread(button_objectSpread({}, props), {}, {
      style: button_objectSpread(button_objectSpread({}, props.style), {}, {
        borderRadius: "50%"
      })
    });
  }
  var onClicked = function onClicked(e) {
    e.stopPropagation();
    if (!props.disabled && !props.isLoading) {
      var _props$onClick, _props;
      (_props$onClick = (_props = props).onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(_props, e);
    }
  };
  return /*#__PURE__*/react.createElement(styles_Button, (0,esm_extends/* default */.Z)({
    ref: ref
  }, props, {
    onClick: onClicked,
    disabled: props.deactivated
  }), props.children, props.isLoading && /*#__PURE__*/react.createElement("div", {
    style: {
      position: "absolute",
      inset: 0,
      display: "grid",
      placeContent: "center"
    }
  }, /*#__PURE__*/react.createElement(loader, {
    inverted: props.inverted,
    color: (_props$loadingColor = props.loadingColor) !== null && _props$loadingColor !== void 0 ? _props$loadingColor : theme.css.buttonColor
  })));
});
;// CONCATENATED MODULE: ./src/shared_components/calendar/search_button.tsx







var SearchButton = function SearchButton(_ref) {
  var maxWidth = _ref.maxWidth,
    isLoading = _ref.isLoading,
    hasCodes = _ref.hasCodes,
    onSearch = _ref.onSearch,
    disabled = _ref.disabled;
  var translations = useAccommodationTranslations();
  var theme = Ze();
  return /*#__PURE__*/react.createElement(Tooltip, {
    disabled: !disabled,
    transition: "pop",
    style: BVTooltipStyle(theme),
    label: translations(accommodation_AccommodationTranslations["EA4H.General.PleaseChooseADateInTheCalendar"])
  }, /*#__PURE__*/react.createElement(button_Button, {
    deactivated: disabled,
    isLoading: isLoading,
    style: {
      maxWidth: maxWidth ? maxWidth : hasCodes ? '300px' : 'unset'
    },
    isSidebarButton: true,
    onClick: function onClick() {
      if (!disabled) {
        onSearch();
      }
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.General.SearchButton"])));
};
;// CONCATENATED MODULE: ./node_modules/@fortawesome/fontawesome-svg-core/index.es.js
/*!
 * Font Awesome Free 6.0.0 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2022 Fonticons, Inc.
 */
function index_es_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? index_es_ownKeys(Object(source), !0).forEach(function (key) {
      index_es_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : index_es_ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function index_es_typeof(obj) {
  "@babel/helpers - typeof";

  return index_es_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, index_es_typeof(obj);
}
function _wrapRegExp() {
  _wrapRegExp = function (re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };
  var _super = RegExp.prototype,
    _groups = new WeakMap();
  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);
    return _groups.set(_this, groups || _groups.get(re)), index_es_setPrototypeOf(_this, BabelRegExp.prototype);
  }
  function buildGroups(result, re) {
    var g = _groups.get(re);
    return Object.keys(g).reduce(function (groups, name) {
      return groups[name] = result[g[name]], groups;
    }, Object.create(null));
  }
  return index_es_inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {
    var result = _super.exec.call(this, str);
    return result && (result.groups = buildGroups(result, this)), result;
  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {
    if ("string" == typeof substitution) {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) {
        return "$" + groups[name];
      }));
    }
    if ("function" == typeof substitution) {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function () {
        var args = arguments;
        return "object" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);
      });
    }
    return _super[Symbol.replace].call(this, str, substitution);
  }, _wrapRegExp.apply(this, arguments);
}
function index_es_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function index_es_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function index_es_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) index_es_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) index_es_defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function index_es_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function index_es_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) index_es_setPrototypeOf(subClass, superClass);
}
function index_es_setPrototypeOf(o, p) {
  index_es_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return index_es_setPrototypeOf(o, p);
}
function index_es_slicedToArray(arr, i) {
  return index_es_arrayWithHoles(arr) || index_es_iterableToArrayLimit(arr, i) || index_es_unsupportedIterableToArray(arr, i) || index_es_nonIterableRest();
}
function index_es_toConsumableArray(arr) {
  return index_es_arrayWithoutHoles(arr) || index_es_iterableToArray(arr) || index_es_unsupportedIterableToArray(arr) || index_es_nonIterableSpread();
}
function index_es_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return index_es_arrayLikeToArray(arr);
}
function index_es_arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function index_es_iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function index_es_iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function index_es_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return index_es_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return index_es_arrayLikeToArray(o, minLen);
}
function index_es_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function index_es_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function index_es_nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var index_es_noop = function noop() {};
var _WINDOW = {};
var _DOCUMENT = {};
var _MUTATION_OBSERVER = null;
var _PERFORMANCE = {
  mark: index_es_noop,
  measure: index_es_noop
};
try {
  if (typeof window !== 'undefined') _WINDOW = window;
  if (typeof document !== 'undefined') _DOCUMENT = document;
  if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
  if (typeof performance !== 'undefined') _PERFORMANCE = performance;
} catch (e) {}
var _ref = _WINDOW.navigator || {},
  _ref$userAgent = _ref.userAgent,
  userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;
var WINDOW = _WINDOW;
var index_es_DOCUMENT = _DOCUMENT;
var MUTATION_OBSERVER = _MUTATION_OBSERVER;
var PERFORMANCE = _PERFORMANCE;
var IS_BROWSER = !!WINDOW.document;
var IS_DOM = !!index_es_DOCUMENT.documentElement && !!index_es_DOCUMENT.head && typeof index_es_DOCUMENT.addEventListener === 'function' && typeof index_es_DOCUMENT.createElement === 'function';
var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');
var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
var UNITS_IN_GRID = 16;
var DEFAULT_FAMILY_PREFIX = 'fa';
var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
var DATA_FA_I2SVG = 'data-fa-i2svg';
var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';
var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';
var DATA_PREFIX = 'data-prefix';
var DATA_ICON = 'data-icon';
var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';
var MUTATION_APPROACH_ASYNC = 'async';
var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];
var PRODUCTION = function () {
  try {
    return "production" === 'production';
  } catch (e) {
    return false;
  }
}();
var PREFIX_TO_STYLE = {
  'fas': 'solid',
  'fa-solid': 'solid',
  'far': 'regular',
  'fa-regular': 'regular',
  'fal': 'light',
  'fa-light': 'light',
  'fat': 'thin',
  'fa-thin': 'thin',
  'fad': 'duotone',
  'fa-duotone': 'duotone',
  'fab': 'brands',
  'fa-brands': 'brands',
  'fak': 'kit',
  'fa-kit': 'kit',
  'fa': 'solid'
};
var STYLE_TO_PREFIX = {
  'solid': 'fas',
  'regular': 'far',
  'light': 'fal',
  'thin': 'fat',
  'duotone': 'fad',
  'brands': 'fab',
  'kit': 'fak'
};
var PREFIX_TO_LONG_STYLE = {
  'fab': 'fa-brands',
  'fad': 'fa-duotone',
  'fak': 'fa-kit',
  'fal': 'fa-light',
  'far': 'fa-regular',
  'fas': 'fa-solid',
  'fat': 'fa-thin'
};
var LONG_STYLE_TO_PREFIX = {
  'fa-brands': 'fab',
  'fa-duotone': 'fad',
  'fa-kit': 'fak',
  'fa-light': 'fal',
  'fa-regular': 'far',
  'fa-solid': 'fas',
  'fa-thin': 'fat'
};
var ICON_SELECTION_SYNTAX_PATTERN = /fa[srltdbk\-\ ]/; // eslint-disable-line no-useless-escape

var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';
var FONT_FAMILY_PATTERN = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Kit)?.*/i; // TODO: do we need to handle font-weight for kit SVG pseudo-elements?

var FONT_WEIGHT_TO_PREFIX = {
  '900': 'fas',
  '400': 'far',
  'normal': 'far',
  '300': 'fal',
  '100': 'fat'
};
var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];
var DUOTONE_CLASSES = {
  GROUP: 'duotone-group',
  SWAP_OPACITY: 'swap-opacity',
  PRIMARY: 'primary',
  SECONDARY: 'secondary'
};
var RESERVED_CLASSES = [].concat(index_es_toConsumableArray(Object.keys(STYLE_TO_PREFIX)), ['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', 'beat', 'border', 'fade', 'beat-fade', 'bounce', 'flip-both', 'flip-horizontal', 'flip-vertical', 'flip', 'fw', 'inverse', 'layers-counter', 'layers-text', 'layers', 'li', 'pull-left', 'pull-right', 'pulse', 'rotate-180', 'rotate-270', 'rotate-90', 'rotate-by', 'shake', 'spin-pulse', 'spin-reverse', 'spin', 'stack-1x', 'stack-2x', 'stack', 'ul', DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY]).concat(oneToTen.map(function (n) {
  return "".concat(n, "x");
})).concat(oneToTwenty.map(function (n) {
  return "w-".concat(n);
}));
var initial = WINDOW.FontAwesomeConfig || {};
function getAttrConfig(attr) {
  var element = index_es_DOCUMENT.querySelector('script[' + attr + ']');
  if (element) {
    return element.getAttribute(attr);
  }
}
function coerce(val) {
  // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
  // We'll assume that this is an indication that it should be toggled to true
  // For example <script data-search-pseudo-elements src="..."></script>
  if (val === '') return true;
  if (val === 'false') return false;
  if (val === 'true') return true;
  return val;
}
if (index_es_DOCUMENT && typeof index_es_DOCUMENT.querySelector === 'function') {
  var attrs = [['data-family-prefix', 'familyPrefix'], ['data-style-default', 'styleDefault'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];
  attrs.forEach(function (_ref) {
    var _ref2 = index_es_slicedToArray(_ref, 2),
      attr = _ref2[0],
      key = _ref2[1];
    var val = coerce(getAttrConfig(attr));
    if (val !== undefined && val !== null) {
      initial[key] = val;
    }
  });
}
var _default = {
  familyPrefix: DEFAULT_FAMILY_PREFIX,
  styleDefault: 'solid',
  replacementClass: DEFAULT_REPLACEMENT_CLASS,
  autoReplaceSvg: true,
  autoAddCss: true,
  autoA11y: true,
  searchPseudoElements: false,
  observeMutations: true,
  mutateApproach: 'async',
  keepOriginalSource: true,
  measurePerformance: false,
  showMissingIcons: true
};
var _config = _objectSpread2(_objectSpread2({}, _default), initial);
if (!_config.autoReplaceSvg) _config.observeMutations = false;
var config = {};
Object.keys(_config).forEach(function (key) {
  Object.defineProperty(config, key, {
    enumerable: true,
    set: function set(val) {
      _config[key] = val;
      _onChangeCb.forEach(function (cb) {
        return cb(config);
      });
    },
    get: function get() {
      return _config[key];
    }
  });
});
WINDOW.FontAwesomeConfig = config;
var _onChangeCb = [];
function onChange(cb) {
  _onChangeCb.push(cb);
  return function () {
    _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);
  };
}
var index_es_d = UNITS_IN_GRID;
var meaninglessTransform = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: false,
  flipY: false
};
function insertCss(css) {
  if (!css || !IS_DOM) {
    return;
  }
  var style = index_es_DOCUMENT.createElement('style');
  style.setAttribute('type', 'text/css');
  style.innerHTML = css;
  var headChildren = index_es_DOCUMENT.head.childNodes;
  var beforeChild = null;
  for (var i = headChildren.length - 1; i > -1; i--) {
    var child = headChildren[i];
    var tagName = (child.tagName || '').toUpperCase();
    if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
      beforeChild = child;
    }
  }
  index_es_DOCUMENT.head.insertBefore(style, beforeChild);
  return css;
}
var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
function nextUniqueId() {
  var size = 12;
  var id = '';
  while (size-- > 0) {
    id += idPool[Math.random() * 62 | 0];
  }
  return id;
}
function toArray(obj) {
  var array = [];
  for (var i = (obj || []).length >>> 0; i--;) {
    array[i] = obj[i];
  }
  return array;
}
function classArray(node) {
  if (node.classList) {
    return toArray(node.classList);
  } else {
    return (node.getAttribute('class') || '').split(' ').filter(function (i) {
      return i;
    });
  }
}
function htmlEscape(str) {
  return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
}
function joinAttributes(attributes) {
  return Object.keys(attributes || {}).reduce(function (acc, attributeName) {
    return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
  }, '').trim();
}
function joinStyles(styles) {
  return Object.keys(styles || {}).reduce(function (acc, styleName) {
    return acc + "".concat(styleName, ": ").concat(styles[styleName].trim(), ";");
  }, '');
}
function transformIsMeaningful(transform) {
  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
}
function transformForSvg(_ref) {
  var transform = _ref.transform,
    containerWidth = _ref.containerWidth,
    iconWidth = _ref.iconWidth;
  var outer = {
    transform: "translate(".concat(containerWidth / 2, " 256)")
  };
  var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
  var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
  var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
  var inner = {
    transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
  };
  var path = {
    transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
  };
  return {
    outer: outer,
    inner: inner,
    path: path
  };
}
function transformForCss(_ref2) {
  var transform = _ref2.transform,
    _ref2$width = _ref2.width,
    width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,
    _ref2$height = _ref2.height,
    height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,
    _ref2$startCentered = _ref2.startCentered,
    startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
  var val = '';
  if (startCentered && IS_IE) {
    val += "translate(".concat(transform.x / index_es_d - width / 2, "em, ").concat(transform.y / index_es_d - height / 2, "em) ");
  } else if (startCentered) {
    val += "translate(calc(-50% + ".concat(transform.x / index_es_d, "em), calc(-50% + ").concat(transform.y / index_es_d, "em)) ");
  } else {
    val += "translate(".concat(transform.x / index_es_d, "em, ").concat(transform.y / index_es_d, "em) ");
  }
  val += "scale(".concat(transform.size / index_es_d * (transform.flipX ? -1 : 1), ", ").concat(transform.size / index_es_d * (transform.flipY ? -1 : 1), ") ");
  val += "rotate(".concat(transform.rotate, "deg) ");
  return val;
}
var baseStyles = ":root, :host {\n  --fa-font-solid: normal 900 1em/1 \"Font Awesome 6 Solid\";\n  --fa-font-regular: normal 400 1em/1 \"Font Awesome 6 Regular\";\n  --fa-font-light: normal 300 1em/1 \"Font Awesome 6 Light\";\n  --fa-font-thin: normal 100 1em/1 \"Font Awesome 6 Thin\";\n  --fa-font-duotone: normal 900 1em/1 \"Font Awesome 6 Duotone\";\n  --fa-font-brands: normal 400 1em/1 \"Font Awesome 6 Brands\";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-counter-scale, 0.25));\n          transform: scale(var(--fa-counter-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(var(--fa-li-width, 2em) * -1);\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  -webkit-animation-name: fa-beat;\n          animation-name: fa-beat;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  -webkit-animation-name: fa-bounce;\n          animation-name: fa-bounce;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  -webkit-animation-name: fa-fade;\n          animation-name: fa-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  -webkit-animation-name: fa-beat-fade;\n          animation-name: fa-beat-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  -webkit-animation-name: fa-flip;\n          animation-name: fa-flip;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  -webkit-animation-name: fa-shake;\n          animation-name: fa-shake;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-delay: var(--fa-animation-delay, 0);\n          animation-delay: var(--fa-animation-delay, 0);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 2s);\n          animation-duration: var(--fa-animation-duration, 2s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));\n          animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    -webkit-animation-delay: -1ms;\n            animation-delay: -1ms;\n    -webkit-animation-duration: 1ms;\n            animation-duration: 1ms;\n    -webkit-animation-iteration-count: 1;\n            animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s;\n  }\n}\n@-webkit-keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@-webkit-keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@-webkit-keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@-webkit-keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@-webkit-keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@-webkit-keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  -webkit-transform: rotate(var(--fa-rotate-angle, none));\n          transform: rotate(var(--fa-rotate-angle, none));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}";
function index_es_css() {
  var dfp = DEFAULT_FAMILY_PREFIX;
  var drc = DEFAULT_REPLACEMENT_CLASS;
  var fp = config.familyPrefix;
  var rc = config.replacementClass;
  var s = baseStyles;
  if (fp !== dfp || rc !== drc) {
    var dPatt = new RegExp("\\.".concat(dfp, "\\-"), 'g');
    var customPropPatt = new RegExp("\\--".concat(dfp, "\\-"), 'g');
    var rPatt = new RegExp("\\.".concat(drc), 'g');
    s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
  }
  return s;
}
var _cssInserted = false;
function ensureCss() {
  if (config.autoAddCss && !_cssInserted) {
    insertCss(index_es_css());
    _cssInserted = true;
  }
}
var InjectCSS = {
  mixout: function mixout() {
    return {
      dom: {
        css: index_es_css,
        insertCss: ensureCss
      }
    };
  },
  hooks: function hooks() {
    return {
      beforeDOMElementCreation: function beforeDOMElementCreation() {
        ensureCss();
      },
      beforeI2svg: function beforeI2svg() {
        ensureCss();
      }
    };
  }
};
var index_es_w = WINDOW || {};
if (!index_es_w[NAMESPACE_IDENTIFIER]) index_es_w[NAMESPACE_IDENTIFIER] = {};
if (!index_es_w[NAMESPACE_IDENTIFIER].styles) index_es_w[NAMESPACE_IDENTIFIER].styles = {};
if (!index_es_w[NAMESPACE_IDENTIFIER].hooks) index_es_w[NAMESPACE_IDENTIFIER].hooks = {};
if (!index_es_w[NAMESPACE_IDENTIFIER].shims) index_es_w[NAMESPACE_IDENTIFIER].shims = [];
var index_es_namespace = index_es_w[NAMESPACE_IDENTIFIER];
var functions = [];
var listener = function listener() {
  index_es_DOCUMENT.removeEventListener('DOMContentLoaded', listener);
  loaded = 1;
  functions.map(function (fn) {
    return fn();
  });
};
var loaded = false;
if (IS_DOM) {
  loaded = (index_es_DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(index_es_DOCUMENT.readyState);
  if (!loaded) index_es_DOCUMENT.addEventListener('DOMContentLoaded', listener);
}
function domready(fn) {
  if (!IS_DOM) return;
  loaded ? setTimeout(fn, 0) : functions.push(fn);
}
function toHtml(abstractNodes) {
  var tag = abstractNodes.tag,
    _abstractNodes$attrib = abstractNodes.attributes,
    attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,
    _abstractNodes$childr = abstractNodes.children,
    children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;
  if (typeof abstractNodes === 'string') {
    return htmlEscape(abstractNodes);
  } else {
    return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
  }
}
function iconFromMapping(mapping, prefix, iconName) {
  if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
    return {
      prefix: prefix,
      iconName: iconName,
      icon: mapping[prefix][iconName]
    };
  }
}

/**
 * Internal helper to bind a function known to have 4 arguments
 * to a given context.
 */

var bindInternal4 = function bindInternal4(func, thisContext) {
  return function (a, b, c, d) {
    return func.call(thisContext, a, b, c, d);
  };
};

/**
 * # Reduce
 *
 * A fast object `.reduce()` implementation.
 *
 * @param  {Object}   subject      The object to reduce over.
 * @param  {Function} fn           The reducer function.
 * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
 * @param  {Object}   thisContext  The context for the reducer.
 * @return {mixed}                 The final result.
 */

var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
  var keys = Object.keys(subject),
    length = keys.length,
    iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
    i,
    key,
    result;
  if (initialValue === undefined) {
    i = 1;
    result = subject[keys[0]];
  } else {
    i = 0;
    result = initialValue;
  }
  for (; i < length; i++) {
    key = keys[i];
    result = iterator(result, subject[key], key, subject);
  }
  return result;
};

/**
 * ucs2decode() and codePointAt() are both works of Mathias Bynens and licensed under MIT
 *
 * Copyright Mathias Bynens <https://mathiasbynens.be/>

 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:

 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
function ucs2decode(string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = string.charCodeAt(counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      var extra = string.charCodeAt(counter++);
      if ((extra & 0xFC00) == 0xDC00) {
        // eslint-disable-line eqeqeq
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
function toHex(unicode) {
  var decoded = ucs2decode(unicode);
  return decoded.length === 1 ? decoded[0].toString(16) : null;
}
function codePointAt(string, index) {
  var size = string.length;
  var first = string.charCodeAt(index);
  var second;
  if (first >= 0xD800 && first <= 0xDBFF && size > index + 1) {
    second = string.charCodeAt(index + 1);
    if (second >= 0xDC00 && second <= 0xDFFF) {
      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
    }
  }
  return first;
}
function normalizeIcons(icons) {
  return Object.keys(icons).reduce(function (acc, iconName) {
    var icon = icons[iconName];
    var expanded = !!icon.icon;
    if (expanded) {
      acc[icon.iconName] = icon.icon;
    } else {
      acc[iconName] = icon;
    }
    return acc;
  }, {});
}
function defineIcons(prefix, icons) {
  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _params$skipHooks = params.skipHooks,
    skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
  var normalized = normalizeIcons(icons);
  if (typeof index_es_namespace.hooks.addPack === 'function' && !skipHooks) {
    index_es_namespace.hooks.addPack(prefix, normalizeIcons(icons));
  } else {
    index_es_namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, index_es_namespace.styles[prefix] || {}), normalized);
  }
  /**
   * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
   * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
   * for `fas` so we'll ease the upgrade process for our users by automatically defining
   * this as well.
   */

  if (prefix === 'fas') {
    defineIcons('fa', icons);
  }
}
var duotonePathRe = [/*#__PURE__*/_wrapRegExp(/path d="((?:(?!")[\s\S])+)".*path d="((?:(?!")[\s\S])+)"/, {
  d1: 1,
  d2: 2
}), /*#__PURE__*/_wrapRegExp(/path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)".*path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)"/, {
  cls1: 1,
  d1: 2,
  cls2: 3,
  d2: 4
}), /*#__PURE__*/_wrapRegExp(/path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)"/, {
  cls1: 1,
  d1: 2
})];
var index_es_styles = index_es_namespace.styles,
  shims = index_es_namespace.shims;
var LONG_STYLE = Object.values(PREFIX_TO_LONG_STYLE);
var _defaultUsablePrefix = null;
var _byUnicode = {};
var _byLigature = {};
var _byOldName = {};
var _byOldUnicode = {};
var _byAlias = {};
var PREFIXES = Object.keys(PREFIX_TO_STYLE);
function isReserved(name) {
  return ~RESERVED_CLASSES.indexOf(name);
}
function getIconName(familyPrefix, cls) {
  var parts = cls.split('-');
  var prefix = parts[0];
  var iconName = parts.slice(1).join('-');
  if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {
    return iconName;
  } else {
    return null;
  }
}
var build = function build() {
  var lookup = function lookup(reducer) {
    return reduce(index_es_styles, function (o, style, prefix) {
      o[prefix] = reduce(style, reducer, {});
      return o;
    }, {});
  };
  _byUnicode = lookup(function (acc, icon, iconName) {
    if (icon[3]) {
      acc[icon[3]] = iconName;
    }
    if (icon[2]) {
      var aliases = icon[2].filter(function (a) {
        return typeof a === 'number';
      });
      aliases.forEach(function (alias) {
        acc[alias.toString(16)] = iconName;
      });
    }
    return acc;
  });
  _byLigature = lookup(function (acc, icon, iconName) {
    acc[iconName] = iconName;
    if (icon[2]) {
      var aliases = icon[2].filter(function (a) {
        return typeof a === 'string';
      });
      aliases.forEach(function (alias) {
        acc[alias] = iconName;
      });
    }
    return acc;
  });
  _byAlias = lookup(function (acc, icon, iconName) {
    var aliases = icon[2];
    acc[iconName] = iconName;
    aliases.forEach(function (alias) {
      acc[alias] = iconName;
    });
    return acc;
  }); // If we have a Kit, we can't determine if regular is available since we
  // could be auto-fetching it. We'll have to assume that it is available.

  var hasRegular = 'far' in index_es_styles || config.autoFetchSvg;
  var shimLookups = reduce(shims, function (acc, shim) {
    var maybeNameMaybeUnicode = shim[0];
    var prefix = shim[1];
    var iconName = shim[2];
    if (prefix === 'far' && !hasRegular) {
      prefix = 'fas';
    }
    if (typeof maybeNameMaybeUnicode === 'string') {
      acc.names[maybeNameMaybeUnicode] = {
        prefix: prefix,
        iconName: iconName
      };
    }
    if (typeof maybeNameMaybeUnicode === 'number') {
      acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {
        prefix: prefix,
        iconName: iconName
      };
    }
    return acc;
  }, {
    names: {},
    unicodes: {}
  });
  _byOldName = shimLookups.names;
  _byOldUnicode = shimLookups.unicodes;
  _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault);
};
onChange(function (c) {
  _defaultUsablePrefix = getCanonicalPrefix(c.styleDefault);
});
build();
function byUnicode(prefix, unicode) {
  return (_byUnicode[prefix] || {})[unicode];
}
function byLigature(prefix, ligature) {
  return (_byLigature[prefix] || {})[ligature];
}
function byAlias(prefix, alias) {
  return (_byAlias[prefix] || {})[alias];
}
function byOldName(name) {
  return _byOldName[name] || {
    prefix: null,
    iconName: null
  };
}
function byOldUnicode(unicode) {
  var oldUnicode = _byOldUnicode[unicode];
  var newUnicode = byUnicode('fas', unicode);
  return oldUnicode || (newUnicode ? {
    prefix: 'fas',
    iconName: newUnicode
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function getDefaultUsablePrefix() {
  return _defaultUsablePrefix;
}
var emptyCanonicalIcon = function emptyCanonicalIcon() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};
function getCanonicalPrefix(styleOrPrefix) {
  var style = PREFIX_TO_STYLE[styleOrPrefix];
  var prefix = STYLE_TO_PREFIX[styleOrPrefix] || STYLE_TO_PREFIX[style];
  var defined = styleOrPrefix in index_es_namespace.styles ? styleOrPrefix : null;
  return prefix || defined || null;
}
function getCanonicalIcon(values) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$skipLookups = params.skipLookups,
    skipLookups = _params$skipLookups === void 0 ? false : _params$skipLookups;
  var givenPrefix = null;
  var canonical = values.reduce(function (acc, cls) {
    var iconName = getIconName(config.familyPrefix, cls);
    if (index_es_styles[cls]) {
      cls = LONG_STYLE.includes(cls) ? LONG_STYLE_TO_PREFIX[cls] : cls;
      givenPrefix = cls;
      acc.prefix = cls;
    } else if (PREFIXES.indexOf(cls) > -1) {
      givenPrefix = cls;
      acc.prefix = getCanonicalPrefix(cls);
    } else if (iconName) {
      acc.iconName = iconName;
    } else if (cls !== config.replacementClass) {
      acc.rest.push(cls);
    }
    if (!skipLookups && acc.prefix && acc.iconName) {
      var shim = givenPrefix === 'fa' ? byOldName(acc.iconName) : {};
      var aliasIconName = byAlias(acc.prefix, acc.iconName);
      if (shim.prefix) {
        givenPrefix = null;
      }
      acc.iconName = shim.iconName || aliasIconName || acc.iconName;
      acc.prefix = shim.prefix || acc.prefix;
      if (acc.prefix === 'far' && !index_es_styles['far'] && index_es_styles['fas'] && !config.autoFetchSvg) {
        // Allow a fallback from the regular style to solid if regular is not available
        // but only if we aren't auto-fetching SVGs
        acc.prefix = 'fas';
      }
    }
    return acc;
  }, emptyCanonicalIcon());
  if (canonical.prefix === 'fa' || givenPrefix === 'fa') {
    // The fa prefix is not canonical. So if it has made it through until this point
    // we will shift it to the correct prefix.
    canonical.prefix = getDefaultUsablePrefix() || 'fas';
  }
  return canonical;
}
var Library = /*#__PURE__*/function () {
  function Library() {
    index_es_classCallCheck(this, Library);
    this.definitions = {};
  }
  index_es_createClass(Library, [{
    key: "add",
    value: function add() {
      var _this = this;
      for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
        definitions[_key] = arguments[_key];
      }
      var additions = definitions.reduce(this._pullDefinitions, {});
      Object.keys(additions).forEach(function (key) {
        _this.definitions[key] = _objectSpread2(_objectSpread2({}, _this.definitions[key] || {}), additions[key]);
        defineIcons(key, additions[key]);
        var longPrefix = PREFIX_TO_LONG_STYLE[key];
        if (longPrefix) defineIcons(longPrefix, additions[key]);
        build();
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function _pullDefinitions(additions, definition) {
      var normalized = definition.prefix && definition.iconName && definition.icon ? {
        0: definition
      } : definition;
      Object.keys(normalized).map(function (key) {
        var _normalized$key = normalized[key],
          prefix = _normalized$key.prefix,
          iconName = _normalized$key.iconName,
          icon = _normalized$key.icon;
        var aliases = icon[2];
        if (!additions[prefix]) additions[prefix] = {};
        if (aliases.length > 0) {
          aliases.forEach(function (alias) {
            if (typeof alias === 'string') {
              additions[prefix][alias] = icon;
            }
          });
        }
        additions[prefix][iconName] = icon;
      });
      return additions;
    }
  }]);
  return Library;
}();
var _plugins = [];
var _hooks = {};
var providers = {};
var defaultProviderKeys = Object.keys(providers);
function registerPlugins(nextPlugins, _ref) {
  var obj = _ref.mixoutsTo;
  _plugins = nextPlugins;
  _hooks = {};
  Object.keys(providers).forEach(function (k) {
    if (defaultProviderKeys.indexOf(k) === -1) {
      delete providers[k];
    }
  });
  _plugins.forEach(function (plugin) {
    var mixout = plugin.mixout ? plugin.mixout() : {};
    Object.keys(mixout).forEach(function (tk) {
      if (typeof mixout[tk] === 'function') {
        obj[tk] = mixout[tk];
      }
      if (index_es_typeof(mixout[tk]) === 'object') {
        Object.keys(mixout[tk]).forEach(function (sk) {
          if (!obj[tk]) {
            obj[tk] = {};
          }
          obj[tk][sk] = mixout[tk][sk];
        });
      }
    });
    if (plugin.hooks) {
      var hooks = plugin.hooks();
      Object.keys(hooks).forEach(function (hook) {
        if (!_hooks[hook]) {
          _hooks[hook] = [];
        }
        _hooks[hook].push(hooks[hook]);
      });
    }
    if (plugin.provides) {
      plugin.provides(providers);
    }
  });
  return obj;
}
function chainHooks(hook, accumulator) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function (hookFn) {
    accumulator = hookFn.apply(null, [accumulator].concat(args)); // eslint-disable-line no-useless-call
  });

  return accumulator;
}
function callHooks(hook) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function (hookFn) {
    hookFn.apply(null, args);
  });
  return undefined;
}
function callProvided() {
  var hook = arguments[0];
  var args = Array.prototype.slice.call(arguments, 1);
  return providers[hook] ? providers[hook].apply(null, args) : undefined;
}
function findIconDefinition(iconLookup) {
  if (iconLookup.prefix === 'fa') {
    iconLookup.prefix = 'fas';
  }
  var iconName = iconLookup.iconName;
  var prefix = iconLookup.prefix || getDefaultUsablePrefix();
  if (!iconName) return;
  iconName = byAlias(prefix, iconName) || iconName;
  return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(index_es_namespace.styles, prefix, iconName);
}
var library = new Library();
var noAuto = function noAuto() {
  config.autoReplaceSvg = false;
  config.observeMutations = false;
  callHooks('noAuto');
};
var dom = {
  i2svg: function i2svg() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    if (IS_DOM) {
      callHooks('beforeI2svg', params);
      callProvided('pseudoElements2svg', params);
      return callProvided('i2svg', params);
    } else {
      return Promise.reject('Operation requires a DOM of some kind.');
    }
  },
  watch: function watch() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var autoReplaceSvgRoot = params.autoReplaceSvgRoot;
    if (config.autoReplaceSvg === false) {
      config.autoReplaceSvg = true;
    }
    config.observeMutations = true;
    domready(function () {
      autoReplace({
        autoReplaceSvgRoot: autoReplaceSvgRoot
      });
      callHooks('watch', params);
    });
  }
};
var index_es_parse = {
  icon: function icon(_icon) {
    if (_icon === null) {
      return null;
    }
    if (index_es_typeof(_icon) === 'object' && _icon.prefix && _icon.iconName) {
      return {
        prefix: _icon.prefix,
        iconName: byAlias(_icon.prefix, _icon.iconName) || _icon.iconName
      };
    }
    if (Array.isArray(_icon) && _icon.length === 2) {
      var iconName = _icon[1].indexOf('fa-') === 0 ? _icon[1].slice(3) : _icon[1];
      var prefix = getCanonicalPrefix(_icon[0]);
      return {
        prefix: prefix,
        iconName: byAlias(prefix, iconName) || iconName
      };
    }
    if (typeof _icon === 'string' && (_icon.indexOf("".concat(config.familyPrefix, "-")) > -1 || _icon.match(ICON_SELECTION_SYNTAX_PATTERN))) {
      var canonicalIcon = getCanonicalIcon(_icon.split(' '), {
        skipLookups: true
      });
      return {
        prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),
        iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName
      };
    }
    if (typeof _icon === 'string') {
      var _prefix = getDefaultUsablePrefix();
      return {
        prefix: _prefix,
        iconName: byAlias(_prefix, _icon) || _icon
      };
    }
  }
};
var api = {
  noAuto: noAuto,
  config: config,
  dom: dom,
  parse: index_es_parse,
  library: library,
  findIconDefinition: findIconDefinition,
  toHtml: toHtml
};
var autoReplace = function autoReplace() {
  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _params$autoReplaceSv = params.autoReplaceSvgRoot,
    autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? index_es_DOCUMENT : _params$autoReplaceSv;
  if ((Object.keys(index_es_namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
    node: autoReplaceSvgRoot
  });
};
function domVariants(val, abstractCreator) {
  Object.defineProperty(val, 'abstract', {
    get: abstractCreator
  });
  Object.defineProperty(val, 'html', {
    get: function get() {
      return val.abstract.map(function (a) {
        return toHtml(a);
      });
    }
  });
  Object.defineProperty(val, 'node', {
    get: function get() {
      if (!IS_DOM) return;
      var container = index_es_DOCUMENT.createElement('div');
      container.innerHTML = val.html;
      return container.children;
    }
  });
  return val;
}
function asIcon(_ref) {
  var children = _ref.children,
    main = _ref.main,
    mask = _ref.mask,
    attributes = _ref.attributes,
    styles = _ref.styles,
    transform = _ref.transform;
  if (transformIsMeaningful(transform) && main.found && !mask.found) {
    var width = main.width,
      height = main.height;
    var offset = {
      x: width / height / 2,
      y: 0.5
    };
    attributes['style'] = joinStyles(_objectSpread2(_objectSpread2({}, styles), {}, {
      'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
    }));
  }
  return [{
    tag: 'svg',
    attributes: attributes,
    children: children
  }];
}
function asSymbol(_ref) {
  var prefix = _ref.prefix,
    iconName = _ref.iconName,
    children = _ref.children,
    attributes = _ref.attributes,
    symbol = _ref.symbol;
  var id = symbol === true ? "".concat(prefix, "-").concat(config.familyPrefix, "-").concat(iconName) : symbol;
  return [{
    tag: 'svg',
    attributes: {
      style: 'display: none;'
    },
    children: [{
      tag: 'symbol',
      attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {
        id: id
      }),
      children: children
    }]
  }];
}
function makeInlineSvgAbstract(params) {
  var _params$icons = params.icons,
    main = _params$icons.main,
    mask = _params$icons.mask,
    prefix = params.prefix,
    iconName = params.iconName,
    transform = params.transform,
    symbol = params.symbol,
    title = params.title,
    maskId = params.maskId,
    titleId = params.titleId,
    extra = params.extra,
    _params$watchable = params.watchable,
    watchable = _params$watchable === void 0 ? false : _params$watchable;
  var _ref = mask.found ? mask : main,
    width = _ref.width,
    height = _ref.height;
  var isUploadedIcon = prefix === 'fak';
  var attrClass = [config.replacementClass, iconName ? "".concat(config.familyPrefix, "-").concat(iconName) : ''].filter(function (c) {
    return extra.classes.indexOf(c) === -1;
  }).filter(function (c) {
    return c !== '' || !!c;
  }).concat(extra.classes).join(' ');
  var content = {
    children: [],
    attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {
      'data-prefix': prefix,
      'data-icon': iconName,
      'class': attrClass,
      'role': extra.attributes.role || 'img',
      'xmlns': 'http://www.w3.org/2000/svg',
      'viewBox': "0 0 ".concat(width, " ").concat(height)
    })
  };
  var uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf('fa-fw') ? {
    width: "".concat(width / height * 16 * 0.0625, "em")
  } : {};
  if (watchable) {
    content.attributes[DATA_FA_I2SVG] = '';
  }
  if (title) {
    content.children.push({
      tag: 'title',
      attributes: {
        id: content.attributes['aria-labelledby'] || "title-".concat(titleId || nextUniqueId())
      },
      children: [title]
    });
    delete content.attributes.title;
  }
  var args = _objectSpread2(_objectSpread2({}, content), {}, {
    prefix: prefix,
    iconName: iconName,
    main: main,
    mask: mask,
    maskId: maskId,
    transform: transform,
    symbol: symbol,
    styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)
  });
  var _ref2 = mask.found && main.found ? callProvided('generateAbstractMask', args) || {
      children: [],
      attributes: {}
    } : callProvided('generateAbstractIcon', args) || {
      children: [],
      attributes: {}
    },
    children = _ref2.children,
    attributes = _ref2.attributes;
  args.children = children;
  args.attributes = attributes;
  if (symbol) {
    return asSymbol(args);
  } else {
    return asIcon(args);
  }
}
function makeLayersTextAbstract(params) {
  var content = params.content,
    width = params.width,
    height = params.height,
    transform = params.transform,
    title = params.title,
    extra = params.extra,
    _params$watchable2 = params.watchable,
    watchable = _params$watchable2 === void 0 ? false : _params$watchable2;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    'title': title
  } : {}), {}, {
    'class': extra.classes.join(' ')
  });
  if (watchable) {
    attributes[DATA_FA_I2SVG] = '';
  }
  var styles = _objectSpread2({}, extra.styles);
  if (transformIsMeaningful(transform)) {
    styles['transform'] = transformForCss({
      transform: transform,
      startCentered: true,
      width: width,
      height: height
    });
    styles['-webkit-transform'] = styles['transform'];
  }
  var styleString = joinStyles(styles);
  if (styleString.length > 0) {
    attributes['style'] = styleString;
  }
  var val = [];
  val.push({
    tag: 'span',
    attributes: attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: 'span',
      attributes: {
        class: 'sr-only'
      },
      children: [title]
    });
  }
  return val;
}
function makeLayersCounterAbstract(params) {
  var content = params.content,
    title = params.title,
    extra = params.extra;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    'title': title
  } : {}), {}, {
    'class': extra.classes.join(' ')
  });
  var styleString = joinStyles(extra.styles);
  if (styleString.length > 0) {
    attributes['style'] = styleString;
  }
  var val = [];
  val.push({
    tag: 'span',
    attributes: attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: 'span',
      attributes: {
        class: 'sr-only'
      },
      children: [title]
    });
  }
  return val;
}
var styles$1 = index_es_namespace.styles;
function asFoundIcon(icon) {
  var width = icon[0];
  var height = icon[1];
  var _icon$slice = icon.slice(4),
    _icon$slice2 = index_es_slicedToArray(_icon$slice, 1),
    vectorData = _icon$slice2[0];
  var element = null;
  if (Array.isArray(vectorData)) {
    element = {
      tag: 'g',
      attributes: {
        class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
      },
      children: [{
        tag: 'path',
        attributes: {
          class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
          fill: 'currentColor',
          d: vectorData[0]
        }
      }, {
        tag: 'path',
        attributes: {
          class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
          fill: 'currentColor',
          d: vectorData[1]
        }
      }]
    };
  } else {
    element = {
      tag: 'path',
      attributes: {
        fill: 'currentColor',
        d: vectorData
      }
    };
  }
  return {
    found: true,
    width: width,
    height: height,
    icon: element
  };
}
var missingIconResolutionMixin = {
  found: false,
  width: 512,
  height: 512
};
function maybeNotifyMissing(iconName, prefix) {
  if (!PRODUCTION && !config.showMissingIcons && iconName) {
    console.error("Icon with name \"".concat(iconName, "\" and prefix \"").concat(prefix, "\" is missing."));
  }
}
function findIcon(iconName, prefix) {
  var givenPrefix = prefix;
  if (prefix === 'fa' && config.styleDefault !== null) {
    prefix = getDefaultUsablePrefix();
  }
  return new Promise(function (resolve, reject) {
    var val = {
      found: false,
      width: 512,
      height: 512,
      icon: callProvided('missingIconAbstract') || {}
    };
    if (givenPrefix === 'fa') {
      var shim = byOldName(iconName) || {};
      iconName = shim.iconName || iconName;
      prefix = shim.prefix || prefix;
    }
    if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {
      var icon = styles$1[prefix][iconName];
      return resolve(asFoundIcon(icon));
    }
    maybeNotifyMissing(iconName, prefix);
    resolve(_objectSpread2(_objectSpread2({}, missingIconResolutionMixin), {}, {
      icon: config.showMissingIcons && iconName ? callProvided('missingIconAbstract') || {} : {}
    }));
  });
}
var noop$1 = function noop() {};
var index_es_p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
  mark: noop$1,
  measure: noop$1
};
var preamble = "FA \"6.0.0\"";
var begin = function begin(name) {
  index_es_p.mark("".concat(preamble, " ").concat(name, " begins"));
  return function () {
    return end(name);
  };
};
var end = function end(name) {
  index_es_p.mark("".concat(preamble, " ").concat(name, " ends"));
  index_es_p.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
};
var perf = {
  begin: begin,
  end: end
};
var noop$2 = function noop() {};
function isWatched(node) {
  var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
  return typeof i2svg === 'string';
}
function hasPrefixAndIcon(node) {
  var prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;
  var icon = node.getAttribute ? node.getAttribute(DATA_ICON) : null;
  return prefix && icon;
}
function hasBeenReplaced(node) {
  return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);
}
function getMutator() {
  if (config.autoReplaceSvg === true) {
    return mutators.replace;
  }
  var mutator = mutators[config.autoReplaceSvg];
  return mutator || mutators.replace;
}
function createElementNS(tag) {
  return index_es_DOCUMENT.createElementNS('http://www.w3.org/2000/svg', tag);
}
function index_es_createElement(tag) {
  return index_es_DOCUMENT.createElement(tag);
}
function convertSVG(abstractObj) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$ceFn = params.ceFn,
    ceFn = _params$ceFn === void 0 ? abstractObj.tag === 'svg' ? createElementNS : index_es_createElement : _params$ceFn;
  if (typeof abstractObj === 'string') {
    return index_es_DOCUMENT.createTextNode(abstractObj);
  }
  var tag = ceFn(abstractObj.tag);
  Object.keys(abstractObj.attributes || []).forEach(function (key) {
    tag.setAttribute(key, abstractObj.attributes[key]);
  });
  var children = abstractObj.children || [];
  children.forEach(function (child) {
    tag.appendChild(convertSVG(child, {
      ceFn: ceFn
    }));
  });
  return tag;
}
function nodeAsComment(node) {
  var comment = " ".concat(node.outerHTML, " ");
  /* BEGIN.ATTRIBUTION */

  comment = "".concat(comment, "Font Awesome fontawesome.com ");
  /* END.ATTRIBUTION */

  return comment;
}
var mutators = {
  replace: function replace(mutation) {
    var node = mutation[0];
    if (node.parentNode) {
      mutation[1].forEach(function (abstract) {
        node.parentNode.insertBefore(convertSVG(abstract), node);
      });
      if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
        var comment = index_es_DOCUMENT.createComment(nodeAsComment(node));
        node.parentNode.replaceChild(comment, node);
      } else {
        node.remove();
      }
    }
  },
  nest: function nest(mutation) {
    var node = mutation[0];
    var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.
    // Short-circuit to the standard replacement

    if (~classArray(node).indexOf(config.replacementClass)) {
      return mutators.replace(mutation);
    }
    var forSvg = new RegExp("".concat(config.familyPrefix, "-.*"));
    delete abstract[0].attributes.id;
    if (abstract[0].attributes.class) {
      var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {
        if (cls === config.replacementClass || cls.match(forSvg)) {
          acc.toSvg.push(cls);
        } else {
          acc.toNode.push(cls);
        }
        return acc;
      }, {
        toNode: [],
        toSvg: []
      });
      abstract[0].attributes.class = splitClasses.toSvg.join(' ');
      if (splitClasses.toNode.length === 0) {
        node.removeAttribute('class');
      } else {
        node.setAttribute('class', splitClasses.toNode.join(' '));
      }
    }
    var newInnerHTML = abstract.map(function (a) {
      return toHtml(a);
    }).join('\n');
    node.setAttribute(DATA_FA_I2SVG, '');
    node.innerHTML = newInnerHTML;
  }
};
function performOperationSync(op) {
  op();
}
function perform(mutations, callback) {
  var callbackFunction = typeof callback === 'function' ? callback : noop$2;
  if (mutations.length === 0) {
    callbackFunction();
  } else {
    var frame = performOperationSync;
    if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
      frame = WINDOW.requestAnimationFrame || performOperationSync;
    }
    frame(function () {
      var mutator = getMutator();
      var mark = perf.begin('mutate');
      mutations.map(mutator);
      mark();
      callbackFunction();
    });
  }
}
var disabled = false;
function disableObservation() {
  disabled = true;
}
function enableObservation() {
  disabled = false;
}
var mo = null;
function observe(options) {
  if (!MUTATION_OBSERVER) {
    return;
  }
  if (!config.observeMutations) {
    return;
  }
  var _options$treeCallback = options.treeCallback,
    treeCallback = _options$treeCallback === void 0 ? noop$2 : _options$treeCallback,
    _options$nodeCallback = options.nodeCallback,
    nodeCallback = _options$nodeCallback === void 0 ? noop$2 : _options$nodeCallback,
    _options$pseudoElemen = options.pseudoElementsCallback,
    pseudoElementsCallback = _options$pseudoElemen === void 0 ? noop$2 : _options$pseudoElemen,
    _options$observeMutat = options.observeMutationsRoot,
    observeMutationsRoot = _options$observeMutat === void 0 ? index_es_DOCUMENT : _options$observeMutat;
  mo = new MUTATION_OBSERVER(function (objects) {
    if (disabled) return;
    var defaultPrefix = getDefaultUsablePrefix();
    toArray(objects).forEach(function (mutationRecord) {
      if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
        if (config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target);
        }
        treeCallback(mutationRecord.target);
      }
      if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {
        pseudoElementsCallback(mutationRecord.target.parentNode);
      }
      if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
        if (mutationRecord.attributeName === 'class' && hasPrefixAndIcon(mutationRecord.target)) {
          var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),
            prefix = _getCanonicalIcon.prefix,
            iconName = _getCanonicalIcon.iconName;
          mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);
          if (iconName) mutationRecord.target.setAttribute(DATA_ICON, iconName);
        } else if (hasBeenReplaced(mutationRecord.target)) {
          nodeCallback(mutationRecord.target);
        }
      }
    });
  });
  if (!IS_DOM) return;
  mo.observe(observeMutationsRoot, {
    childList: true,
    attributes: true,
    characterData: true,
    subtree: true
  });
}
function disconnect() {
  if (!mo) return;
  mo.disconnect();
}
function styleParser(node) {
  var style = node.getAttribute('style');
  var val = [];
  if (style) {
    val = style.split(';').reduce(function (acc, style) {
      var styles = style.split(':');
      var prop = styles[0];
      var value = styles.slice(1);
      if (prop && value.length > 0) {
        acc[prop] = value.join(':').trim();
      }
      return acc;
    }, {});
  }
  return val;
}
function classParser(node) {
  var existingPrefix = node.getAttribute('data-prefix');
  var existingIconName = node.getAttribute('data-icon');
  var innerText = node.innerText !== undefined ? node.innerText.trim() : '';
  var val = getCanonicalIcon(classArray(node));
  if (!val.prefix) {
    val.prefix = getDefaultUsablePrefix();
  }
  if (existingPrefix && existingIconName) {
    val.prefix = existingPrefix;
    val.iconName = existingIconName;
  }
  if (val.iconName && val.prefix) {
    return val;
  }
  if (val.prefix && innerText.length > 0) {
    val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));
  }
  return val;
}
function attributesParser(node) {
  var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {
    if (acc.name !== 'class' && acc.name !== 'style') {
      acc[attr.name] = attr.value;
    }
    return acc;
  }, {});
  var title = node.getAttribute('title');
  var titleId = node.getAttribute('data-fa-title-id');
  if (config.autoA11y) {
    if (title) {
      extraAttributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
    } else {
      extraAttributes['aria-hidden'] = 'true';
      extraAttributes['focusable'] = 'false';
    }
  }
  return extraAttributes;
}
function blankMeta() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: meaninglessTransform,
    symbol: false,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function parseMeta(node) {
  var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    styleParser: true
  };
  var _classParser = classParser(node),
    iconName = _classParser.iconName,
    prefix = _classParser.prefix,
    extraClasses = _classParser.rest;
  var extraAttributes = attributesParser(node);
  var pluginMeta = chainHooks('parseNodeAttributes', {}, node);
  var extraStyles = parser.styleParser ? styleParser(node) : [];
  return _objectSpread2({
    iconName: iconName,
    title: node.getAttribute('title'),
    titleId: node.getAttribute('data-fa-title-id'),
    prefix: prefix,
    transform: meaninglessTransform,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: false,
    extra: {
      classes: extraClasses,
      styles: extraStyles,
      attributes: extraAttributes
    }
  }, pluginMeta);
}
var styles$2 = index_es_namespace.styles;
function generateMutation(node) {
  var nodeMeta = config.autoReplaceSvg === 'nest' ? parseMeta(node, {
    styleParser: false
  }) : parseMeta(node);
  if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
    return callProvided('generateLayersText', node, nodeMeta);
  } else {
    return callProvided('generateSvgReplacementMutation', node, nodeMeta);
  }
}
function onTree(root) {
  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  if (!IS_DOM) return Promise.resolve();
  var htmlClassList = index_es_DOCUMENT.documentElement.classList;
  var hclAdd = function hclAdd(suffix) {
    return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var hclRemove = function hclRemove(suffix) {
    return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$2);
  var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes.map(function (p) {
    return ".".concat(p, ":not([").concat(DATA_FA_I2SVG, "])");
  })).join(', ');
  if (prefixesDomQuery.length === 0) {
    return Promise.resolve();
  }
  var candidates = [];
  try {
    candidates = toArray(root.querySelectorAll(prefixesDomQuery));
  } catch (e) {// noop
  }
  if (candidates.length > 0) {
    hclAdd('pending');
    hclRemove('complete');
  } else {
    return Promise.resolve();
  }
  var mark = perf.begin('onTree');
  var mutations = candidates.reduce(function (acc, node) {
    try {
      var mutation = generateMutation(node);
      if (mutation) {
        acc.push(mutation);
      }
    } catch (e) {
      if (!PRODUCTION) {
        if (e.name === 'MissingIcon') {
          console.error(e);
        }
      }
    }
    return acc;
  }, []);
  return new Promise(function (resolve, reject) {
    Promise.all(mutations).then(function (resolvedMutations) {
      perform(resolvedMutations, function () {
        hclAdd('active');
        hclAdd('complete');
        hclRemove('pending');
        if (typeof callback === 'function') callback();
        mark();
        resolve();
      });
    }).catch(function (e) {
      mark();
      reject(e);
    });
  });
}
function onNode(node) {
  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  generateMutation(node).then(function (mutation) {
    if (mutation) {
      perform([mutation], callback);
    }
  });
}
function resolveIcons(next) {
  return function (maybeIconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
    var mask = params.mask;
    if (mask) {
      mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
    }
    return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {
      mask: mask
    }));
  };
}
var render = function render(iconDefinition) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$transform = params.transform,
    transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
    _params$symbol = params.symbol,
    symbol = _params$symbol === void 0 ? false : _params$symbol,
    _params$mask = params.mask,
    mask = _params$mask === void 0 ? null : _params$mask,
    _params$maskId = params.maskId,
    maskId = _params$maskId === void 0 ? null : _params$maskId,
    _params$title = params.title,
    title = _params$title === void 0 ? null : _params$title,
    _params$titleId = params.titleId,
    titleId = _params$titleId === void 0 ? null : _params$titleId,
    _params$classes = params.classes,
    classes = _params$classes === void 0 ? [] : _params$classes,
    _params$attributes = params.attributes,
    attributes = _params$attributes === void 0 ? {} : _params$attributes,
    _params$styles = params.styles,
    styles = _params$styles === void 0 ? {} : _params$styles;
  if (!iconDefinition) return;
  var prefix = iconDefinition.prefix,
    iconName = iconDefinition.iconName,
    icon = iconDefinition.icon;
  return domVariants(_objectSpread2({
    type: 'icon'
  }, iconDefinition), function () {
    callHooks('beforeDOMElementCreation', {
      iconDefinition: iconDefinition,
      params: params
    });
    if (config.autoA11y) {
      if (title) {
        attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
      } else {
        attributes['aria-hidden'] = 'true';
        attributes['focusable'] = 'false';
      }
    }
    return makeInlineSvgAbstract({
      icons: {
        main: asFoundIcon(icon),
        mask: mask ? asFoundIcon(mask.icon) : {
          found: false,
          width: null,
          height: null,
          icon: {}
        }
      },
      prefix: prefix,
      iconName: iconName,
      transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
      symbol: symbol,
      title: title,
      maskId: maskId,
      titleId: titleId,
      extra: {
        attributes: attributes,
        styles: styles,
        classes: classes
      }
    });
  });
};
var ReplaceElements = {
  mixout: function mixout() {
    return {
      icon: resolveIcons(render)
    };
  },
  hooks: function hooks() {
    return {
      mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
        accumulator.treeCallback = onTree;
        accumulator.nodeCallback = onNode;
        return accumulator;
      }
    };
  },
  provides: function provides(providers$$1) {
    providers$$1.i2svg = function (params) {
      var _params$node = params.node,
        node = _params$node === void 0 ? index_es_DOCUMENT : _params$node,
        _params$callback = params.callback,
        callback = _params$callback === void 0 ? function () {} : _params$callback;
      return onTree(node, callback);
    };
    providers$$1.generateSvgReplacementMutation = function (node, nodeMeta) {
      var iconName = nodeMeta.iconName,
        title = nodeMeta.title,
        titleId = nodeMeta.titleId,
        prefix = nodeMeta.prefix,
        transform = nodeMeta.transform,
        symbol = nodeMeta.symbol,
        mask = nodeMeta.mask,
        maskId = nodeMeta.maskId,
        extra = nodeMeta.extra;
      return new Promise(function (resolve, reject) {
        Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({
          found: false,
          width: 512,
          height: 512,
          icon: {}
        })]).then(function (_ref) {
          var _ref2 = index_es_slicedToArray(_ref, 2),
            main = _ref2[0],
            mask = _ref2[1];
          resolve([node, makeInlineSvgAbstract({
            icons: {
              main: main,
              mask: mask
            },
            prefix: prefix,
            iconName: iconName,
            transform: transform,
            symbol: symbol,
            maskId: maskId,
            title: title,
            titleId: titleId,
            extra: extra,
            watchable: true
          })]);
        }).catch(reject);
      });
    };
    providers$$1.generateAbstractIcon = function (_ref3) {
      var children = _ref3.children,
        attributes = _ref3.attributes,
        main = _ref3.main,
        transform = _ref3.transform,
        styles = _ref3.styles;
      var styleString = joinStyles(styles);
      if (styleString.length > 0) {
        attributes['style'] = styleString;
      }
      var nextChild;
      if (transformIsMeaningful(transform)) {
        nextChild = callProvided('generateAbstractTransformGrouping', {
          main: main,
          transform: transform,
          containerWidth: main.width,
          iconWidth: main.width
        });
      }
      children.push(nextChild || main.icon);
      return {
        children: children,
        attributes: attributes
      };
    };
  }
};
var Layers = {
  mixout: function mixout() {
    return {
      layer: function layer(assembler) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$classes = params.classes,
          classes = _params$classes === void 0 ? [] : _params$classes;
        return domVariants({
          type: 'layer'
        }, function () {
          callHooks('beforeDOMElementCreation', {
            assembler: assembler,
            params: params
          });
          var children = [];
          assembler(function (args) {
            Array.isArray(args) ? args.map(function (a) {
              children = children.concat(a.abstract);
            }) : children = children.concat(args.abstract);
          });
          return [{
            tag: 'span',
            attributes: {
              class: ["".concat(config.familyPrefix, "-layers")].concat(index_es_toConsumableArray(classes)).join(' ')
            },
            children: children
          }];
        });
      }
    };
  }
};
var LayersCounter = {
  mixout: function mixout() {
    return {
      counter: function counter(content) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$title = params.title,
          title = _params$title === void 0 ? null : _params$title,
          _params$classes = params.classes,
          classes = _params$classes === void 0 ? [] : _params$classes,
          _params$attributes = params.attributes,
          attributes = _params$attributes === void 0 ? {} : _params$attributes,
          _params$styles = params.styles,
          styles = _params$styles === void 0 ? {} : _params$styles;
        return domVariants({
          type: 'counter',
          content: content
        }, function () {
          callHooks('beforeDOMElementCreation', {
            content: content,
            params: params
          });
          return makeLayersCounterAbstract({
            content: content.toString(),
            title: title,
            extra: {
              attributes: attributes,
              styles: styles,
              classes: ["".concat(config.familyPrefix, "-layers-counter")].concat(index_es_toConsumableArray(classes))
            }
          });
        });
      }
    };
  }
};
var LayersText = {
  mixout: function mixout() {
    return {
      text: function text(content) {
        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var _params$transform = params.transform,
          transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
          _params$title = params.title,
          title = _params$title === void 0 ? null : _params$title,
          _params$classes = params.classes,
          classes = _params$classes === void 0 ? [] : _params$classes,
          _params$attributes = params.attributes,
          attributes = _params$attributes === void 0 ? {} : _params$attributes,
          _params$styles = params.styles,
          styles = _params$styles === void 0 ? {} : _params$styles;
        return domVariants({
          type: 'text',
          content: content
        }, function () {
          callHooks('beforeDOMElementCreation', {
            content: content,
            params: params
          });
          return makeLayersTextAbstract({
            content: content,
            transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
            title: title,
            extra: {
              attributes: attributes,
              styles: styles,
              classes: ["".concat(config.familyPrefix, "-layers-text")].concat(index_es_toConsumableArray(classes))
            }
          });
        });
      }
    };
  },
  provides: function provides(providers$$1) {
    providers$$1.generateLayersText = function (node, nodeMeta) {
      var title = nodeMeta.title,
        transform = nodeMeta.transform,
        extra = nodeMeta.extra;
      var width = null;
      var height = null;
      if (IS_IE) {
        var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
        var boundingClientRect = node.getBoundingClientRect();
        width = boundingClientRect.width / computedFontSize;
        height = boundingClientRect.height / computedFontSize;
      }
      if (config.autoA11y && !title) {
        extra.attributes['aria-hidden'] = 'true';
      }
      return Promise.resolve([node, makeLayersTextAbstract({
        content: node.innerHTML,
        width: width,
        height: height,
        transform: transform,
        title: title,
        extra: extra,
        watchable: true
      })]);
    };
  }
};
var CLEAN_CONTENT_PATTERN = new RegExp("\"", 'ug');
var SECONDARY_UNICODE_RANGE = [1105920, 1112319];
function hexValueFromContent(content) {
  var cleaned = content.replace(CLEAN_CONTENT_PATTERN, '');
  var codePoint = codePointAt(cleaned, 0);
  var isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];
  var isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;
  return {
    value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),
    isSecondary: isPrependTen || isDoubled
  };
}
function replaceForPosition(node, position) {
  var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));
  return new Promise(function (resolve, reject) {
    if (node.getAttribute(pendingAttribute) !== null) {
      // This node is already being processed
      return resolve();
    }
    var children = toArray(node.children);
    var alreadyProcessedPseudoElement = children.filter(function (c) {
      return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
    })[0];
    var styles = WINDOW.getComputedStyle(node, position);
    var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);
    var fontWeight = styles.getPropertyValue('font-weight');
    var content = styles.getPropertyValue('content');
    if (alreadyProcessedPseudoElement && !fontFamily) {
      // If we've already processed it but the current computed style does not result in a font-family,
      // that probably means that a class name that was previously present to make the icon has been
      // removed. So we now should delete the icon.
      node.removeChild(alreadyProcessedPseudoElement);
      return resolve();
    } else if (fontFamily && content !== 'none' && content !== '') {
      var _content = styles.getPropertyValue('content');
      var prefix = ~['Solid', 'Regular', 'Light', 'Thin', 'Duotone', 'Brands', 'Kit'].indexOf(fontFamily[2]) ? STYLE_TO_PREFIX[fontFamily[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];
      var _hexValueFromContent = hexValueFromContent(_content),
        hexValue = _hexValueFromContent.value,
        isSecondary = _hexValueFromContent.isSecondary;
      var isV4 = fontFamily[0].startsWith('FontAwesome');
      var iconName = byUnicode(prefix, hexValue);
      var iconIdentifier = iconName;
      if (isV4) {
        var iconName4 = byOldUnicode(hexValue);
        if (iconName4.iconName && iconName4.prefix) {
          iconName = iconName4.iconName;
          prefix = iconName4.prefix;
        }
      } // Only convert the pseudo element in this ::before/::after position into an icon if we haven't
      // already done so with the same prefix and iconName

      if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
        node.setAttribute(pendingAttribute, iconIdentifier);
        if (alreadyProcessedPseudoElement) {
          // Delete the old one, since we're replacing it with a new one
          node.removeChild(alreadyProcessedPseudoElement);
        }
        var meta = blankMeta();
        var extra = meta.extra;
        extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
        findIcon(iconName, prefix).then(function (main) {
          var abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta), {}, {
            icons: {
              main: main,
              mask: emptyCanonicalIcon()
            },
            prefix: prefix,
            iconName: iconIdentifier,
            extra: extra,
            watchable: true
          }));
          var element = index_es_DOCUMENT.createElement('svg');
          if (position === '::before') {
            node.insertBefore(element, node.firstChild);
          } else {
            node.appendChild(element);
          }
          element.outerHTML = abstract.map(function (a) {
            return toHtml(a);
          }).join('\n');
          node.removeAttribute(pendingAttribute);
          resolve();
        }).catch(reject);
      } else {
        resolve();
      }
    } else {
      resolve();
    }
  });
}
function index_es_replace(node) {
  return Promise.all([replaceForPosition(node, '::before'), replaceForPosition(node, '::after')]);
}
function processable(node) {
  return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');
}
function searchPseudoElements(root) {
  if (!IS_DOM) return;
  return new Promise(function (resolve, reject) {
    var operations = toArray(root.querySelectorAll('*')).filter(processable).map(index_es_replace);
    var end = perf.begin('searchPseudoElements');
    disableObservation();
    Promise.all(operations).then(function () {
      end();
      enableObservation();
      resolve();
    }).catch(function () {
      end();
      enableObservation();
      reject();
    });
  });
}
var PseudoElements = {
  hooks: function hooks() {
    return {
      mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
        accumulator.pseudoElementsCallback = searchPseudoElements;
        return accumulator;
      }
    };
  },
  provides: function provides(providers$$1) {
    providers$$1.pseudoElements2svg = function (params) {
      var _params$node = params.node,
        node = _params$node === void 0 ? index_es_DOCUMENT : _params$node;
      if (config.searchPseudoElements) {
        searchPseudoElements(node);
      }
    };
  }
};
var _unwatched = false;
var MutationObserver$1 = {
  mixout: function mixout() {
    return {
      dom: {
        unwatch: function unwatch() {
          disableObservation();
          _unwatched = true;
        }
      }
    };
  },
  hooks: function hooks() {
    return {
      bootstrap: function bootstrap() {
        observe(chainHooks('mutationObserverCallbacks', {}));
      },
      noAuto: function noAuto() {
        disconnect();
      },
      watch: function watch(params) {
        var observeMutationsRoot = params.observeMutationsRoot;
        if (_unwatched) {
          enableObservation();
        } else {
          observe(chainHooks('mutationObserverCallbacks', {
            observeMutationsRoot: observeMutationsRoot
          }));
        }
      }
    };
  }
};
var parseTransformString = function parseTransformString(transformString) {
  var transform = {
    size: 16,
    x: 0,
    y: 0,
    flipX: false,
    flipY: false,
    rotate: 0
  };
  return transformString.toLowerCase().split(' ').reduce(function (acc, n) {
    var parts = n.toLowerCase().split('-');
    var first = parts[0];
    var rest = parts.slice(1).join('-');
    if (first && rest === 'h') {
      acc.flipX = true;
      return acc;
    }
    if (first && rest === 'v') {
      acc.flipY = true;
      return acc;
    }
    rest = parseFloat(rest);
    if (isNaN(rest)) {
      return acc;
    }
    switch (first) {
      case 'grow':
        acc.size = acc.size + rest;
        break;
      case 'shrink':
        acc.size = acc.size - rest;
        break;
      case 'left':
        acc.x = acc.x - rest;
        break;
      case 'right':
        acc.x = acc.x + rest;
        break;
      case 'up':
        acc.y = acc.y - rest;
        break;
      case 'down':
        acc.y = acc.y + rest;
        break;
      case 'rotate':
        acc.rotate = acc.rotate + rest;
        break;
    }
    return acc;
  }, transform);
};
var PowerTransforms = {
  mixout: function mixout() {
    return {
      parse: {
        transform: function transform(transformString) {
          return parseTransformString(transformString);
        }
      }
    };
  },
  hooks: function hooks() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var transformString = node.getAttribute('data-fa-transform');
        if (transformString) {
          accumulator.transform = parseTransformString(transformString);
        }
        return accumulator;
      }
    };
  },
  provides: function provides(providers) {
    providers.generateAbstractTransformGrouping = function (_ref) {
      var main = _ref.main,
        transform = _ref.transform,
        containerWidth = _ref.containerWidth,
        iconWidth = _ref.iconWidth;
      var outer = {
        transform: "translate(".concat(containerWidth / 2, " 256)")
      };
      var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
      var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
      var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
      var inner = {
        transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
      };
      var path = {
        transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
      };
      var operations = {
        outer: outer,
        inner: inner,
        path: path
      };
      return {
        tag: 'g',
        attributes: _objectSpread2({}, operations.outer),
        children: [{
          tag: 'g',
          attributes: _objectSpread2({}, operations.inner),
          children: [{
            tag: main.icon.tag,
            children: main.icon.children,
            attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), operations.path)
          }]
        }]
      };
    };
  }
};
var ALL_SPACE = {
  x: 0,
  y: 0,
  width: '100%',
  height: '100%'
};
function fillBlack(abstract) {
  var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  if (abstract.attributes && (abstract.attributes.fill || force)) {
    abstract.attributes.fill = 'black';
  }
  return abstract;
}
function deGroup(abstract) {
  if (abstract.tag === 'g') {
    return abstract.children;
  } else {
    return [abstract];
  }
}
var Masks = {
  hooks: function hooks() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var maskData = node.getAttribute('data-fa-mask');
        var mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(' ').map(function (i) {
          return i.trim();
        }));
        if (!mask.prefix) {
          mask.prefix = getDefaultUsablePrefix();
        }
        accumulator.mask = mask;
        accumulator.maskId = node.getAttribute('data-fa-mask-id');
        return accumulator;
      }
    };
  },
  provides: function provides(providers) {
    providers.generateAbstractMask = function (_ref) {
      var children = _ref.children,
        attributes = _ref.attributes,
        main = _ref.main,
        mask = _ref.mask,
        explicitMaskId = _ref.maskId,
        transform = _ref.transform;
      var mainWidth = main.width,
        mainPath = main.icon;
      var maskWidth = mask.width,
        maskPath = mask.icon;
      var trans = transformForSvg({
        transform: transform,
        containerWidth: maskWidth,
        iconWidth: mainWidth
      });
      var maskRect = {
        tag: 'rect',
        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
          fill: 'white'
        })
      };
      var maskInnerGroupChildrenMixin = mainPath.children ? {
        children: mainPath.children.map(fillBlack)
      } : {};
      var maskInnerGroup = {
        tag: 'g',
        attributes: _objectSpread2({}, trans.inner),
        children: [fillBlack(_objectSpread2({
          tag: mainPath.tag,
          attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)
        }, maskInnerGroupChildrenMixin))]
      };
      var maskOuterGroup = {
        tag: 'g',
        attributes: _objectSpread2({}, trans.outer),
        children: [maskInnerGroup]
      };
      var maskId = "mask-".concat(explicitMaskId || nextUniqueId());
      var clipId = "clip-".concat(explicitMaskId || nextUniqueId());
      var maskTag = {
        tag: 'mask',
        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
          id: maskId,
          maskUnits: 'userSpaceOnUse',
          maskContentUnits: 'userSpaceOnUse'
        }),
        children: [maskRect, maskOuterGroup]
      };
      var defs = {
        tag: 'defs',
        children: [{
          tag: 'clipPath',
          attributes: {
            id: clipId
          },
          children: deGroup(maskPath)
        }, maskTag]
      };
      children.push(defs, {
        tag: 'rect',
        attributes: _objectSpread2({
          fill: 'currentColor',
          'clip-path': "url(#".concat(clipId, ")"),
          mask: "url(#".concat(maskId, ")")
        }, ALL_SPACE)
      });
      return {
        children: children,
        attributes: attributes
      };
    };
  }
};
var MissingIconIndicator = {
  provides: function provides(providers) {
    var reduceMotion = false;
    if (WINDOW.matchMedia) {
      reduceMotion = WINDOW.matchMedia('(prefers-reduced-motion: reduce)').matches;
    }
    providers.missingIconAbstract = function () {
      var gChildren = [];
      var FILL = {
        fill: 'currentColor'
      };
      var ANIMATION_BASE = {
        attributeType: 'XML',
        repeatCount: 'indefinite',
        dur: '2s'
      }; // Ring

      gChildren.push({
        tag: 'path',
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
        })
      });
      var OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
        attributeName: 'opacity'
      });
      var dot = {
        tag: 'circle',
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          cx: '256',
          cy: '364',
          r: '28'
        }),
        children: []
      };
      if (!reduceMotion) {
        dot.children.push({
          tag: 'animate',
          attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
            attributeName: 'r',
            values: '28;14;28;28;14;28;'
          })
        }, {
          tag: 'animate',
          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
            values: '1;0;1;1;0;1;'
          })
        });
      }
      gChildren.push(dot);
      gChildren.push({
        tag: 'path',
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          opacity: '1',
          d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
        }),
        children: reduceMotion ? [] : [{
          tag: 'animate',
          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
            values: '1;0;0;0;0;1;'
          })
        }]
      });
      if (!reduceMotion) {
        // Exclamation
        gChildren.push({
          tag: 'path',
          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
            opacity: '0',
            d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
          }),
          children: [{
            tag: 'animate',
            attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
              values: '0;0;1;1;0;0;'
            })
          }]
        });
      }
      return {
        tag: 'g',
        attributes: {
          'class': 'missing'
        },
        children: gChildren
      };
    };
  }
};
var SvgSymbols = {
  hooks: function hooks() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var symbolData = node.getAttribute('data-fa-symbol');
        var symbol = symbolData === null ? false : symbolData === '' ? true : symbolData;
        accumulator['symbol'] = symbol;
        return accumulator;
      }
    };
  }
};
var plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];
registerPlugins(plugins, {
  mixoutsTo: api
});
var noAuto$1 = api.noAuto;
var config$1 = api.config;
var library$1 = api.library;
var dom$1 = api.dom;
var parse$1 = api.parse;
var findIconDefinition$1 = api.findIconDefinition;
var toHtml$1 = api.toHtml;
var icon = api.icon;
var index_es_layer = api.layer;
var index_es_text = api.text;
var counter = api.counter;

;// CONCATENATED MODULE: ./node_modules/@fortawesome/react-fontawesome/index.es.js



function react_fontawesome_index_es_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function index_es_objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? react_fontawesome_index_es_ownKeys(Object(source), !0).forEach(function (key) {
      react_fontawesome_index_es_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : react_fontawesome_index_es_ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function react_fontawesome_index_es_typeof(obj) {
  "@babel/helpers - typeof";

  return react_fontawesome_index_es_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, react_fontawesome_index_es_typeof(obj);
}
function react_fontawesome_index_es_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function index_es_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function index_es_objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = index_es_objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function react_fontawesome_index_es_toConsumableArray(arr) {
  return react_fontawesome_index_es_arrayWithoutHoles(arr) || react_fontawesome_index_es_iterableToArray(arr) || react_fontawesome_index_es_unsupportedIterableToArray(arr) || react_fontawesome_index_es_nonIterableSpread();
}
function react_fontawesome_index_es_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return react_fontawesome_index_es_arrayLikeToArray(arr);
}
function react_fontawesome_index_es_iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function react_fontawesome_index_es_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return react_fontawesome_index_es_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return react_fontawesome_index_es_arrayLikeToArray(o, minLen);
}
function react_fontawesome_index_es_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function react_fontawesome_index_es_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// Get CSS class list from a props object
function classList(props) {
  var _classes;
  var beat = props.beat,
    fade = props.fade,
    beatFade = props.beatFade,
    bounce = props.bounce,
    shake = props.shake,
    flash = props.flash,
    spin = props.spin,
    spinPulse = props.spinPulse,
    spinReverse = props.spinReverse,
    pulse = props.pulse,
    fixedWidth = props.fixedWidth,
    inverse = props.inverse,
    border = props.border,
    listItem = props.listItem,
    flip = props.flip,
    size = props.size,
    rotation = props.rotation,
    pull = props.pull; // map of CSS class names to properties

  var classes = (_classes = {
    'fa-beat': beat,
    'fa-fade': fade,
    'fa-beat-fade': beatFade,
    'fa-bounce': bounce,
    'fa-shake': shake,
    'fa-flash': flash,
    'fa-spin': spin,
    'fa-spin-reverse': spinReverse,
    'fa-spin-pulse': spinPulse,
    'fa-pulse': pulse,
    'fa-fw': fixedWidth,
    'fa-inverse': inverse,
    'fa-border': border,
    'fa-li': listItem,
    'fa-flip': flip === true,
    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',
    'fa-flip-vertical': flip === 'vertical' || flip === 'both'
  }, react_fontawesome_index_es_defineProperty(_classes, "fa-".concat(size), typeof size !== 'undefined' && size !== null), react_fontawesome_index_es_defineProperty(_classes, "fa-rotate-".concat(rotation), typeof rotation !== 'undefined' && rotation !== null && rotation !== 0), react_fontawesome_index_es_defineProperty(_classes, "fa-pull-".concat(pull), typeof pull !== 'undefined' && pull !== null), react_fontawesome_index_es_defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object
  // return an array of the keys where the value for the key is not null

  return Object.keys(classes).map(function (key) {
    return classes[key] ? key : null;
  }).filter(function (key) {
    return key;
  });
}

// Camelize taken from humps
// humps is copyright © 2012+ Dom Christie
// Released under the MIT license.
// Performant way to determine if object coerces to a number
function _isNumerical(obj) {
  obj = obj - 0; // eslint-disable-next-line no-self-compare

  return obj === obj;
}
function camelize(string) {
  if (_isNumerical(string)) {
    return string;
  } // eslint-disable-next-line no-useless-escape

  string = string.replace(/[\-_\s]+(.)?/g, function (match, chr) {
    return chr ? chr.toUpperCase() : '';
  }); // Ensure 1st char is always lowercase

  return string.substr(0, 1).toLowerCase() + string.substr(1);
}
var _excluded$1 = ["style"];
function capitalize(val) {
  return val.charAt(0).toUpperCase() + val.slice(1);
}
function styleToObject(style) {
  return style.split(';').map(function (s) {
    return s.trim();
  }).filter(function (s) {
    return s;
  }).reduce(function (acc, pair) {
    var i = pair.indexOf(':');
    var prop = camelize(pair.slice(0, i));
    var value = pair.slice(i + 1).trim();
    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;
    return acc;
  }, {});
}
function convert(createElement, element) {
  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  if (typeof element === 'string') {
    return element;
  }
  var children = (element.children || []).map(function (child) {
    return convert(createElement, child);
  });
  /* eslint-disable dot-notation */

  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {
    var val = element.attributes[key];
    switch (key) {
      case 'class':
        acc.attrs['className'] = val;
        delete element.attributes['class'];
        break;
      case 'style':
        acc.attrs['style'] = styleToObject(val);
        break;
      default:
        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {
          acc.attrs[key.toLowerCase()] = val;
        } else {
          acc.attrs[camelize(key)] = val;
        }
    }
    return acc;
  }, {
    attrs: {}
  });
  var _extraProps$style = extraProps.style,
    existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,
    remaining = index_es_objectWithoutProperties(extraProps, _excluded$1);
  mixins.attrs['style'] = index_es_objectSpread2(index_es_objectSpread2({}, mixins.attrs['style']), existingStyle);
  /* eslint-enable */

  return createElement.apply(void 0, [element.tag, index_es_objectSpread2(index_es_objectSpread2({}, mixins.attrs), remaining)].concat(react_fontawesome_index_es_toConsumableArray(children)));
}
var index_es_PRODUCTION = false;
try {
  index_es_PRODUCTION = "production" === 'production';
} catch (e) {}
function log() {
  if (!index_es_PRODUCTION && console && typeof console.error === 'function') {
    var _console;
    (_console = console).error.apply(_console, arguments);
  }
}
function normalizeIconArgs(icon) {
  // this has everything that it needs to be rendered which means it was probably imported
  // directly from an icon svg package
  if (icon && react_fontawesome_index_es_typeof(icon) === 'object' && icon.prefix && icon.iconName && icon.icon) {
    return icon;
  }
  if (parse$1.icon) {
    return parse$1.icon(icon);
  } // if the icon is null, there's nothing to do

  if (icon === null) {
    return null;
  } // if the icon is an object and has a prefix and an icon name, return it

  if (icon && react_fontawesome_index_es_typeof(icon) === 'object' && icon.prefix && icon.iconName) {
    return icon;
  } // if it's an array with length of two

  if (Array.isArray(icon) && icon.length === 2) {
    // use the first item as prefix, second as icon name
    return {
      prefix: icon[0],
      iconName: icon[1]
    };
  } // if it's a string, use it as the icon name

  if (typeof icon === 'string') {
    return {
      prefix: 'fas',
      iconName: icon
    };
  }
}

// creates an object with a key of key
// and a value of value
// if certain conditions are met
function objectWithKey(key, value) {
  // if the value is a non-empty array
  // or it's not an array but it is truthy
  // then create the object with the key and the value
  // if not, return an empty array
  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? react_fontawesome_index_es_defineProperty({}, key, value) : {};
}
var index_es_excluded = ["forwardedRef"];
function FontAwesomeIcon(_ref) {
  var forwardedRef = _ref.forwardedRef,
    props = index_es_objectWithoutProperties(_ref, index_es_excluded);
  var iconArgs = props.icon,
    maskArgs = props.mask,
    symbol = props.symbol,
    className = props.className,
    title = props.title,
    titleId = props.titleId,
    maskId = props.maskId;
  var iconLookup = normalizeIconArgs(iconArgs);
  var classes = objectWithKey('classes', [].concat(react_fontawesome_index_es_toConsumableArray(classList(props)), react_fontawesome_index_es_toConsumableArray(className.split(' '))));
  var transform = objectWithKey('transform', typeof props.transform === 'string' ? parse$1.transform(props.transform) : props.transform);
  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));
  var renderedIcon = icon(iconLookup, index_es_objectSpread2(index_es_objectSpread2(index_es_objectSpread2(index_es_objectSpread2({}, classes), transform), mask), {}, {
    symbol: symbol,
    title: title,
    titleId: titleId,
    maskId: maskId
  }));
  if (!renderedIcon) {
    log('Could not find icon', iconLookup);
    return null;
  }
  var abstract = renderedIcon.abstract;
  var extraProps = {
    ref: forwardedRef
  };
  Object.keys(props).forEach(function (key) {
    // eslint-disable-next-line no-prototype-builtins
    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {
      extraProps[key] = props[key];
    }
  });
  return convertCurry(abstract[0], extraProps);
}
FontAwesomeIcon.displayName = 'FontAwesomeIcon';
FontAwesomeIcon.propTypes = {
  beat: (prop_types_default()).bool,
  border: (prop_types_default()).bool,
  beatFade: (prop_types_default()).bool,
  bounce: (prop_types_default()).bool,
  className: (prop_types_default()).string,
  fade: (prop_types_default()).bool,
  flash: (prop_types_default()).bool,
  mask: prop_types_default().oneOfType([(prop_types_default()).object, (prop_types_default()).array, (prop_types_default()).string]),
  maskId: (prop_types_default()).string,
  fixedWidth: (prop_types_default()).bool,
  inverse: (prop_types_default()).bool,
  flip: prop_types_default().oneOf([true, false, 'horizontal', 'vertical', 'both']),
  icon: prop_types_default().oneOfType([(prop_types_default()).object, (prop_types_default()).array, (prop_types_default()).string]),
  listItem: (prop_types_default()).bool,
  pull: prop_types_default().oneOf(['right', 'left']),
  pulse: (prop_types_default()).bool,
  rotation: prop_types_default().oneOf([0, 90, 180, 270]),
  shake: (prop_types_default()).bool,
  size: prop_types_default().oneOf(['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),
  spin: (prop_types_default()).bool,
  spinPulse: (prop_types_default()).bool,
  spinReverse: (prop_types_default()).bool,
  symbol: prop_types_default().oneOfType([(prop_types_default()).bool, (prop_types_default()).string]),
  title: (prop_types_default()).string,
  titleId: (prop_types_default()).string,
  transform: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).object]),
  swapOpacity: (prop_types_default()).bool
};
FontAwesomeIcon.defaultProps = {
  border: false,
  className: '',
  mask: null,
  maskId: null,
  fixedWidth: false,
  inverse: false,
  flip: false,
  icon: null,
  listItem: false,
  pull: null,
  pulse: false,
  rotation: null,
  size: null,
  spin: false,
  spinPulse: false,
  spinReverse: false,
  beat: false,
  fade: false,
  beatFade: false,
  bounce: false,
  shake: false,
  symbol: false,
  title: '',
  titleId: null,
  transform: null,
  swapOpacity: false
};
var convertCurry = convert.bind(null, react.createElement);

// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faKey.js
var faKey = __webpack_require__(6136);
;// CONCATENATED MODULE: ./src/shared_components/calendar/styles.ts


var CalendarPopoutHeader = styled_components_esm.p.withConfig({
  displayName: "styles__CalendarPopoutHeader",
  componentId: "sc-g6r4dc-0"
})(["white-space:nowrap;font-weight:", ";font-family:", ";margin:0;", ""], function (_ref) {
  var theme = _ref.theme;
  return theme.css.bodyBoldFontWeight;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.css.bodyFontFamily;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme && Ae(["color:", ";font-size:", ";"], theme.css.calendarSelectedDayColor, theme.css.smallFontSize);
});
var CalendarDiv = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDiv",
  componentId: "sc-g6r4dc-1"
})(["", " overflow:hidden;user-select:none;z-index:1;border-style:solid;"], function (_ref4) {
  var theme = _ref4.theme;
  return Ae(["background:", ";border-radius:", ";border-width:", ";border-color:", ";box-shadow:", ";"], theme.css.sidebarContentBackground, theme.css.sidebarRoundedCorners, theme.css.sidebarBorderWidth, theme.css.sidebarBorderColor, theme.css.sidebarBoxShadow);
});
var AccommodationTypeFilterBox = styled_components_esm.div.withConfig({
  displayName: "styles__AccommodationTypeFilterBox",
  componentId: "sc-g6r4dc-2"
})(["display:flex;position:relative;width:100%;padding-bottom:10px;padding-top:10px;flex-direction:column;align-items:flex-start;justify-content:flex-start;@media ", "{padding-top:15px;padding-bottom:0;}"], function (_ref5) {
  var theme = _ref5.theme;
  return theme.mediaQueries.verySmall;
});
var AccommodationTypeFilters = styled_components_esm.div.withConfig({
  displayName: "styles__AccommodationTypeFilters",
  componentId: "sc-g6r4dc-3"
})(["display:flex;row-gap:10px;column-gap:15px;flex-wrap:wrap;@media ", "{padding:0px 25px;}@media ", "{padding:0px 20px;}"], function (_ref6) {
  var theme = _ref6.theme;
  return theme.mediaQueries.large;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.mediaQueries.small;
});
var PackageAlternativeDateTextWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__PackageAlternativeDateTextWrapper",
  componentId: "sc-g6r4dc-4"
})(["position:relative;text-align:left;padding:0 20px;font-size:", ";line-height:", ";@media ", "{margin-bottom:15px;padding:0;}@media ", "{margin-top:15px;}@media (max-width:750px){float:left;padding:0px 20px;}"], function (_ref8) {
  var theme = _ref8.theme;
  return theme.css.smallFontSize;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.css.bodyLineHeight;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.mediaQueries.large;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.mediaQueries.small;
});
var CalendarMonthSelectionDiv = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarMonthSelectionDiv",
  componentId: "sc-g6r4dc-5"
})(["display:flex;padding-left:6px;padding-right:6px;padding-bottom:10px;padding-top:0px;justify-content:space-between;@media ", "{color:", ";}@media ", "{color:", ";}"], function (props) {
  return props.theme.mediaQueries.small;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.css.popoutColor;
}, function (props) {
  return props.theme.mediaQueries.verySmall;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.css.bodyColor;
});
var CalendarMonthSelect = styled_components_esm.select.withConfig({
  displayName: "styles__CalendarMonthSelect",
  componentId: "sc-g6r4dc-6"
})(["height:30px;text-align-last:center;appearance:none;opacity:0;width:100%;font-weight:600;cursor:pointer;-webkit-appearance:menulist-button;background:transparent;font-size:", ";color:", ";font-family:", ";@media ", "{color:black;}"], function (_ref14) {
  var theme = _ref14.theme;
  return theme.css.bodyFontSize;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.css.sidebarColor;
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.css.bodyFontFamily;
}, function (_ref17) {
  var theme = _ref17.theme;
  return theme.mediaQueries.small;
});
var CalendarDayHeaderRow = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDayHeaderRow",
  componentId: "sc-g6r4dc-7"
})(["display:flex;gap:2px;width:auto;justify-content:space-between;font-family:", ";@media ", "{color:", ";}@media ", "{color:", ";width:auto;}"], function (_ref18) {
  var theme = _ref18.theme;
  return theme.css.bodyFontFamily;
}, function (_ref19) {
  var theme = _ref19.theme;
  return theme.mediaQueries.small;
}, function (_ref20) {
  var theme = _ref20.theme;
  return theme.css.popoutColor;
}, function (_ref21) {
  var theme = _ref21.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref22) {
  var theme = _ref22.theme;
  return theme.css.bodyColor;
});
var CalendarDayRow = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDayRow",
  componentId: "sc-g6r4dc-8"
})(["font-family:", ";font-size:", ";height:40px;display:flex;gap:5px;justify-content:space-between;margin-top:5px;@media ", "{color:", ";}"], function (_ref23) {
  var theme = _ref23.theme;
  return theme.css.bodyFontFamily;
}, function (_ref24) {
  var theme = _ref24.theme;
  return theme.css.bodyFontSize;
}, function (_ref25) {
  var theme = _ref25.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref26) {
  var theme = _ref26.theme;
  return theme.css.bodyColor;
});
var CalendarDayBackground = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDayBackground",
  componentId: "sc-g6r4dc-9"
})(["background:currentColor;inset:0;border-radius:", ";position:absolute;opacity:", ";", ""], function (_ref27) {
  var theme = _ref27.theme;
  return theme.css.inputRoundedCorners;
}, function (_ref28) {
  var isPastDate = _ref28.isPastDate,
    selected = _ref28.selected;
  return isPastDate || selected ? 0 : .15;
}, function (props) {
  return (!props.isPastDate && !props.day.validArrivalDate || props.day.validArrivalDate && props.day.possibleStayOver) && !props.isConference && Ae(["@media ", "{", "}@media ", "{", "}@media ", "{", "}"], function (_ref29) {
    var theme = _ref29.theme;
    return theme.mediaQueries.large;
  }, striped(props.theme.css.sidebarContentBackground), function (_ref30) {
    var theme = _ref30.theme;
    return theme.mediaQueries.small;
  }, striped(props.theme.css.popoutBackground), function (_ref31) {
    var theme = _ref31.theme;
    return theme.mediaQueries.verySmall;
  }, striped(props.theme.css.frameworkBackground));
});
var CalendarDayItemDiv = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDayItemDiv",
  componentId: "sc-g6r4dc-10"
})(["height:40px;font-weight:", ";font-size:13px;width:100%;min-width:40px;user-select:none;position:relative;z-index:5;place-items:center;cursor:pointer;border-radius:", ";", " ", "  ", " ", " ", " ", " ", " ", " ", "  ", "  ", " ", ""], function (_ref32) {
  var theme = _ref32.theme;
  return theme.css.bodyBoldFontWeight;
}, function (_ref33) {
  var theme = _ref33.theme;
  return theme.css.inputRoundedCorners;
}, function (_ref34) {
  var theme = _ref34.theme,
    passedDate = _ref34.passedDate;
  return passedDate && Ae(["opacity:", ";"], theme.css.bodyMutedOpacity);
}, function (props) {
  return !props.unavailable && Ae(["&:hover{&::before{content:'';opacity:0.075;position:absolute;top:-1px;right:-1px;bottom:-1px;left:-1px;background-color:currentColor;border-radius:inherit;}}"]);
}, function (props) {
  return props.unavailable && Ae(["cursor:default;"]);
}, function (_ref35) {
  var selected = _ref35.selected;
  return selected && Ae(["background:", ";color:", ";"], function (_ref36) {
    var theme = _ref36.theme;
    return theme.css.calendarMarkerColor;
  }, function (_ref37) {
    var theme = _ref37.theme;
    return theme.css.calendarSelectedDayColor;
  });
}, function (_ref38) {
  var selected = _ref38.selected,
    isStartOfStay = _ref38.isStartOfStay,
    isEndOfStay = _ref38.isEndOfStay;
  return selected && !isStartOfStay && !isEndOfStay && Ae(["border-radius:0;"]);
}, function (_ref39) {
  var theme = _ref39.theme,
    selectedDates = _ref39.selectedDates,
    isStartOfStay = _ref39.isStartOfStay;
  return (selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.startDate) && selectedDates.endDate && isStartOfStay && Ae(["border-top-left-radius:", ";border-bottom-left-radius:", ";border-top-right-radius:0;border-bottom-right-radius:0;"], theme.css.inputRoundedCorners, theme.css.inputRoundedCorners);
}, function (_ref40) {
  var theme = _ref40.theme,
    selectedDates = _ref40.selectedDates,
    isEndOfStay = _ref40.isEndOfStay;
  return (selectedDates === null || selectedDates === void 0 ? void 0 : selectedDates.startDate) && selectedDates.endDate && isEndOfStay && Ae(["border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:", ";border-bottom-right-radius:", ";"], theme.css.inputRoundedCorners, theme.css.inputRoundedCorners);
}, function (_ref41) {
  var selected = _ref41.selected,
    isFirstDayOfWeek = _ref41.isFirstDayOfWeek,
    isStartOfStay = _ref41.isStartOfStay;
  return selected && !isFirstDayOfWeek && !isStartOfStay && Ae(["&::after{content:'';width:5px;height:100%;background:", ";position:absolute;z-index:-1;right:100%;}"], function (props) {
    return props.theme.css.calendarMarkerColor;
  });
}, function (props) {
  return props.isEndOfStay && !props.isConference && Ae(["background:", ";&::before{content:'';width:100%;height:100%;position:absolute;clip-path:polygon(0 0,0% 100%,60% 50%) !important;z-index:-1;background:", ";}&:hover{&::before{opacity:1;background:", ";inset:0;}}"], function (_ref42) {
    var theme = _ref42.theme;
    return helpers_hexToHSLA(theme.css.calendarMarkerColor, 50, .5).color;
  }, function (props) {
    return props.theme.css.calendarMarkerColor;
  }, function (_ref43) {
    var theme = _ref43.theme;
    return helpers_hexToHSLA(theme.css.calendarMarkerColor, 50, .5).color;
  });
}, function (props) {
  return !props.day.validArrivalDate && (props.day.validArrivalDateForSisterHotels || props.day.validArrivalDateForWaitingList) && !props.isConference && Ae(["&:after{content:'';position:absolute;left:3px;bottom:3px;top:unset;right:unset;height:8px;width:8px;border-radius:2px;background:", ";}"], function (_ref44) {
    var theme = _ref44.theme;
    return theme.css.calendarMarkerSisterHotelColor;
  });
}, function (props) {
  return !props.day.validArrivalDate && !props.day.validArrivalDateForSisterHotels && props.day.validArrivalDateForWaitingList && !props.isConference && Ae(["&:after{content:'';position:absolute;left:3px;bottom:3px;top:unset;right:unset;height:8px;width:8px;border-radius:2px;background:", ";}"], function (_ref45) {
    var theme = _ref45.theme;
    return theme.css.calendarMarkerWaitingListColor;
  });
}, function (_ref46) {
  var conferenceType = _ref46.conferenceType;
  return conferenceType === 'conference' && Ae(["border-radius:", ";"], function (_ref47) {
    var theme = _ref47.theme;
    return theme.css.inputRoundedCorners;
  });
});
var CalendarDayHeaderItem = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarDayHeaderItem",
  componentId: "sc-g6r4dc-11"
})(["height:30px;width:45px;display:grid;place-items:center;font-size:", ";opacity:", ";"], function (_ref48) {
  var theme = _ref48.theme;
  return theme.css.smallFontSize;
}, function (_ref49) {
  var theme = _ref49.theme;
  return theme.css.bodyMutedOpacity;
});
var Legend = styled_components_esm.div.withConfig({
  displayName: "styles__Legend",
  componentId: "sc-g6r4dc-12"
})(["display:flex;gap:10px 15px;flex-wrap:wrap;font-family:", ";font-size:", ";@media ", "{color:", ";}"], function (_ref50) {
  var theme = _ref50.theme;
  return theme.css.bodyFontFamily;
}, function (_ref51) {
  var theme = _ref51.theme;
  return theme.css.bodyFontSize;
}, function (_ref52) {
  var theme = _ref52.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref53) {
  var theme = _ref53.theme;
  return theme.css.bodyColor;
});
var SidebarInputElement = styled_components_esm.button.withConfig({
  displayName: "styles__SidebarInputElement",
  componentId: "sc-g6r4dc-13"
})(["background:", ";border-radius:", ";font-family:", ";box-shadow:", ";font-weight:inherit;display:flex;align-items:center;text-align:left;width:100%;grid-template-columns:max-content 1fr;align-content:center;font-size:", ";color:", ";white-space:nowrap;padding:5px 10px;height:40px;transition:filter 0.2s,background 0.2s;border-style:solid;border-width:", ";border-color:", ";cursor:pointer;@media ", "{width:100%;}"], function (_ref54) {
  var theme = _ref54.theme;
  return theme.css.formBackground;
}, function (_ref55) {
  var theme = _ref55.theme;
  return theme.css.inputRoundedCorners;
}, function (_ref56) {
  var theme = _ref56.theme;
  return theme.css.bodyFontFamily;
}, function (_ref57) {
  var theme = _ref57.theme;
  return theme.css.inputTextBoxShadow;
}, function (_ref58) {
  var theme = _ref58.theme;
  return theme.css.bodyFontSize;
}, function (_ref59) {
  var theme = _ref59.theme;
  return theme.css.formColor;
}, function (_ref60) {
  var theme = _ref60.theme;
  return theme.css.inputBorderWidth;
}, function (_ref61) {
  var theme = _ref61.theme;
  return theme.css.formBorderColor;
}, function (props) {
  return props.theme.mediaQueries.small;
});
var CalendarRoomConfigHeader = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarRoomConfigHeader",
  componentId: "sc-g6r4dc-14"
})(["background:", ";color:white;min-height:30px;display:flex;align-content:center;align-items:center;justify-content:space-between;padding:0px 10px;font-weight:600;"], function (props) {
  return props.theme.css.darkAccentColor;
});
var CalendarRoomConfigPopupContent = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarRoomConfigPopupContent",
  componentId: "sc-g6r4dc-15"
})(["display:flex;flex-direction:column;gap:10px;font-family:", ";"], function (props) {
  return props.theme.css.bodyFontFamily;
});
var CalendarRoomConfigCounter = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarRoomConfigCounter",
  componentId: "sc-g6r4dc-16"
})(["display:flex;align-items:center;justify-content:space-between;padding:0px 10px;height:32px;"]);
var CalendarWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarWrapper",
  componentId: "sc-g6r4dc-17"
})(["color:", ";width:100%;"], function (_ref62) {
  var theme = _ref62.theme;
  return theme.css.sidebarColor;
});
var CalendarInnerWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarInnerWrapper",
  componentId: "sc-g6r4dc-18"
})(["@media ", "{display:flex;flex-direction:column;gap:8px;padding:15px 20px;}"], function (_ref63) {
  var theme = _ref63.theme;
  return theme.mediaQueries.small;
});
var CalendarContentWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__CalendarContentWrapper",
  componentId: "sc-g6r4dc-19"
})(["padding-top:20px;padding-bottom:30px;box-sizing:border-box;@media ", "{padding-bottom:10px;padding-top:0;}@media ", "{padding-left:0;padding-right:0;}@media ", "{padding-left:25px;padding-right:25px;max-width:360px;}"], function (_ref64) {
  var theme = _ref64.theme;
  return theme.mediaQueries.small;
}, function (_ref65) {
  var theme = _ref65.theme;
  return theme.mediaQueries.verySmall;
}, function (_ref66) {
  var theme = _ref66.theme;
  return theme.mediaQueries.large;
});
var SearchPromoContainer = styled_components_esm.div.withConfig({
  displayName: "styles__SearchPromoContainer",
  componentId: "sc-g6r4dc-20"
})(["display:flex;flex-direction:row;justify-content:center;align-items:center;margin-top:15px;gap:15px;@media ", "{margin-top:0;gap:10px;};"], function (props) {
  return props.theme.mediaQueries.small;
});
var StayLengthOption = styled_components_esm.div.withConfig({
  displayName: "styles__StayLengthOption",
  componentId: "sc-g6r4dc-21"
})(["font-family:", ";white-space:nowrap;min-height:30px;padding-left:15px;display:flex;justify-content:center;flex-direction:column;font-size:", ";cursor:pointer;color:", ";&:not(:first-child){border-top:1px solid ", ";}&:hover{background:", ";border-top-color:", ";}"], function (_ref67) {
  var theme = _ref67.theme;
  return theme.css.bodyFontFamily;
}, function (_ref68) {
  var theme = _ref68.theme;
  return theme.css.smallFontSize;
}, function (_ref69) {
  var theme = _ref69.theme;
  return theme.css.popoutColor;
}, function (_ref70) {
  var theme = _ref70.theme;
  return helpers_hexToHSLA(theme.css.popoutColor, undefined, .20).color;
}, function (_ref71) {
  var theme = _ref71.theme;
  return helpers_hexToHSLA(theme.css.popoutColor, undefined, .1).color;
}, function (_ref72) {
  var theme = _ref72.theme;
  return helpers_hexToHSLA(theme.css.popoutColor, undefined, .12).color;
});
var StayLengthOptionsList = styled_components_esm.div.withConfig({
  displayName: "styles__StayLengthOptionsList",
  componentId: "sc-g6r4dc-22"
})(["display:flex;flex-direction:column;overflow-y:auto;max-height:275px;", ""], function (_ref73) {
  var showMoreNights = _ref73.showMoreNights;
  return showMoreNights && Ae(["overflow-y:scroll;"]);
});
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-solid-svg-icons/faXmark.js
var faXmark = __webpack_require__(8744);
;// CONCATENATED MODULE: ./src/shared_components/popover/popover.tsx


//Hooks


//Components


 //Lib


//Types

var Popover = function Popover(_ref) {
  var targetWidth = _ref.targetWidth,
    overflowHidden = _ref.overflowHidden,
    withArrow = _ref.withArrow,
    withoutCloseButton = _ref.withoutCloseButton,
    withinPortal = _ref.withinPortal,
    padding = _ref.padding,
    trapFocus = _ref.trapFocus,
    width = _ref.width,
    onClose = _ref.onClose,
    showPopover = _ref.showPopover,
    target = _ref.target,
    position = _ref.position,
    children = _ref.children;
  var theme = Ze();
  var bodyColorWithOpacity = helpers_hexToHSLA(theme.css.frameworkBackground, 40, .5);
  return /*#__PURE__*/react.createElement(Popover_Popover, {
    withArrow: withArrow,
    withinPortal: withinPortal !== null && withinPortal !== void 0 ? withinPortal : true,
    offset: 0,
    zIndex: 99999,
    opened: showPopover,
    width: width,
    onClose: onClose,
    position: position,
    trapFocus: trapFocus !== null && trapFocus !== void 0 ? trapFocus : true
  }, /*#__PURE__*/react.createElement(Popover_Popover.Target, null, /*#__PURE__*/react.createElement(Box, {
    style: {
      width: "100%"
    }
  }, target)), /*#__PURE__*/react.createElement(Popover_Popover.Dropdown, {
    sx: {
      padding: padding !== null && padding !== void 0 ? padding : 0,
      border: 0,
      background: theme.css.popoutBackground,
      borderRadius: theme.css.popoutRoundedCorners,
      fontFamily: theme.css.bodyFontFamily,
      color: theme.css.popoutColor,
      fontSize: theme.css.bodyFontSize,
      lineHeight: theme.css.bodyLineHeight,
      fontWeight: +theme.css.bodyFontWeight,
      boxShadow: "0 1px 4px ".concat(bodyColorWithOpacity.isDark ? bodyColorWithOpacity.color : "rgba(0,0,0,.5)"),
      overflow: overflowHidden ? "hidden" : "initial"
    }
  }, !withoutCloseButton && /*#__PURE__*/react.createElement("button", {
    style: {
      display: "grid",
      placeContent: "center",
      height: "30px",
      width: "30px",
      borderRadius: "100%",
      position: "absolute",
      top: "-15px",
      right: "-15px",
      background: "".concat(helpers_hexToHSLA(theme.css.popoutColor, undefined, .8).color),
      outline: 0,
      border: 0,
      cursor: "pointer"
    },
    onClick: onClose
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    color: theme.css.popoutBackground,
    style: {
      height: "18px"
    },
    icon: faXmark/* faXmark */.g8
  })), children));
};
;// CONCATENATED MODULE: ./src/hooks/useChannel.ts






var useChannel = function useChannel() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    useSuspense = _ref.useSuspense,
    channelId = _ref.channelId;
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var API = Recoil_index_20(ScopedAPI({
    jwtToken: apiContext.token,
    apiUrl: apiContext.apiUrl
  }));
  var channelIdToUse = channelId !== null && channelId !== void 0 ? channelId : apiContext.channelId;
  var setChannelInfo = Recoil_index_24(channelInfoState);
  return (0,es.useQuery)(["channelinfo", channelIdToUse], function () {
    return API.channelInfoV1(channelIdToUse);
  }, {
    staleTime: Infinity,
    refetchOnWindowFocus: false,
    suspense: useSuspense,
    onSuccess: function onSuccess(data) {
      setChannelInfo(data);
    },
    enabled: isValidGUID(channelIdToUse)
  });
};
;// CONCATENATED MODULE: ./src/hooks/campaigns/useCampaignMutations.ts





var useCampaignMutations = function useCampaignMutations() {
  var _useAPI = useAPI(),
    _useAPI2 = slicedToArray_slicedToArray(_useAPI, 2),
    API = _useAPI2[0],
    channelId = _useAPI2[1];
  var unlockFriendsOfEssCampaign = /*#__PURE__*/function () {
    var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(_ref) {
      var authServiceId, mobilePhoneNumber;
      return regenerator_default().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            authServiceId = _ref.authServiceId, mobilePhoneNumber = _ref.mobilePhoneNumber;
            return _context.abrupt("return", API.campaignsUnlockV1({
              authServiceRequest: {
                authServiceId: authServiceId,
                mobilePhoneNumber: mobilePhoneNumber
              },
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function unlockFriendsOfEssCampaign(_x) {
      return _ref2.apply(this, arguments);
    };
  }();
  var unlockDanHostelCampaign = /*#__PURE__*/function () {
    var _ref4 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee2(_ref3) {
      var authServiceId, cardType, cardNumber, postalCode, securityCode;
      return regenerator_default().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            authServiceId = _ref3.authServiceId, cardType = _ref3.cardType, cardNumber = _ref3.cardNumber, postalCode = _ref3.postalCode, securityCode = _ref3.securityCode;
            return _context2.abrupt("return", API.campaignsUnlockV1({
              authServiceRequest: {
                authServiceId: authServiceId,
                userName: cardType,
                password: cardNumber,
                postalCode: postalCode,
                securityCode: securityCode
              },
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function unlockDanHostelCampaign(_x2) {
      return _ref4.apply(this, arguments);
    };
  }();
  var unlockNozioCampaign = /*#__PURE__*/function () {
    var _ref6 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee3(_ref5) {
      var authServiceId, userName, password;
      return regenerator_default().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            authServiceId = _ref5.authServiceId, userName = _ref5.userName, password = _ref5.password;
            return _context3.abrupt("return", API.campaignsUnlockV1({
              authServiceRequest: {
                authServiceId: authServiceId,
                userName: userName,
                password: password
              },
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function unlockNozioCampaign(_x3) {
      return _ref6.apply(this, arguments);
    };
  }();
  var unlockCampingKeyEuropeCampaign = /*#__PURE__*/function () {
    var _ref8 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee4(_ref7) {
      var authServiceId, cardNumber;
      return regenerator_default().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            authServiceId = _ref7.authServiceId, cardNumber = _ref7.cardNumber;
            return _context4.abrupt("return", API.campaignsUnlockV1({
              authServiceRequest: {
                authServiceId: authServiceId,
                userName: cardNumber
              },
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
    return function unlockCampingKeyEuropeCampaign(_x4) {
      return _ref8.apply(this, arguments);
    };
  }();
  var unlockLoyallCampaign = /*#__PURE__*/function () {
    var _ref10 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee5(_ref9) {
      var authServiceId, mobilePhoneNumber, becomeMember;
      return regenerator_default().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            authServiceId = _ref9.authServiceId, mobilePhoneNumber = _ref9.mobilePhoneNumber, becomeMember = _ref9.becomeMember;
            return _context5.abrupt("return", API.campaignsUnlockV1({
              authServiceRequest: {
                authServiceId: authServiceId,
                mobilePhoneNumber: mobilePhoneNumber,
                becomeMember: becomeMember
              },
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
    return function unlockLoyallCampaign(_x5) {
      return _ref10.apply(this, arguments);
    };
  }();
  var unlockByPromoCode = /*#__PURE__*/function () {
    var _ref12 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee6(_ref11) {
      var promoCode, campaignId;
      return regenerator_default().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            promoCode = _ref11.promoCode, campaignId = _ref11.campaignId;
            return _context6.abrupt("return", API.campaignsUnlockV1({
              promoCode: promoCode,
              channelId: channelId,
              campaignId: campaignId,
              multiPropertyCampaignId: campaignId
            }));
          case 2:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
    return function unlockByPromoCode(_x6) {
      return _ref12.apply(this, arguments);
    };
  }();
  var unlockByMyPage = /*#__PURE__*/function () {
    var _ref14 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee7(_ref13) {
      var email, password, campaignId;
      return regenerator_default().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            email = _ref13.email, password = _ref13.password, campaignId = _ref13.campaignId;
            return _context7.abrupt("return", API.campaignsUnlockV1({
              campaignId: campaignId,
              email: email,
              password: password,
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
    return function unlockByMyPage(_x7) {
      return _ref14.apply(this, arguments);
    };
  }();
  var unlockByEmail = /*#__PURE__*/function () {
    var _ref16 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee8(_ref15) {
      var email, campaignId;
      return regenerator_default().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            email = _ref15.email, campaignId = _ref15.campaignId;
            return _context8.abrupt("return", API.campaignsUnlockV1({
              campaignId: campaignId,
              email: email,
              channelId: channelId
            }));
          case 2:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
    return function unlockByEmail(_x8) {
      return _ref16.apply(this, arguments);
    };
  }();
  var applyPromoCode = /*#__PURE__*/function () {
    var _ref18 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee9(_ref17) {
      var promoCode;
      return regenerator_default().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            promoCode = _ref17.promoCode;
            return _context9.abrupt("return", API.accommodationSearchCodesValidateAndSubmitV1({
              channelId: channelId,
              promoCode: promoCode
            }));
          case 2:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
    return function applyPromoCode(_x9) {
      return _ref18.apply(this, arguments);
    };
  }();
  var applyCorpCode = /*#__PURE__*/function () {
    var _ref20 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee10(_ref19) {
      var corpCode, chanId;
      return regenerator_default().wrap(function _callee10$(_context10) {
        while (1) switch (_context10.prev = _context10.next) {
          case 0:
            corpCode = _ref19.corpCode, chanId = _ref19.chanId;
            return _context10.abrupt("return", API.accommodationSearchCodesValidateAndSubmitV1({
              channelId: chanId !== null && chanId !== void 0 ? chanId : channelId,
              corpCode: corpCode
            }));
          case 2:
          case "end":
            return _context10.stop();
        }
      }, _callee10);
    }));
    return function applyCorpCode(_x10) {
      return _ref20.apply(this, arguments);
    };
  }();
  var applyAgentCode = /*#__PURE__*/function () {
    var _ref22 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee11(_ref21) {
      var agentCode;
      return regenerator_default().wrap(function _callee11$(_context11) {
        while (1) switch (_context11.prev = _context11.next) {
          case 0:
            agentCode = _ref21.agentCode;
            return _context11.abrupt("return", API.accommodationSearchCodesValidateAndSubmitV1({
              channelId: channelId,
              iataCode: agentCode
            }));
          case 2:
          case "end":
            return _context11.stop();
        }
      }, _callee11);
    }));
    return function applyAgentCode(_x11) {
      return _ref22.apply(this, arguments);
    };
  }();
  return {
    unlockFriendsOfEssCampaign: (0,es.useMutation)(unlockFriendsOfEssCampaign),
    unlockDanHostelCampaign: (0,es.useMutation)(unlockDanHostelCampaign),
    unlockNozioCampaign: (0,es.useMutation)(unlockNozioCampaign),
    unlockCampingKeyEurope: (0,es.useMutation)(unlockCampingKeyEuropeCampaign),
    unlockLoyall: (0,es.useMutation)(unlockLoyallCampaign),
    unlockByPromoCode: (0,es.useMutation)(unlockByPromoCode),
    unlockByMyPage: (0,es.useMutation)(unlockByMyPage),
    unlockByEmail: (0,es.useMutation)(unlockByEmail),
    applyPromoCode: (0,es.useMutation)(applyPromoCode),
    applyCorpCode: (0,es.useMutation)(applyCorpCode),
    applyAgentCode: (0,es.useMutation)(applyAgentCode)
  };
};
;// CONCATENATED MODULE: ./src/shared_components/basket_drawer/basket_drawer.tsx


function basket_drawer_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function basket_drawer_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? basket_drawer_ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : basket_drawer_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }


//Hooks




//Components


//Lib

//Recoil




var expandedRoomIndexesDrawerState = Recoil_index_8({
  key: "expandedRoomIndexesDrawerState",
  default: [1]
});
var BasketDrawer = function BasketDrawer(_ref) {
  var type = _ref.type;
  var theme = useTheme();
  var isVerySmallScreen = useMediaQuery({
    query: theme.mediaQueries.verySmall
  });
  var _useRecoilState = useRecoilState(basketDrawerState),
    _useRecoilState2 = _slicedToArray(_useRecoilState, 2),
    currentBasketDrawerState = _useRecoilState2[0],
    setBasketDrawerState = _useRecoilState2[1];
  var hideDrawer = function hideDrawer() {
    setBasketDrawerState(function (current) {
      return basket_drawer_objectSpread(basket_drawer_objectSpread({}, current), {}, {
        show: false
      });
    });
  };
  return /*#__PURE__*/React.createElement(Drawer, {
    position: "right",
    zIndex: 99999,
    opened: currentBasketDrawerState.show,
    onClose: hideDrawer,
    size: isVerySmallScreen ? "100%" : "450px",
    styles: {
      drawer: {
        zIndex: 99999,
        background: theme.css.sidebarContentBackground //"#171B20"
      },

      body: {
        height: "100%"
      }
    },
    withCloseButton: false
  }, /*#__PURE__*/React.createElement(React.Suspense, {
    fallback: /*#__PURE__*/React.createElement(ConferenceSummarySkeleton, null)
  }, type === "accommodation" && /*#__PURE__*/React.createElement(AccommodationSummary, null), type === "conference" && /*#__PURE__*/React.createElement(ConferenceSummary, null)));
};
;// CONCATENATED MODULE: ./src/shared_components/booking_summary/atoms.ts

var expandedRoomIndexesSummaryState = Recoil_index_8({
  key: "expandedRoomIndexesSummaryState",
  default: [1]
});
;// CONCATENATED MODULE: ./src/hooks/useBasket.ts





var useBasket = function useBasket(customKey) {
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var API = Recoil_index_20(ScopedAPI({
    jwtToken: apiContext.token,
    apiUrl: apiContext.apiUrl
  }));
  var keys = ["basket", apiContext.channelId];
  if (customKey) {
    keys.push(customKey);
  }
  return (0,es.useQuery)(keys, function () {
    return API.basketsBasketV1(false, apiContext.channelId);
  }, {
    refetchOnWindowFocus: false,
    // refetchOnMount: false,
    suspense: true
  });
};
// EXTERNAL MODULE: ./node_modules/react-gtm-module/dist/index.js
var dist = __webpack_require__(8162);
var dist_default = /*#__PURE__*/__webpack_require__.n(dist);
;// CONCATENATED MODULE: ./src/hooks/useGTM.ts



var useGTM = function useGTM() {
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var clearDataLayer = (0,react_production_min.useCallback)(function () {
    var _channelInfo$external, _channelInfo$external2;
    if (window.google_tag_manager && channelInfo !== null && channelInfo !== void 0 && (_channelInfo$external = channelInfo.externalIntegrations) !== null && _channelInfo$external !== void 0 && (_channelInfo$external2 = _channelInfo$external.gtm) !== null && _channelInfo$external2 !== void 0 && _channelInfo$external2.id) {
      var _window$google_tag_ma, _window$google_tag_ma2, _channelInfo$external3, _channelInfo$external4;
      (_window$google_tag_ma = window.google_tag_manager[channelInfo === null || channelInfo === void 0 ? void 0 : (_channelInfo$external3 = channelInfo.externalIntegrations) === null || _channelInfo$external3 === void 0 ? void 0 : (_channelInfo$external4 = _channelInfo$external3.gtm) === null || _channelInfo$external4 === void 0 ? void 0 : _channelInfo$external4.id]) === null || _window$google_tag_ma === void 0 ? void 0 : (_window$google_tag_ma2 = _window$google_tag_ma.dataLayer) === null || _window$google_tag_ma2 === void 0 ? void 0 : _window$google_tag_ma2.reset();
    }
  }, []);
  var registerGTMEvent = (0,react_production_min.useCallback)(function (customDataLayer) {
    var _channelInfo$external5, _channelInfo$external6;
    if (window.google_tag_manager && channelInfo !== null && channelInfo !== void 0 && (_channelInfo$external5 = channelInfo.externalIntegrations) !== null && _channelInfo$external5 !== void 0 && (_channelInfo$external6 = _channelInfo$external5.gtm) !== null && _channelInfo$external6 !== void 0 && _channelInfo$external6.id) {
      dist_default().dataLayer({
        dataLayer: customDataLayer
      });
    }
  }, []);
  return {
    clearDataLayer: clearDataLayer,
    registerGTMEvent: registerGTMEvent
  };
};
// EXTERNAL MODULE: ./node_modules/react-facebook-pixel/dist/fb-pixel.js
var fb_pixel = __webpack_require__(8900);
var fb_pixel_default = /*#__PURE__*/__webpack_require__.n(fb_pixel);
;// CONCATENATED MODULE: ./src/hooks/useFacebookPixel.ts

function useFacebookPixel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function useFacebookPixel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useFacebookPixel_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useFacebookPixel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }



var pixelOptions = {
  debug: false,
  autoConfig: false
};
var useFacebookPixel_PixelEvents;
(function (PixelEvents) {
  PixelEvents["ADD_TO_CART"] = "AddToCart";
  PixelEvents["INITIATE_CHECKOUT"] = "InitiateCheckout";
  PixelEvents["ADD_PAYMENT_INFO"] = "AddPaymentInfo";
  PixelEvents["PURCHASE"] = "Purchase";
})(useFacebookPixel_PixelEvents || (useFacebookPixel_PixelEvents = {}));
var useFacebookPixel = function useFacebookPixel() {
  var _channelInfo$trackers;
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var faceBookPixelTracker = channelInfo === null || channelInfo === void 0 ? void 0 : (_channelInfo$trackers = channelInfo.trackers) === null || _channelInfo$trackers === void 0 ? void 0 : _channelInfo$trackers.facebookPixelTracker;
  var initializeFacebookPixel = (0,react_production_min.useCallback)(function () {
    fb_pixel_default().init(faceBookPixelTracker === null || faceBookPixelTracker === void 0 ? void 0 : faceBookPixelTracker.pixelId, undefined, pixelOptions);
  }, []);
  var pageView = (0,react_production_min.useCallback)(function () {
    fb_pixel_default().pageView();
  }, []);
  var registerPixelEvent = (0,react_production_min.useCallback)(function (event, data) {
    switch (event) {
      case useFacebookPixel_PixelEvents.ADD_TO_CART:
        //TODO: AddToCart PixelEvent on CreateVoucherBasket
        //TODO: AddToCart PixelEvent on CreateAddOnBasket (Standalone Addons)
        if (faceBookPixelTracker !== null && faceBookPixelTracker !== void 0 && faceBookPixelTracker.addToCart) {
          fb_pixel_default().track("AddToCart", useFacebookPixel_objectSpread(useFacebookPixel_objectSpread({}, data), {}, {
            currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency
          }));
        }
        break;
      case useFacebookPixel_PixelEvents.INITIATE_CHECKOUT:
        //TODO: VoucherList Checkout
        if (faceBookPixelTracker !== null && faceBookPixelTracker !== void 0 && faceBookPixelTracker.initiateCheckout) {
          fb_pixel_default().track("InitiateCheckout", data);
        }
        break;
      case useFacebookPixel_PixelEvents.ADD_PAYMENT_INFO:
        if (faceBookPixelTracker !== null && faceBookPixelTracker !== void 0 && faceBookPixelTracker.addPaymentInfo) {
          fb_pixel_default().track("AddPaymentInfo", useFacebookPixel_objectSpread(useFacebookPixel_objectSpread({}, data), {}, {
            currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency
          }));
        }
        break;
      case useFacebookPixel_PixelEvents.PURCHASE:
        //TODO: VoucherList Checkout
        if (faceBookPixelTracker !== null && faceBookPixelTracker !== void 0 && faceBookPixelTracker.purchase) {
          fb_pixel_default().track("Purchase", useFacebookPixel_objectSpread(useFacebookPixel_objectSpread({}, data), {}, {
            currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency
          }));
        }
        break;
      default:
        return;
    }
  }, []);
  return {
    initializeFacebookPixel: initializeFacebookPixel,
    pageView: pageView,
    registerPixelEvent: registerPixelEvent
  };
};
// EXTERNAL MODULE: ./node_modules/react-ga4/dist/index.js
var react_ga4_dist = __webpack_require__(1980);
;// CONCATENATED MODULE: ./src/hooks/useGA4.ts



var GA4Event;
(function (GA4Event) {
  GA4Event["PAGE_VIEW"] = "page_view";
  GA4Event["VIEW_ITEM_LIST"] = "view_item_list";
  GA4Event["VIEW_ITEM"] = "view_item";
  GA4Event["ADD_TO_CART"] = "add_to_cart";
  GA4Event["REMOVE_FROM_CART"] = "remove_from_cart";
  GA4Event["BEGIN_CHECKOUT"] = "begin_checkout";
  GA4Event["PURCHASE"] = "purchase";
  GA4Event["REFUND"] = "refund";
})(GA4Event || (GA4Event = {}));
var useGA4 = function useGA4() {
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var initializeGA4 = (0,react_production_min.useCallback)(function () {
    var _channelInfo$googleAn;
    if ((channelInfo === null || channelInfo === void 0 ? void 0 : (_channelInfo$googleAn = channelInfo.googleAnalyticsAccounts) === null || _channelInfo$googleAn === void 0 ? void 0 : _channelInfo$googleAn.length) > 0) {
      var _channelInfo$googleAn2;
      var GA_MEASUREMENT_IDS = channelInfo === null || channelInfo === void 0 ? void 0 : (_channelInfo$googleAn2 = channelInfo.googleAnalyticsAccounts) === null || _channelInfo$googleAn2 === void 0 ? void 0 : _channelInfo$googleAn2.map(function (accountId) {
        return {
          trackingId: accountId
        };
      });
      react_ga4_dist/* default.initialize */.ZP.initialize(GA_MEASUREMENT_IDS);
    }
  }, []);
  var pageView = (0,react_production_min.useCallback)(function () {
    if (react_ga4_dist/* default.isInitialized */.ZP.isInitialized) {
      react_ga4_dist/* default.event */.ZP.event(GA4Event.PAGE_VIEW);
    }
  }, []);
  var registerGA4Event = (0,react_production_min.useCallback)(function (event, gaItemList) {
    if (react_ga4_dist/* default.isInitialized */.ZP.isInitialized) {
      switch (event) {
        case GA4Event.BEGIN_CHECKOUT:
          react_ga4_dist/* default.event */.ZP.event(GA4Event.BEGIN_CHECKOUT, gaItemList);
          break;
        case GA4Event.ADD_TO_CART:
          //TODO: addConferenceRoom
          //TODO: addConferenceExtraToBasket
          react_ga4_dist/* default.event */.ZP.event(GA4Event.ADD_TO_CART, gaItemList);
          break;
        case GA4Event.REMOVE_FROM_CART:
          //TODO: Have not found in old solution, will have in this solution
          react_ga4_dist/* default.event */.ZP.event(GA4Event.REMOVE_FROM_CART);
          break;
        case GA4Event.PURCHASE:
          //TODO: Once we have confirmation page
          react_ga4_dist/* default.event */.ZP.event(GA4Event.PURCHASE, {
            currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency,
            value: 100,
            transaction_id: 100,
            items: gaItemList
          });
          break;
        case GA4Event.REFUND:
          //TODO: Only in edit reservation
          react_ga4_dist/* default.event */.ZP.event(GA4Event.REFUND);
          break;
        case GA4Event.VIEW_ITEM_LIST:
          //TODO: ConferenceRoomList
          //TODO: StandaloneExtras
          react_ga4_dist/* default.event */.ZP.event(GA4Event.VIEW_ITEM_LIST, gaItemList);
          break;
        case GA4Event.VIEW_ITEM:
          react_ga4_dist/* default.event */.ZP.event(GA4Event.VIEW_ITEM, gaItemList);
          break;
      }
    }
  }, []);
  return {
    initializeGA4: initializeGA4,
    pageView: pageView,
    registerGA4Event: registerGA4Event
  };
};
;// CONCATENATED MODULE: ./src/hooks/useBasketOperations.ts




function useBasketOperations_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function useBasketOperations_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useBasketOperations_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useBasketOperations_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function useBasketOperations_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = useBasketOperations_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function useBasketOperations_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return useBasketOperations_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useBasketOperations_arrayLikeToArray(o, minLen); }
function useBasketOperations_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }












var RemoveMultipleRooms = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee(requests, API, channelId, queryClient, waitForNewBasket) {
    var results, _iterator, _step, rq;
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          results = [];
          _iterator = useBasketOperations_createForOfIteratorHelper(requests);
          _context.prev = 2;
          _iterator.s();
        case 4:
          if ((_step = _iterator.n()).done) {
            _context.next = 13;
            break;
          }
          rq = _step.value;
          _context.t0 = results;
          _context.next = 9;
          return API.basketsRoomsRemoveV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, rq), {}, {
            channelId: channelId
          }));
        case 9:
          _context.t1 = _context.sent;
          _context.t0.push.call(_context.t0, _context.t1);
        case 11:
          _context.next = 4;
          break;
        case 13:
          _context.next = 18;
          break;
        case 15:
          _context.prev = 15;
          _context.t2 = _context["catch"](2);
          _iterator.e(_context.t2);
        case 18:
          _context.prev = 18;
          _iterator.f();
          return _context.finish(18);
        case 21:
          if (!waitForNewBasket) {
            _context.next = 24;
            break;
          }
          _context.next = 24;
          return queryClient.prefetchQuery(["basket", channelId], function () {
            return API.basketsBasketV1(false, channelId);
          });
        case 24:
          return _context.abrupt("return", results);
        case 25:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[2, 15, 18, 21]]);
  }));
  return function RemoveMultipleRooms(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();
var AddToBasketAndRefetchBasket = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee2(request, ChannelID, API, queryClient) {
    var result, newBasket;
    return regenerator_default().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return API.basketsRoomsAddV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
            channelId: ChannelID
          }));
        case 2:
          result = _context2.sent;
          _context2.next = 5;
          return API.basketsBasketV1(false, ChannelID);
        case 5:
          newBasket = _context2.sent;
          queryClient.setQueryData(["basket", ChannelID], newBasket);
          return _context2.abrupt("return", result);
        case 8:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function AddToBasketAndRefetchBasket(_x6, _x7, _x8, _x9) {
    return _ref2.apply(this, arguments);
  };
}();
var useBasketOperations = function useBasketOperations() {
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var apiContext = react.useContext(APIContext);
  var ChannelID = apiContext.channelId;
  var API = Recoil_index_20(ScopedAPI({
    apiUrl: apiContext.apiUrl,
    jwtToken: apiContext.token
  }));
  var queryClient = (0,es.useQueryClient)();
  var _useGTM = useGTM(),
    registerGTMEvent = _useGTM.registerGTMEvent,
    clearDataLayer = _useGTM.clearDataLayer;
  var _useGA = useGA4(),
    registerGA4Event = _useGA.registerGA4Event;
  var _useFacebookPixel = useFacebookPixel(),
    registerPixelEvent = _useFacebookPixel.registerPixelEvent;

  //TODO: AddToCart PixelEvent on CreateVoucherBasket
  //TODO: AddToCart PixelEvent on CreateAddOnBasket (Standalone Addons)

  var addToBasket = (0,es.useMutation)(function (_ref3) {
    var request = _ref3.request,
      gtmInfo = _ref3.gtmInfo;
    return AddToBasketAndRefetchBasket(request, ChannelID, API, queryClient);
  }, {
    onSuccess: function onSuccess(data, variables) {
      var _variables$gtmInfo$ro, _variables$gtmInfo, _variables$gtmInfo$ro2, _variables$gtmInfo2, _variables$gtmInfo$pr, _variables$gtmInfo3, _variables$gtmInfo4, _variables$gtmInfo5, _variables$gtmInfo6, _variables$gtmInfo7, _variables$gtmInfo$ro3, _variables$gtmInfo8, _ref4, _variables$gtmInfo9;
      clearDataLayer();
      registerGTMEvent({
        event: "addToCart",
        ecommerce: {
          currencycode: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency,
          add: {
            products: [{
              name: (_variables$gtmInfo$ro = (_variables$gtmInfo = variables.gtmInfo) === null || _variables$gtmInfo === void 0 ? void 0 : _variables$gtmInfo.roomName) !== null && _variables$gtmInfo$ro !== void 0 ? _variables$gtmInfo$ro : "N/A",
              id: (_variables$gtmInfo$ro2 = (_variables$gtmInfo2 = variables.gtmInfo) === null || _variables$gtmInfo2 === void 0 ? void 0 : _variables$gtmInfo2.roomId) !== null && _variables$gtmInfo$ro2 !== void 0 ? _variables$gtmInfo$ro2 : "N/A",
              price: (_variables$gtmInfo$pr = (_variables$gtmInfo3 = variables.gtmInfo) === null || _variables$gtmInfo3 === void 0 ? void 0 : _variables$gtmInfo3.price) !== null && _variables$gtmInfo$pr !== void 0 ? _variables$gtmInfo$pr : "N/A",
              quantity: variables.request.nrOfUnits,
              brand: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.hotelName
            }]
          }
        }
      });
      registerGA4Event(GA4Event.ADD_TO_CART, {
        currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency,
        value: (_variables$gtmInfo4 = variables.gtmInfo) === null || _variables$gtmInfo4 === void 0 ? void 0 : _variables$gtmInfo4.price,
        items: [{
          item_id: (_variables$gtmInfo5 = variables.gtmInfo) === null || _variables$gtmInfo5 === void 0 ? void 0 : _variables$gtmInfo5.roomId,
          item_name: (_variables$gtmInfo6 = variables.gtmInfo) === null || _variables$gtmInfo6 === void 0 ? void 0 : _variables$gtmInfo6.roomName,
          item_category: "RatePlan",
          price: (_variables$gtmInfo7 = variables.gtmInfo) === null || _variables$gtmInfo7 === void 0 ? void 0 : _variables$gtmInfo7.price,
          quantity: variables.request.nrOfUnits
        }]
      });
      registerPixelEvent(useFacebookPixel_PixelEvents.ADD_TO_CART, {
        content_name: (_variables$gtmInfo$ro3 = (_variables$gtmInfo8 = variables.gtmInfo) === null || _variables$gtmInfo8 === void 0 ? void 0 : _variables$gtmInfo8.roomName) !== null && _variables$gtmInfo$ro3 !== void 0 ? _variables$gtmInfo$ro3 : "N/A",
        value: (_ref4 = (_variables$gtmInfo9 = variables.gtmInfo) === null || _variables$gtmInfo9 === void 0 ? void 0 : _variables$gtmInfo9.price) !== null && _ref4 !== void 0 ? _ref4 : 0
      });
    },
    mutationKey: "addToBasket"
  });
  var UpdateBasketMulti = /*#__PURE__*/function () {
    var _ref5 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee3(bookingCode, addRequests, removeRequests, updateRequests, API, channelId, waitForNewBasket) {
      var result;
      return regenerator_default().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return API.basketsUpdateBasketV1({
              channelId: channelId,
              bookingCode: bookingCode,
              addAddonsToBasket: addRequests,
              updateAddonsInBasketRequest: updateRequests,
              removeAddonsFromBasket: removeRequests
            });
          case 2:
            result = _context3.sent;
            if (!waitForNewBasket) {
              _context3.next = 6;
              break;
            }
            _context3.next = 6;
            return queryClient.prefetchQuery(["basket", channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 6:
            return _context3.abrupt("return", result);
          case 7:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function UpdateBasketMulti(_x10, _x11, _x12, _x13, _x14, _x15, _x16) {
      return _ref5.apply(this, arguments);
    };
  }();
  var updateBasketMulti = (0,es.useMutation)(function (_ref6) {
    var addRequests = _ref6.addRequests,
      removeRequests = _ref6.removeRequests,
      updateRequests = _ref6.updateRequests,
      bookingCode = _ref6.bookingCode,
      waitForNewBasket = _ref6.waitForNewBasket,
      pixelData = _ref6.pixelData;
    return UpdateBasketMulti(bookingCode, addRequests !== null && addRequests !== void 0 ? addRequests : [], removeRequests !== null && removeRequests !== void 0 ? removeRequests : [], updateRequests !== null && updateRequests !== void 0 ? updateRequests : [], API, ChannelID, waitForNewBasket);
  }, {
    onSuccess: function onSuccess(result, variables) {
      var _variables$addRequest;
      var isAddingOptionalAddOns = ((_variables$addRequest = variables.addRequests) === null || _variables$addRequest === void 0 ? void 0 : _variables$addRequest.length) > 0;
      if (isAddingOptionalAddOns) {
        var _ref7, _variables$pixelData, _ref8, _variables$pixelData2;
        registerPixelEvent(useFacebookPixel_PixelEvents.ADD_TO_CART, {
          content_name: (_ref7 = (_variables$pixelData = variables.pixelData) === null || _variables$pixelData === void 0 ? void 0 : _variables$pixelData.content_name) !== null && _ref7 !== void 0 ? _ref7 : "N/A",
          value: (_ref8 = (_variables$pixelData2 = variables.pixelData) === null || _variables$pixelData2 === void 0 ? void 0 : _variables$pixelData2.value) !== null && _ref8 !== void 0 ? _ref8 : "N/A"
        });
      }
      if (result.success && !variables.waitForNewBasket) {
        queryClient.invalidateQueries("basket");
      }
    },
    mutationKey: "updateBasket"
  });
  var updateBasket = (0,es.useMutation)( /*#__PURE__*/function () {
    var _ref10 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee4(_ref9) {
      var request, pixelData, waitForNewBasket, result;
      return regenerator_default().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            request = _ref9.request, pixelData = _ref9.pixelData, waitForNewBasket = _ref9.waitForNewBasket;
            _context4.next = 3;
            return API.basketsUpdateBasketV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
              channelId: ChannelID
            }));
          case 3:
            result = _context4.sent;
            if (!waitForNewBasket) {
              _context4.next = 7;
              break;
            }
            _context4.next = 7;
            return queryClient.prefetchQuery(["basket", channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 7:
            return _context4.abrupt("return", result);
          case 8:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
    return function (_x17) {
      return _ref10.apply(this, arguments);
    };
  }(), {
    onSuccess: function () {
      var _onSuccess = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee5(data, variables) {
        var isUpdatingMandatoryDynamicAddOnPackages, isAddingOptionalAddOns, _ref11, _ref12, mandatoryDynamicAddOnPackage, _ref13, _ref14, optionalAddOn;
        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              isUpdatingMandatoryDynamicAddOnPackages = variables.request.updateMandatoryDynamicAddOnPackages && variables.request.updateMandatoryDynamicAddOnPackages.bookingKeys.length > 0;
              isAddingOptionalAddOns = variables.request.addAddonsToBasket && variables.request.addAddonsToBasket.length > 0;
              if (isUpdatingMandatoryDynamicAddOnPackages) {
                mandatoryDynamicAddOnPackage = variables.pixelData;
                registerPixelEvent(useFacebookPixel_PixelEvents.ADD_TO_CART, {
                  content_name: (_ref11 = mandatoryDynamicAddOnPackage === null || mandatoryDynamicAddOnPackage === void 0 ? void 0 : mandatoryDynamicAddOnPackage.content_name) !== null && _ref11 !== void 0 ? _ref11 : "N/A",
                  value: (_ref12 = mandatoryDynamicAddOnPackage === null || mandatoryDynamicAddOnPackage === void 0 ? void 0 : mandatoryDynamicAddOnPackage.value) !== null && _ref12 !== void 0 ? _ref12 : "N/A"
                });
              }
              if (isAddingOptionalAddOns) {
                optionalAddOn = variables.pixelData;
                registerPixelEvent(useFacebookPixel_PixelEvents.ADD_TO_CART, {
                  content_name: (_ref13 = optionalAddOn === null || optionalAddOn === void 0 ? void 0 : optionalAddOn.content_name) !== null && _ref13 !== void 0 ? _ref13 : "N/A",
                  value: (_ref14 = optionalAddOn === null || optionalAddOn === void 0 ? void 0 : optionalAddOn.value) !== null && _ref14 !== void 0 ? _ref14 : "N/A"
                });
                if (utilities_utilities.arrayHasItems(variables.request.updateAddonsInBasketRequest)) {
                  registerGA4Event(GA4Event.ADD_TO_CART, {
                    currency: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency,
                    value: variables.request.updateAddonsInBasketRequest[0].price * variables.request.updateAddonsInBasketRequest[0].nrOfUnits,
                    items: [{
                      item_id: variables.request.updateAddonsInBasketRequest[0].addonId,
                      item_name: optionalAddOn === null || optionalAddOn === void 0 ? void 0 : optionalAddOn.content_name,
                      item_category: "Addon",
                      price: variables.request.updateAddonsInBasketRequest[0].price,
                      quantity: variables.request.updateAddonsInBasketRequest[0].nrOfUnits
                    }]
                  });
                }
              }
              if (data.success && !variables.waitForNewBasket) {
                queryClient.invalidateQueries("basket");
              }
            case 5:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function onSuccess(_x18, _x19) {
        return _onSuccess.apply(this, arguments);
      }
      return onSuccess;
    }(),
    mutationKey: "updateBasket"
  });
  var updateTimeslotAddonMessageToRestaurant = (0,es.useMutation)(function (request) {
    return API.basketsUpdateBasketV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
      channelId: ChannelID
    }));
  }, {
    mutationKey: "updateTimeslotAddonMessageToRestaurant"
  });
  var removeRoomsFromBasket = (0,es.useMutation)(function (_ref15) {
    var requests = _ref15.requests,
      waitForNewBasket = _ref15.waitForNewBasket;
    return RemoveMultipleRooms(requests, API, ChannelID, queryClient, waitForNewBasket);
  }, {
    onSuccess: function onSuccess(results, variables) {
      if (!variables.waitForNewBasket && results.some(function (res) {
        return res.success;
      })) {
        queryClient.invalidateQueries(["basket"]);
      }
    },
    mutationKey: "removingRoomsFromBasket"
  });
  var UpdateMultipleAddons = /*#__PURE__*/function () {
    var _ref16 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee6(bookingCode, requests, API, channelId, waitForNewBasket) {
      var result;
      return regenerator_default().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return API.basketsUpdateBasketV1({
              channelId: channelId,
              bookingCode: bookingCode,
              updateAddonsInBasketRequest: requests
            });
          case 2:
            result = _context6.sent;
            if (!waitForNewBasket) {
              _context6.next = 6;
              break;
            }
            _context6.next = 6;
            return queryClient.prefetchQuery(["basket", channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 6:
            return _context6.abrupt("return", result);
          case 7:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
    return function UpdateMultipleAddons(_x20, _x21, _x22, _x23, _x24) {
      return _ref16.apply(this, arguments);
    };
  }();
  var updateAddonsInBasket = (0,es.useMutation)(function (_ref17) {
    var requests = _ref17.requests,
      bookingCode = _ref17.bookingCode,
      waitForNewBasket = _ref17.waitForNewBasket;
    return UpdateMultipleAddons(bookingCode, requests, API, ChannelID, waitForNewBasket);
  }, {
    onSuccess: function onSuccess(result) {
      if (result.success) {
        queryClient.invalidateQueries("basket");
      }
    },
    mutationKey: "updateBasket"
  });
  var updateTimeslotAddonsAndRefreshBasket = /*#__PURE__*/function () {
    var _ref18 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee7(channelId, bookingCode, updateOptionalAddOnTimeSlot) {
      return regenerator_default().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return API.basketsUpdateBasketV1({
              channelId: channelId,
              bookingCode: bookingCode,
              updateOptionalAddOnTimeSlot: updateOptionalAddOnTimeSlot
            });
          case 2:
            _context7.next = 4;
            return queryClient.prefetchQuery(["basket", channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 4:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
    return function updateTimeslotAddonsAndRefreshBasket(_x25, _x26, _x27) {
      return _ref18.apply(this, arguments);
    };
  }();
  var updateTimeslotAddonsInBasket = (0,es.useMutation)(function (_ref19) {
    var request = _ref19.request,
      bookingCode = _ref19.bookingCode;
    return updateTimeslotAddonsAndRefreshBasket(ChannelID, bookingCode, request);
  }, {
    mutationKey: "updateBasket"
  });
  var RemoveMultipleAddons = /*#__PURE__*/function () {
    var _ref20 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee8(bookingCode, requests, API, channelId, waitForNewBasket, skipInvalidation) {
      var results, _iterator2, _step2, rq;
      return regenerator_default().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            results = [];
            _iterator2 = useBasketOperations_createForOfIteratorHelper(requests);
            _context8.prev = 2;
            _iterator2.s();
          case 4:
            if ((_step2 = _iterator2.n()).done) {
              _context8.next = 13;
              break;
            }
            rq = _step2.value;
            _context8.t0 = results;
            _context8.next = 9;
            return API.basketsUpdateBasketV1({
              channelId: channelId,
              bookingCode: bookingCode,
              removeAddonsFromBasket: [rq]
            });
          case 9:
            _context8.t1 = _context8.sent;
            _context8.t0.push.call(_context8.t0, _context8.t1);
          case 11:
            _context8.next = 4;
            break;
          case 13:
            _context8.next = 18;
            break;
          case 15:
            _context8.prev = 15;
            _context8.t2 = _context8["catch"](2);
            _iterator2.e(_context8.t2);
          case 18:
            _context8.prev = 18;
            _iterator2.f();
            return _context8.finish(18);
          case 21:
            if (!(!skipInvalidation && waitForNewBasket)) {
              _context8.next = 24;
              break;
            }
            _context8.next = 24;
            return queryClient.prefetchQuery(["basket", channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 24:
            return _context8.abrupt("return", results);
          case 25:
          case "end":
            return _context8.stop();
        }
      }, _callee8, null, [[2, 15, 18, 21]]);
    }));
    return function RemoveMultipleAddons(_x28, _x29, _x30, _x31, _x32, _x33) {
      return _ref20.apply(this, arguments);
    };
  }();
  var removeAddonsFromBasket = (0,es.useMutation)(function (_ref21) {
    var requests = _ref21.requests,
      bookingCode = _ref21.bookingCode,
      waitForNewBasket = _ref21.waitForNewBasket,
      skipInvalidation = _ref21.skipInvalidation;
    return RemoveMultipleAddons(bookingCode, requests, API, ChannelID, waitForNewBasket, skipInvalidation);
  }, {
    onSuccess: function onSuccess(results, variables) {
      if (!variables.skipInvalidation && !variables.waitForNewBasket && results.some(function (res) {
        return res.success;
      })) {
        queryClient.invalidateQueries("basket");
      }
      queryClient.invalidateQueries(["checkoutSettings", variables.bookingCode]);
    },
    mutationKey: "removingAddonsFromBasket"
  });
  var clearBasketNew = (0,es.useMutation)(["clear_basket"], function (_ref22) {
    var channelId = _ref22.channelId;
    return API.basketsClearBasketV1({
      channelId: channelId !== null && channelId !== void 0 ? channelId : ChannelID
    });
  }, {
    onSuccess: function onSuccess(response, variables) {
      if (response.success) {
        var _variables$channelId;
        queryClient.invalidateQueries(["basket", (_variables$channelId = variables.channelId) !== null && _variables$channelId !== void 0 ? _variables$channelId : ChannelID]);
      }
    }
  });
  var clearBasket = (0,es.useMutation)(function (booking) {
    var _booking$bookingData$, _booking$bookingData, _booking$bookingData$2;
    var requests = (_booking$bookingData$ = booking === null || booking === void 0 ? void 0 : (_booking$bookingData = booking.bookingData) === null || _booking$bookingData === void 0 ? void 0 : (_booking$bookingData$2 = _booking$bookingData.rooms) === null || _booking$bookingData$2 === void 0 ? void 0 : _booking$bookingData$2.map(function (x) {
      return {
        internalBookingId: x.internalBookingId,
        roomType: RoomType.Accommodation,
        channelId: "ChannelId"
      };
    })) !== null && _booking$bookingData$ !== void 0 ? _booking$bookingData$ : [];
    return RemoveMultipleRooms(requests, API, ChannelID, queryClient);
  }, {
    onSuccess: function onSuccess(results) {
      if (results.some(function (res) {
        return res.success;
      })) {
        queryClient.invalidateQueries("basket");
        queryClient.invalidateQueries("online_payment_methods");
      }
    },
    mutationKey: "clearBasket"
  });
  var redeemVoucherInner = /*#__PURE__*/function () {
    var _ref24 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee9(_ref23) {
      var request, waitForCheckoutSettings, bookingCode, result, hostName;
      return regenerator_default().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            request = _ref23.request, waitForCheckoutSettings = _ref23.waitForCheckoutSettings, bookingCode = _ref23.bookingCode;
            _context9.next = 3;
            return API.checkoutVoucherNumberV1Post(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
              channelId: ChannelID
            }));
          case 3:
            result = _context9.sent;
            if (!waitForCheckoutSettings) {
              _context9.next = 10;
              break;
            }
            hostName = window.location.protocol + "//" + window.location.hostname;
            _context9.next = 8;
            return queryClient.prefetchQuery(["checkoutSettings", bookingCode], function () {
              return API.checkoutV1(undefined, ChannelID);
            });
          case 8:
            _context9.next = 10;
            return queryClient.prefetchQuery("online_payment_methods", function () {
              return API.basketsOnlinePaymentMethodsV1(hostName, ChannelID);
            });
          case 10:
            return _context9.abrupt("return", result);
          case 11:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
    return function redeemVoucherInner(_x34) {
      return _ref24.apply(this, arguments);
    };
  }();
  var redeemVoucher = (0,es.useMutation)(function (_ref25) {
    var request = _ref25.request,
      waitForCheckoutSettings = _ref25.waitForCheckoutSettings,
      bookingCode = _ref25.bookingCode;
    return redeemVoucherInner({
      request: request,
      waitForCheckoutSettings: waitForCheckoutSettings,
      bookingCode: bookingCode
    });
  }, {
    mutationKey: "redeem_voucher",
    onSuccess: function onSuccess(res, variables) {
      if (res.success) {
        queryClient.invalidateQueries("basket");
        if (!variables.waitForCheckoutSettings) {
          queryClient.invalidateQueries(["checkoutSettings", variables.bookingCode]);
          queryClient.invalidateQueries("online_payment_methods");
        }
      }
    }
  });
  var removeVoucherInner = /*#__PURE__*/function () {
    var _ref27 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee10(_ref26) {
      var request, waitForCheckoutSettings, bookingCode, result, hostName;
      return regenerator_default().wrap(function _callee10$(_context10) {
        while (1) switch (_context10.prev = _context10.next) {
          case 0:
            request = _ref26.request, waitForCheckoutSettings = _ref26.waitForCheckoutSettings, bookingCode = _ref26.bookingCode;
            _context10.next = 3;
            return API.checkoutVoucherNumberV1Delete(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
              channelId: ChannelID
            }));
          case 3:
            result = _context10.sent;
            if (!waitForCheckoutSettings) {
              _context10.next = 10;
              break;
            }
            hostName = window.location.protocol + "//" + window.location.hostname;
            _context10.next = 8;
            return queryClient.prefetchQuery(["checkoutSettings", bookingCode], function () {
              return API.checkoutV1(undefined, ChannelID);
            });
          case 8:
            _context10.next = 10;
            return queryClient.prefetchQuery("online_payment_methods", function () {
              return API.basketsOnlinePaymentMethodsV1(hostName, ChannelID);
            });
          case 10:
            return _context10.abrupt("return", result);
          case 11:
          case "end":
            return _context10.stop();
        }
      }, _callee10);
    }));
    return function removeVoucherInner(_x35) {
      return _ref27.apply(this, arguments);
    };
  }();
  var removeVoucher = (0,es.useMutation)(function (_ref28) {
    var request = _ref28.request,
      waitForCheckoutSettings = _ref28.waitForCheckoutSettings,
      bookingCode = _ref28.bookingCode;
    return removeVoucherInner({
      request: request,
      waitForCheckoutSettings: waitForCheckoutSettings,
      bookingCode: bookingCode
    });
  }, {
    mutationKey: "redeem_voucher",
    onSuccess: function onSuccess(res, variables) {
      if (res.success) {
        queryClient.invalidateQueries("basket");
        if (!variables.waitForCheckoutSettings) {
          queryClient.invalidateQueries(["checkoutSettings", variables.bookingCode]);
          queryClient.invalidateQueries("online_payment_methods");
        }
      }
    }
  });
  var commitBasket = (0,es.useMutation)(function (request) {
    return API.bookingsCommitV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
      channelId: ChannelID
    }));
  }, {
    mutationKey: "committing_basket"
  });
  var validateNewMember = (0,es.useMutation)(function (request) {
    return API.checkoutValidateNewMemberV1(useBasketOperations_objectSpread(useBasketOperations_objectSpread({}, request), {}, {
      channelId: ChannelID
    }));
  }, {
    mutationKey: "validating_new_member"
  });
  var updateCCInfo = /*#__PURE__*/function () {
    var _ref29 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee11(props) {
      var response;
      return regenerator_default().wrap(function _callee11$(_context11) {
        while (1) switch (_context11.prev = _context11.next) {
          case 0:
            _context11.next = 2;
            return API.bookingsSetCreditcardInfoV1(props.cardToken, props.cardType, props.cardNumber, props.expiration, props.cardHolderName, props.basketId, props.voucherBasketInfoId, props.bookingRequestId);
          case 2:
            response = _context11.sent;
            _context11.next = 5;
            return queryClient.prefetchQuery(["basket", channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId], function () {
              return API.basketsBasketV1(false, ChannelID);
            });
          case 5:
            return _context11.abrupt("return", response);
          case 6:
          case "end":
            return _context11.stop();
        }
      }, _callee11);
    }));
    return function updateCCInfo(_x36) {
      return _ref29.apply(this, arguments);
    };
  }();
  var setCreditcardInfo = (0,es.useMutation)(function (props) {
    return updateCCInfo(props);
  }, {
    mutationKey: "set_cc_info"
  });
  var addSignupDiscountInner = /*#__PURE__*/function () {
    var _ref30 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee12(rq) {
      var result;
      return regenerator_default().wrap(function _callee12$(_context12) {
        while (1) switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return API.basketsUpdateBasketV1({
              membershipUpdate: {
                addCustomerAuthSignupDiscount: {
                  customerAuthServiceId: rq.customerAuthServiceId
                }
              },
              bookingCode: rq.bookingCode,
              channelId: ChannelID
            });
          case 2:
            result = _context12.sent;
            if (!rq.waitForNewBasket) {
              _context12.next = 6;
              break;
            }
            _context12.next = 6;
            return queryClient.prefetchQuery(["basket", ChannelID], function () {
              return API.basketsBasketV1(undefined, ChannelID);
            });
          case 6:
            if (!rq.waitForCheckoutSettings) {
              _context12.next = 9;
              break;
            }
            _context12.next = 9;
            return queryClient.prefetchQuery(["checkoutSettings", rq.bookingCode], function () {
              return API.checkoutV1(undefined, ChannelID);
            });
          case 9:
            return _context12.abrupt("return", result);
          case 10:
          case "end":
            return _context12.stop();
        }
      }, _callee12);
    }));
    return function addSignupDiscountInner(_x37) {
      return _ref30.apply(this, arguments);
    };
  }();
  var addSignupDiscount = (0,es.useMutation)({
    mutationFn: function mutationFn(rq) {
      return addSignupDiscountInner(rq);
    },
    onSuccess: function onSuccess(r, variables) {
      if (r.success) {
        if (!variables.waitForNewBasket) {
          queryClient.invalidateQueries("basket");
        }
        if (!variables.waitForCheckoutSettings) {
          queryClient.invalidateQueries(["checkoutSettings", variables.bookingCode]);
        }
      }
    },
    mutationKey: "addSignupDiscount"
  });
  var applyMPCode = (0,es.useMutation)(["apply_mp_code"], function (rq) {
    return API.multipropertiesApplyCodesV1(rq);
  });
  return {
    removeVoucher: removeVoucher,
    addSignupDiscount: addSignupDiscount,
    setCreditcardInfo: setCreditcardInfo,
    commitBasket: commitBasket,
    applyMPCode: applyMPCode,
    /**Use this over clearBasket. This API method did not exist when clearBasket was made.  */
    clearBasketNew: clearBasketNew,
    /**Adds to basket AND waits for new basket before returning! */
    addToBasket: addToBasket,
    updateBasket: updateBasket,
    removeRoomsFromBasket: removeRoomsFromBasket,
    /**Clears basket by removing all rooms. Prefer clearBasketNew over this one. There was no endpoint to clearBasket when this was created. */
    clearBasket: clearBasket,
    removeAddonsFromBasket: removeAddonsFromBasket,
    updateAddonsInBasket: updateAddonsInBasket,
    updateBasketMulti: updateBasketMulti,
    updateTimeslotAddonsInBasket: updateTimeslotAddonsInBasket,
    updateTimeslotAddonMessageToRestaurant: updateTimeslotAddonMessageToRestaurant,
    redeemVoucher: redeemVoucher,
    validateNewMember: validateNewMember
  };
};
var getCancellationInsurances = function getCancellationInsurances(queryClient, langId, channelId, API) {
  var previousCancellationInsuranceUpsell = queryClient.getQueryData("cancellation_insurance_upsell");
  if (previousCancellationInsuranceUpsell) {
    return previousCancellationInsuranceUpsell;
  }
  return API.basketsCancellationInsuranceV1Get(langId, channelId);
};
var getCheckoutSettings = function getCheckoutSettings(queryClient, channelId, API, bookingCode) {
  var previousCheckoutSettings = queryClient.getQueryData(["checkoutSettings", bookingCode]);
  if (previousCheckoutSettings) {
    return previousCheckoutSettings;
  }
  return API.checkoutV1(undefined, channelId);
};
var goToCheckout = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(history, jwt, channelId, registerPixelEvent, isReactCheckoutEnabled, API, queryClient, langId) {
    var basket, _basket$booking, _basket$booking2, _checkoutSettings$pay, _checkoutSettings$pay2, _checkoutSettings$pay3, _yield$Promise$all, _yield$Promise$all2, cancellationInsuranceUpsell, checkoutSettings, enableOnlinePaymentMethods, hostName, onlinePaymentMethods, sessionId, url;
    return _regeneratorRuntime.wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          registerPixelEvent(PixelEvents.INITIATE_CHECKOUT);
          basket = queryClient.getQueryData(["basket", channelId]);
          if (!isReactCheckoutEnabled) {
            _context13.next = 21;
            break;
          }
          _context13.next = 5;
          return Promise.all([getCancellationInsurances(queryClient, langId, channelId, API), getCheckoutSettings(queryClient, channelId, API, basket === null || basket === void 0 ? void 0 : (_basket$booking = basket.booking) === null || _basket$booking === void 0 ? void 0 : _basket$booking.bookingCode)]);
        case 5:
          _yield$Promise$all = _context13.sent;
          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);
          cancellationInsuranceUpsell = _yield$Promise$all2[0];
          checkoutSettings = _yield$Promise$all2[1];
          queryClient.setQueryData(["checkoutSettings", basket === null || basket === void 0 ? void 0 : (_basket$booking2 = basket.booking) === null || _basket$booking2 === void 0 ? void 0 : _basket$booking2.bookingCode], checkoutSettings);
          queryClient.setQueryData("cancellation_insurance_upsell", cancellationInsuranceUpsell);
          enableOnlinePaymentMethods = (checkoutSettings === null || checkoutSettings === void 0 ? void 0 : (_checkoutSettings$pay = checkoutSettings.paymentConfig) === null || _checkoutSettings$pay === void 0 ? void 0 : _checkoutSettings$pay.paymentPolicyOption) === PaymentPolicyOption.PrePaidAtTheTimeOfTheBooking || (checkoutSettings === null || checkoutSettings === void 0 ? void 0 : (_checkoutSettings$pay2 = checkoutSettings.paymentConfig) === null || _checkoutSettings$pay2 === void 0 ? void 0 : _checkoutSettings$pay2.paymentPolicyOption) === PaymentPolicyOption.GuaranteeRequired && Boolean(checkoutSettings === null || checkoutSettings === void 0 ? void 0 : (_checkoutSettings$pay3 = checkoutSettings.paymentConfig) === null || _checkoutSettings$pay3 === void 0 ? void 0 : _checkoutSettings$pay3.enablePaymentMethodUpgrade);
          if (!(enableOnlinePaymentMethods && !Boolean(queryClient.getQueryData("online_payment_methods")))) {
            _context13.next = 18;
            break;
          }
          hostName = window.location.protocol + "//" + window.location.hostname;
          _context13.next = 16;
          return API.basketsOnlinePaymentMethodsV1(hostName, channelId);
        case 16:
          onlinePaymentMethods = _context13.sent;
          queryClient.setQueryData("online_payment_methods", onlinePaymentMethods);
        case 18:
          history.push("/checkout");
          _context13.next = 24;
          break;
        case 21:
          sessionId = parseJwt(jwt).SessionId;
          url = "//".concat(window.location.hostname, "/checkout?channelId=").concat(channelId, "&sessionId=").concat(sessionId);
          window.location.assign(url);
        case 24:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function goToCheckout(_x38, _x39, _x40, _x41, _x42, _x43, _x44, _x45) {
    return _ref31.apply(this, arguments);
  };
}()));
var ContinueToCheckout = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(API, ChannelID, jwt, queryClient, history, currentPath, registerPixelEvent, isReactCheckoutEnabled, langId) {
    var _basket$booking3, _basket$booking3$book, _basket$booking3$book2, _basket$booking4, _basket$booking4$book, _basket$booking4$book2, _basket$booking5, _basket$booking5$book, _availableAddons$opti, _availableAddons, _availableAddons$opti2, _availableAddons2;
    var basket, hasMandatoryTimeSlotAddons, hasMandatoryAddonPackages, queryKey, availableAddons, _basket$booking6, _basket$booking6$book, hasOptionalAddons;
    return _regeneratorRuntime.wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          basket = queryClient.getQueryData(["basket", ChannelID]);
          if (!(currentPath === "/addons/optionaladdons")) {
            _context14.next = 5;
            break;
          }
          _context14.next = 4;
          return goToCheckout(history, jwt, ChannelID, registerPixelEvent, isReactCheckoutEnabled, API, queryClient, langId);
        case 4:
          return _context14.abrupt("return");
        case 5:
          hasMandatoryTimeSlotAddons = basket === null || basket === void 0 ? void 0 : (_basket$booking3 = basket.booking) === null || _basket$booking3 === void 0 ? void 0 : (_basket$booking3$book = _basket$booking3.bookingData) === null || _basket$booking3$book === void 0 ? void 0 : (_basket$booking3$book2 = _basket$booking3$book.rooms) === null || _basket$booking3$book2 === void 0 ? void 0 : _basket$booking3$book2.some(function (x) {
            var _x$mandatoryAddOns;
            return (_x$mandatoryAddOns = x.mandatoryAddOns) === null || _x$mandatoryAddOns === void 0 ? void 0 : _x$mandatoryAddOns.some(function (y) {
              return utilities.isNotNullOrUndefined(y.timeSlotInfo);
            });
          });
          hasMandatoryAddonPackages = basket === null || basket === void 0 ? void 0 : (_basket$booking4 = basket.booking) === null || _basket$booking4 === void 0 ? void 0 : (_basket$booking4$book = _basket$booking4.bookingData) === null || _basket$booking4$book === void 0 ? void 0 : (_basket$booking4$book2 = _basket$booking4$book.rooms) === null || _basket$booking4$book2 === void 0 ? void 0 : _basket$booking4$book2.some(function (x) {
            var _x$mandatoryAddOnPack;
            return (_x$mandatoryAddOnPack = x.mandatoryAddOnPackages) === null || _x$mandatoryAddOnPack === void 0 ? void 0 : _x$mandatoryAddOnPack.some(function (y) {
              return y.dynamic;
            });
          });
          queryKey = ["available_addons", basket === null || basket === void 0 ? void 0 : (_basket$booking5 = basket.booking) === null || _basket$booking5 === void 0 ? void 0 : (_basket$booking5$book = _basket$booking5.bookingData) === null || _basket$booking5$book === void 0 ? void 0 : _basket$booking5$book.bookingCode];
          availableAddons = queryClient.getQueryData(queryKey);
          if (availableAddons) {
            _context14.next = 14;
            break;
          }
          _context14.next = 12;
          return API.bookingsAvailableAddonsV1(basket === null || basket === void 0 ? void 0 : (_basket$booking6 = basket.booking) === null || _basket$booking6 === void 0 ? void 0 : (_basket$booking6$book = _basket$booking6.bookingData) === null || _basket$booking6$book === void 0 ? void 0 : _basket$booking6$book.bookingCode, true, true, undefined, ChannelID);
        case 12:
          availableAddons = _context14.sent;
          queryClient.setQueryData(queryKey, availableAddons);
        case 14:
          hasOptionalAddons = ((_availableAddons$opti = (_availableAddons = availableAddons) === null || _availableAddons === void 0 ? void 0 : _availableAddons.optionalAddons) !== null && _availableAddons$opti !== void 0 ? _availableAddons$opti : []).length > 0 || ((_availableAddons$opti2 = (_availableAddons2 = availableAddons) === null || _availableAddons2 === void 0 ? void 0 : _availableAddons2.optionalAddOnPackages) !== null && _availableAddons$opti2 !== void 0 ? _availableAddons$opti2 : []).length > 0;
          if (!(currentPath === "/addons/mandatorydynamicaddons")) {
            _context14.next = 24;
            break;
          }
          if (!hasOptionalAddons) {
            _context14.next = 20;
            break;
          }
          history.push("/addOns/optionalAddOns");
          _context14.next = 22;
          break;
        case 20:
          _context14.next = 22;
          return goToCheckout(history, jwt, ChannelID, registerPixelEvent, isReactCheckoutEnabled, API, queryClient, langId);
        case 22:
          _context14.next = 51;
          break;
        case 24:
          if (!(currentPath === "/addons/mandatoryaddonswithtimeslots")) {
            _context14.next = 37;
            break;
          }
          if (!hasMandatoryAddonPackages) {
            _context14.next = 29;
            break;
          }
          history.push("/addOns/mandatoryDynamicAddOns");
          _context14.next = 35;
          break;
        case 29:
          if (!hasOptionalAddons) {
            _context14.next = 33;
            break;
          }
          history.push("/addOns/optionalAddOns");
          _context14.next = 35;
          break;
        case 33:
          _context14.next = 35;
          return goToCheckout(history, jwt, ChannelID, registerPixelEvent, isReactCheckoutEnabled, API, queryClient, langId);
        case 35:
          _context14.next = 51;
          break;
        case 37:
          if (!hasMandatoryTimeSlotAddons) {
            _context14.next = 41;
            break;
          }
          history.push("/addOns/mandatoryAddOnsWithTimeSlots");
          _context14.next = 51;
          break;
        case 41:
          if (!hasMandatoryAddonPackages) {
            _context14.next = 45;
            break;
          }
          history.push("/addOns/mandatoryDynamicAddOns");
          _context14.next = 51;
          break;
        case 45:
          if (!hasOptionalAddons) {
            _context14.next = 49;
            break;
          }
          history.push("/addOns/optionalAddOns");
          _context14.next = 51;
          break;
        case 49:
          _context14.next = 51;
          return goToCheckout(history, jwt, ChannelID, registerPixelEvent, isReactCheckoutEnabled, API, queryClient, langId);
        case 51:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return function ContinueToCheckout(_x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54) {
    return _ref32.apply(this, arguments);
  };
}()));
;// CONCATENATED MODULE: ./src/hooks/useSearch.ts



function useSearch_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function useSearch_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSearch_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSearch_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }














var useSearch = function useSearch() {
  var queryClient = (0,es.useQueryClient)();
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var searchOptions = Recoil_index_20(searchOptionsState);
  var _useAPI = useAPI(),
    _useAPI2 = slicedToArray_slicedToArray(_useAPI, 5),
    _ = _useAPI2[0],
    ChannelId = _useAPI2[1],
    langId = _useAPI2[4];
  var API = Recoil_index_20(APIObject);
  var setSearchOptionsRoomConfig = Recoil_index_24(searchOptionsRoomConfigsState);
  var path = useLocation();
  var setCachedSearchResult = Recoil_index_24(cachedSearchResultState);
  var history = useHistory();
  var setSelectedObject = Recoil_index_24(selectedObjectState);
  var setShowYouSearchedFor = Recoil_index_24(showYouSearchedForState);
  var setSelectedStartDate = Recoil_index_24(selectedCalendarStartDate);
  var setSelectedEndDate = Recoil_index_24(selectedCalendarEndDate);
  var setExpandedRoomsInDrawer = Recoil_index_24(expandedRoomIndexesDrawerState);
  var setExpandedRoomsInSummary = Recoil_index_24(expandedRoomIndexesSummaryState);
  var _useBasket = useBasket(),
    basket = _useBasket.data;
  var basketOps = useBasketOperations();
  var clearSearch = react.useCallback( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee() {
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          setCachedSearchResult(undefined);
          setSelectedStartDate(undefined);
          setSelectedEndDate(undefined);
          setSelectedObject(undefined);
          setShowYouSearchedFor(false);
          setExpandedRoomsInDrawer([1]);
          setExpandedRoomsInSummary([1]);
          if (!(basket !== null && basket !== void 0 && basket.booking)) {
            _context.next = 10;
            break;
          }
          _context.next = 10;
          return basketOps.clearBasket.mutateAsync(basket.booking);
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), [basket]);
  var makeSearch = react.useCallback( /*#__PURE__*/function () {
    var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regenerator_default().mark(function _callee2(params) {
      var _params$newSearchOpti, _params$newSearchOpti2, _params$newSearchOpti3, _params$newSearchOpti4, _options$roomConfigs, _options$roomConfigs$, _options$roomConfigs2;
      var options, newConfigs, modifiedRoomOptions, result, _path$pathname, _path$pathname2, _result$roomsResult, _result$roomsResult2;
      return regenerator_default().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            options = params !== null && params !== void 0 && params.newSearchOptions ? useSearch_objectSpread(useSearch_objectSpread({}, params.newSearchOptions), {}, {
              channelId: ChannelId,
              filter: useSearch_objectSpread(useSearch_objectSpread({}, params.newSearchOptions.filter), {}, {
                includeSearchResultAlerts: true
              }),
              languageId: +langId,
              startDate: params.preventUTCDateTransform ? (_params$newSearchOpti = params.newSearchOptions) === null || _params$newSearchOpti === void 0 ? void 0 : _params$newSearchOpti.startDate : toUTCDate((_params$newSearchOpti2 = params.newSearchOptions) === null || _params$newSearchOpti2 === void 0 ? void 0 : _params$newSearchOpti2.startDate),
              endDate: params.preventUTCDateTransform ? (_params$newSearchOpti3 = params.newSearchOptions) === null || _params$newSearchOpti3 === void 0 ? void 0 : _params$newSearchOpti3.endDate : toUTCDate((_params$newSearchOpti4 = params.newSearchOptions) === null || _params$newSearchOpti4 === void 0 ? void 0 : _params$newSearchOpti4.endDate)
            }) : useSearch_objectSpread(useSearch_objectSpread({}, searchOptions), {}, {
              channelId: ChannelId,
              filter: useSearch_objectSpread(useSearch_objectSpread({}, searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.filter), {}, {
                includeSearchResultAlerts: true
              }),
              languageId: +langId,
              startDate: params !== null && params !== void 0 && params.preventUTCDateTransform ? searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.startDate : toUTCDate(searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.startDate),
              endDate: params !== null && params !== void 0 && params.preventUTCDateTransform ? searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.endDate : toUTCDate(searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.endDate)
            });
            newConfigs = [];
            (_options$roomConfigs = options.roomConfigs) === null || _options$roomConfigs === void 0 ? void 0 : _options$roomConfigs.forEach(function (room) {
              var cfg = useSearch_objectSpread({}, room);
              if (cfg.sharerAge != undefined) {
                if (!(params !== null && params !== void 0 && params.dontRemoveChildIfSharerIsSet)) {
                  var _cfg$childAges$findIn, _cfg$childAges;
                  //If sharer is used, we have to remove the youngest child in the request.
                  //This param is used when we make a search from usercontext on load, since then this has already been done.
                  var childToRemove = (_cfg$childAges$findIn = (_cfg$childAges = cfg.childAges) === null || _cfg$childAges === void 0 ? void 0 : _cfg$childAges.findIndex(function (x) {
                    var _cfg$sharerAge;
                    return x <= ((_cfg$sharerAge = cfg.sharerAge) !== null && _cfg$sharerAge !== void 0 ? _cfg$sharerAge : 0);
                  })) !== null && _cfg$childAges$findIn !== void 0 ? _cfg$childAges$findIn : -1;
                  if (childToRemove !== -1) {
                    var _cfg$childAges2;
                    var q = (_cfg$childAges2 = cfg.childAges) === null || _cfg$childAges2 === void 0 ? void 0 : _cfg$childAges2.slice();
                    q.splice(childToRemove, 1);
                    cfg.childAges = q;
                  }
                }
              }
              newConfigs.push(cfg);
            });
            options.roomConfigs = newConfigs;

            //Converting the used searchoptions back to values we can use for the roomconfig selector.
            //Namely, if sharer was used, we have to add a child back to the object.
            modifiedRoomOptions = (_options$roomConfigs$ = (_options$roomConfigs2 = options.roomConfigs) === null || _options$roomConfigs2 === void 0 ? void 0 : _options$roomConfigs2.map(function (config) {
              var _config$childAges$map, _config$childAges, _config$adults;
              var children = (_config$childAges$map = (_config$childAges = config.childAges) === null || _config$childAges === void 0 ? void 0 : _config$childAges.map(function (age) {
                return {
                  Id: GenerateID(),
                  Age: "".concat(age)
                };
              })) !== null && _config$childAges$map !== void 0 ? _config$childAges$map : [];
              if (config.sharerAge) {
                children.push({
                  Id: GenerateID(),
                  Age: "".concat(config.sharerAge)
                });
              }
              return {
                NrOfAdults: (_config$adults = config.adults) !== null && _config$adults !== void 0 ? _config$adults : 0,
                Children: children,
                Id: GenerateID(),
                SharerAge: config.sharerAge
              };
            })) !== null && _options$roomConfigs$ !== void 0 ? _options$roomConfigs$ : [];
            setSearchOptionsRoomConfig(modifiedRoomOptions);
            _context2.next = 8;
            return queryClient.fetchQuery("accommodationsearch", function () {
              return API.accommodationSearchV1(options);
            });
          case 8:
            result = _context2.sent;
            setCachedSearchResult(result);
            if (!(params !== null && params !== void 0 && params.preventNoResultRedirect) && (channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.noAvailabilityOption) !== NoAvailabilityOption.None && [NoAvailabilityOption.Exclude, NoAvailabilityOption.Include].includes(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.noAvailabilityOption)) {
              if ((_path$pathname = path.pathname) !== null && _path$pathname !== void 0 && _path$pathname.toLowerCase().includes("package")) {
                if (!(result !== null && result !== void 0 && (_result$roomsResult = result.roomsResult) !== null && _result$roomsResult !== void 0 && _result$roomsResult.some(function (x) {
                  var _x$nrAvailable;
                  return x.isPackage && ((_x$nrAvailable = x.nrAvailable) !== null && _x$nrAvailable !== void 0 ? _x$nrAvailable : 0) > 0;
                }))) {
                  history.push("/no-availability/package");
                }
              } else if ((_path$pathname2 = path.pathname) !== null && _path$pathname2 !== void 0 && _path$pathname2.toLowerCase().includes("accommodation")) {
                if (result !== null && result !== void 0 && (_result$roomsResult2 = result.roomsResult) !== null && _result$roomsResult2 !== void 0 && _result$roomsResult2.every(function (x) {
                  return x.nrAvailable === 0;
                }) && [NoAvailabilityOption.Exclude, NoAvailabilityOption.Include].includes(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.noAvailabilityOption)) {
                  history.push("/no-availability/accommodation");
                }
              }
            }
          case 11:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }(), [API, queryClient, searchOptions, setCachedSearchResult, setSearchOptionsRoomConfig]);
  return {
    makeSearch: makeSearch,
    clearSearch: clearSearch
  };
};
;// CONCATENATED MODULE: ./node_modules/react-toastify/node_modules/clsx/dist/clsx.m.js
function clsx_m_r(e) {
  var t,
    f,
    n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;else if ("object" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = clsx_m_r(e[t])) && (n && (n += " "), n += f);else for (t in e) e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length;) (e = arguments[f++]) && (t = clsx_m_r(e)) && (n && (n += " "), n += t);
  return n;
}
/* harmony default export */ var dist_clsx_m = (clsx);
;// CONCATENATED MODULE: ./node_modules/react-toastify/dist/react-toastify.esm.js



function react_toastify_esm_extends() {
  react_toastify_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return react_toastify_esm_extends.apply(this, arguments);
}
function react_toastify_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function isNum(v) {
  return typeof v === 'number' && !isNaN(v);
}
function isBool(v) {
  return typeof v === 'boolean';
}
function isStr(v) {
  return typeof v === 'string';
}
function isFn(v) {
  return typeof v === 'function';
}
function parseClassName(v) {
  return isStr(v) || isFn(v) ? v : null;
}
function isToastIdValid(toastId) {
  return toastId === 0 || toastId;
}
function getAutoCloseDelay(toastAutoClose, containerAutoClose) {
  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;
}
var canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function canBeRendered(content) {
  return (0,react_production_min.isValidElement)(content) || isStr(content) || isFn(content) || isNum(content);
}
var POSITION = {
  TOP_LEFT: 'top-left',
  TOP_RIGHT: 'top-right',
  TOP_CENTER: 'top-center',
  BOTTOM_LEFT: 'bottom-left',
  BOTTOM_RIGHT: 'bottom-right',
  BOTTOM_CENTER: 'bottom-center'
};
var TYPE = {
  INFO: 'info',
  SUCCESS: 'success',
  WARNING: 'warning',
  ERROR: 'error',
  DEFAULT: 'default',
  DARK: 'dark'
};

/**
 * Used to collapse toast after exit animation
 */
function collapseToast(node, done, duration
/* COLLAPSE_DURATION */) {
  if (duration === void 0) {
    duration = 300;
  }
  var height = node.scrollHeight;
  var style = node.style;
  requestAnimationFrame(function () {
    style.minHeight = 'initial';
    style.height = height + 'px';
    style.transition = "all " + duration + "ms";
    requestAnimationFrame(function () {
      style.height = '0';
      style.padding = '0';
      style.margin = '0';
      setTimeout(done, duration);
    });
  });
}

/**
 * Css animation that just work.
 * You could use animate.css for instance
 *
 *
 * ```
 * cssTransition({
 *   enter: "animate__animated animate__bounceIn",
 *   exit: "animate__animated animate__bounceOut"
 * })
 * ```
 *
 */

function cssTransition(_ref) {
  var enter = _ref.enter,
    exit = _ref.exit,
    _ref$appendPosition = _ref.appendPosition,
    appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,
    _ref$collapse = _ref.collapse,
    collapse = _ref$collapse === void 0 ? true : _ref$collapse,
    _ref$collapseDuration = _ref.collapseDuration,
    collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;
  return function ToastTransition(_ref2) {
    var children = _ref2.children,
      position = _ref2.position,
      preventExitTransition = _ref2.preventExitTransition,
      done = _ref2.done,
      nodeRef = _ref2.nodeRef,
      isIn = _ref2.isIn;
    var enterClassName = appendPosition ? enter + "--" + position : enter;
    var exitClassName = appendPosition ? exit + "--" + position : exit;
    var baseClassName = (0,react_production_min.useRef)();
    var animationStep = (0,react_production_min.useRef)(0
    /* Enter */);

    (0,react_production_min.useLayoutEffect)(function () {
      onEnter();
    }, []);
    (0,react_production_min.useEffect)(function () {
      if (!isIn) preventExitTransition ? onExited() : onExit();
    }, [isIn]);
    function onEnter() {
      var node = nodeRef.current;
      baseClassName.current = node.className;
      node.className += " " + enterClassName;
      node.addEventListener('animationend', onEntered);
    }
    function onEntered() {
      var node = nodeRef.current;
      node.removeEventListener('animationend', onEntered);
      if (animationStep.current === 0
      /* Enter */) {
        node.className = baseClassName.current;
      }
    }
    function onExit() {
      animationStep.current = 1
      /* Exit */;

      var node = nodeRef.current;
      node.className += " " + exitClassName;
      node.addEventListener('animationend', onExited);
    }
    function onExited() {
      var node = nodeRef.current;
      node.removeEventListener('animationend', onExited);
      collapse ? collapseToast(node, done, collapseDuration) : done();
    }
    return react.createElement(react.Fragment, null, children);
  };
}
var eventManager = {
  list: /*#__PURE__*/new Map(),
  emitQueue: /*#__PURE__*/new Map(),
  on: function on(event, callback) {
    this.list.has(event) || this.list.set(event, []);
    this.list.get(event).push(callback);
    return this;
  },
  off: function off(event, callback) {
    if (callback) {
      var cb = this.list.get(event).filter(function (cb) {
        return cb !== callback;
      });
      this.list.set(event, cb);
      return this;
    }
    this.list["delete"](event);
    return this;
  },
  cancelEmit: function cancelEmit(event) {
    var timers = this.emitQueue.get(event);
    if (timers) {
      timers.forEach(clearTimeout);
      this.emitQueue["delete"](event);
    }
    return this;
  },
  /**
   * Enqueue the event at the end of the call stack
   * Doing so let the user call toast as follow:
   * toast('1')
   * toast('2')
   * toast('3')
   * Without setTimemout the code above will not work
   */
  emit: function emit(event) {
    var _this = this;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    this.list.has(event) && this.list.get(event).forEach(function (callback) {
      var timer = setTimeout(function () {
        // @ts-ignore
        callback.apply(void 0, args);
      }, 0);
      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);
      _this.emitQueue.get(event).push(timer);
    });
  }
};

/**
 * `useKeeper` is a helper around `useRef`.
 *
 * You don't need to access the `.current`property to get the value
 * If refresh is set to true. The ref will be updated every render
 */

function useKeeper(arg, refresh) {
  if (refresh === void 0) {
    refresh = false;
  }
  var ref = (0,react_production_min.useRef)(arg);
  (0,react_production_min.useEffect)(function () {
    if (refresh) ref.current = arg;
  });
  return ref.current;
}
function reducer(state, action) {
  switch (action.type) {
    case 0
    /* ADD */:
      return [].concat(state, [action.toastId]).filter(function (id) {
        return id !== action.staleId;
      });
    case 1
    /* REMOVE */:
      return isToastIdValid(action.toastId) ? state.filter(function (id) {
        return id !== action.toastId;
      }) : [];
  }
}
function useToastContainer(props) {
  var _useReducer = (0,react_production_min.useReducer)(function (x) {
      return x + 1;
    }, 0),
    forceUpdate = _useReducer[1];
  var _useReducer2 = (0,react_production_min.useReducer)(reducer, []),
    toast = _useReducer2[0],
    dispatch = _useReducer2[1];
  var containerRef = (0,react_production_min.useRef)(null);
  var toastCount = useKeeper(0);
  var queue = useKeeper([]);
  var collection = useKeeper({});
  var instance = useKeeper({
    toastKey: 1,
    displayedToast: 0,
    props: props,
    containerId: null,
    isToastActive: isToastActive,
    getToast: function getToast(id) {
      return collection[id] || null;
    }
  });
  (0,react_production_min.useEffect)(function () {
    instance.containerId = props.containerId;
    eventManager.cancelEmit(3
    /* WillUnmount */).on(0
    /* Show */, buildToast).on(1
    /* Clear */, function (toastId) {
      return containerRef.current && removeToast(toastId);
    }).on(5
    /* ClearWaitingQueue */, clearWaitingQueue).emit(2
    /* DidMount */, instance);
    return function () {
      return eventManager.emit(3
      /* WillUnmount */, instance);
    };
  }, []);
  (0,react_production_min.useEffect)(function () {
    instance.isToastActive = isToastActive;
    instance.displayedToast = toast.length;
    eventManager.emit(4
    /* Change */, toast.length, props.containerId);
  }, [toast]);
  (0,react_production_min.useEffect)(function () {
    instance.props = props;
  });
  function isToastActive(id) {
    return toast.indexOf(id) !== -1;
  }
  function clearWaitingQueue(_ref) {
    var containerId = _ref.containerId;
    var limit = instance.props.limit;
    if (limit && (!containerId || instance.containerId === containerId)) {
      toastCount -= queue.length;
      queue = [];
    }
  }
  function removeToast(toastId) {
    dispatch({
      type: 1
      /* REMOVE */,

      toastId: toastId
    });
  }
  function dequeueToast() {
    var _queue$shift = queue.shift(),
      toastContent = _queue$shift.toastContent,
      toastProps = _queue$shift.toastProps,
      staleId = _queue$shift.staleId;
    appendToast(toastContent, toastProps, staleId);
  }
  /**
   * check if a container is attached to the dom
   * check for multi-container, build only if associated
   * check for duplicate toastId if no update
   */

  function isNotValid(_ref2) {
    var containerId = _ref2.containerId,
      toastId = _ref2.toastId,
      updateId = _ref2.updateId;
    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || collection[toastId] && updateId == null ? true : false;
  } // this function and all the function called inside needs to rely on ref(`useKeeper`)

  function buildToast(content, _ref3) {
    var delay = _ref3.delay,
      staleId = _ref3.staleId,
      options = react_toastify_esm_objectWithoutPropertiesLoose(_ref3, ["delay", "staleId"]);
    if (!canBeRendered(content) || isNotValid(options)) return;
    var toastId = options.toastId,
      updateId = options.updateId;
    var props = instance.props;
    var closeToast = function closeToast() {
      return removeToast(toastId);
    };
    var isNotAnUpdate = options.updateId == null;
    if (isNotAnUpdate) toastCount++;
    var toastProps = {
      toastId: toastId,
      updateId: updateId,
      isIn: false,
      key: options.key || instance.toastKey++,
      type: options.type,
      closeToast: closeToast,
      closeButton: options.closeButton,
      rtl: props.rtl,
      position: options.position || props.position,
      transition: options.transition || props.transition,
      className: parseClassName(options.className || props.toastClassName),
      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),
      style: options.style || props.toastStyle,
      bodyStyle: options.bodyStyle || props.bodyStyle,
      onClick: options.onClick || props.onClick,
      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,
      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,
      draggable: isBool(options.draggable) ? options.draggable : props.draggable,
      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,
      draggableDirection: options.draggableDirection || props.draggableDirection,
      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,
      progressClassName: parseClassName(options.progressClassName || props.progressClassName),
      progressStyle: options.progressStyle || props.progressStyle,
      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),
      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,
      progress: options.progress,
      role: isStr(options.role) ? options.role : props.role,
      deleteToast: function deleteToast() {
        removeFromCollection(toastId);
      }
    };
    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;
    if (isFn(options.onClose)) toastProps.onClose = options.onClose; //  tweak for vertical dragging

    if (toastProps.draggableDirection === "y"
    /* Y */ && toastProps.draggablePercent === 80
    /* DRAGGABLE_PERCENT */) {
      toastProps.draggablePercent *= 1.5;
    }
    var closeButton = props.closeButton;
    if (options.closeButton === false || canBeRendered(options.closeButton)) {
      closeButton = options.closeButton;
    } else if (options.closeButton === true) {
      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;
    }
    toastProps.closeButton = closeButton;
    var toastContent = content;
    if ((0,react_production_min.isValidElement)(content) && !isStr(content.type)) {
      toastContent = (0,react_production_min.cloneElement)(content, {
        closeToast: closeToast,
        toastProps: toastProps
      });
    } else if (isFn(content)) {
      toastContent = content({
        closeToast: closeToast,
        toastProps: toastProps
      });
    } // not handling limit + delay by design. Waiting for user feedback first

    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {
      queue.push({
        toastContent: toastContent,
        toastProps: toastProps,
        staleId: staleId
      });
    } else if (isNum(delay) && delay > 0) {
      setTimeout(function () {
        appendToast(toastContent, toastProps, staleId);
      }, delay);
    } else {
      appendToast(toastContent, toastProps, staleId);
    }
  }
  function appendToast(content, toastProps, staleId) {
    var toastId = toastProps.toastId;
    if (staleId) delete collection[staleId];
    collection[toastId] = {
      content: content,
      props: toastProps
    };
    dispatch({
      type: 0
      /* ADD */,

      toastId: toastId,
      staleId: staleId
    });
  }
  function removeFromCollection(toastId) {
    delete collection[toastId];
    var queueLen = queue.length;
    toastCount = isToastIdValid(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;
    if (toastCount < 0) toastCount = 0;
    if (queueLen > 0) {
      var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;
      if (queueLen === 1 || freeSlot === 1) {
        instance.displayedToast++;
        dequeueToast();
      } else {
        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;
        instance.displayedToast = toDequeue;
        for (var i = 0; i < toDequeue; i++) {
          dequeueToast();
        }
      }
    } else {
      forceUpdate();
    }
  }
  function getToastToRender(cb) {
    var toastToRender = {};
    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);
    for (var i = 0; i < toastList.length; i++) {
      var _toast = collection[toastList[i]];
      var position = _toast.props.position;
      toastToRender[position] || (toastToRender[position] = []);
      toastToRender[position].push(_toast);
    }
    return Object.keys(toastToRender).map(function (p) {
      return cb(p, toastToRender[p]);
    });
  }
  return {
    getToastToRender: getToastToRender,
    collection: collection,
    containerRef: containerRef,
    isToastActive: isToastActive
  };
}
function getX(e) {
  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;
}
function getY(e) {
  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;
}
function useToast(props) {
  var _useState = (0,react_production_min.useState)(true),
    isRunning = _useState[0],
    setIsRunning = _useState[1];
  var _useState2 = (0,react_production_min.useState)(false),
    preventExitTransition = _useState2[0],
    setPreventExitTransition = _useState2[1];
  var toastRef = (0,react_production_min.useRef)(null);
  var drag = useKeeper({
    start: 0,
    x: 0,
    y: 0,
    delta: 0,
    removalDistance: 0,
    canCloseOnClick: true,
    canDrag: false,
    boundingRect: null
  });
  var syncProps = useKeeper(props, true);
  var autoClose = props.autoClose,
    pauseOnHover = props.pauseOnHover,
    closeToast = props.closeToast,
    onClick = props.onClick,
    closeOnClick = props.closeOnClick;
  (0,react_production_min.useEffect)(function () {
    if (isFn(props.onOpen)) props.onOpen((0,react_production_min.isValidElement)(props.children) && props.children.props);
    return function () {
      if (isFn(syncProps.onClose)) syncProps.onClose((0,react_production_min.isValidElement)(syncProps.children) && syncProps.children.props);
    };
  }, []);
  (0,react_production_min.useEffect)(function () {
    props.draggable && bindDragEvents();
    return function () {
      props.draggable && unbindDragEvents();
    };
  }, [props.draggable]);
  (0,react_production_min.useEffect)(function () {
    props.pauseOnFocusLoss && bindFocusEvents();
    return function () {
      props.pauseOnFocusLoss && unbindFocusEvents();
    };
  }, [props.pauseOnFocusLoss]);
  function onDragStart(e) {
    if (props.draggable) {
      var toast = toastRef.current;
      drag.canCloseOnClick = true;
      drag.canDrag = true;
      drag.boundingRect = toast.getBoundingClientRect();
      toast.style.transition = '';
      drag.x = getX(e.nativeEvent);
      drag.y = getY(e.nativeEvent);
      if (props.draggableDirection === "x"
      /* X */) {
        drag.start = drag.x;
        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);
      } else {
        drag.start = drag.y;
        drag.removalDistance = toast.offsetHeight * (props.draggablePercent / 100);
      }
    }
  }
  function onDragTransitionEnd() {
    if (drag.boundingRect) {
      var _drag$boundingRect = drag.boundingRect,
        top = _drag$boundingRect.top,
        bottom = _drag$boundingRect.bottom,
        left = _drag$boundingRect.left,
        right = _drag$boundingRect.right;
      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {
        pauseToast();
      } else {
        playToast();
      }
    }
  }
  function playToast() {
    setIsRunning(true);
  }
  function pauseToast() {
    setIsRunning(false);
  }
  function bindFocusEvents() {
    if (!document.hasFocus()) pauseToast();
    window.addEventListener('focus', playToast);
    window.addEventListener('blur', pauseToast);
  }
  function unbindFocusEvents() {
    window.removeEventListener('focus', playToast);
    window.removeEventListener('blur', pauseToast);
  }
  function bindDragEvents() {
    document.addEventListener('mousemove', onDragMove);
    document.addEventListener('mouseup', onDragEnd);
    document.addEventListener('touchmove', onDragMove);
    document.addEventListener('touchend', onDragEnd);
  }
  function unbindDragEvents() {
    document.removeEventListener('mousemove', onDragMove);
    document.removeEventListener('mouseup', onDragEnd);
    document.removeEventListener('touchmove', onDragMove);
    document.removeEventListener('touchend', onDragEnd);
  }
  function onDragMove(e) {
    if (drag.canDrag) {
      e.preventDefault();
      var toast = toastRef.current;
      if (isRunning) pauseToast();
      drag.x = getX(e);
      drag.y = getY(e);
      if (props.draggableDirection === "x"
      /* X */) {
        drag.delta = drag.x - drag.start;
      } else {
        drag.delta = drag.y - drag.start;
      } // prevent false positif during a toast click

      if (drag.start !== drag.x) drag.canCloseOnClick = false;
      toast.style.transform = "translate" + props.draggableDirection + "(" + drag.delta + "px)";
      toast.style.opacity = "" + (1 - Math.abs(drag.delta / drag.removalDistance));
    }
  }
  function onDragEnd() {
    var toast = toastRef.current;
    if (drag.canDrag) {
      drag.canDrag = false;
      if (Math.abs(drag.delta) > drag.removalDistance) {
        setPreventExitTransition(true);
        props.closeToast();
        return;
      }
      toast.style.transition = 'transform 0.2s, opacity 0.2s';
      toast.style.transform = "translate" + props.draggableDirection + "(0)";
      toast.style.opacity = '1';
    }
  }
  var eventHandlers = {
    onMouseDown: onDragStart,
    onTouchStart: onDragStart,
    onMouseUp: onDragTransitionEnd,
    onTouchEnd: onDragTransitionEnd
  };
  if (autoClose && pauseOnHover) {
    eventHandlers.onMouseEnter = pauseToast;
    eventHandlers.onMouseLeave = playToast;
  } // prevent toast from closing when user drags the toast

  if (closeOnClick) {
    eventHandlers.onClick = function (e) {
      onClick && onClick(e);
      drag.canCloseOnClick && closeToast();
    };
  }
  return {
    playToast: playToast,
    pauseToast: pauseToast,
    isRunning: isRunning,
    preventExitTransition: preventExitTransition,
    toastRef: toastRef,
    eventHandlers: eventHandlers
  };
}
function react_toastify_esm_CloseButton(_ref) {
  var closeToast = _ref.closeToast,
    type = _ref.type,
    _ref$ariaLabel = _ref.ariaLabel,
    ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;
  return (0,react_production_min.createElement)("button", {
    className: "Toastify"
    /* CSS_NAMESPACE */ + "__close-button " + "Toastify"
    /* CSS_NAMESPACE */ + "__close-button--" + type,
    type: "button",
    onClick: function onClick(e) {
      e.stopPropagation();
      closeToast(e);
    },
    "aria-label": ariaLabel
  }, (0,react_production_min.createElement)("svg", {
    "aria-hidden": "true",
    viewBox: "0 0 14 16"
  }, (0,react_production_min.createElement)("path", {
    fillRule: "evenodd",
    d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
  })));
}
function ProgressBar(_ref) {
  var _cx, _animationEvent;
  var delay = _ref.delay,
    isRunning = _ref.isRunning,
    closeToast = _ref.closeToast,
    type = _ref.type,
    hide = _ref.hide,
    className = _ref.className,
    userStyle = _ref.style,
    controlledProgress = _ref.controlledProgress,
    progress = _ref.progress,
    rtl = _ref.rtl,
    isIn = _ref.isIn;
  var style = react_toastify_esm_extends({}, userStyle, {
    animationDuration: delay + "ms",
    animationPlayState: isRunning ? 'running' : 'paused',
    opacity: hide ? 0 : 1
  });
  if (controlledProgress) style.transform = "scaleX(" + progress + ")";
  var defaultClassName = dist_clsx_m("Toastify"
  /* CSS_NAMESPACE */ + "__progress-bar", controlledProgress ? "Toastify"
  /* CSS_NAMESPACE */ + "__progress-bar--controlled" : "Toastify"
  /* CSS_NAMESPACE */ + "__progress-bar--animated", "Toastify"
  /* CSS_NAMESPACE */ + "__progress-bar--" + type, (_cx = {}, _cx["Toastify"
  /* CSS_NAMESPACE */ + "__progress-bar--rtl"] = rtl, _cx));
  var classNames = isFn(className) ? className({
    rtl: rtl,
    type: type,
    defaultClassName: defaultClassName
  }) : dist_clsx_m(defaultClassName, className); // 🧐 controlledProgress is derived from progress
  // so if controlledProgress is set
  // it means that this is also the case for progress

  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {
    isIn && closeToast();
  }, _animationEvent); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin

  return (0,react_production_min.createElement)("div", Object.assign({
    role: "progressbar",
    "aria-hidden": hide ? 'true' : 'false',
    "aria-label": "notification timer",
    className: classNames,
    style: style
  }, animationEvent));
}
ProgressBar.defaultProps = {
  type: TYPE.DEFAULT,
  hide: false
};
var Toast = function Toast(props) {
  var _cx;
  var _useToast = useToast(props),
    isRunning = _useToast.isRunning,
    preventExitTransition = _useToast.preventExitTransition,
    toastRef = _useToast.toastRef,
    eventHandlers = _useToast.eventHandlers;
  var closeButton = props.closeButton,
    children = props.children,
    autoClose = props.autoClose,
    onClick = props.onClick,
    type = props.type,
    hideProgressBar = props.hideProgressBar,
    closeToast = props.closeToast,
    Transition = props.transition,
    position = props.position,
    className = props.className,
    style = props.style,
    bodyClassName = props.bodyClassName,
    bodyStyle = props.bodyStyle,
    progressClassName = props.progressClassName,
    progressStyle = props.progressStyle,
    updateId = props.updateId,
    role = props.role,
    progress = props.progress,
    rtl = props.rtl,
    toastId = props.toastId,
    deleteToast = props.deleteToast,
    isIn = props.isIn;
  var defaultClassName = dist_clsx_m("Toastify"
  /* CSS_NAMESPACE */ + "__toast", "Toastify"
  /* CSS_NAMESPACE */ + "__toast--" + type, (_cx = {}, _cx["Toastify"
  /* CSS_NAMESPACE */ + "__toast--rtl"] = rtl, _cx));
  var cssClasses = isFn(className) ? className({
    rtl: rtl,
    position: position,
    type: type,
    defaultClassName: defaultClassName
  }) : dist_clsx_m(defaultClassName, className);
  var isProgressControlled = !!progress;
  function renderCloseButton(closeButton) {
    if (!closeButton) return;
    var props = {
      closeToast: closeToast,
      type: type
    };
    if (isFn(closeButton)) return closeButton(props);
    if ((0,react_production_min.isValidElement)(closeButton)) return (0,react_production_min.cloneElement)(closeButton, props);
  }
  return (0,react_production_min.createElement)(Transition, {
    isIn: isIn,
    done: deleteToast,
    position: position,
    preventExitTransition: preventExitTransition,
    nodeRef: toastRef
  }, (0,react_production_min.createElement)("div", Object.assign({
    id: toastId,
    onClick: onClick,
    className: cssClasses
  }, eventHandlers, {
    style: style,
    ref: toastRef
  }), (0,react_production_min.createElement)("div", Object.assign({}, isIn && {
    role: role
  }, {
    className: isFn(bodyClassName) ? bodyClassName({
      type: type
    }) : dist_clsx_m("Toastify"
    /* CSS_NAMESPACE */ + "__toast-body", bodyClassName),
    style: bodyStyle
  }), children), renderCloseButton(closeButton), (autoClose || isProgressControlled) && (0,react_production_min.createElement)(ProgressBar, Object.assign({}, updateId && !isProgressControlled ? {
    key: "pb-" + updateId
  } : {}, {
    rtl: rtl,
    delay: autoClose,
    isRunning: isRunning,
    isIn: isIn,
    closeToast: closeToast,
    hide: hideProgressBar,
    type: type,
    style: progressStyle,
    className: progressClassName,
    controlledProgress: isProgressControlled,
    progress: progress
  }))));
};
var Bounce = /*#__PURE__*/cssTransition({
  enter: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__bounce-enter",
  exit: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__bounce-exit",
  appendPosition: true
});
var Slide = /*#__PURE__*/cssTransition({
  enter: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__slide-enter",
  exit: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__slide-exit",
  appendPosition: true
});
var Zoom = /*#__PURE__*/cssTransition({
  enter: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__zoom-enter",
  exit: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__zoom-exit"
});
var Flip = /*#__PURE__*/cssTransition({
  enter: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__flip-enter",
  exit: "Toastify"
  /* CSS_NAMESPACE */ + "--animate " + "Toastify"
  /* CSS_NAMESPACE */ + "__flip-exit"
});
var ToastContainer = function ToastContainer(props) {
  var _useToastContainer = useToastContainer(props),
    getToastToRender = _useToastContainer.getToastToRender,
    containerRef = _useToastContainer.containerRef,
    isToastActive = _useToastContainer.isToastActive;
  var className = props.className,
    style = props.style,
    rtl = props.rtl,
    containerId = props.containerId;
  function getClassName(position) {
    var _cx;
    var defaultClassName = dist_clsx_m("Toastify"
    /* CSS_NAMESPACE */ + "__toast-container", "Toastify"
    /* CSS_NAMESPACE */ + "__toast-container--" + position, (_cx = {}, _cx["Toastify"
    /* CSS_NAMESPACE */ + "__toast-container--rtl"] = rtl, _cx));
    return isFn(className) ? className({
      position: position,
      rtl: rtl,
      defaultClassName: defaultClassName
    }) : dist_clsx_m(defaultClassName, parseClassName(className));
  }
  return (0,react_production_min.createElement)("div", {
    ref: containerRef,
    className: "Toastify"
    /* CSS_NAMESPACE */,

    id: containerId
  }, getToastToRender(function (position, toastList) {
    var containerStyle = toastList.length === 0 ? react_toastify_esm_extends({}, style, {
      pointerEvents: 'none'
    }) : react_toastify_esm_extends({}, style);
    return (0,react_production_min.createElement)("div", {
      className: getClassName(position),
      style: containerStyle,
      key: "container-" + position
    }, toastList.map(function (_ref) {
      var content = _ref.content,
        toastProps = _ref.props;
      return (0,react_production_min.createElement)(Toast, Object.assign({}, toastProps, {
        isIn: isToastActive(toastProps.toastId),
        key: "toast-" + toastProps.key,
        closeButton: toastProps.closeButton === true ? react_toastify_esm_CloseButton : toastProps.closeButton
      }), content);
    }));
  }));
};
ToastContainer.defaultProps = {
  position: POSITION.TOP_RIGHT,
  transition: Bounce,
  rtl: false,
  autoClose: 5000,
  hideProgressBar: false,
  closeButton: react_toastify_esm_CloseButton,
  pauseOnHover: true,
  pauseOnFocusLoss: true,
  closeOnClick: true,
  newestOnTop: false,
  draggable: true,
  draggablePercent: 80
  /* DRAGGABLE_PERCENT */,

  draggableDirection: "x"
  /* X */,

  role: 'alert'
};
var containers = /*#__PURE__*/new Map();
var latestInstance;
var containerDomNode;
var containerConfig;
var queue = [];
var lazy = false;
/**
 * Check whether any container is currently mounted in the DOM
 */

function isAnyContainerMounted() {
  return containers.size > 0;
}
/**
 * Get the toast by id, given it's in the DOM, otherwise returns null
 */

function getToast(toastId, _ref) {
  var containerId = _ref.containerId;
  var container = containers.get(containerId || latestInstance);
  if (!container) return null;
  return container.getToast(toastId);
}
/**
 * Generate a random toastId
 */

function generateToastId() {
  return Math.random().toString(36).substr(2, 9);
}
/**
 * Generate a toastId or use the one provided
 */

function getToastId(options) {
  if (options && (isStr(options.toastId) || isNum(options.toastId))) {
    return options.toastId;
  }
  return generateToastId();
}
/**
 * If the container is not mounted, the toast is enqueued and
 * the container lazy mounted
 */

function dispatchToast(content, options) {
  if (isAnyContainerMounted()) {
    eventManager.emit(0
    /* Show */, content, options);
  } else {
    queue.push({
      content: content,
      options: options
    });
    if (lazy && canUseDom) {
      lazy = false;
      containerDomNode = document.createElement('div');
      document.body.appendChild(containerDomNode);
      (0,react_dom_production_min.render)((0,react_production_min.createElement)(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);
    }
  }
  return options.toastId;
}
/**
 * Merge provided options with the defaults settings and generate the toastId
 */

function mergeOptions(type, options) {
  return react_toastify_esm_extends({}, options, {
    type: options && options.type || type,
    toastId: getToastId(options)
  });
}
var createToastByType = function createToastByType(type) {
  return function (content, options) {
    return dispatchToast(content, mergeOptions(type, options));
  };
};
var react_toastify_esm_toast = function toast(content, options) {
  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));
};
react_toastify_esm_toast.success = /*#__PURE__*/createToastByType(TYPE.SUCCESS);
react_toastify_esm_toast.info = /*#__PURE__*/createToastByType(TYPE.INFO);
react_toastify_esm_toast.error = /*#__PURE__*/createToastByType(TYPE.ERROR);
react_toastify_esm_toast.warning = /*#__PURE__*/createToastByType(TYPE.WARNING);
react_toastify_esm_toast.dark = /*#__PURE__*/createToastByType(TYPE.DARK);
react_toastify_esm_toast.warn = react_toastify_esm_toast.warning;
/**
 * Remove toast programmaticaly
 */

react_toastify_esm_toast.dismiss = function (id) {
  return eventManager.emit(1
  /* Clear */, id);
};
/**
 * Clear waiting queue when limit is used
 */

react_toastify_esm_toast.clearWaitingQueue = function (params) {
  if (params === void 0) {
    params = {};
  }
  return eventManager.emit(5
  /* ClearWaitingQueue */, params);
};
/**
 * return true if one container is displaying the toast
 */

react_toastify_esm_toast.isActive = function (id) {
  var isToastActive = false;
  containers.forEach(function (container) {
    if (container.isToastActive && container.isToastActive(id)) {
      isToastActive = true;
    }
  });
  return isToastActive;
};
react_toastify_esm_toast.update = function (toastId, options) {
  if (options === void 0) {
    options = {};
  }

  // if you call toast and toast.update directly nothing will be displayed
  // this is why I defered the update
  setTimeout(function () {
    var toast = getToast(toastId, options);
    if (toast) {
      var oldOptions = toast.props,
        oldContent = toast.content;
      var nextOptions = react_toastify_esm_extends({}, oldOptions, options, {
        toastId: options.toastId || toastId,
        updateId: generateToastId()
      });
      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;
      var content = nextOptions.render || oldContent;
      delete nextOptions.render;
      dispatchToast(content, nextOptions);
    }
  }, 0);
};
/**
 * Used for controlled progress bar.
 */

react_toastify_esm_toast.done = function (id) {
  react_toastify_esm_toast.update(id, {
    progress: 1
  });
};
/**
 * Track changes. The callback get the number of toast displayed
 *
 */

react_toastify_esm_toast.onChange = function (callback) {
  if (isFn(callback)) {
    eventManager.on(4
    /* Change */, callback);
  }
  return function () {
    isFn(callback) && eventManager.off(4
    /* Change */, callback);
  };
};
/**
 * Configure the ToastContainer when lazy mounted
 */

react_toastify_esm_toast.configure = function (config) {
  if (config === void 0) {
    config = {};
  }
  lazy = true;
  containerConfig = config;
};
react_toastify_esm_toast.POSITION = POSITION;
react_toastify_esm_toast.TYPE = TYPE;
/**
 * Wait until the ToastContainer is mounted to dispatch the toast
 * and attach isActive method
 */

eventManager.on(2
/* DidMount */, function (containerInstance) {
  latestInstance = containerInstance.containerId || containerInstance;
  containers.set(latestInstance, containerInstance);
  queue.forEach(function (item) {
    eventManager.emit(0
    /* Show */, item.content, item.options);
  });
  queue = [];
}).on(3
/* WillUnmount */, function (containerInstance) {
  containers["delete"](containerInstance.containerId || containerInstance);
  if (containers.size === 0) {
    eventManager.off(0
    /* Show */).off(1
    /* Clear */).off(5
    /* ClearWaitingQueue */);
  }

  if (canUseDom && containerDomNode) {
    document.body.removeChild(containerDomNode);
  }
});

;// CONCATENATED MODULE: ./src/reservation/modals/promo_code/code_inputs.tsx


function code_inputs_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function code_inputs_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? code_inputs_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : code_inputs_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }














var CodeInputs = function CodeInputs(_ref) {
  var _ref2, _searchOptions$filter, _searchOptions$filter2, _searchOptions$filter3, _ref3, _searchOptions$filter4, _searchOptions$filter5, _searchOptions$filter6, _ref4, _searchOptions$filter7, _searchOptions$filter8, _searchOptions$filter9, _searchOptions$filter16, _searchOptions$filter17, _ref5, _searchOptions$filter18, _searchOptions$filter19, _searchOptions$filter20, _searchOptions$filter21, _searchOptions$filter22, _ref6, _searchOptions$filter23, _searchOptions$filter24, _searchOptions$filter25, _searchOptions$filter26, _searchOptions$filter27, _ref7, _searchOptions$filter28, _searchOptions$filter29, _searchOptions$filter30;
  var closeLargeWidget = _ref.closeLargeWidget;
  var translations = useAccommodationTranslations();
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var _useState = (0,react_production_min.useState)({
      show: false,
      msg: ""
    }),
    _useState2 = slicedToArray_slicedToArray(_useState, 2),
    promoCodeErrorState = _useState2[0],
    setPromoCodeErrorState = _useState2[1];
  var _useState3 = (0,react_production_min.useState)({
      show: false,
      msg: ""
    }),
    _useState4 = slicedToArray_slicedToArray(_useState3, 2),
    agentCodeErrorState = _useState4[0],
    setAgentCodeErrorState = _useState4[1];
  var _useState5 = (0,react_production_min.useState)({
      show: false,
      msg: ""
    }),
    _useState6 = slicedToArray_slicedToArray(_useState5, 2),
    corpCodeErrorState = _useState6[0],
    setCorpCodeErrorState = _useState6[1];
  var setAppliedPromoCode = Recoil_index_24(appliedPromoCodeState);
  var setAppliedAgentCode = Recoil_index_24(appliedAgentCodeState);
  var setAppliedCorpCode = Recoil_index_24(appliedCorpCodeState);
  var setAppliedMPPromoCode = Recoil_index_24(appliedMPPromoCodeState);
  var setAppliedMPAgentCode = Recoil_index_24(appliedMPAgentCodeState);
  var setAppliedMPCorpCode = Recoil_index_24(appliedMPCorpCodeState({
    channelId: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId,
    multipropertyId: undefined
  }));
  var searchOptions = Recoil_index_20(searchOptionsState);
  var widgetConfig = Recoil_index_20(WidgetConfigState);
  var _useState7 = (0,react_production_min.useState)((_ref2 = (_searchOptions$filter = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter2 = searchOptions.filter) === null || _searchOptions$filter2 === void 0 ? void 0 : _searchOptions$filter2.mpPromoCode) !== null && _searchOptions$filter !== void 0 ? _searchOptions$filter : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter3 = searchOptions.filter) === null || _searchOptions$filter3 === void 0 ? void 0 : _searchOptions$filter3.promoCode) !== null && _ref2 !== void 0 ? _ref2 : ""),
    _useState8 = slicedToArray_slicedToArray(_useState7, 2),
    promoCodeInput = _useState8[0],
    setPromoCodeInput = _useState8[1];
  var _useState9 = (0,react_production_min.useState)((_ref3 = (_searchOptions$filter4 = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter5 = searchOptions.filter) === null || _searchOptions$filter5 === void 0 ? void 0 : _searchOptions$filter5.mpCorpCode) !== null && _searchOptions$filter4 !== void 0 ? _searchOptions$filter4 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter6 = searchOptions.filter) === null || _searchOptions$filter6 === void 0 ? void 0 : _searchOptions$filter6.corpCode) !== null && _ref3 !== void 0 ? _ref3 : ""),
    _useState10 = slicedToArray_slicedToArray(_useState9, 2),
    corpCodeInput = _useState10[0],
    setCorpCodeInput = _useState10[1];
  var _useState11 = (0,react_production_min.useState)((_ref4 = (_searchOptions$filter7 = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter8 = searchOptions.filter) === null || _searchOptions$filter8 === void 0 ? void 0 : _searchOptions$filter8.mpAgentCode) !== null && _searchOptions$filter7 !== void 0 ? _searchOptions$filter7 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter9 = searchOptions.filter) === null || _searchOptions$filter9 === void 0 ? void 0 : _searchOptions$filter9.agentCode) !== null && _ref4 !== void 0 ? _ref4 : ""),
    _useState12 = slicedToArray_slicedToArray(_useState11, 2),
    agentCodeInput = _useState12[0],
    setAgentCodeInput = _useState12[1];
  var mutations = useCampaignMutations();
  var _useSearch = useSearch(),
    makeSearch = _useSearch.makeSearch;
  var modals = useModals();
  var hasPromoCode = widgetConfig ? widgetConfig.promoCode : channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.hasPromoCode;
  var hasCorpCode = widgetConfig ? widgetConfig.corpCode : channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.hasCorpCode;
  var hasIATACode = widgetConfig ? widgetConfig.agentCode : channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.hasIATACode;
  var handleSuccess = function handleSuccess(code, typeOfCode) {
    if (code === "") {
      code = undefined;
    }
    var appliedMessage = "";
    var removedMessage = "";
    if (typeOfCode === "agentCode" || typeOfCode === "mpAgentCode") {
      if (Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader)) {
        setAppliedMPAgentCode(code);
      } else {
        setAppliedAgentCode(code);
      }
      appliedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.AgentCodeApplied"]);
      removedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.AgentCodeRemoved"]);
    } else if (typeOfCode === "corpCode" || typeOfCode === "mpCorpCode") {
      if (Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader)) {
        setAppliedMPCorpCode(code);
      } else {
        setAppliedCorpCode(code);
      }
      appliedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.CorporationCodeApplied"]);
      removedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.CorporationCodeRemoved"]);
    } else if (typeOfCode === "promoCode" || typeOfCode === "mpPromoCode") {
      if (Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader)) {
        setAppliedMPPromoCode(code);
      } else {
        setAppliedPromoCode(code);
      }
      appliedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.PromoCodeApplied"]);
      removedMessage = translations(accommodation_AccommodationTranslations["EA4H.General.PromoCodeRemoved"]);
    }
    react_toastify_esm_toast.info(code === undefined ? removedMessage : appliedMessage);
    if (searchOptions !== null && searchOptions !== void 0 && searchOptions.startDate && searchOptions.endDate) {
      //DATES ARE SELECTED. MAKE A SEARCH WITH THE NEWLY APPLIED PROMOCODE
      makeSearch({
        newSearchOptions: code_inputs_objectSpread(code_inputs_objectSpread({}, searchOptions), {}, {
          filter: code_inputs_objectSpread(code_inputs_objectSpread({}, searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.filter), {}, defineProperty_defineProperty({}, typeOfCode, code)),
          channelId: channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.channelId
        })
      });
    }
    modals.closeModal("promo_code_modal");
    closeLargeWidget && closeLargeWidget();
  };
  var submitCode = function submitCode() {
    var _searchOptions$filter10, _searchOptions$filter11, _searchOptions$filter12, _searchOptions$filter13, _searchOptions$filter14, _searchOptions$filter15;
    if (promoCodeInput || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter10 = searchOptions.filter) !== null && _searchOptions$filter10 !== void 0 && _searchOptions$filter10.promoCode || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter11 = searchOptions.filter) !== null && _searchOptions$filter11 !== void 0 && _searchOptions$filter11.mpPromoCode) {
      mutations.applyPromoCode.mutate({
        promoCode: promoCodeInput
      }, {
        onSuccess: function onSuccess(value, input) {
          if (value.success) {
            handleSuccess(input.promoCode, Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader) ? "mpPromoCode" : "promoCode");
          } else {
            setPromoCodeErrorState({
              show: true,
              msg: translations(accommodation_AccommodationTranslations["EA4H.General.IncorrectPromoCode"])
            });
          }
          document.body.click();
        }
      });
    } else if (corpCodeInput || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter12 = searchOptions.filter) !== null && _searchOptions$filter12 !== void 0 && _searchOptions$filter12.corpCode || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter13 = searchOptions.filter) !== null && _searchOptions$filter13 !== void 0 && _searchOptions$filter13.mpCorpCode) {
      mutations.applyCorpCode.mutate({
        corpCode: corpCodeInput
      }, {
        onSuccess: function onSuccess(value, input) {
          if (value.success) {
            handleSuccess(input.corpCode, Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader) ? "mpCorpCode" : "corpCode");
          } else {
            setCorpCodeErrorState({
              show: true,
              msg: translations(accommodation_AccommodationTranslations["EA4H.General.IncorrectCorporationCode"])
            });
          }
          document.body.click();
        }
      });
    } else if (agentCodeInput || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter14 = searchOptions.filter) !== null && _searchOptions$filter14 !== void 0 && _searchOptions$filter14.agentCode || searchOptions !== null && searchOptions !== void 0 && (_searchOptions$filter15 = searchOptions.filter) !== null && _searchOptions$filter15 !== void 0 && _searchOptions$filter15.mpAgentCode) {
      mutations.applyAgentCode.mutate({
        agentCode: agentCodeInput
      }, {
        onSuccess: function onSuccess(value, input) {
          if (value.success) {
            handleSuccess(input.agentCode, Boolean(channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.multiPropertyHeader) ? "mpAgentCode" : "agentCode");
          } else {
            setAgentCodeErrorState({
              show: true,
              msg: translations(accommodation_AccommodationTranslations["EA4H.General.Error.IncorrectIATACode"])
            });
          }
          document.body.click();
        }
      });
    }
  };
  var isLoading = mutations.applyPromoCode.isLoading || mutations.applyCorpCode.isLoading || mutations.applyAgentCode.isLoading;
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      gap: "10px"
    }
  }, hasPromoCode && /*#__PURE__*/react.createElement(Pop, {
    onClose: function onClose() {
      return setPromoCodeErrorState(function (x) {
        return code_inputs_objectSpread(code_inputs_objectSpread({}, x), {}, {
          show: false
        });
      });
    },
    opened: promoCodeErrorState.show,
    message: promoCodeErrorState.msg
  }, /*#__PURE__*/react.createElement(Input, {
    disabled: isLoading,
    verified: Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter16 = searchOptions.filter) === null || _searchOptions$filter16 === void 0 ? void 0 : _searchOptions$filter16.mpPromoCode) || Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter17 = searchOptions.filter) === null || _searchOptions$filter17 === void 0 ? void 0 : _searchOptions$filter17.promoCode),
    value: promoCodeInput,
    onChange: function onChange(e) {
      return setPromoCodeInput(e.target.value);
    },
    placeholder: (_ref5 = (_searchOptions$filter18 = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter19 = searchOptions.filter) === null || _searchOptions$filter19 === void 0 ? void 0 : _searchOptions$filter19.mpPromoCode) !== null && _searchOptions$filter18 !== void 0 ? _searchOptions$filter18 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter20 = searchOptions.filter) === null || _searchOptions$filter20 === void 0 ? void 0 : _searchOptions$filter20.promoCode) !== null && _ref5 !== void 0 ? _ref5 : translations(accommodation_AccommodationTranslations["EA4H.General.PromoCode"])
  })), hasCorpCode && /*#__PURE__*/react.createElement(Pop, {
    onClose: function onClose() {
      return setCorpCodeErrorState(function (x) {
        return code_inputs_objectSpread(code_inputs_objectSpread({}, x), {}, {
          show: false
        });
      });
    },
    opened: corpCodeErrorState.show,
    message: corpCodeErrorState.msg
  }, /*#__PURE__*/react.createElement(Input, {
    disabled: isLoading,
    verified: Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter21 = searchOptions.filter) === null || _searchOptions$filter21 === void 0 ? void 0 : _searchOptions$filter21.corpCode) || Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter22 = searchOptions.filter) === null || _searchOptions$filter22 === void 0 ? void 0 : _searchOptions$filter22.mpCorpCode),
    value: corpCodeInput,
    onChange: function onChange(e) {
      return setCorpCodeInput(e.target.value);
    },
    placeholder: (_ref6 = (_searchOptions$filter23 = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter24 = searchOptions.filter) === null || _searchOptions$filter24 === void 0 ? void 0 : _searchOptions$filter24.mpCorpCode) !== null && _searchOptions$filter23 !== void 0 ? _searchOptions$filter23 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter25 = searchOptions.filter) === null || _searchOptions$filter25 === void 0 ? void 0 : _searchOptions$filter25.corpCode) !== null && _ref6 !== void 0 ? _ref6 : translations(accommodation_AccommodationTranslations["EA4H.General.CorporationCode"])
  })), hasIATACode && /*#__PURE__*/react.createElement(Pop, {
    onClose: function onClose() {
      return setAgentCodeErrorState(function (x) {
        return code_inputs_objectSpread(code_inputs_objectSpread({}, x), {}, {
          show: false
        });
      });
    },
    opened: agentCodeErrorState.show,
    message: agentCodeErrorState.msg
  }, /*#__PURE__*/react.createElement(Input, {
    disabled: isLoading,
    verified: Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter26 = searchOptions.filter) === null || _searchOptions$filter26 === void 0 ? void 0 : _searchOptions$filter26.mpAgentCode) || Boolean(searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter27 = searchOptions.filter) === null || _searchOptions$filter27 === void 0 ? void 0 : _searchOptions$filter27.agentCode),
    value: agentCodeInput,
    onChange: function onChange(e) {
      return setAgentCodeInput(e.target.value);
    },
    placeholder: (_ref7 = (_searchOptions$filter28 = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter29 = searchOptions.filter) === null || _searchOptions$filter29 === void 0 ? void 0 : _searchOptions$filter29.mpAgentCode) !== null && _searchOptions$filter28 !== void 0 ? _searchOptions$filter28 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter30 = searchOptions.filter) === null || _searchOptions$filter30 === void 0 ? void 0 : _searchOptions$filter30.agentCode) !== null && _ref7 !== void 0 ? _ref7 : translations(accommodation_AccommodationTranslations["EA4H.General.AgentCode"])
  })), /*#__PURE__*/react.createElement(button_Button, {
    style: {
      maxWidth: "unset"
    },
    isLoading: isLoading,
    onClick: submitCode
  }, translations(accommodation_AccommodationTranslations["EA4H.General.VerifyCode"])));
};
var Pop = function Pop(_ref8) {
  var opened = _ref8.opened,
    onClose = _ref8.onClose,
    message = _ref8.message,
    children = _ref8.children;
  var theme = Ze();
  return /*#__PURE__*/react.createElement(Popover_Popover, {
    opened: opened,
    onClose: onClose,
    position: "top"
  }, /*#__PURE__*/react.createElement(Popover_Popover.Target, null, children), /*#__PURE__*/react.createElement(Popover_Popover.Dropdown, {
    style: BVTooltipStyle(theme, true)
  }, /*#__PURE__*/react.createElement(BodyText, {
    style: {
      color: "#fff"
    }
  }, message)));
};
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faXmarkLarge.js
var faXmarkLarge = __webpack_require__(5962);
;// CONCATENATED MODULE: ./src/reservation/modals/styles.ts

var ModalContainer = styled_components_esm.div.withConfig({
  displayName: "styles__ModalContainer",
  componentId: "sc-1scegco-0"
})(["background-color:", ";padding:0;", " ", " ", " min-width:500px;@media ", "{height:100%;display:flex;flex-direction:column;min-width:0;}"], function (_ref) {
  var theme = _ref.theme;
  return theme.css.cardBackground;
}, function (_ref2) {
  var maxContent = _ref2.maxContent;
  return maxContent && Ae(["width:max-content;"]);
}, function (_ref3) {
  var maxWidth = _ref3.maxWidth;
  return maxWidth && Ae(["max-width:", ";"], maxWidth);
}, function (_ref4) {
  var minWidth = _ref4.minWidth;
  return minWidth && Ae(["min-width:", ";"], minWidth);
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.mediaQueries.verySmall;
});
var ModalContent = styled_components_esm.div.withConfig({
  displayName: "styles__ModalContent",
  componentId: "sc-1scegco-1"
})(["", " @media ", "{flex-grow:1;}"], function (_ref6) {
  var theme = _ref6.theme;
  return Ae(["color:", ";background:", ";"], theme.css.bodyColor, theme.css.frameworkBackground);
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.mediaQueries.verySmall;
});
var ModalContentInner = styled_components_esm.div.withConfig({
  displayName: "styles__ModalContentInner",
  componentId: "sc-1scegco-2"
})(["padding:", ";@media ", "{padding:20px;padding-top:20px;}"], function (_ref8) {
  var noPadding = _ref8.noPadding;
  return noPadding ? "0" : "40px 30px";
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.mediaQueries.small;
});
var ModalHeaderContainer = styled_components_esm.div.withConfig({
  displayName: "styles__ModalHeaderContainer",
  componentId: "sc-1scegco-3"
})(["width:100%;height:60px;display:grid;position:sticky;top:0;justify-content:end;align-content:center;z-index:9;", " @media ", "{flex-shrink:0;}"], function (_ref10) {
  var theme = _ref10.theme;
  return Ae(["background:", ";color:", ";border-bottom-width:", ";border-bottom-style:", ";border-bottom-color:", ";box-shadow:", ";"], theme.css.cardBackground, theme.css.cardColor, theme.css.cardBorderWidth, theme.css.cardBorderColor ? "solid" : "none", theme.css.cardBorderColor, theme.css.cardBoxShadow);
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.mediaQueries.verySmall;
});
var ModalFooter = styled_components_esm.div.withConfig({
  displayName: "styles__ModalFooter",
  componentId: "sc-1scegco-4"
})(["z-index:99999;height:80px;width:100%;background-color:", ";position:sticky;bottom:0;display:flex;align-items:center;justify-content:end;gap:15px;color:", ";@media ", "{flex-shrink:0;}"], function (_ref12) {
  var theme = _ref12.theme;
  return theme.css.cardBackground;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.css.cardColor;
}, function (_ref14) {
  var theme = _ref14.theme;
  return theme.mediaQueries.verySmall;
});
var ModalChildrenContainer = styled_components_esm.div.withConfig({
  displayName: "styles__ModalChildrenContainer",
  componentId: "sc-1scegco-5"
})(["", ""], function (_ref15) {
  var theme = _ref15.theme;
  return Ae(["margin-top:20px;color:inherit;font-family:", ";"], theme.css.titleFontFamily);
});
var Divider = styled_components_esm.hr.withConfig({
  displayName: "styles__Divider",
  componentId: "sc-1scegco-6"
})(["", ""], function (_ref16) {
  var theme = _ref16.theme;
  return Ae(["margin-top:30px;margin-bottom:30px;height:", ";border:0;width:100%;background:", ";"], theme.css.dividerBorderWidth, theme.css.cardDividerColor);
});
;// CONCATENATED MODULE: ./src/reservation/modals/modal_header.tsx


//Hooks



//Components




//Types


var ModalHeader = function ModalHeader(props) {
  var translations = useAccommodationTranslations();
  var theme = Ze();
  var onCloseClicked = props.onCloseClicked;
  return /*#__PURE__*/react.createElement(ModalHeaderContainer, null, /*#__PURE__*/react.createElement("button", {
    disabled: props.disableCloseButton,
    onClick: onCloseClicked,
    style: {
      cursor: "pointer",
      outline: 0,
      opacity: props.disableCloseButton ? .5 : 1,
      border: 0,
      background: "transparent",
      marginRight: "20px",
      display: "flex",
      gap: "10px",
      alignItems: "center",
      pointerEvents: props.disableCloseButton ? 'none' : 'auto'
    }
  }, /*#__PURE__*/react.createElement("p", {
    style: {
      color: theme.css.cardLinkColor,
      fontFamily: theme.css.bodyFontFamily,
      fontSize: theme.css.bodyFontSize,
      fontWeight: theme.css.bodyBoldFontWeight,
      margin: 0,
      paddingBottom: "2px"
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.General.CloseAndGoBack"])), /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    color: theme.css.cardLinkColor,
    icon: faXmarkLarge/* faXmarkLarge */.FG,
    style: {
      fontSize: "18px"
    }
  })));
};
;// CONCATENATED MODULE: ./src/reservation/modals/promo_code/promo_code.tsx







var PromoCodeModalContent = function PromoCodeModalContent() {
  var modals = useModals();
  var translations = useAccommodationTranslations();
  var theme = Ze();
  return /*#__PURE__*/react.createElement("div", {
    style: {
      color: theme.css.bodyColor
    }
  }, /*#__PURE__*/react.createElement(ModalHeader, {
    onCloseClicked: function onCloseClicked() {
      return modals.closeModal("promo_code_modal");
    }
  }), /*#__PURE__*/react.createElement("h3", {
    style: {
      paddingLeft: "10px",
      paddingRight: "10px",
      paddingTop: "20px",
      margin: 0,
      textAlign: "center",
      fontSize: "".concat(theme.css.bodyFontSize),
      fontFamily: theme.css.bodyFontFamily
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Online.PromoOrCorporationCodeTitle"])), /*#__PURE__*/react.createElement("div", {
    "data-testid": "calendar_promo_code_modal",
    style: {
      padding: "0px 20px"
    }
  }, /*#__PURE__*/react.createElement("p", {
    style: {
      margin: "15px 0px",
      marginTop: "10px",
      textAlign: "center",
      fontSize: "".concat(theme.css.bodyFontSize),
      fontFamily: theme.css.bodyFontFamily
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Online.EnterPromoOrCorporationCodeDescription"])), /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      gap: "10px"
    }
  }, /*#__PURE__*/react.createElement(CodeInputs, null))));
};
;// CONCATENATED MODULE: ./src/shared_components/calendar/promo_button.tsx


function promo_button_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function promo_button_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? promo_button_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : promo_button_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }



//Hooks




//Components




//Recoil





var sharedModalProps = {
  withCloseButton: false,
  classNames: {
    inner: "bv_modal_inner",
    root: "bv_modal_root",
    modal: "bv_modal_modal"
  },
  size: "100%",
  styles: {
    root: {
      zIndex: 10050
    }
  },
  padding: 0,
  exitTransitionDuration: 250
};
var ButtonElement = function ButtonElement(_ref) {
  var _ref2, _ref3, _ref4, _ref5, _ref6, _searchOptions$filter, _searchOptions$filter2, _searchOptions$filter3, _searchOptions$filter4, _searchOptions$filter5, _searchOptions$filter6, _searchOptions$filter7;
  var onClick = _ref.onClick;
  var searchOptions = Recoil_index_20(searchOptionsState);
  var translations = useAccommodationTranslations();
  return /*#__PURE__*/react.createElement(SidebarInputElement, {
    "data-testid": "calendar_promo_button",
    onClick: onClick
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    icon: faKey/* faKey */.DD,
    style: {
      fontSize: "18px",
      opacity: .6
    }
  }), /*#__PURE__*/react.createElement("p", {
    style: {
      margin: 0,
      paddingLeft: "8px"
    }
  }, (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_ref6 = (_searchOptions$filter = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter2 = searchOptions.filter) === null || _searchOptions$filter2 === void 0 ? void 0 : _searchOptions$filter2.mpPromoCode) !== null && _searchOptions$filter !== void 0 ? _searchOptions$filter : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter3 = searchOptions.filter) === null || _searchOptions$filter3 === void 0 ? void 0 : _searchOptions$filter3.mpCorpCode) !== null && _ref6 !== void 0 ? _ref6 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter4 = searchOptions.filter) === null || _searchOptions$filter4 === void 0 ? void 0 : _searchOptions$filter4.mpAgentCode) !== null && _ref5 !== void 0 ? _ref5 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter5 = searchOptions.filter) === null || _searchOptions$filter5 === void 0 ? void 0 : _searchOptions$filter5.promoCode) !== null && _ref4 !== void 0 ? _ref4 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter6 = searchOptions.filter) === null || _searchOptions$filter6 === void 0 ? void 0 : _searchOptions$filter6.corpCode) !== null && _ref3 !== void 0 ? _ref3 : searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter7 = searchOptions.filter) === null || _searchOptions$filter7 === void 0 ? void 0 : _searchOptions$filter7.agentCode) !== null && _ref2 !== void 0 ? _ref2 : translations(accommodation_AccommodationTranslations["EA4H.Online.IHaveACodeTitle"])));
};
var PromoButton = function PromoButton(_ref7) {
  var mediaQueryOverride = _ref7.mediaQueryOverride;
  var themeContext = (0,react_production_min.useContext)(Me);
  var _useState = (0,react_production_min.useState)(false),
    _useState2 = slicedToArray_slicedToArray(_useState, 2),
    showPromoPopover = _useState2[0],
    setShowPromoPopover = _useState2[1];
  var theme = Ze();
  var isSmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.small
  });
  var isVerySmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.verySmall
  });
  var translations = useAccommodationTranslations();
  var modals = useModals();
  var openPromoCodesModal = (0,react_production_min.useCallback)(function () {
    modals.openModal(promo_button_objectSpread({
      modalId: "promo_code_modal",
      children: /*#__PURE__*/react.createElement(PromoCodeModalContent, null),
      centered: true
    }, sharedModalProps));
  }, []);
  if (isVerySmallScreen) {
    return /*#__PURE__*/react.createElement(ButtonElement, {
      onClick: openPromoCodesModal
    });
  }
  return /*#__PURE__*/react.createElement(Popover, {
    showPopover: showPromoPopover,
    onClose: function onClose() {
      return setShowPromoPopover(false);
    },
    target: /*#__PURE__*/react.createElement(ButtonElement, {
      onClick: function onClick() {
        return setShowPromoPopover(function (x) {
          return !x;
        });
      }
    }),
    position: isSmallScreen || mediaQueryOverride ? "bottom" : "right",
    trapFocus: false,
    width: "300px",
    padding: "20px"
  }, /*#__PURE__*/react.createElement("h3", {
    style: {
      margin: 0,
      textAlign: "center",
      fontSize: "".concat(themeContext.css.bodyFontSize),
      fontFamily: themeContext.css.bodyFontFamily
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Online.PromoOrCorporationCodeTitle"])), /*#__PURE__*/react.createElement("div", {
    "data-testid": "calendar_promo_code_popout"
  }, /*#__PURE__*/react.createElement("p", {
    style: {
      margin: "15px 0px",
      marginTop: "10px",
      textAlign: "center",
      fontSize: "".concat(themeContext.css.bodyFontSize),
      fontFamily: themeContext.css.bodyFontFamily
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Online.EnterPromoOrCorporationCodeDescription"])), /*#__PURE__*/react.createElement(CodeInputs, null)));
};
/* harmony default export */ var promo_button = (PromoButton);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faChevronDown.js
var faChevronDown = __webpack_require__(7056);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faClose.js
var faClose = __webpack_require__(2120);
;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-into-view/utils/ease-in-out-quad.js
const easeInOutQuad = t => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-into-view/utils/get-relative-position.js
const getRelativePosition = ({
  axis,
  target,
  parent,
  alignment,
  offset,
  isList
}) => {
  if (!target || !parent && typeof document === "undefined") {
    return 0;
  }
  const isCustomParent = !!parent;
  const parentElement = parent || document.body;
  const parentPosition = parentElement.getBoundingClientRect();
  const targetPosition = target.getBoundingClientRect();
  const getDiff = property => targetPosition[property] - parentPosition[property];
  if (axis === "y") {
    const diff = getDiff("top");
    if (diff === 0) return 0;
    if (alignment === "start") {
      const distance = diff - offset;
      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;
      return shouldScroll ? distance : 0;
    }
    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;
    if (alignment === "end") {
      const distance = diff + offset - parentHeight + targetPosition.height;
      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;
      return shouldScroll ? distance : 0;
    }
    if (alignment === "center") {
      return diff - parentHeight / 2 + targetPosition.height / 2;
    }
    return 0;
  }
  if (axis === "x") {
    const diff = getDiff("left");
    if (diff === 0) return 0;
    if (alignment === "start") {
      const distance = diff - offset;
      const shouldScroll = distance <= targetPosition.width || !isList;
      return shouldScroll ? distance : 0;
    }
    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;
    if (alignment === "end") {
      const distance = diff + offset - parentWidth + targetPosition.width;
      const shouldScroll = distance >= -targetPosition.width || !isList;
      return shouldScroll ? distance : 0;
    }
    if (alignment === "center") {
      return diff - parentWidth / 2 + targetPosition.width / 2;
    }
    return 0;
  }
  return 0;
};

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-into-view/utils/get-scroll-start.js
const getScrollStart = ({
  axis,
  parent
}) => {
  if (!parent && typeof document === "undefined") {
    return 0;
  }
  const method = axis === "y" ? "scrollTop" : "scrollLeft";
  if (parent) {
    return parent[method];
  }
  const {
    body,
    documentElement
  } = document;
  return body[method] + documentElement[method];
};

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-into-view/utils/set-scroll-param.js
const setScrollParam = ({
  axis,
  parent,
  distance
}) => {
  if (!parent && typeof document === "undefined") {
    return;
  }
  const method = axis === "y" ? "scrollTop" : "scrollLeft";
  if (parent) {
    parent[method] = distance;
  } else {
    const {
      body,
      documentElement
    } = document;
    body[method] = distance;
    documentElement[method] = distance;
  }
};

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/use-scroll-into-view/use-scroll-into-view.js







function useScrollIntoView({
  duration = 1250,
  axis = "y",
  onScrollFinish,
  easing = easeInOutQuad,
  offset = 0,
  cancelable = true,
  isList = false
} = {}) {
  const frameID = (0,react_production_min.useRef)(0);
  const startTime = (0,react_production_min.useRef)(0);
  const shouldStop = (0,react_production_min.useRef)(false);
  const scrollableRef = (0,react_production_min.useRef)(null);
  const targetRef = (0,react_production_min.useRef)(null);
  const reducedMotion = useReducedMotion();
  const cancel = () => {
    if (frameID.current) {
      cancelAnimationFrame(frameID.current);
    }
  };
  const scrollIntoView = (0,react_production_min.useCallback)(({
    alignment = "start"
  } = {}) => {
    var _a;
    shouldStop.current = false;
    if (frameID.current) {
      cancel();
    }
    const start = (_a = getScrollStart({
      parent: scrollableRef.current,
      axis
    })) != null ? _a : 0;
    const change = getRelativePosition({
      parent: scrollableRef.current,
      target: targetRef.current,
      axis,
      alignment,
      offset,
      isList
    }) - (scrollableRef.current ? 0 : start);
    function animateScroll() {
      if (startTime.current === 0) {
        startTime.current = performance.now();
      }
      const now = performance.now();
      const elapsed = now - startTime.current;
      const t = reducedMotion || duration === 0 ? 1 : elapsed / duration;
      const distance = start + change * easing(t);
      setScrollParam({
        parent: scrollableRef.current,
        axis,
        distance
      });
      if (!shouldStop.current && t < 1) {
        frameID.current = requestAnimationFrame(animateScroll);
      } else {
        typeof onScrollFinish === "function" && onScrollFinish();
        startTime.current = 0;
        frameID.current = 0;
        cancel();
      }
    }
    animateScroll();
  }, [axis, duration, easing, isList, offset, onScrollFinish, reducedMotion]);
  const handleStop = () => {
    if (cancelable) {
      shouldStop.current = true;
    }
  };
  useWindowEvent("wheel", handleStop, {
    passive: true
  });
  useWindowEvent("touchmove", handleStop, {
    passive: true
  });
  (0,react_production_min.useEffect)(() => cancel, []);
  return {
    scrollableRef,
    targetRef,
    scrollIntoView,
    cancel
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/utils/esm/group-options/group-options.js
function groupOptions({
  data
}) {
  const sortedData = [];
  const unGroupedData = [];
  const groupedData = data.reduce((acc, item, index) => {
    if (item.group) {
      if (acc[item.group]) acc[item.group].push(index);else acc[item.group] = [index];
    } else {
      unGroupedData.push(index);
    }
    return acc;
  }, {});
  Object.keys(groupedData).forEach(groupName => {
    sortedData.push(...groupedData[groupName].map(index => data[index]));
  });
  sortedData.push(...unGroupedData.map(itemIndex => data[itemIndex]));
  return sortedData;
}
function getGroupedOptions(data) {
  const sorted = groupOptions({
    data
  });
  const unGrouped = [];
  const grouped = [];
  let groupName = null;
  sorted.forEach((item, index) => {
    if (!item.group) {
      unGrouped.push({
        type: "item",
        item,
        index
      });
    } else {
      if (groupName !== item.group) {
        groupName = item.group;
        grouped.push({
          type: "label",
          label: groupName
        });
      }
      grouped.push({
        type: "item",
        item,
        index
      });
    }
  });
  return {
    grouped,
    unGrouped,
    items: [...grouped, ...unGrouped],
    hasItems: grouped.length > 0 || unGrouped.length > 0
  };
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-compose-refs/dist/index.module.js


/**
 * Set a given ref to a given value
 * This utility takes care of different types of refs: callback refs and RefObject(s)
 */
function $6ed0406888f73fc4$var$setRef(ref, value) {
  if (typeof ref === 'function') ref(value);else if (ref !== null && ref !== undefined) ref.current = value;
}
/**
 * A utility to compose multiple refs together
 * Accepts callback refs and RefObject(s)
 */
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return node => refs.forEach(ref => $6ed0406888f73fc4$var$setRef(ref, node));
}
/**
 * A custom hook that composes multiple refs
 * Accepts callback refs and RefObject(s)
 */
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  // eslint-disable-next-line react-hooks/exhaustive-deps
  return (0,react_production_min.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-slot/dist/index.module.js




/* -------------------------------------------------------------------------------------------------
 * Slot
 * -----------------------------------------------------------------------------------------------*/
const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    children: children,
    ...slotProps
  } = props;
  const childrenArray = react_production_min.Children.toArray(children);
  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    // the new element to render is the one passed as a child of `Slottable`
    const newElement = slottable.props.children;
    const newChildren = childrenArray.map(child => {
      if (child === slottable) {
        // because the new element will be the one rendered, we are only interested
        // in grabbing its children (`newElement.props.children`)
        if (react_production_min.Children.count(newElement) > 1) return react_production_min.Children.only(null);
        return /*#__PURE__*/(0,react_production_min.isValidElement)(newElement) ? newElement.props.children : null;
      } else return child;
    });
    return /*#__PURE__*/(0,react_production_min.createElement)($5e63c961fc1ce211$var$SlotClone, (0,esm_extends/* default */.Z)({}, slotProps, {
      ref: forwardedRef
    }), /*#__PURE__*/(0,react_production_min.isValidElement)(newElement) ? /*#__PURE__*/(0,react_production_min.cloneElement)(newElement, undefined, newChildren) : null);
  }
  return /*#__PURE__*/(0,react_production_min.createElement)($5e63c961fc1ce211$var$SlotClone, (0,esm_extends/* default */.Z)({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';
/* -------------------------------------------------------------------------------------------------
 * SlotClone
 * -----------------------------------------------------------------------------------------------*/
const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    children: children,
    ...slotProps
  } = props;
  if ( /*#__PURE__*/(0,react_production_min.isValidElement)(children)) return /*#__PURE__*/(0,react_production_min.cloneElement)(children, {
    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref)
  });
  return react_production_min.Children.count(children) > 1 ? react_production_min.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';
/* -------------------------------------------------------------------------------------------------
 * Slottable
 * -----------------------------------------------------------------------------------------------*/
const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({
  children: children
}) => {
  return /*#__PURE__*/(0,react_production_min.createElement)(react_production_min.Fragment, null, children);
};
/* ---------------------------------------------------------------------------------------------- */
function $5e63c961fc1ce211$var$isSlottable(child) {
  return /*#__PURE__*/(0,react_production_min.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  // all child props should override
  const overrideProps = {
    ...childProps
  };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      // if the handler exists on both, we compose them
      if (slotPropValue && childPropValue) overrideProps[propName] = (...args) => {
        childPropValue(...args);
        slotPropValue(...args);
      };else if (slotPropValue) overrideProps[propName] = slotPropValue;
    } else if (propName === 'style') overrideProps[propName] = {
      ...slotPropValue,
      ...childPropValue
    };else if (propName === 'className') overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}
const $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = (/* unused pure expression or super */ null && ($5e63c961fc1ce211$export$8c6ed5c666ac1360));

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-primitive/dist/index.module.js




const $8927f6f2acc4f386$var$NODES = ['a', 'button', 'div', 'h2', 'h3', 'img', 'label', 'li', 'nav', 'ol', 'p', 'span', 'svg', 'ul']; // Temporary while we await merge of this fix:
// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396
// prettier-ignore
/* -------------------------------------------------------------------------------------------------
 * Primitive
 * -----------------------------------------------------------------------------------------------*/
const $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  const Node = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
    const {
      asChild: asChild,
      ...primitiveProps
    } = props;
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    (0,react_production_min.useEffect)(() => {
      window[Symbol.for('radix-ui')] = true;
    }, []);
    return /*#__PURE__*/(0,react_production_min.createElement)(Comp, (0,esm_extends/* default */.Z)({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  Node.displayName = `Primitive.${node}`;
  return {
    ...primitive,
    [node]: Node
  };
}, {});
/* -------------------------------------------------------------------------------------------------
 * Utils
 * -----------------------------------------------------------------------------------------------*/ /**
                                                                                                     * Flush custom event dispatch
                                                                                                     * https://github.com/radix-ui/primitives/pull/1378
                                                                                                     *
                                                                                                     * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.
                                                                                                     *
                                                                                                     * Internally, React prioritises events in the following order:
                                                                                                     *  - discrete
                                                                                                     *  - continuous
                                                                                                     *  - default
                                                                                                     *
                                                                                                     * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350
                                                                                                     *
                                                                                                     * `discrete` is an  important distinction as updates within these events are applied immediately.
                                                                                                     * React however, is not able to infer the priority of custom event types due to how they are detected internally.
                                                                                                     * Because of this, it's possible for updates from custom events to be unexpectedly batched when
                                                                                                     * dispatched by another `discrete` event.
                                                                                                     *
                                                                                                     * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.
                                                                                                     * This utility should be used when dispatching a custom event from within another `discrete` event, this utility
                                                                                                     * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.
                                                                                                     * For example:
                                                                                                     *
                                                                                                     * dispatching a known click 👎
                                                                                                     * target.dispatchEvent(new Event(‘click’))
                                                                                                     *
                                                                                                     * dispatching a custom type within a non-discrete event 👎
                                                                                                     * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}
                                                                                                     *
                                                                                                     * dispatching a custom type within a `discrete` event 👍
                                                                                                     * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}
                                                                                                     *
                                                                                                     * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use
                                                                                                     * this utility with them. This is because it's possible for those handlers to be called implicitly during render
                                                                                                     * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.
                                                                                                     */
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  if (target) $4q5Fq$flushSync(() => target.dispatchEvent(event));
}
/* -----------------------------------------------------------------------------------------------*/
const $8927f6f2acc4f386$export$be92b6f5f03c0fe9 = (/* unused pure expression or super */ null && ($8927f6f2acc4f386$export$250ffa63cdc0d034));

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js


/**
 * On the server, React emits a warning when calling `useLayoutEffect`.
 * This is because neither `useLayoutEffect` nor `useEffect` run on the server.
 * We use this safe version which suppresses the warning by replacing it with a noop on the server.
 *
 * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect
 */
const $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? react_production_min.useLayoutEffect : () => {};

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-presence/dist/index.module.js




function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
  return (0,react_production_min.useReducer)((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState);
}
const $921a889cee6df7e8$export$99c2b779aa4e8b8b = props => {
  const {
    present: present,
    children: children
  } = props;
  const presence = $921a889cee6df7e8$var$usePresence(present);
  const child = typeof children === 'function' ? children({
    present: presence.isPresent
  }) : react_production_min.Children.only(children);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  const forceMount = typeof children === 'function';
  return forceMount || presence.isPresent ? /*#__PURE__*/(0,react_production_min.cloneElement)(child, {
    ref: ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = 'Presence';
/* -------------------------------------------------------------------------------------------------
 * usePresence
 * -----------------------------------------------------------------------------------------------*/
function $921a889cee6df7e8$var$usePresence(present) {
  const [node1, setNode] = (0,react_production_min.useState)();
  const stylesRef = (0,react_production_min.useRef)({});
  const prevPresentRef = (0,react_production_min.useRef)(present);
  const prevAnimationNameRef = (0,react_production_min.useRef)('none');
  const initialState = present ? 'mounted' : 'unmounted';
  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
    mounted: {
      UNMOUNT: 'unmounted',
      ANIMATION_OUT: 'unmountSuspended'
    },
    unmountSuspended: {
      MOUNT: 'mounted',
      ANIMATION_END: 'unmounted'
    },
    unmounted: {
      MOUNT: 'mounted'
    }
  });
  (0,react_production_min.useEffect)(() => {
    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';
  }, [state]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      if (present) send('MOUNT');else if (currentAnimationName === 'none' || (styles === null || styles === void 0 ? void 0 : styles.display) === 'none')
        // If there is no exit animation or the element is hidden, animations won't run
        // so we unmount instantly
        send('UNMOUNT');else {
        /**
        * When `present` changes to `false`, we check changes to animation-name to
        * determine whether an animation has started. We chose this approach (reading
        * computed styles) because there is no `animationrun` event and `animationstart`
        * fires after `animation-delay` has expired which would be too late.
        */
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating) send('ANIMATION_OUT');else send('UNMOUNT');
      }
      prevPresentRef.current = present;
    }
  }, [present, send]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      /**
      * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`
      * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we
      * make sure we only trigger ANIMATION_END for the currently active animation.
      */
      const handleAnimationEnd = event => {
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node1 && isCurrentAnimation)
          // With React 18 concurrency this update is applied
          // a frame after the animation ends, creating a flash of visible content.
          // By manually flushing we ensure they sync within a frame, removing the flash.
          (0,react_dom_production_min.flushSync)(() => send('ANIMATION_END'));
      };
      const handleAnimationStart = event => {
        if (event.target === node1)
          // if animation occurred, store its name as the previous animation.
          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
      };
      node1.addEventListener('animationstart', handleAnimationStart);
      node1.addEventListener('animationcancel', handleAnimationEnd);
      node1.addEventListener('animationend', handleAnimationEnd);
      return () => {
        node1.removeEventListener('animationstart', handleAnimationStart);
        node1.removeEventListener('animationcancel', handleAnimationEnd);
        node1.removeEventListener('animationend', handleAnimationEnd);
      };
    } else
      // Transition to the unmounted state if the node is removed prematurely.
      // We avoid doing so during cleanup as the node may change but still exist.
      send('ANIMATION_END');
  }, [node1, send]);
  return {
    isPresent: ['mounted', 'unmountSuspended'].includes(state),
    ref: (0,react_production_min.useCallback)(node => {
      if (node) stylesRef.current = getComputedStyle(node);
      setNode(node);
    }, [])
  };
}
/* -----------------------------------------------------------------------------------------------*/
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return (styles === null || styles === void 0 ? void 0 : styles.animationName) || 'none';
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-context/dist/index.module.js

function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
  const Context = /*#__PURE__*/$3bkAK$createContext(defaultContext);
  function Provider(props) {
    const {
      children: children,
      ...context
    } = props; // Only re-memoize when prop values change
    // eslint-disable-next-line react-hooks/exhaustive-deps
    const value = $3bkAK$useMemo(() => context, Object.values(context));
    return /*#__PURE__*/$3bkAK$createElement(Context.Provider, {
      value: value
    }, children);
  }
  function useContext(consumerName) {
    const context = $3bkAK$useContext(Context);
    if (context) return context;
    if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  Provider.displayName = rootComponentName + 'Provider';
  return [Provider, useContext];
}
/* -------------------------------------------------------------------------------------------------
 * createContextScope
 * -----------------------------------------------------------------------------------------------*/
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  /* -----------------------------------------------------------------------------------------------
  * createContext
  * ---------------------------------------------------------------------------------------------*/
  function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
    const BaseContext = /*#__PURE__*/(0,react_production_min.createContext)(defaultContext);
    const index = defaultContexts.length;
    defaultContexts = [...defaultContexts, defaultContext];
    function Provider(props) {
      const {
        scope: scope,
        children: children,
        ...context
      } = props;
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext; // Only re-memoize when prop values change
      // eslint-disable-next-line react-hooks/exhaustive-deps
      const value = (0,react_production_min.useMemo)(() => context, Object.values(context));
      return /*#__PURE__*/(0,react_production_min.createElement)(Context.Provider, {
        value: value
      }, children);
    }
    function useContext(consumerName, scope) {
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext;
      const context = (0,react_production_min.useContext)(Context);
      if (context) return context;
      if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider.displayName = rootComponentName + 'Provider';
    return [Provider, useContext];
  }
  /* -----------------------------------------------------------------------------------------------
  * createScope
  * ---------------------------------------------------------------------------------------------*/
  const createScope = () => {
    const scopeContexts = defaultContexts.map(defaultContext => {
      return /*#__PURE__*/(0,react_production_min.createContext)(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
      return (0,react_production_min.useMemo)(() => ({
        [`__scope${scopeName}`]: {
          ...scope,
          [scopeName]: contexts
        }
      }), [scope, contexts]);
    };
  };
  createScope.scopeName = scopeName;
  return [$c512c27ab02ef895$export$fd42f52fd3ae1109, $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)];
}
/* -------------------------------------------------------------------------------------------------
 * composeContextScopes
 * -----------------------------------------------------------------------------------------------*/
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1) return baseScope;
  const createScope1 = () => {
    const scopeHooks = scopes.map(createScope => ({
      useScope: createScope(),
      scopeName: createScope.scopeName
    }));
    return function useComposedScopes(overrideScopes) {
      const nextScopes1 = scopeHooks.reduce((nextScopes, {
        useScope: useScope,
        scopeName: scopeName
      }) => {
        // We are calling a hook inside a callback which React warns against to avoid inconsistent
        // renders, however, scoping doesn't have render side effects so we ignore the rule.
        // eslint-disable-next-line react-hooks/rules-of-hooks
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0,react_production_min.useMemo)(() => ({
        [`__scope${baseScope.scopeName}`]: nextScopes1
      }), [nextScopes1]);
    };
  };
  createScope1.scopeName = baseScope.scopeName;
  return createScope1;
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js


/**
 * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a
 * prop or avoid re-executing effects when passed as a dependency
 */
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  const callbackRef = (0,react_production_min.useRef)(callback);
  (0,react_production_min.useEffect)(() => {
    callbackRef.current = callback;
  }); // https://github.com/facebook/react/issues/19240
  return (0,react_production_min.useMemo)(() => (...args) => {
    var _callbackRef$current;
    return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
  }, []);
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-direction/dist/index.module.js

const $f631663db3294ace$var$DirectionContext = /*#__PURE__*/(0,react_production_min.createContext)(undefined);
/* -------------------------------------------------------------------------------------------------
 * Direction
 * -----------------------------------------------------------------------------------------------*/
const $f631663db3294ace$export$c760c09fdd558351 = props => {
  const {
    dir: dir,
    children: children
  } = props;
  return /*#__PURE__*/$7Gjcd$createElement($f631663db3294ace$var$DirectionContext.Provider, {
    value: dir
  }, children);
};
/* -----------------------------------------------------------------------------------------------*/
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  const globalDir = (0,react_production_min.useContext)($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || 'ltr';
}
const $f631663db3294ace$export$2881499e37b75b9a = (/* unused pure expression or super */ null && ($f631663db3294ace$export$c760c09fdd558351));

;// CONCATENATED MODULE: ./node_modules/@radix-ui/number/dist/index.module.js
function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(value, [min, max]) {
  return Math.min(max, Math.max(min, value));
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/primitive/dist/index.module.js
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, {
  checkForDefaultPrevented = true
} = {}) {
  return function handleEvent(event) {
    originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented) return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
  };
}

;// CONCATENATED MODULE: ./node_modules/@radix-ui/react-scroll-area/dist/index.module.js











function $6c2e24571c90391f$export$3e6543de14f8614f(initialState, machine) {
  return (0,react_production_min.useReducer)((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState);
}

/* -------------------------------------------------------------------------------------------------
 * ScrollArea
 * -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$SCROLL_AREA_NAME = 'ScrollArea';
const [$57acba87d6e25586$var$createScrollAreaContext, $57acba87d6e25586$export$488468afe3a6f2b1] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($57acba87d6e25586$var$SCROLL_AREA_NAME);
const [$57acba87d6e25586$var$ScrollAreaProvider, $57acba87d6e25586$var$useScrollAreaContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLL_AREA_NAME);
const $57acba87d6e25586$export$ccf8d8d7bbf3c2cc = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    __scopeScrollArea: __scopeScrollArea,
    type = 'hover',
    dir: dir,
    scrollHideDelay = 600,
    ...scrollAreaProps
  } = props;
  const [scrollArea, setScrollArea] = (0,react_production_min.useState)(null);
  const [viewport, setViewport] = (0,react_production_min.useState)(null);
  const [content, setContent] = (0,react_production_min.useState)(null);
  const [scrollbarX, setScrollbarX] = (0,react_production_min.useState)(null);
  const [scrollbarY, setScrollbarY] = (0,react_production_min.useState)(null);
  const [cornerWidth, setCornerWidth] = (0,react_production_min.useState)(0);
  const [cornerHeight, setCornerHeight] = (0,react_production_min.useState)(0);
  const [scrollbarXEnabled, setScrollbarXEnabled] = (0,react_production_min.useState)(false);
  const [scrollbarYEnabled, setScrollbarYEnabled] = (0,react_production_min.useState)(false);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, node => setScrollArea(node));
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaProvider, {
    scope: __scopeScrollArea,
    type: type,
    dir: direction,
    scrollHideDelay: scrollHideDelay,
    scrollArea: scrollArea,
    viewport: viewport,
    onViewportChange: setViewport,
    content: content,
    onContentChange: setContent,
    scrollbarX: scrollbarX,
    onScrollbarXChange: setScrollbarX,
    scrollbarXEnabled: scrollbarXEnabled,
    onScrollbarXEnabledChange: setScrollbarXEnabled,
    scrollbarY: scrollbarY,
    onScrollbarYChange: setScrollbarY,
    scrollbarYEnabled: scrollbarYEnabled,
    onScrollbarYEnabledChange: setScrollbarYEnabled,
    onCornerWidthChange: setCornerWidth,
    onCornerHeightChange: setCornerHeight
  }, /*#__PURE__*/(0,react_production_min.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, (0,esm_extends/* default */.Z)({
    dir: direction
  }, scrollAreaProps, {
    ref: composedRefs,
    style: {
      position: 'relative',
      // Pass corner sizes as CSS vars to reduce re-renders of context consumers
      ['--radix-scroll-area-corner-width']: cornerWidth + 'px',
      ['--radix-scroll-area-corner-height']: cornerHeight + 'px',
      ...props.style
    }
  })));
});
/*#__PURE__*/
Object.assign($57acba87d6e25586$export$ccf8d8d7bbf3c2cc, {
  displayName: $57acba87d6e25586$var$SCROLL_AREA_NAME
});
/* -------------------------------------------------------------------------------------------------
 * ScrollAreaViewport
 * -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$VIEWPORT_NAME = 'ScrollAreaViewport';
const $57acba87d6e25586$export$a21cbf9f11fca853 = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    __scopeScrollArea: __scopeScrollArea,
    children: children,
    ...viewportProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$VIEWPORT_NAME, __scopeScrollArea);
  const ref = (0,react_production_min.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange);
  return /*#__PURE__*/(0,react_production_min.createElement)(react_production_min.Fragment, null, /*#__PURE__*/(0,react_production_min.createElement)("style", {
    dangerouslySetInnerHTML: {
      __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`
    }
  }), /*#__PURE__*/(0,react_production_min.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, (0,esm_extends/* default */.Z)({
    "data-radix-scroll-area-viewport": ""
  }, viewportProps, {
    ref: composedRefs,
    style: {
      /**
      * We don't support `visible` because the intention is to have at least one scrollbar
      * if this component is used and `visible` will behave like `auto` in that case
      * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description
      *
      * We don't handle `auto` because the intention is for the native implementation
      * to be hidden if using this component. We just want to ensure the node is scrollable
      * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent
      * the browser from having to work out whether to render native scrollbars or not,
      * we tell it to with the intention of hiding them in CSS.
      */
      overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',
      overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',
      ...props.style
    }
  }), /*#__PURE__*/(0,react_production_min.createElement)("div", {
    ref: context.onContentChange,
    style: {
      minWidth: '100%',
      display: 'table'
    }
  }, children)));
});
/*#__PURE__*/
Object.assign($57acba87d6e25586$export$a21cbf9f11fca853, {
  displayName: $57acba87d6e25586$var$VIEWPORT_NAME
});
/* -------------------------------------------------------------------------------------------------
 * ScrollAreaScrollbar
 * -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$SCROLLBAR_NAME = 'ScrollAreaScrollbar';
const $57acba87d6e25586$export$2fabd85d0eba3c57 = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    forceMount: forceMount,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const {
    onScrollbarXEnabledChange: onScrollbarXEnabledChange,
    onScrollbarYEnabledChange: onScrollbarYEnabledChange
  } = context;
  const isHorizontal = props.orientation === 'horizontal';
  (0,react_production_min.useEffect)(() => {
    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);
    return () => {
      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);
    };
  }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);
  return context.type === 'hover' ? /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarHover, (0,esm_extends/* default */.Z)({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount: forceMount
  })) : context.type === 'scroll' ? /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarScroll, (0,esm_extends/* default */.Z)({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount: forceMount
  })) : context.type === 'auto' ? /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarAuto, (0,esm_extends/* default */.Z)({}, scrollbarProps, {
    ref: forwardedRef,
    forceMount: forceMount
  })) : context.type === 'always' ? /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarVisible, (0,esm_extends/* default */.Z)({}, scrollbarProps, {
    ref: forwardedRef
  })) : null;
});
/*#__PURE__*/
Object.assign($57acba87d6e25586$export$2fabd85d0eba3c57, {
  displayName: $57acba87d6e25586$var$SCROLLBAR_NAME
});
/* -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$ScrollAreaScrollbarHover = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    forceMount: forceMount,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [visible, setVisible] = (0,react_production_min.useState)(false);
  (0,react_production_min.useEffect)(() => {
    const scrollArea = context.scrollArea;
    let hideTimer = 0;
    if (scrollArea) {
      const handlePointerEnter = () => {
        window.clearTimeout(hideTimer);
        setVisible(true);
      };
      const handlePointerLeave = () => {
        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);
      };
      scrollArea.addEventListener('pointerenter', handlePointerEnter);
      scrollArea.addEventListener('pointerleave', handlePointerLeave);
      return () => {
        window.clearTimeout(hideTimer);
        scrollArea.removeEventListener('pointerenter', handlePointerEnter);
        scrollArea.removeEventListener('pointerleave', handlePointerLeave);
      };
    }
  }, [context.scrollArea, context.scrollHideDelay]);
  return /*#__PURE__*/(0,react_production_min.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || visible
  }, /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarAuto, (0,esm_extends/* default */.Z)({
    "data-state": visible ? 'visible' : 'hidden'
  }, scrollbarProps, {
    ref: forwardedRef
  })));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarScroll = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    forceMount: forceMount,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const isHorizontal = props.orientation === 'horizontal';
  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(() => send('SCROLL_END'), 100);
  const [state, send] = $6c2e24571c90391f$export$3e6543de14f8614f('hidden', {
    hidden: {
      SCROLL: 'scrolling'
    },
    scrolling: {
      SCROLL_END: 'idle',
      POINTER_ENTER: 'interacting'
    },
    interacting: {
      SCROLL: 'interacting',
      POINTER_LEAVE: 'idle'
    },
    idle: {
      HIDE: 'hidden',
      SCROLL: 'scrolling',
      POINTER_ENTER: 'interacting'
    }
  });
  (0,react_production_min.useEffect)(() => {
    if (state === 'idle') {
      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);
      return () => window.clearTimeout(hideTimer);
    }
  }, [state, context.scrollHideDelay, send]);
  (0,react_production_min.useEffect)(() => {
    const viewport = context.viewport;
    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';
    if (viewport) {
      let prevScrollPos = viewport[scrollDirection];
      const handleScroll = () => {
        const scrollPos = viewport[scrollDirection];
        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;
        if (hasScrollInDirectionChanged) {
          send('SCROLL');
          debounceScrollEnd();
        }
        prevScrollPos = scrollPos;
      };
      viewport.addEventListener('scroll', handleScroll);
      return () => viewport.removeEventListener('scroll', handleScroll);
    }
  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);
  return /*#__PURE__*/(0,react_production_min.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || state !== 'hidden'
  }, /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarVisible, (0,esm_extends/* default */.Z)({
    "data-state": state === 'hidden' ? 'hidden' : 'visible'
  }, scrollbarProps, {
    ref: forwardedRef,
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerEnter, () => send('POINTER_ENTER')),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => send('POINTER_LEAVE'))
  })));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarAuto = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const {
    forceMount: forceMount,
    ...scrollbarProps
  } = props;
  const [visible, setVisible] = (0,react_production_min.useState)(false);
  const isHorizontal = props.orientation === 'horizontal';
  const handleResize = $57acba87d6e25586$var$useDebounceCallback(() => {
    if (context.viewport) {
      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;
      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;
      setVisible(isHorizontal ? isOverflowX : isOverflowY);
    }
  }, 10);
  $57acba87d6e25586$var$useResizeObserver(context.viewport, handleResize);
  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);
  return /*#__PURE__*/(0,react_production_min.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || visible
  }, /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarVisible, (0,esm_extends/* default */.Z)({
    "data-state": visible ? 'visible' : 'hidden'
  }, scrollbarProps, {
    ref: forwardedRef
  })));
});
/* -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$ScrollAreaScrollbarVisible = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    orientation = 'vertical',
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const thumbRef = (0,react_production_min.useRef)(null);
  const pointerOffsetRef = (0,react_production_min.useRef)(0);
  const [sizes, setSizes] = (0,react_production_min.useState)({
    content: 0,
    viewport: 0,
    scrollbar: {
      size: 0,
      paddingStart: 0,
      paddingEnd: 0
    }
  });
  const thumbRatio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);
  const commonProps = {
    ...scrollbarProps,
    sizes: sizes,
    onSizesChange: setSizes,
    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),
    onThumbChange: thumb => thumbRef.current = thumb,
    onThumbPointerUp: () => pointerOffsetRef.current = 0,
    onThumbPointerDown: pointerPos => pointerOffsetRef.current = pointerPos
  };
  function getScrollPosition(pointerPos, dir) {
    return $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);
  }
  if (orientation === 'horizontal') return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarX, (0,esm_extends/* default */.Z)({}, commonProps, {
    ref: forwardedRef,
    onThumbPositionChange: () => {
      if (context.viewport && thumbRef.current) {
        const scrollPos = context.viewport.scrollLeft;
        const offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, context.dir);
        thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;
      }
    },
    onWheelScroll: scrollPos => {
      if (context.viewport) context.viewport.scrollLeft = scrollPos;
    },
    onDragScroll: pointerPos => {
      if (context.viewport) context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);
    }
  }));
  if (orientation === 'vertical') return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarY, (0,esm_extends/* default */.Z)({}, commonProps, {
    ref: forwardedRef,
    onThumbPositionChange: () => {
      if (context.viewport && thumbRef.current) {
        const scrollPos = context.viewport.scrollTop;
        const offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes);
        thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;
      }
    },
    onWheelScroll: scrollPos => {
      if (context.viewport) context.viewport.scrollTop = scrollPos;
    },
    onDragScroll: pointerPos => {
      if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);
    }
  }));
  return null;
});
/* -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$ScrollAreaScrollbarX = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    sizes: sizes,
    onSizesChange: onSizesChange,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [computedStyle, setComputedStyle] = (0,react_production_min.useState)();
  const ref = (0,react_production_min.useRef)(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onScrollbarXChange);
  (0,react_production_min.useEffect)(() => {
    if (ref.current) setComputedStyle(getComputedStyle(ref.current));
  }, [ref]);
  return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarImpl, (0,esm_extends/* default */.Z)({
    "data-orientation": "horizontal"
  }, scrollbarProps, {
    ref: composeRefs,
    sizes: sizes,
    style: {
      bottom: 0,
      left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,
      right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,
      ['--radix-scroll-area-thumb-width']: $57acba87d6e25586$var$getThumbSize(sizes) + 'px',
      ...props.style
    },
    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.x),
    onDragScroll: pointerPos => props.onDragScroll(pointerPos.x),
    onWheelScroll: (event, maxScrollPos) => {
      if (context.viewport) {
        const scrollPos = context.viewport.scrollLeft + event.deltaX;
        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar
        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();
      }
    },
    onResize: () => {
      if (ref.current && context.viewport && computedStyle) onSizesChange({
        content: context.viewport.scrollWidth,
        viewport: context.viewport.offsetWidth,
        scrollbar: {
          size: ref.current.clientWidth,
          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingLeft),
          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingRight)
        }
      });
    }
  }));
});
const $57acba87d6e25586$var$ScrollAreaScrollbarY = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    sizes: sizes,
    onSizesChange: onSizesChange,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);
  const [computedStyle, setComputedStyle] = (0,react_production_min.useState)();
  const ref = (0,react_production_min.useRef)(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onScrollbarYChange);
  (0,react_production_min.useEffect)(() => {
    if (ref.current) setComputedStyle(getComputedStyle(ref.current));
  }, [ref]);
  return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaScrollbarImpl, (0,esm_extends/* default */.Z)({
    "data-orientation": "vertical"
  }, scrollbarProps, {
    ref: composeRefs,
    sizes: sizes,
    style: {
      top: 0,
      right: context.dir === 'ltr' ? 0 : undefined,
      left: context.dir === 'rtl' ? 0 : undefined,
      bottom: 'var(--radix-scroll-area-corner-height)',
      ['--radix-scroll-area-thumb-height']: $57acba87d6e25586$var$getThumbSize(sizes) + 'px',
      ...props.style
    },
    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.y),
    onDragScroll: pointerPos => props.onDragScroll(pointerPos.y),
    onWheelScroll: (event, maxScrollPos) => {
      if (context.viewport) {
        const scrollPos = context.viewport.scrollTop + event.deltaY;
        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar
        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();
      }
    },
    onResize: () => {
      if (ref.current && context.viewport && computedStyle) onSizesChange({
        content: context.viewport.scrollHeight,
        viewport: context.viewport.offsetHeight,
        scrollbar: {
          size: ref.current.clientHeight,
          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingTop),
          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingBottom)
        }
      });
    }
  }));
});
/* -----------------------------------------------------------------------------------------------*/
const [$57acba87d6e25586$var$ScrollbarProvider, $57acba87d6e25586$var$useScrollbarContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME);
const $57acba87d6e25586$var$ScrollAreaScrollbarImpl = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    __scopeScrollArea: __scopeScrollArea,
    sizes: sizes,
    hasThumb: hasThumb,
    onThumbChange: onThumbChange,
    onThumbPointerUp: onThumbPointerUp,
    onThumbPointerDown: onThumbPointerDown,
    onThumbPositionChange: onThumbPositionChange,
    onDragScroll: onDragScroll,
    onWheelScroll: onWheelScroll,
    onResize: onResize,
    ...scrollbarProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, __scopeScrollArea);
  const [scrollbar, setScrollbar] = (0,react_production_min.useState)(null);
  const composeRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, node => setScrollbar(node));
  const rectRef = (0,react_production_min.useRef)(null);
  const prevWebkitUserSelectRef = (0,react_production_min.useRef)('');
  const viewport = context.viewport;
  const maxScrollPos = sizes.content - sizes.viewport;
  const handleWheelScroll = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onWheelScroll);
  const handleThumbPositionChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPositionChange);
  const handleResize = $57acba87d6e25586$var$useDebounceCallback(onResize, 10);
  function handleDragScroll(event) {
    if (rectRef.current) {
      const x = event.clientX - rectRef.current.left;
      const y = event.clientY - rectRef.current.top;
      onDragScroll({
        x: x,
        y: y
      });
    }
  }
  /**
  * We bind wheel event imperatively so we can switch off passive
  * mode for document wheel event to allow it to be prevented
  */
  (0,react_production_min.useEffect)(() => {
    const handleWheel = event => {
      const element = event.target;
      const isScrollbarWheel = scrollbar === null || scrollbar === void 0 ? void 0 : scrollbar.contains(element);
      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);
    };
    document.addEventListener('wheel', handleWheel, {
      passive: false
    });
    return () => document.removeEventListener('wheel', handleWheel, {
      passive: false
    });
  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);
  /**
  * Update thumb position on sizes change
  */
  (0,react_production_min.useEffect)(handleThumbPositionChange, [sizes, handleThumbPositionChange]);
  $57acba87d6e25586$var$useResizeObserver(scrollbar, handleResize);
  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);
  return /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollbarProvider, {
    scope: __scopeScrollArea,
    scrollbar: scrollbar,
    hasThumb: hasThumb,
    onThumbChange: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbChange),
    onThumbPointerUp: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPointerUp),
    onThumbPositionChange: handleThumbPositionChange,
    onThumbPointerDown: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onThumbPointerDown)
  }, /*#__PURE__*/(0,react_production_min.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, (0,esm_extends/* default */.Z)({}, scrollbarProps, {
    ref: composeRefs,
    style: {
      position: 'absolute',
      ...scrollbarProps.style
    },
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, event => {
      const mainPointer = 0;
      if (event.button === mainPointer) {
        const element = event.target;
        element.setPointerCapture(event.pointerId);
        rectRef.current = scrollbar.getBoundingClientRect(); // pointer capture doesn't prevent text selection in Safari
        // so we remove text selection manually when scrolling
        prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;
        document.body.style.webkitUserSelect = 'none';
        handleDragScroll(event);
      }
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, handleDragScroll),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, event => {
      const element = event.target;
      if (element.hasPointerCapture(event.pointerId)) element.releasePointerCapture(event.pointerId);
      document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;
      rectRef.current = null;
    })
  })));
});
/* -------------------------------------------------------------------------------------------------
 * ScrollAreaThumb
 * -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$THUMB_NAME = 'ScrollAreaThumb';
const $57acba87d6e25586$export$9fba1154677d7cd2 = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    forceMount: forceMount,
    ...thumbProps
  } = props;
  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, props.__scopeScrollArea);
  return /*#__PURE__*/(0,react_production_min.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || scrollbarContext.hasThumb
  }, /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaThumbImpl, (0,esm_extends/* default */.Z)({
    ref: forwardedRef
  }, thumbProps)));
});
const $57acba87d6e25586$var$ScrollAreaThumbImpl = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    __scopeScrollArea: __scopeScrollArea,
    style: style,
    ...thumbProps
  } = props;
  const scrollAreaContext = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);
  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);
  const {
    onThumbPositionChange: onThumbPositionChange
  } = scrollbarContext;
  const composedRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, node => scrollbarContext.onThumbChange(node));
  const removeUnlinkedScrollListenerRef = (0,react_production_min.useRef)();
  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(() => {
    if (removeUnlinkedScrollListenerRef.current) {
      removeUnlinkedScrollListenerRef.current();
      removeUnlinkedScrollListenerRef.current = undefined;
    }
  }, 100);
  (0,react_production_min.useEffect)(() => {
    const viewport = scrollAreaContext.viewport;
    if (viewport) {
      /**
      * We only bind to native scroll event so we know when scroll starts and ends.
      * When scroll starts we start a requestAnimationFrame loop that checks for
      * changes to scroll position. That rAF loop triggers our thumb position change
      * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.
      * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects
      */
      const handleScroll = () => {
        debounceScrollEnd();
        if (!removeUnlinkedScrollListenerRef.current) {
          const listener = $57acba87d6e25586$var$addUnlinkedScrollListener(viewport, onThumbPositionChange);
          removeUnlinkedScrollListenerRef.current = listener;
          onThumbPositionChange();
        }
      };
      onThumbPositionChange();
      viewport.addEventListener('scroll', handleScroll);
      return () => viewport.removeEventListener('scroll', handleScroll);
    }
  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);
  return /*#__PURE__*/(0,react_production_min.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, (0,esm_extends/* default */.Z)({
    "data-state": scrollbarContext.hasThumb ? 'visible' : 'hidden'
  }, thumbProps, {
    ref: composedRef,
    style: {
      width: 'var(--radix-scroll-area-thumb-width)',
      height: 'var(--radix-scroll-area-thumb-height)',
      ...style
    },
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, event => {
      const thumb = event.target;
      const thumbRect = thumb.getBoundingClientRect();
      const x = event.clientX - thumbRect.left;
      const y = event.clientY - thumbRect.top;
      scrollbarContext.onThumbPointerDown({
        x: x,
        y: y
      });
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, scrollbarContext.onThumbPointerUp)
  }));
});
/*#__PURE__*/
Object.assign($57acba87d6e25586$export$9fba1154677d7cd2, {
  displayName: $57acba87d6e25586$var$THUMB_NAME
});
/* -------------------------------------------------------------------------------------------------
 * ScrollAreaCorner
 * -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$CORNER_NAME = 'ScrollAreaCorner';
const $57acba87d6e25586$export$56969d565df7cc4b = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, props.__scopeScrollArea);
  const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);
  const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;
  return hasCorner ? /*#__PURE__*/(0,react_production_min.createElement)($57acba87d6e25586$var$ScrollAreaCornerImpl, (0,esm_extends/* default */.Z)({}, props, {
    ref: forwardedRef
  })) : null;
});
/*#__PURE__*/
Object.assign($57acba87d6e25586$export$56969d565df7cc4b, {
  displayName: $57acba87d6e25586$var$CORNER_NAME
});
/* -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$var$ScrollAreaCornerImpl = /*#__PURE__*/(0,react_production_min.forwardRef)((props, forwardedRef) => {
  const {
    __scopeScrollArea: __scopeScrollArea,
    ...cornerProps
  } = props;
  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, __scopeScrollArea);
  const [width1, setWidth] = (0,react_production_min.useState)(0);
  const [height1, setHeight] = (0,react_production_min.useState)(0);
  const hasSize = Boolean(width1 && height1);
  $57acba87d6e25586$var$useResizeObserver(context.scrollbarX, () => {
    var _context$scrollbarX;
    const height = ((_context$scrollbarX = context.scrollbarX) === null || _context$scrollbarX === void 0 ? void 0 : _context$scrollbarX.offsetHeight) || 0;
    context.onCornerHeightChange(height);
    setHeight(height);
  });
  $57acba87d6e25586$var$useResizeObserver(context.scrollbarY, () => {
    var _context$scrollbarY;
    const width = ((_context$scrollbarY = context.scrollbarY) === null || _context$scrollbarY === void 0 ? void 0 : _context$scrollbarY.offsetWidth) || 0;
    context.onCornerWidthChange(width);
    setWidth(width);
  });
  return hasSize ? /*#__PURE__*/(0,react_production_min.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, (0,esm_extends/* default */.Z)({}, cornerProps, {
    ref: forwardedRef,
    style: {
      width: width1,
      height: height1,
      position: 'absolute',
      right: context.dir === 'ltr' ? 0 : undefined,
      left: context.dir === 'rtl' ? 0 : undefined,
      bottom: 0,
      ...props.style
    }
  })) : null;
});
/* -----------------------------------------------------------------------------------------------*/
function $57acba87d6e25586$var$toInt(value) {
  return value ? parseInt(value, 10) : 0;
}
function $57acba87d6e25586$var$getThumbRatio(viewportSize, contentSize) {
  const ratio = viewportSize / contentSize;
  return isNaN(ratio) ? 0 : ratio;
}
function $57acba87d6e25586$var$getThumbSize(sizes) {
  const ratio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);
  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio; // minimum of 18 matches macOS minimum
  return Math.max(thumbSize, 18);
}
function $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = 'ltr') {
  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);
  const thumbCenter = thumbSizePx / 2;
  const offset = pointerOffset || thumbCenter;
  const thumbOffsetFromEnd = thumbSizePx - offset;
  const minPointerPos = sizes.scrollbar.paddingStart + offset;
  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;
  const maxScrollPos = sizes.content - sizes.viewport;
  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];
  const interpolate = $57acba87d6e25586$var$linearScale([minPointerPos, maxPointerPos], scrollRange);
  return interpolate(pointerPos);
}
function $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, dir = 'ltr') {
  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);
  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;
  const scrollbar = sizes.scrollbar.size - scrollbarPadding;
  const maxScrollPos = sizes.content - sizes.viewport;
  const maxThumbPos = scrollbar - thumbSizePx;
  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];
  const scrollWithoutMomentum = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(scrollPos, scrollClampRange);
  const interpolate = $57acba87d6e25586$var$linearScale([0, maxScrollPos], [0, maxThumbPos]);
  return interpolate(scrollWithoutMomentum);
} // https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js
function $57acba87d6e25586$var$linearScale(input, output) {
  return value => {
    if (input[0] === input[1] || output[0] === output[1]) return output[0];
    const ratio = (output[1] - output[0]) / (input[1] - input[0]);
    return output[0] + ratio * (value - input[0]);
  };
}
function $57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {
  return scrollPos > 0 && scrollPos < maxScrollPos;
} // Custom scroll handler to avoid scroll-linked effects
// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects
const $57acba87d6e25586$var$addUnlinkedScrollListener = (node, handler = () => {}) => {
  let prevPosition = {
    left: node.scrollLeft,
    top: node.scrollTop
  };
  let rAF = 0;
  (function loop() {
    const position = {
      left: node.scrollLeft,
      top: node.scrollTop
    };
    const isHorizontalScroll = prevPosition.left !== position.left;
    const isVerticalScroll = prevPosition.top !== position.top;
    if (isHorizontalScroll || isVerticalScroll) handler();
    prevPosition = position;
    rAF = window.requestAnimationFrame(loop);
  })();
  return () => window.cancelAnimationFrame(rAF);
};
function $57acba87d6e25586$var$useDebounceCallback(callback, delay) {
  const handleCallback = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  const debounceTimerRef = (0,react_production_min.useRef)(0);
  (0,react_production_min.useEffect)(() => () => window.clearTimeout(debounceTimerRef.current), []);
  return (0,react_production_min.useCallback)(() => {
    window.clearTimeout(debounceTimerRef.current);
    debounceTimerRef.current = window.setTimeout(handleCallback, delay);
  }, [handleCallback, delay]);
}
function $57acba87d6e25586$var$useResizeObserver(element, onResize) {
  const handleResize = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onResize);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let rAF = 0;
    if (element) {
      /**
      * Resize Observer will throw an often benign error that says `ResizeObserver loop
      * completed with undelivered notifications`. This means that ResizeObserver was not
      * able to deliver all observations within a single animation frame, so we use
      * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.
      * Further reading: https://github.com/WICG/resize-observer/issues/38
      */
      const resizeObserver = new ResizeObserver(() => {
        cancelAnimationFrame(rAF);
        rAF = window.requestAnimationFrame(handleResize);
      });
      resizeObserver.observe(element);
      return () => {
        window.cancelAnimationFrame(rAF);
        resizeObserver.unobserve(element);
      };
    }
  }, [element, handleResize]);
}
/* -----------------------------------------------------------------------------------------------*/
const $57acba87d6e25586$export$be92b6f5f03c0fe9 = $57acba87d6e25586$export$ccf8d8d7bbf3c2cc;
const $57acba87d6e25586$export$d5c6c08dc2d3ca7 = $57acba87d6e25586$export$a21cbf9f11fca853;
const $57acba87d6e25586$export$9a4e88b92edfce6b = $57acba87d6e25586$export$2fabd85d0eba3c57;
const $57acba87d6e25586$export$6521433ed15a34db = $57acba87d6e25586$export$9fba1154677d7cd2;
const $57acba87d6e25586$export$ac61190d9fc311a9 = $57acba87d6e25586$export$56969d565df7cc4b;

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/ScrollArea/ScrollArea.styles.js

var ScrollArea_styles_useStyles = createStyles((theme, {
  scrollbarSize,
  offsetScrollbars,
  scrollbarHovered,
  hidden
}, getRef) => ({
  root: {
    overflow: "hidden"
  },
  viewport: {
    width: "100%",
    height: "100%",
    paddingRight: offsetScrollbars ? scrollbarSize : void 0,
    paddingBottom: offsetScrollbars ? scrollbarSize : void 0
  },
  scrollbar: {
    display: hidden ? "none" : "flex",
    userSelect: "none",
    touchAction: "none",
    boxSizing: "border-box",
    padding: scrollbarSize / 5,
    transition: "background-color 150ms ease, opacity 150ms ease",
    "&:hover": {
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[8] : theme.colors.gray[0],
      [`& .${getRef("thumb")}`]: {
        backgroundColor: theme.colorScheme === "dark" ? theme.fn.rgba(theme.white, 0.5) : theme.fn.rgba(theme.black, 0.5)
      }
    },
    '&[data-orientation="vertical"]': {
      width: scrollbarSize
    },
    '&[data-orientation="horizontal"]': {
      flexDirection: "column",
      height: scrollbarSize
    },
    '&[data-state="hidden"]': {
      display: "none",
      opacity: 0
    }
  },
  thumb: {
    ref: getRef("thumb"),
    flex: 1,
    backgroundColor: theme.colorScheme === "dark" ? theme.fn.rgba(theme.white, 0.4) : theme.fn.rgba(theme.black, 0.4),
    borderRadius: scrollbarSize,
    position: "relative",
    transition: "background-color 150ms ease",
    display: hidden ? "none" : void 0,
    overflow: "hidden",
    "&::before": {
      content: '""',
      position: "absolute",
      top: "50%",
      left: "50%",
      transform: "translate(-50%, -50%)",
      width: "100%",
      height: "100%",
      minWidth: 44,
      minHeight: 44
    }
  },
  corner: {
    backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[0],
    transition: "opacity 150ms ease",
    opacity: scrollbarHovered ? 1 : 0,
    display: hidden ? "none" : void 0
  }
}));
/* harmony default export */ var ScrollArea_styles = (ScrollArea_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/ScrollArea/ScrollArea.js






var ScrollArea_defProp = Object.defineProperty;
var ScrollArea_defProps = Object.defineProperties;
var ScrollArea_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var ScrollArea_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ScrollArea_hasOwnProp = Object.prototype.hasOwnProperty;
var ScrollArea_propIsEnum = Object.prototype.propertyIsEnumerable;
var ScrollArea_defNormalProp = (obj, key, value) => key in obj ? ScrollArea_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ScrollArea_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ScrollArea_hasOwnProp.call(b, prop)) ScrollArea_defNormalProp(a, prop, b[prop]);
  if (ScrollArea_getOwnPropSymbols) for (var prop of ScrollArea_getOwnPropSymbols(b)) {
    if (ScrollArea_propIsEnum.call(b, prop)) ScrollArea_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ScrollArea_spreadProps = (a, b) => ScrollArea_defProps(a, ScrollArea_getOwnPropDescs(b));
var ScrollArea_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (ScrollArea_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && ScrollArea_getOwnPropSymbols) for (var prop of ScrollArea_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && ScrollArea_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const ScrollArea_defaultProps = {
  scrollbarSize: 12,
  scrollHideDelay: 1e3,
  type: "hover",
  offsetScrollbars: false
};
const _ScrollArea = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("ScrollArea", ScrollArea_defaultProps, props),
    {
      children,
      className,
      classNames,
      styles,
      scrollbarSize,
      scrollHideDelay,
      type,
      dir,
      offsetScrollbars,
      viewportRef,
      onScrollPositionChange,
      unstyled,
      viewportProps
    } = _a,
    others = ScrollArea_objRest(_a, ["children", "className", "classNames", "styles", "scrollbarSize", "scrollHideDelay", "type", "dir", "offsetScrollbars", "viewportRef", "onScrollPositionChange", "unstyled", "viewportProps"]);
  const [scrollbarHovered, setScrollbarHovered] = (0,react_production_min.useState)(false);
  const theme = useMantineTheme();
  const {
    classes,
    cx
  } = ScrollArea_styles({
    scrollbarSize,
    offsetScrollbars,
    scrollbarHovered,
    hidden: type === "never"
  }, {
    name: "ScrollArea",
    classNames,
    styles,
    unstyled
  });
  return /* @__PURE__ */react.createElement($57acba87d6e25586$export$be92b6f5f03c0fe9, {
    type: type === "never" ? "always" : type,
    scrollHideDelay,
    dir: dir || theme.dir,
    ref,
    asChild: true
  }, /* @__PURE__ */react.createElement(Box, ScrollArea_spreadValues({
    className: cx(classes.root, className)
  }, others), /* @__PURE__ */react.createElement($57acba87d6e25586$export$d5c6c08dc2d3ca7, ScrollArea_spreadProps(ScrollArea_spreadValues({}, viewportProps), {
    className: classes.viewport,
    ref: viewportRef,
    onScroll: typeof onScrollPositionChange === "function" ? ({
      currentTarget
    }) => onScrollPositionChange({
      x: currentTarget.scrollLeft,
      y: currentTarget.scrollTop
    }) : void 0
  }), children), /* @__PURE__ */react.createElement($57acba87d6e25586$export$9a4e88b92edfce6b, {
    orientation: "horizontal",
    className: classes.scrollbar,
    forceMount: true,
    onMouseEnter: () => setScrollbarHovered(true),
    onMouseLeave: () => setScrollbarHovered(false)
  }, /* @__PURE__ */react.createElement($57acba87d6e25586$export$6521433ed15a34db, {
    className: classes.thumb
  })), /* @__PURE__ */react.createElement($57acba87d6e25586$export$9a4e88b92edfce6b, {
    orientation: "vertical",
    className: classes.scrollbar,
    forceMount: true,
    onMouseEnter: () => setScrollbarHovered(true),
    onMouseLeave: () => setScrollbarHovered(false)
  }, /* @__PURE__ */react.createElement($57acba87d6e25586$export$6521433ed15a34db, {
    className: classes.thumb
  })), /* @__PURE__ */react.createElement($57acba87d6e25586$export$ac61190d9fc311a9, {
    className: classes.corner
  })));
});
const ScrollAreaAutosize = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("ScrollAreaAutosize", ScrollArea_defaultProps, props),
    {
      maxHeight,
      children,
      classNames,
      styles,
      scrollbarSize,
      scrollHideDelay,
      type,
      dir,
      offsetScrollbars,
      viewportRef,
      onScrollPositionChange,
      unstyled,
      sx
    } = _a,
    others = ScrollArea_objRest(_a, ["maxHeight", "children", "classNames", "styles", "scrollbarSize", "scrollHideDelay", "type", "dir", "offsetScrollbars", "viewportRef", "onScrollPositionChange", "unstyled", "sx"]);
  return /* @__PURE__ */react.createElement(Box, ScrollArea_spreadProps(ScrollArea_spreadValues({}, others), {
    ref,
    sx: [{
      display: "flex",
      maxHeight
    }, ...packSx(sx)]
  }), /* @__PURE__ */react.createElement(Box, {
    sx: {
      display: "flex",
      flexDirection: "column",
      flex: 1
    }
  }, /* @__PURE__ */react.createElement(_ScrollArea, {
    classNames,
    styles,
    scrollHideDelay,
    scrollbarSize,
    type,
    dir,
    offsetScrollbars,
    viewportRef,
    onScrollPositionChange,
    unstyled
  }, children)));
});
ScrollAreaAutosize.displayName = "@mantine/core/ScrollAreaAutosize";
_ScrollArea.displayName = "@mantine/core/ScrollArea";
_ScrollArea.Autosize = ScrollAreaAutosize;
const ScrollArea = _ScrollArea;

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectScrollArea/SelectScrollArea.js


var SelectScrollArea_defProp = Object.defineProperty;
var SelectScrollArea_defProps = Object.defineProperties;
var SelectScrollArea_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var SelectScrollArea_getOwnPropSymbols = Object.getOwnPropertySymbols;
var SelectScrollArea_hasOwnProp = Object.prototype.hasOwnProperty;
var SelectScrollArea_propIsEnum = Object.prototype.propertyIsEnumerable;
var SelectScrollArea_defNormalProp = (obj, key, value) => key in obj ? SelectScrollArea_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var SelectScrollArea_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (SelectScrollArea_hasOwnProp.call(b, prop)) SelectScrollArea_defNormalProp(a, prop, b[prop]);
  if (SelectScrollArea_getOwnPropSymbols) for (var prop of SelectScrollArea_getOwnPropSymbols(b)) {
    if (SelectScrollArea_propIsEnum.call(b, prop)) SelectScrollArea_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var SelectScrollArea_spreadProps = (a, b) => SelectScrollArea_defProps(a, SelectScrollArea_getOwnPropDescs(b));
var SelectScrollArea_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (SelectScrollArea_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && SelectScrollArea_getOwnPropSymbols) for (var prop of SelectScrollArea_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && SelectScrollArea_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const SelectScrollArea = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      style
    } = _b,
    others = SelectScrollArea_objRest(_b, ["style"]);
  return /* @__PURE__ */react.createElement(ScrollArea, SelectScrollArea_spreadProps(SelectScrollArea_spreadValues({}, others), {
    style: SelectScrollArea_spreadValues({
      width: "100%"
    }, style),
    viewportRef: ref
  }), others.children);
});
SelectScrollArea.displayName = "@mantine/core/SelectScrollArea";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/DefaultItem/DefaultItem.js

var DefaultItem_defProp = Object.defineProperty;
var DefaultItem_getOwnPropSymbols = Object.getOwnPropertySymbols;
var DefaultItem_hasOwnProp = Object.prototype.hasOwnProperty;
var DefaultItem_propIsEnum = Object.prototype.propertyIsEnumerable;
var DefaultItem_defNormalProp = (obj, key, value) => key in obj ? DefaultItem_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var DefaultItem_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (DefaultItem_hasOwnProp.call(b, prop)) DefaultItem_defNormalProp(a, prop, b[prop]);
  if (DefaultItem_getOwnPropSymbols) for (var prop of DefaultItem_getOwnPropSymbols(b)) {
    if (DefaultItem_propIsEnum.call(b, prop)) DefaultItem_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var DefaultItem_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (DefaultItem_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && DefaultItem_getOwnPropSymbols) for (var prop of DefaultItem_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && DefaultItem_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const DefaultItem = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      label,
      value
    } = _b,
    others = DefaultItem_objRest(_b, ["label", "value"]);
  return /* @__PURE__ */react.createElement("div", DefaultItem_spreadValues({
    ref
  }, others), label || value);
});
DefaultItem.displayName = "@mantine/core/DefaultItem";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectRightSection/ChevronIcon.js


var ChevronIcon_defProp = Object.defineProperty;
var ChevronIcon_getOwnPropSymbols = Object.getOwnPropertySymbols;
var ChevronIcon_hasOwnProp = Object.prototype.hasOwnProperty;
var ChevronIcon_propIsEnum = Object.prototype.propertyIsEnumerable;
var ChevronIcon_defNormalProp = (obj, key, value) => key in obj ? ChevronIcon_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var ChevronIcon_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (ChevronIcon_hasOwnProp.call(b, prop)) ChevronIcon_defNormalProp(a, prop, b[prop]);
  if (ChevronIcon_getOwnPropSymbols) for (var prop of ChevronIcon_getOwnPropSymbols(b)) {
    if (ChevronIcon_propIsEnum.call(b, prop)) ChevronIcon_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var ChevronIcon_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (ChevronIcon_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && ChevronIcon_getOwnPropSymbols) for (var prop of ChevronIcon_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && ChevronIcon_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const ChevronIcon_iconSizes = {
  xs: 14,
  sm: 18,
  md: 20,
  lg: 24,
  xl: 28
};
function ChevronIcon(_a) {
  var _b = _a,
    {
      size,
      error,
      style
    } = _b,
    others = ChevronIcon_objRest(_b, ["size", "error", "style"]);
  const theme = useMantineTheme();
  const _size = theme.fn.size({
    size,
    sizes: ChevronIcon_iconSizes
  });
  return /* @__PURE__ */react.createElement("svg", ChevronIcon_spreadValues({
    width: _size,
    height: _size,
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    style: ChevronIcon_spreadValues({
      color: error ? theme.colors.red[6] : theme.colors.gray[6]
    }, style),
    "data-chevron": true
  }, others), /* @__PURE__ */react.createElement("path", {
    d: "M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectRightSection/SelectRightSection.js



function SelectRightSection({
  shouldClear,
  clearButtonLabel,
  onClear,
  size,
  error,
  clearButtonTabIndex
}) {
  return shouldClear ? /* @__PURE__ */react.createElement(CloseButton, {
    variant: "transparent",
    "aria-label": clearButtonLabel,
    onClick: onClear,
    size,
    tabIndex: clearButtonTabIndex,
    onMouseDown: event => event.preventDefault()
  }) : /* @__PURE__ */react.createElement(ChevronIcon, {
    error,
    size
  });
}
SelectRightSection.displayName = "@mantine/core/SelectRightSection";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectRightSection/get-select-right-section-props.js


var get_select_right_section_props_defProp = Object.defineProperty;
var get_select_right_section_props_defProps = Object.defineProperties;
var get_select_right_section_props_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var get_select_right_section_props_getOwnPropSymbols = Object.getOwnPropertySymbols;
var get_select_right_section_props_hasOwnProp = Object.prototype.hasOwnProperty;
var get_select_right_section_props_propIsEnum = Object.prototype.propertyIsEnumerable;
var get_select_right_section_props_defNormalProp = (obj, key, value) => key in obj ? get_select_right_section_props_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var get_select_right_section_props_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (get_select_right_section_props_hasOwnProp.call(b, prop)) get_select_right_section_props_defNormalProp(a, prop, b[prop]);
  if (get_select_right_section_props_getOwnPropSymbols) for (var prop of get_select_right_section_props_getOwnPropSymbols(b)) {
    if (get_select_right_section_props_propIsEnum.call(b, prop)) get_select_right_section_props_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var get_select_right_section_props_spreadProps = (a, b) => get_select_right_section_props_defProps(a, get_select_right_section_props_getOwnPropDescs(b));
var get_select_right_section_props_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (get_select_right_section_props_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && get_select_right_section_props_getOwnPropSymbols) for (var prop of get_select_right_section_props_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && get_select_right_section_props_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const RIGHT_SECTION_WIDTH = {
  xs: 24,
  sm: 30,
  md: 34,
  lg: 44,
  xl: 54
};
function getSelectRightSectionProps(_a) {
  var _b = _a,
    {
      styles,
      rightSection,
      rightSectionWidth,
      theme
    } = _b,
    props = get_select_right_section_props_objRest(_b, ["styles", "rightSection", "rightSectionWidth", "theme"]);
  if (rightSection) {
    return {
      rightSection,
      rightSectionWidth,
      styles
    };
  }
  const _styles = typeof styles === "function" ? styles(theme) : styles;
  return {
    rightSectionWidth: theme.fn.size({
      size: props.size,
      sizes: RIGHT_SECTION_WIDTH
    }),
    rightSection: !props.readOnly && !(props.disabled && props.shouldClear) && /* @__PURE__ */react.createElement(SelectRightSection, get_select_right_section_props_spreadValues({}, props)),
    styles: get_select_right_section_props_spreadProps(get_select_right_section_props_spreadValues({}, _styles), {
      rightSection: get_select_right_section_props_spreadProps(get_select_right_section_props_spreadValues({}, _styles == null ? void 0 : _styles.rightSection), {
        pointerEvents: props.shouldClear ? void 0 : "none"
      })
    })
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Divider/Divider.styles.js

const Divider_styles_sizes = {
  xs: 1,
  sm: 2,
  md: 3,
  lg: 4,
  xl: 5
};
function getColor(theme, color) {
  const themeColor = theme.fn.variant({
    variant: "outline",
    color
  }).border;
  return typeof color === "string" && (color in theme.colors || color.split(".")[0] in theme.colors) ? themeColor : color === void 0 ? theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[4] : color;
}
var Divider_styles_useStyles = createStyles((theme, {
  size,
  variant,
  color
}) => ({
  root: {},
  withLabel: {
    borderTop: "0 !important"
  },
  left: {
    "&::before": {
      display: "none"
    }
  },
  right: {
    "&::after": {
      display: "none"
    }
  },
  label: {
    display: "flex",
    alignItems: "center",
    "&::before": {
      content: '""',
      flex: 1,
      height: 1,
      borderTop: `${theme.fn.size({
        size,
        sizes: Divider_styles_sizes
      })}px ${variant} ${getColor(theme, color)}`,
      marginRight: theme.spacing.xs
    },
    "&::after": {
      content: '""',
      flex: 1,
      borderTop: `${theme.fn.size({
        size,
        sizes: Divider_styles_sizes
      })}px ${variant} ${getColor(theme, color)}`,
      marginLeft: theme.spacing.xs
    }
  },
  labelDefaultStyles: {
    color: color === "dark" ? theme.colors.dark[1] : theme.fn.themeColor(color, theme.colorScheme === "dark" ? 5 : theme.fn.primaryShade(), false)
  },
  horizontal: {
    border: 0,
    borderTopWidth: theme.fn.size({
      size,
      sizes: Divider_styles_sizes
    }),
    borderTopColor: getColor(theme, color),
    borderTopStyle: variant,
    margin: 0
  },
  vertical: {
    border: 0,
    alignSelf: "stretch",
    height: "auto",
    borderLeftWidth: theme.fn.size({
      size,
      sizes: Divider_styles_sizes
    }),
    borderLeftColor: getColor(theme, color),
    borderLeftStyle: variant
  }
}));
/* harmony default export */ var Divider_styles = (Divider_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Divider/Divider.js





var Divider_defProp = Object.defineProperty;
var Divider_defProps = Object.defineProperties;
var Divider_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Divider_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Divider_hasOwnProp = Object.prototype.hasOwnProperty;
var Divider_propIsEnum = Object.prototype.propertyIsEnumerable;
var Divider_defNormalProp = (obj, key, value) => key in obj ? Divider_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Divider_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Divider_hasOwnProp.call(b, prop)) Divider_defNormalProp(a, prop, b[prop]);
  if (Divider_getOwnPropSymbols) for (var prop of Divider_getOwnPropSymbols(b)) {
    if (Divider_propIsEnum.call(b, prop)) Divider_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Divider_spreadProps = (a, b) => Divider_defProps(a, Divider_getOwnPropDescs(b));
var Divider_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Divider_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Divider_getOwnPropSymbols) for (var prop of Divider_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Divider_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Divider_defaultProps = {
  orientation: "horizontal",
  size: "xs",
  labelPosition: "left",
  variant: "solid"
};
const Divider_Divider = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Divider", Divider_defaultProps, props),
    {
      className,
      color,
      orientation,
      size,
      label,
      labelPosition,
      labelProps,
      variant,
      styles,
      classNames,
      unstyled
    } = _a,
    others = Divider_objRest(_a, ["className", "color", "orientation", "size", "label", "labelPosition", "labelProps", "variant", "styles", "classNames", "unstyled"]);
  const {
    classes,
    cx
  } = Divider_styles({
    color,
    size,
    variant
  }, {
    classNames,
    styles,
    unstyled,
    name: "Divider"
  });
  const vertical = orientation === "vertical";
  const horizontal = orientation === "horizontal";
  const withLabel = !!label && horizontal;
  const useLabelDefaultStyles = !(labelProps == null ? void 0 : labelProps.color);
  return /* @__PURE__ */react.createElement(Box, Divider_spreadValues({
    ref,
    className: cx(classes.root, {
      [classes.vertical]: vertical,
      [classes.horizontal]: horizontal,
      [classes.withLabel]: withLabel
    }, className),
    role: "separator"
  }, others), withLabel && /* @__PURE__ */react.createElement(Text, Divider_spreadProps(Divider_spreadValues({}, labelProps), {
    size: (labelProps == null ? void 0 : labelProps.size) || "xs",
    sx: {
      marginTop: 2
    },
    className: cx(classes.label, classes[labelPosition], {
      [classes.labelDefaultStyles]: useLabelDefaultStyles
    })
  }), label));
});
Divider_Divider.displayName = "@mantine/core/Divider";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectItems/SelectItems.styles.js

var SelectItems_styles_defProp = Object.defineProperty;
var SelectItems_styles_defProps = Object.defineProperties;
var SelectItems_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var SelectItems_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var SelectItems_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var SelectItems_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var SelectItems_styles_defNormalProp = (obj, key, value) => key in obj ? SelectItems_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var SelectItems_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (SelectItems_styles_hasOwnProp.call(b, prop)) SelectItems_styles_defNormalProp(a, prop, b[prop]);
  if (SelectItems_styles_getOwnPropSymbols) for (var prop of SelectItems_styles_getOwnPropSymbols(b)) {
    if (SelectItems_styles_propIsEnum.call(b, prop)) SelectItems_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var SelectItems_styles_spreadProps = (a, b) => SelectItems_styles_defProps(a, SelectItems_styles_getOwnPropDescs(b));
var SelectItems_styles_useStyles = createStyles((theme, {
  size
}) => ({
  item: SelectItems_styles_spreadProps(SelectItems_styles_spreadValues({}, theme.fn.fontStyles()), {
    boxSizing: "border-box",
    textAlign: "left",
    width: "100%",
    padding: `${theme.fn.size({
      size,
      sizes: theme.spacing
    }) / 1.5}px ${theme.fn.size({
      size,
      sizes: theme.spacing
    })}px`,
    cursor: "pointer",
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }),
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
    borderRadius: theme.fn.radius(),
    "&[data-hovered]": {
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[1]
    },
    "&[data-selected]": SelectItems_styles_spreadValues({
      backgroundColor: theme.fn.variant({
        variant: "filled"
      }).background,
      color: theme.fn.variant({
        variant: "filled"
      }).color
    }, theme.fn.hover({
      backgroundColor: theme.fn.variant({
        variant: "filled"
      }).hover
    })),
    "&[data-disabled]": {
      cursor: "default",
      color: theme.colors.dark[2]
    }
  }),
  nothingFound: {
    boxSizing: "border-box",
    color: theme.colors.gray[6],
    paddingTop: theme.fn.size({
      size,
      sizes: theme.spacing
    }) / 2,
    paddingBottom: theme.fn.size({
      size,
      sizes: theme.spacing
    }) / 2,
    textAlign: "center"
  },
  separator: {
    boxSizing: "border-box",
    textAlign: "left",
    width: "100%",
    padding: `${theme.fn.size({
      size,
      sizes: theme.spacing
    }) / 1.5}px ${theme.fn.size({
      size,
      sizes: theme.spacing
    })}px`
  },
  separatorLabel: {
    color: theme.colorScheme === "dark" ? theme.colors.dark[3] : theme.colors.gray[5]
  }
}));
/* harmony default export */ var SelectItems_styles = (SelectItems_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectItems/SelectItems.js





var SelectItems_defProp = Object.defineProperty;
var SelectItems_getOwnPropSymbols = Object.getOwnPropertySymbols;
var SelectItems_hasOwnProp = Object.prototype.hasOwnProperty;
var SelectItems_propIsEnum = Object.prototype.propertyIsEnumerable;
var SelectItems_defNormalProp = (obj, key, value) => key in obj ? SelectItems_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var SelectItems_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (SelectItems_hasOwnProp.call(b, prop)) SelectItems_defNormalProp(a, prop, b[prop]);
  if (SelectItems_getOwnPropSymbols) for (var prop of SelectItems_getOwnPropSymbols(b)) {
    if (SelectItems_propIsEnum.call(b, prop)) SelectItems_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
function SelectItems({
  data,
  hovered,
  classNames,
  styles,
  isItemSelected,
  uuid,
  __staticSelector,
  onItemHover,
  onItemSelect,
  itemsRefs,
  itemComponent: Item,
  size,
  nothingFound,
  creatable,
  createLabel,
  unstyled
}) {
  const {
    classes
  } = SelectItems_styles({
    size
  }, {
    classNames,
    styles,
    unstyled,
    name: __staticSelector
  });
  const unGroupedItems = [];
  const groupedItems = [];
  let creatableDataIndex = null;
  const constructItemComponent = (item, index) => {
    const selected = typeof isItemSelected === "function" ? isItemSelected(item.value) : false;
    return /* @__PURE__ */react.createElement(Item, SelectItems_spreadValues({
      key: item.value,
      className: classes.item,
      "data-disabled": item.disabled || void 0,
      "data-hovered": !item.disabled && hovered === index || void 0,
      "data-selected": !item.disabled && selected || void 0,
      onMouseEnter: () => onItemHover(index),
      id: `${uuid}-${index}`,
      role: "option",
      tabIndex: -1,
      "aria-selected": hovered === index,
      ref: node => {
        if (itemsRefs && itemsRefs.current) {
          itemsRefs.current[item.value] = node;
        }
      },
      onMouseDown: !item.disabled ? event => {
        event.preventDefault();
        onItemSelect(item);
      } : null,
      disabled: item.disabled
    }, item));
  };
  let groupName = null;
  data.forEach((item, index) => {
    if (item.creatable) {
      creatableDataIndex = index;
    } else if (!item.group) {
      unGroupedItems.push(constructItemComponent(item, index));
    } else {
      if (groupName !== item.group) {
        groupName = item.group;
        groupedItems.push( /* @__PURE__ */react.createElement("div", {
          className: classes.separator,
          key: `__mantine-divider-${index}`
        }, /* @__PURE__ */react.createElement(Divider_Divider, {
          classNames: {
            label: classes.separatorLabel
          },
          label: item.group
        })));
      }
      groupedItems.push(constructItemComponent(item, index));
    }
  });
  if (creatable) {
    const creatableDataItem = data[creatableDataIndex];
    unGroupedItems.push( /* @__PURE__ */react.createElement("div", {
      key: random_id_randomId(),
      className: classes.item,
      "data-hovered": hovered === creatableDataIndex || void 0,
      onMouseEnter: () => onItemHover(creatableDataIndex),
      onMouseDown: event => {
        event.preventDefault();
        onItemSelect(creatableDataItem);
      },
      tabIndex: -1,
      ref: node => {
        if (itemsRefs && itemsRefs.current) {
          itemsRefs.current[creatableDataItem.value] = node;
        }
      }
    }, createLabel));
  }
  if (groupedItems.length > 0 && unGroupedItems.length > 0) {
    unGroupedItems.unshift( /* @__PURE__ */react.createElement("div", {
      className: classes.separator,
      key: "empty-group-separator"
    }, /* @__PURE__ */react.createElement(Divider_Divider, null)));
  }
  return groupedItems.length > 0 || unGroupedItems.length > 0 ? /* @__PURE__ */react.createElement(react.Fragment, null, groupedItems, unGroupedItems) : /* @__PURE__ */react.createElement(Text, {
    size,
    unstyled,
    className: classes.nothingFound
  }, nothingFound);
}
SelectItems.displayName = "@mantine/core/SelectItems";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectPopover/SelectPopover.styles.js

var SelectPopover_styles_useStyles = createStyles(() => ({
  dropdown: {},
  itemsWrapper: {
    padding: 4,
    display: "flex",
    width: "100%",
    boxSizing: "border-box"
  }
}));
/* harmony default export */ var SelectPopover_styles = (SelectPopover_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/SelectPopover/SelectPopover.js





var SelectPopover_defProp = Object.defineProperty;
var SelectPopover_getOwnPropSymbols = Object.getOwnPropertySymbols;
var SelectPopover_hasOwnProp = Object.prototype.hasOwnProperty;
var SelectPopover_propIsEnum = Object.prototype.propertyIsEnumerable;
var SelectPopover_defNormalProp = (obj, key, value) => key in obj ? SelectPopover_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var SelectPopover_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (SelectPopover_hasOwnProp.call(b, prop)) SelectPopover_defNormalProp(a, prop, b[prop]);
  if (SelectPopover_getOwnPropSymbols) for (var prop of SelectPopover_getOwnPropSymbols(b)) {
    if (SelectPopover_propIsEnum.call(b, prop)) SelectPopover_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var SelectPopover_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (SelectPopover_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && SelectPopover_getOwnPropSymbols) for (var prop of SelectPopover_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && SelectPopover_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function SelectPopoverDropdown(_a) {
  var _b = _a,
    {
      children,
      component = "div",
      maxHeight = 220,
      direction = "column",
      id,
      innerRef,
      __staticSelector,
      styles,
      classNames,
      unstyled
    } = _b,
    others = SelectPopover_objRest(_b, ["children", "component", "maxHeight", "direction", "id", "innerRef", "__staticSelector", "styles", "classNames", "unstyled"]);
  const {
    classes
  } = SelectPopover_styles(null, {
    name: __staticSelector,
    styles,
    classNames,
    unstyled
  });
  return /* @__PURE__ */react.createElement(Popover_Popover.Dropdown, SelectPopover_spreadValues({
    p: 0,
    onMouseDown: event => event.preventDefault()
  }, others), /* @__PURE__ */react.createElement("div", {
    style: {
      maxHeight,
      display: "flex"
    }
  }, /* @__PURE__ */react.createElement(Box, {
    component: component || "div",
    id: `${id}-items`,
    "aria-labelledby": `${id}-label`,
    role: "listbox",
    onMouseDown: event => event.preventDefault(),
    style: {
      flex: 1,
      overflowY: component !== SelectScrollArea ? "auto" : void 0
    },
    "data-combobox-popover": true,
    ref: innerRef
  }, /* @__PURE__ */react.createElement("div", {
    className: classes.itemsWrapper,
    style: {
      flexDirection: direction
    }
  }, children))));
}
function SelectPopover({
  opened,
  transition = "fade",
  transitionDuration = 0,
  shadow,
  withinPortal,
  children,
  __staticSelector,
  onDirectionChange,
  switchDirectionOnFlip,
  zIndex,
  dropdownPosition,
  positionDependencies = [],
  classNames,
  styles,
  unstyled,
  readOnly
}) {
  return /* @__PURE__ */react.createElement(Popover_Popover, {
    unstyled,
    classNames,
    styles,
    width: "target",
    withRoles: false,
    opened,
    middlewares: {
      flip: dropdownPosition === "flip",
      shift: false
    },
    position: dropdownPosition === "flip" ? "bottom" : dropdownPosition,
    positionDependencies,
    zIndex,
    __staticSelector,
    withinPortal,
    transition,
    transitionDuration,
    shadow,
    disabled: readOnly,
    onPositionChange: nextPosition => switchDirectionOnFlip && (onDirectionChange == null ? void 0 : onDirectionChange(nextPosition === "top" ? "column-reverse" : "column"))
  }, children);
}
SelectPopover.Target = Popover_Popover.Target;
SelectPopover.Dropdown = SelectPopoverDropdown;

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/filter-data/filter-data.js
function filterData({
  data,
  searchable,
  limit,
  searchValue,
  filter,
  value,
  filterDataOnExactSearchMatch
}) {
  if (!searchable) {
    return data;
  }
  const selected = value != null ? data.find(item => item.value === value) || null : null;
  if (selected && !filterDataOnExactSearchMatch && (selected == null ? void 0 : selected.label) === searchValue) {
    if (limit) {
      if (limit >= data.length) {
        return data;
      }
      const firstIndex = data.indexOf(selected);
      const lastIndex = firstIndex + limit;
      const firstIndexOffset = lastIndex - data.length;
      if (firstIndexOffset > 0) {
        return data.slice(firstIndex - firstIndexOffset);
      }
      return data.slice(firstIndex, lastIndex);
    }
    return data;
  }
  const result = [];
  for (let i = 0; i < data.length; i += 1) {
    if (filter(searchValue, data[i])) {
      result.push(data[i]);
    }
    if (result.length >= limit) {
      break;
    }
  }
  return result;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/Select.styles.js

var Select_styles_useStyles = createStyles(() => ({
  input: {
    "&:not(:disabled)": {
      cursor: "pointer",
      "&::selection": {
        backgroundColor: "transparent"
      }
    }
  }
}));
/* harmony default export */ var Select_styles = (Select_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/use-input-props.js



var use_input_props_defProp = Object.defineProperty;
var use_input_props_defProps = Object.defineProperties;
var use_input_props_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var use_input_props_getOwnPropSymbols = Object.getOwnPropertySymbols;
var use_input_props_hasOwnProp = Object.prototype.hasOwnProperty;
var use_input_props_propIsEnum = Object.prototype.propertyIsEnumerable;
var use_input_props_defNormalProp = (obj, key, value) => key in obj ? use_input_props_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var use_input_props_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (use_input_props_hasOwnProp.call(b, prop)) use_input_props_defNormalProp(a, prop, b[prop]);
  if (use_input_props_getOwnPropSymbols) for (var prop of use_input_props_getOwnPropSymbols(b)) {
    if (use_input_props_propIsEnum.call(b, prop)) use_input_props_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var use_input_props_spreadProps = (a, b) => use_input_props_defProps(a, use_input_props_getOwnPropDescs(b));
var use_input_props_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (use_input_props_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && use_input_props_getOwnPropSymbols) for (var prop of use_input_props_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && use_input_props_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function useInputProps(component, defaultProps, props) {
  const _a = useComponentDefaultProps(component, defaultProps, props),
    {
      label,
      description,
      error,
      required,
      classNames,
      styles,
      className,
      unstyled,
      __staticSelector,
      sx,
      errorProps,
      labelProps,
      descriptionProps,
      wrapperProps,
      id,
      size,
      style,
      inputContainer,
      inputWrapperOrder,
      withAsterisk
    } = _a,
    others = use_input_props_objRest(_a, ["label", "description", "error", "required", "classNames", "styles", "className", "unstyled", "__staticSelector", "sx", "errorProps", "labelProps", "descriptionProps", "wrapperProps", "id", "size", "style", "inputContainer", "inputWrapperOrder", "withAsterisk"]);
  const uid = useId(id);
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  return use_input_props_spreadProps(use_input_props_spreadValues({}, rest), {
    classNames,
    styles,
    unstyled,
    wrapperProps: use_input_props_spreadValues(use_input_props_spreadValues({
      label,
      description,
      error,
      required,
      classNames,
      className,
      __staticSelector,
      sx,
      errorProps,
      labelProps,
      descriptionProps,
      unstyled,
      styles,
      id: uid,
      size,
      style,
      inputContainer,
      inputWrapperOrder,
      withAsterisk
    }, wrapperProps), systemStyles),
    inputProps: {
      required,
      classNames,
      styles,
      unstyled,
      id: uid,
      size,
      __staticSelector,
      invalid: !!error
    }
  });
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputLabel/InputLabel.styles.js

var InputLabel_styles_useStyles = createStyles((theme, {
  size
}) => ({
  label: {
    display: "inline-block",
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }),
    fontWeight: 500,
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors.gray[9],
    wordBreak: "break-word",
    cursor: "default",
    WebkitTapHighlightColor: "transparent"
  },
  required: {
    color: theme.fn.variant({
      variant: "filled",
      color: "red"
    }).background
  }
}));
/* harmony default export */ var InputLabel_styles = (InputLabel_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputLabel/InputLabel.js




var InputLabel_defProp = Object.defineProperty;
var InputLabel_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputLabel_hasOwnProp = Object.prototype.hasOwnProperty;
var InputLabel_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputLabel_defNormalProp = (obj, key, value) => key in obj ? InputLabel_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputLabel_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputLabel_hasOwnProp.call(b, prop)) InputLabel_defNormalProp(a, prop, b[prop]);
  if (InputLabel_getOwnPropSymbols) for (var prop of InputLabel_getOwnPropSymbols(b)) {
    if (InputLabel_propIsEnum.call(b, prop)) InputLabel_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputLabel_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InputLabel_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InputLabel_getOwnPropSymbols) for (var prop of InputLabel_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InputLabel_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const InputLabel_defaultProps = {
  labelElement: "label",
  size: "sm"
};
const InputLabel = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("InputLabel", InputLabel_defaultProps, props),
    {
      labelElement,
      children,
      required,
      size,
      classNames,
      styles,
      unstyled,
      className,
      htmlFor,
      __staticSelector
    } = _a,
    others = InputLabel_objRest(_a, ["labelElement", "children", "required", "size", "classNames", "styles", "unstyled", "className", "htmlFor", "__staticSelector"]);
  const {
    classes,
    cx
  } = InputLabel_styles({
    size
  }, {
    name: ["InputWrapper", __staticSelector],
    classNames,
    styles,
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, InputLabel_spreadValues({
    component: labelElement,
    ref,
    className: cx(classes.label, className),
    htmlFor: labelElement === "label" ? htmlFor : void 0
  }, others), children, required && /* @__PURE__ */react.createElement("span", {
    className: classes.required,
    "aria-hidden": true
  }, " *"));
});
InputLabel.displayName = "@mantine/core/InputLabel";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputError/InputError.styles.js

var InputError_styles_useStyles = createStyles((theme, {
  size
}) => ({
  error: {
    wordBreak: "break-word",
    color: theme.fn.variant({
      variant: "filled",
      color: "red"
    }).background,
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }) - 2,
    lineHeight: 1.2,
    display: "block"
  }
}));
/* harmony default export */ var InputError_styles = (InputError_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputError/InputError.js




var InputError_defProp = Object.defineProperty;
var InputError_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputError_hasOwnProp = Object.prototype.hasOwnProperty;
var InputError_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputError_defNormalProp = (obj, key, value) => key in obj ? InputError_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputError_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputError_hasOwnProp.call(b, prop)) InputError_defNormalProp(a, prop, b[prop]);
  if (InputError_getOwnPropSymbols) for (var prop of InputError_getOwnPropSymbols(b)) {
    if (InputError_propIsEnum.call(b, prop)) InputError_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputError_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InputError_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InputError_getOwnPropSymbols) for (var prop of InputError_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InputError_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const InputError_defaultProps = {
  size: "sm"
};
const InputError = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("InputError", InputError_defaultProps, props),
    {
      children,
      className,
      classNames,
      styles,
      unstyled,
      size,
      __staticSelector
    } = _a,
    others = InputError_objRest(_a, ["children", "className", "classNames", "styles", "unstyled", "size", "__staticSelector"]);
  const {
    classes,
    cx
  } = InputError_styles({
    size
  }, {
    name: ["InputWrapper", __staticSelector],
    classNames,
    styles,
    unstyled
  });
  return /* @__PURE__ */react.createElement(Text, InputError_spreadValues({
    className: cx(classes.error, className),
    ref
  }, others), children);
});
InputError.displayName = "@mantine/core/InputError";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputDescription/InputDescription.styles.js

var InputDescription_styles_useStyles = createStyles((theme, {
  size
}) => ({
  description: {
    wordBreak: "break-word",
    color: theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[6],
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }) - 2,
    lineHeight: 1.2,
    display: "block"
  }
}));
/* harmony default export */ var InputDescription_styles = (InputDescription_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputDescription/InputDescription.js




var InputDescription_defProp = Object.defineProperty;
var InputDescription_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputDescription_hasOwnProp = Object.prototype.hasOwnProperty;
var InputDescription_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputDescription_defNormalProp = (obj, key, value) => key in obj ? InputDescription_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputDescription_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputDescription_hasOwnProp.call(b, prop)) InputDescription_defNormalProp(a, prop, b[prop]);
  if (InputDescription_getOwnPropSymbols) for (var prop of InputDescription_getOwnPropSymbols(b)) {
    if (InputDescription_propIsEnum.call(b, prop)) InputDescription_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputDescription_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InputDescription_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InputDescription_getOwnPropSymbols) for (var prop of InputDescription_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InputDescription_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const InputDescription_defaultProps = {
  size: "sm"
};
const InputDescription = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("InputDescription", InputDescription_defaultProps, props),
    {
      children,
      className,
      classNames,
      styles,
      unstyled,
      size,
      __staticSelector
    } = _a,
    others = InputDescription_objRest(_a, ["children", "className", "classNames", "styles", "unstyled", "size", "__staticSelector"]);
  const {
    classes,
    cx
  } = InputDescription_styles({
    size
  }, {
    name: ["InputWrapper", __staticSelector],
    classNames,
    styles,
    unstyled
  });
  return /* @__PURE__ */react.createElement(Text, InputDescription_spreadValues({
    color: "dimmed",
    className: cx(classes.description, className),
    ref,
    unstyled
  }, others), children);
});
InputDescription.displayName = "@mantine/core/InputDescription";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputWrapper.context.js

const InputWrapperContext = (0,react_production_min.createContext)({
  offsetBottom: false,
  offsetTop: false,
  describedBy: void 0
});
const InputWrapperProvider = InputWrapperContext.Provider;
const useInputWrapperContext = () => (0,react_production_min.useContext)(InputWrapperContext);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputWrapper/get-input-offsets.js
function getInputOffsets(inputWrapperOrder, {
  hasDescription,
  hasError
}) {
  const inputIndex = inputWrapperOrder.findIndex(part => part === "input");
  const aboveInput = inputWrapperOrder[inputIndex - 1];
  const belowInput = inputWrapperOrder[inputIndex + 1];
  const offsetTop = hasDescription && aboveInput === "description" || hasError && aboveInput === "error";
  const offsetBottom = hasDescription && belowInput === "description" || hasError && belowInput === "error";
  return {
    offsetBottom,
    offsetTop
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputWrapper/InputWrapper.styles.js

var InputWrapper_styles_defProp = Object.defineProperty;
var InputWrapper_styles_defProps = Object.defineProperties;
var InputWrapper_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var InputWrapper_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputWrapper_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var InputWrapper_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputWrapper_styles_defNormalProp = (obj, key, value) => key in obj ? InputWrapper_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputWrapper_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputWrapper_styles_hasOwnProp.call(b, prop)) InputWrapper_styles_defNormalProp(a, prop, b[prop]);
  if (InputWrapper_styles_getOwnPropSymbols) for (var prop of InputWrapper_styles_getOwnPropSymbols(b)) {
    if (InputWrapper_styles_propIsEnum.call(b, prop)) InputWrapper_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputWrapper_styles_spreadProps = (a, b) => InputWrapper_styles_defProps(a, InputWrapper_styles_getOwnPropDescs(b));
var InputWrapper_styles_useStyles = createStyles(theme => ({
  root: InputWrapper_styles_spreadProps(InputWrapper_styles_spreadValues({}, theme.fn.fontStyles()), {
    lineHeight: theme.lineHeight
  })
}));
/* harmony default export */ var InputWrapper_styles = (InputWrapper_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputWrapper/InputWrapper.js









var InputWrapper_defProp = Object.defineProperty;
var InputWrapper_defProps = Object.defineProperties;
var InputWrapper_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var InputWrapper_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputWrapper_hasOwnProp = Object.prototype.hasOwnProperty;
var InputWrapper_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputWrapper_defNormalProp = (obj, key, value) => key in obj ? InputWrapper_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputWrapper_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputWrapper_hasOwnProp.call(b, prop)) InputWrapper_defNormalProp(a, prop, b[prop]);
  if (InputWrapper_getOwnPropSymbols) for (var prop of InputWrapper_getOwnPropSymbols(b)) {
    if (InputWrapper_propIsEnum.call(b, prop)) InputWrapper_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputWrapper_spreadProps = (a, b) => InputWrapper_defProps(a, InputWrapper_getOwnPropDescs(b));
var InputWrapper_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InputWrapper_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InputWrapper_getOwnPropSymbols) for (var prop of InputWrapper_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InputWrapper_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const InputWrapper_defaultProps = {
  labelElement: "label",
  size: "sm",
  inputContainer: children => children,
  inputWrapperOrder: ["label", "description", "input", "error"]
};
const InputWrapper = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("InputWrapper", InputWrapper_defaultProps, props),
    {
      className,
      label,
      children,
      required,
      id,
      error,
      description,
      labelElement,
      labelProps,
      descriptionProps,
      errorProps,
      classNames,
      styles,
      size,
      inputContainer,
      __staticSelector,
      unstyled,
      inputWrapperOrder,
      withAsterisk
    } = _a,
    others = InputWrapper_objRest(_a, ["className", "label", "children", "required", "id", "error", "description", "labelElement", "labelProps", "descriptionProps", "errorProps", "classNames", "styles", "size", "inputContainer", "__staticSelector", "unstyled", "inputWrapperOrder", "withAsterisk"]);
  const {
    classes,
    cx
  } = InputWrapper_styles(null, {
    classNames,
    styles,
    name: ["InputWrapper", __staticSelector],
    unstyled
  });
  const sharedProps = {
    classNames,
    styles,
    unstyled,
    size,
    __staticSelector
  };
  const isRequired = typeof withAsterisk === "boolean" ? withAsterisk : required;
  const errorId = id ? `${id}-error` : errorProps == null ? void 0 : errorProps.id;
  const descriptionId = id ? `${id}-description` : descriptionProps == null ? void 0 : descriptionProps.id;
  const hasError = !!error && typeof error !== "boolean";
  const _describedBy = `${hasError ? errorId : ""} ${description ? descriptionId : ""}`;
  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : void 0;
  const _label = label && /* @__PURE__ */react.createElement(InputLabel, InputWrapper_spreadValues(InputWrapper_spreadValues({
    key: "label",
    labelElement,
    id: id ? `${id}-label` : void 0,
    htmlFor: id,
    required: isRequired
  }, sharedProps), labelProps), label);
  const _description = description && /* @__PURE__ */react.createElement(InputDescription, InputWrapper_spreadProps(InputWrapper_spreadValues(InputWrapper_spreadValues({
    key: "description"
  }, descriptionProps), sharedProps), {
    size: (descriptionProps == null ? void 0 : descriptionProps.size) || sharedProps.size,
    id: (descriptionProps == null ? void 0 : descriptionProps.id) || descriptionId
  }), description);
  const _input = /* @__PURE__ */react.createElement(react_production_min.Fragment, {
    key: "input"
  }, inputContainer(children));
  const _error = typeof error !== "boolean" && error && /* @__PURE__ */react.createElement(InputError, InputWrapper_spreadProps(InputWrapper_spreadValues(InputWrapper_spreadValues({}, errorProps), sharedProps), {
    size: (errorProps == null ? void 0 : errorProps.size) || sharedProps.size,
    key: "error",
    id: (errorProps == null ? void 0 : errorProps.id) || errorId
  }), error);
  const content = inputWrapperOrder.map(part => {
    switch (part) {
      case "label":
        return _label;
      case "input":
        return _input;
      case "description":
        return _description;
      case "error":
        return _error;
      default:
        return null;
    }
  });
  return /* @__PURE__ */react.createElement(InputWrapperProvider, {
    value: InputWrapper_spreadValues({
      describedBy
    }, getInputOffsets(inputWrapperOrder, {
      hasDescription: !!_description,
      hasError: !!_error
    }))
  }, /* @__PURE__ */react.createElement(Box, InputWrapper_spreadValues({
    className: cx(classes.root, className),
    ref
  }, others), content));
});
InputWrapper.displayName = "@mantine/core/InputWrapper";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/InputPlaceholder/InputPlaceholder.js




var InputPlaceholder_defProp = Object.defineProperty;
var InputPlaceholder_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InputPlaceholder_hasOwnProp = Object.prototype.hasOwnProperty;
var InputPlaceholder_propIsEnum = Object.prototype.propertyIsEnumerable;
var InputPlaceholder_defNormalProp = (obj, key, value) => key in obj ? InputPlaceholder_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InputPlaceholder_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InputPlaceholder_hasOwnProp.call(b, prop)) InputPlaceholder_defNormalProp(a, prop, b[prop]);
  if (InputPlaceholder_getOwnPropSymbols) for (var prop of InputPlaceholder_getOwnPropSymbols(b)) {
    if (InputPlaceholder_propIsEnum.call(b, prop)) InputPlaceholder_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InputPlaceholder_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InputPlaceholder_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InputPlaceholder_getOwnPropSymbols) for (var prop of InputPlaceholder_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InputPlaceholder_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const InputPlaceholder_defaultProps = {};
const InputPlaceholder = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("InputPlaceholder", InputPlaceholder_defaultProps, props),
    {
      sx
    } = _a,
    others = InputPlaceholder_objRest(_a, ["sx"]);
  return /* @__PURE__ */react.createElement(Box, InputPlaceholder_spreadValues({
    component: "span",
    sx: [theme => theme.fn.placeholderStyles(), ...packSx(sx)],
    ref
  }, others));
});
InputPlaceholder.displayName = "@mantine/core/InputPlaceholder";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Input/Input.js












var Input_defProp = Object.defineProperty;
var Input_defProps = Object.defineProperties;
var Input_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Input_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Input_hasOwnProp = Object.prototype.hasOwnProperty;
var Input_propIsEnum = Object.prototype.propertyIsEnumerable;
var Input_defNormalProp = (obj, key, value) => key in obj ? Input_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Input_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Input_hasOwnProp.call(b, prop)) Input_defNormalProp(a, prop, b[prop]);
  if (Input_getOwnPropSymbols) for (var prop of Input_getOwnPropSymbols(b)) {
    if (Input_propIsEnum.call(b, prop)) Input_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Input_spreadProps = (a, b) => Input_defProps(a, Input_getOwnPropDescs(b));
var Input_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Input_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Input_getOwnPropSymbols) for (var prop of Input_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Input_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Input_defaultProps = {
  rightSectionWidth: 36,
  size: "sm",
  variant: "default"
};
const _Input = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Input", Input_defaultProps, props),
    {
      className,
      invalid,
      required,
      disabled,
      variant,
      icon,
      style,
      rightSectionWidth,
      iconWidth,
      rightSection,
      rightSectionProps,
      radius,
      size,
      wrapperProps,
      classNames,
      styles,
      __staticSelector,
      multiline,
      sx,
      unstyled,
      pointer
    } = _a,
    others = Input_objRest(_a, ["className", "invalid", "required", "disabled", "variant", "icon", "style", "rightSectionWidth", "iconWidth", "rightSection", "rightSectionProps", "radius", "size", "wrapperProps", "classNames", "styles", "__staticSelector", "multiline", "sx", "unstyled", "pointer"]);
  const {
    offsetBottom,
    offsetTop,
    describedBy
  } = useInputWrapperContext();
  const {
    classes,
    cx
  } = Input_styles({
    radius,
    size,
    multiline,
    variant,
    invalid,
    rightSectionWidth,
    iconWidth,
    withRightSection: !!rightSection,
    offsetBottom,
    offsetTop,
    pointer
  }, {
    classNames,
    styles,
    name: ["Input", __staticSelector],
    unstyled
  });
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  return /* @__PURE__ */react.createElement(Box, Input_spreadValues(Input_spreadValues({
    className: cx(classes.wrapper, className),
    sx,
    style
  }, systemStyles), wrapperProps), icon && /* @__PURE__ */react.createElement("div", {
    className: classes.icon
  }, icon), /* @__PURE__ */react.createElement(Box, Input_spreadProps(Input_spreadValues({
    component: "input"
  }, rest), {
    ref,
    required,
    "aria-invalid": invalid,
    "aria-describedby": describedBy,
    disabled,
    className: cx(classes[`${variant}Variant`], classes.input, {
      [classes.withIcon]: icon,
      [classes.invalid]: invalid,
      [classes.disabled]: disabled
    })
  })), rightSection && /* @__PURE__ */react.createElement("div", Input_spreadProps(Input_spreadValues({}, rightSectionProps), {
    className: classes.rightSection
  }), rightSection));
});
_Input.displayName = "@mantine/core/Input";
_Input.Wrapper = InputWrapper;
_Input.Label = InputLabel;
_Input.Description = InputDescription;
_Input.Error = InputError;
_Input.Placeholder = InputPlaceholder;
const Input_Input = createPolymorphicComponent(_Input);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Select/Select.js













var Select_defProp = Object.defineProperty;
var Select_defProps = Object.defineProperties;
var Select_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Select_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Select_hasOwnProp = Object.prototype.hasOwnProperty;
var Select_propIsEnum = Object.prototype.propertyIsEnumerable;
var Select_defNormalProp = (obj, key, value) => key in obj ? Select_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Select_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Select_hasOwnProp.call(b, prop)) Select_defNormalProp(a, prop, b[prop]);
  if (Select_getOwnPropSymbols) for (var prop of Select_getOwnPropSymbols(b)) {
    if (Select_propIsEnum.call(b, prop)) Select_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Select_spreadProps = (a, b) => Select_defProps(a, Select_getOwnPropDescs(b));
var Select_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Select_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Select_getOwnPropSymbols) for (var prop of Select_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Select_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function defaultFilter(value, item) {
  return item.label.toLowerCase().trim().includes(value.toLowerCase().trim());
}
function defaultShouldCreate(query, data) {
  return !!query && !data.some(item => item.label.toLowerCase() === query.toLowerCase());
}
const Select_defaultProps = {
  required: false,
  size: "sm",
  shadow: "sm",
  itemComponent: DefaultItem,
  transition: "fade",
  transitionDuration: 0,
  initiallyOpened: false,
  filter: defaultFilter,
  maxDropdownHeight: 220,
  searchable: false,
  clearable: false,
  limit: Infinity,
  disabled: false,
  creatable: false,
  shouldCreate: defaultShouldCreate,
  selectOnBlur: false,
  switchDirectionOnFlip: false,
  filterDataOnExactSearchMatch: false,
  zIndex: getDefaultZIndex("popover"),
  clearButtonTabIndex: 0,
  positionDependencies: [],
  dropdownPosition: "flip"
};
const Select_Select = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useInputProps("Select", Select_defaultProps, props),
    {
      inputProps,
      wrapperProps,
      shadow,
      data,
      value,
      defaultValue,
      onChange,
      itemComponent,
      onKeyDown,
      onBlur,
      onFocus,
      transition,
      transitionDuration,
      initiallyOpened,
      transitionTimingFunction,
      unstyled,
      classNames,
      styles,
      filter,
      maxDropdownHeight,
      searchable,
      clearable,
      nothingFound,
      clearButtonLabel,
      limit,
      disabled,
      onSearchChange,
      searchValue,
      rightSection,
      rightSectionWidth,
      creatable,
      getCreateLabel,
      shouldCreate,
      selectOnBlur,
      onCreate,
      dropdownComponent,
      onDropdownClose,
      onDropdownOpen,
      withinPortal,
      switchDirectionOnFlip,
      zIndex,
      name,
      dropdownPosition,
      allowDeselect,
      placeholder,
      filterDataOnExactSearchMatch,
      clearButtonTabIndex,
      form,
      positionDependencies,
      readOnly
    } = _a,
    others = Select_objRest(_a, ["inputProps", "wrapperProps", "shadow", "data", "value", "defaultValue", "onChange", "itemComponent", "onKeyDown", "onBlur", "onFocus", "transition", "transitionDuration", "initiallyOpened", "transitionTimingFunction", "unstyled", "classNames", "styles", "filter", "maxDropdownHeight", "searchable", "clearable", "nothingFound", "clearButtonLabel", "limit", "disabled", "onSearchChange", "searchValue", "rightSection", "rightSectionWidth", "creatable", "getCreateLabel", "shouldCreate", "selectOnBlur", "onCreate", "dropdownComponent", "onDropdownClose", "onDropdownOpen", "withinPortal", "switchDirectionOnFlip", "zIndex", "name", "dropdownPosition", "allowDeselect", "placeholder", "filterDataOnExactSearchMatch", "clearButtonTabIndex", "form", "positionDependencies", "readOnly"]);
  const {
    classes,
    cx,
    theme
  } = Select_styles();
  const [dropdownOpened, _setDropdownOpened] = (0,react_production_min.useState)(initiallyOpened);
  const [hovered, setHovered] = (0,react_production_min.useState)(-1);
  const inputRef = (0,react_production_min.useRef)();
  const itemsRefs = (0,react_production_min.useRef)({});
  const [direction, setDirection] = (0,react_production_min.useState)("column");
  const isColumn = direction === "column";
  const {
    scrollIntoView,
    targetRef,
    scrollableRef
  } = useScrollIntoView({
    duration: 0,
    offset: 5,
    cancelable: false,
    isList: true
  });
  const isDeselectable = allowDeselect === void 0 ? clearable : allowDeselect;
  const setDropdownOpened = opened => {
    if (dropdownOpened !== opened) {
      _setDropdownOpened(opened);
      const handler = opened ? onDropdownOpen : onDropdownClose;
      typeof handler === "function" && handler();
    }
  };
  const isCreatable = creatable && typeof getCreateLabel === "function";
  let createLabel = null;
  const formattedData = data.map(item => typeof item === "string" ? {
    label: item,
    value: item
  } : item);
  const sortedData = groupOptions({
    data: formattedData
  });
  const [_value, handleChange, controlled] = useUncontrolled({
    value,
    defaultValue,
    finalValue: null,
    onChange
  });
  const selectedValue = sortedData.find(item => item.value === _value);
  const [inputValue, setInputValue] = useUncontrolled({
    value: searchValue,
    defaultValue: (selectedValue == null ? void 0 : selectedValue.label) || "",
    finalValue: void 0,
    onChange: onSearchChange
  });
  const handleSearchChange = val => {
    setInputValue(val);
    if (searchable && typeof onSearchChange === "function") {
      onSearchChange(val);
    }
  };
  const handleClear = () => {
    var _a2;
    if (!readOnly) {
      handleChange(null);
      if (!controlled) {
        handleSearchChange("");
      }
      (_a2 = inputRef.current) == null ? void 0 : _a2.focus();
    }
  };
  (0,react_production_min.useEffect)(() => {
    const newSelectedValue = sortedData.find(item => item.value === _value);
    if (newSelectedValue) {
      handleSearchChange(newSelectedValue.label);
    } else if (!isCreatable || !_value) {
      handleSearchChange("");
    }
  }, [_value]);
  (0,react_production_min.useEffect)(() => {
    if (selectedValue && (!searchable || !dropdownOpened)) {
      handleSearchChange(selectedValue.label);
    }
  }, [selectedValue == null ? void 0 : selectedValue.label]);
  const handleItemSelect = item => {
    if (!readOnly) {
      if (isDeselectable && (selectedValue == null ? void 0 : selectedValue.value) === item.value) {
        handleChange(null);
        setDropdownOpened(false);
      } else {
        if (item.creatable && typeof onCreate === "function") {
          const createdItem = onCreate(item.value);
          if (typeof createdItem !== "undefined" && createdItem !== null) {
            if (typeof createdItem === "string") {
              handleChange(createdItem);
            } else {
              handleChange(createdItem.value);
            }
          }
        } else {
          handleChange(item.value);
        }
        if (!controlled) {
          handleSearchChange(item.label);
        }
        setHovered(-1);
        setDropdownOpened(false);
        inputRef.current.focus();
      }
    }
  };
  const filteredData = filterData({
    data: sortedData,
    searchable,
    limit,
    searchValue: inputValue,
    filter,
    filterDataOnExactSearchMatch,
    value: _value
  });
  if (isCreatable && shouldCreate(inputValue, filteredData)) {
    createLabel = getCreateLabel(inputValue);
    filteredData.push({
      label: inputValue,
      value: inputValue,
      creatable: true
    });
  }
  const getNextIndex = (index, nextItem, compareFn) => {
    let i = index;
    while (compareFn(i)) {
      i = nextItem(i);
      if (!filteredData[i].disabled) return i;
    }
    return index;
  };
  useDidUpdate(() => {
    setHovered(-1);
  }, [inputValue]);
  const selectedItemIndex = _value ? filteredData.findIndex(el => el.value === _value) : 0;
  const shouldShowDropdown = !readOnly && (filteredData.length > 0 ? dropdownOpened : dropdownOpened && !!nothingFound);
  const handlePrevious = () => {
    setHovered(current => {
      var _a2;
      const nextIndex = getNextIndex(current, index => index - 1, index => index > 0);
      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];
      shouldShowDropdown && scrollIntoView({
        alignment: isColumn ? "start" : "end"
      });
      return nextIndex;
    });
  };
  const handleNext = () => {
    setHovered(current => {
      var _a2;
      const nextIndex = getNextIndex(current, index => index + 1, index => index < filteredData.length - 1);
      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];
      shouldShowDropdown && scrollIntoView({
        alignment: isColumn ? "end" : "start"
      });
      return nextIndex;
    });
  };
  const scrollSelectedItemIntoView = () => window.setTimeout(() => {
    var _a2;
    targetRef.current = itemsRefs.current[(_a2 = filteredData[selectedItemIndex]) == null ? void 0 : _a2.value];
    scrollIntoView({
      alignment: isColumn ? "end" : "start"
    });
  }, 0);
  useDidUpdate(() => {
    if (shouldShowDropdown) scrollSelectedItemIntoView();
  }, [shouldShowDropdown]);
  const handleInputKeydown = event => {
    typeof onKeyDown === "function" && onKeyDown(event);
    switch (event.key) {
      case "ArrowUp":
        {
          event.preventDefault();
          if (!dropdownOpened) {
            setHovered(selectedItemIndex);
            setDropdownOpened(true);
            scrollSelectedItemIntoView();
          } else {
            isColumn ? handlePrevious() : handleNext();
          }
          break;
        }
      case "ArrowDown":
        {
          event.preventDefault();
          if (!dropdownOpened) {
            setHovered(selectedItemIndex);
            setDropdownOpened(true);
            scrollSelectedItemIntoView();
          } else {
            isColumn ? handleNext() : handlePrevious();
          }
          break;
        }
      case "Home":
        {
          if (!searchable) {
            event.preventDefault();
            if (!dropdownOpened) {
              setDropdownOpened(true);
            }
            const firstItemIndex = filteredData.findIndex(item => !item.disabled);
            setHovered(firstItemIndex);
            shouldShowDropdown && scrollIntoView({
              alignment: isColumn ? "end" : "start"
            });
          }
          break;
        }
      case "End":
        {
          if (!searchable) {
            event.preventDefault();
            if (!dropdownOpened) {
              setDropdownOpened(true);
            }
            const lastItemIndex = filteredData.map(item => !!item.disabled).lastIndexOf(false);
            setHovered(lastItemIndex);
            shouldShowDropdown && scrollIntoView({
              alignment: isColumn ? "end" : "start"
            });
          }
          break;
        }
      case "Escape":
        {
          event.preventDefault();
          setDropdownOpened(false);
          setHovered(-1);
          break;
        }
      case " ":
        {
          if (!searchable) {
            event.preventDefault();
            if (filteredData[hovered] && dropdownOpened) {
              handleItemSelect(filteredData[hovered]);
            } else {
              setDropdownOpened(true);
              setHovered(selectedItemIndex);
              scrollSelectedItemIntoView();
            }
          }
          break;
        }
      case "Enter":
        {
          if (!searchable) {
            event.preventDefault();
          }
          if (filteredData[hovered] && dropdownOpened) {
            event.preventDefault();
            handleItemSelect(filteredData[hovered]);
          }
        }
    }
  };
  const handleInputBlur = event => {
    typeof onBlur === "function" && onBlur(event);
    const selected = sortedData.find(item => item.value === _value);
    if (selectOnBlur && filteredData[hovered] && dropdownOpened) {
      handleItemSelect(filteredData[hovered]);
    }
    handleSearchChange((selected == null ? void 0 : selected.label) || "");
    setDropdownOpened(false);
  };
  const handleInputFocus = event => {
    typeof onFocus === "function" && onFocus(event);
    if (searchable) {
      setDropdownOpened(true);
    }
  };
  const handleInputChange = event => {
    if (!readOnly) {
      handleSearchChange(event.currentTarget.value);
      if (clearable && event.currentTarget.value === "") {
        handleChange(null);
      }
      setHovered(-1);
      setDropdownOpened(true);
    }
  };
  const handleInputClick = () => {
    if (!readOnly) {
      setDropdownOpened(!dropdownOpened);
      if (_value && !dropdownOpened) {
        setHovered(selectedItemIndex);
      }
    }
  };
  return /* @__PURE__ */react.createElement(Input_Input.Wrapper, Select_spreadProps(Select_spreadValues({}, wrapperProps), {
    __staticSelector: "Select"
  }), /* @__PURE__ */react.createElement(SelectPopover, {
    opened: shouldShowDropdown,
    transition,
    transitionDuration,
    shadow: "sm",
    withinPortal,
    __staticSelector: "Select",
    onDirectionChange: setDirection,
    switchDirectionOnFlip,
    zIndex,
    dropdownPosition,
    positionDependencies,
    classNames,
    styles,
    unstyled
  }, /* @__PURE__ */react.createElement(SelectPopover.Target, null, /* @__PURE__ */react.createElement("div", {
    role: "combobox",
    "aria-haspopup": "listbox",
    "aria-owns": shouldShowDropdown ? `${inputProps.id}-items` : null,
    "aria-controls": inputProps.id,
    "aria-expanded": shouldShowDropdown,
    onMouseLeave: () => setHovered(-1),
    tabIndex: -1
  }, /* @__PURE__ */react.createElement("input", {
    type: "hidden",
    name,
    value: _value || "",
    form,
    disabled
  }), /* @__PURE__ */react.createElement(Input_Input, Select_spreadValues(Select_spreadProps(Select_spreadValues(Select_spreadValues({
    autoComplete: "off",
    type: "search"
  }, inputProps), others), {
    ref: useMergedRef(ref, inputRef),
    onKeyDown: handleInputKeydown,
    __staticSelector: "Select",
    value: inputValue,
    placeholder,
    onChange: handleInputChange,
    "aria-autocomplete": "list",
    "aria-controls": shouldShowDropdown ? `${inputProps.id}-items` : null,
    "aria-activedescendant": hovered >= 0 ? `${inputProps.id}-${hovered}` : null,
    onMouseDown: handleInputClick,
    onBlur: handleInputBlur,
    onFocus: handleInputFocus,
    readOnly: !searchable || readOnly,
    disabled,
    "data-mantine-stop-propagation": shouldShowDropdown,
    name: null,
    classNames: Select_spreadProps(Select_spreadValues({}, classNames), {
      input: cx({
        [classes.input]: !searchable
      }, classNames == null ? void 0 : classNames.input)
    })
  }), getSelectRightSectionProps({
    theme,
    rightSection,
    rightSectionWidth,
    styles,
    size: inputProps.size,
    shouldClear: clearable && !!selectedValue,
    clearButtonLabel,
    onClear: handleClear,
    error: wrapperProps.error,
    clearButtonTabIndex,
    disabled,
    readOnly
  }))))), /* @__PURE__ */react.createElement(SelectPopover.Dropdown, {
    component: dropdownComponent || SelectScrollArea,
    maxHeight: maxDropdownHeight,
    direction,
    id: inputProps.id,
    innerRef: scrollableRef,
    __staticSelector: "Select",
    classNames,
    styles
  }, /* @__PURE__ */react.createElement(SelectItems, {
    data: filteredData,
    hovered,
    classNames,
    styles,
    isItemSelected: val => val === _value,
    uuid: inputProps.id,
    __staticSelector: "Select",
    onItemHover: setHovered,
    onItemSelect: handleItemSelect,
    itemsRefs,
    itemComponent,
    size: inputProps.size,
    nothingFound,
    creatable: isCreatable && !!createLabel,
    createLabel,
    "aria-label": wrapperProps.label,
    unstyled
  }))));
});
Select_Select.displayName = "@mantine/core/Select";

;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/dropdown/styles.ts


var DropdownWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__DropdownWrapper",
  componentId: "sc-11tpu22-0"
})(["width:100%;", " ", " ", ""], function (_ref) {
  var theme = _ref.theme,
    minWidth = _ref.minWidth;
  return Ae(["min-width:", ";position:relative;cursor:pointer;display:flex;border:", " solid ", ";height:60px;border-radius:", ";background:", ";"], minWidth !== null && minWidth !== void 0 ? minWidth : '200px', theme.css.inputBorderWidth, theme.css.inputBorderColor, theme.css.inputRoundedCorners, theme.css.inputBackground);
}, function (_ref2) {
  var flexOverride = _ref2.flexOverride;
  return flexOverride && Ae(["width:auto;"]);
}, function (_ref3) {
  var isConference = _ref3.isConference;
  return isConference && Ae(["@media ", "{flex:1;}"], function (_ref4) {
    var theme = _ref4.theme;
    return theme.mediaQueries.small;
  });
});
var ItemWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__ItemWrapper",
  componentId: "sc-11tpu22-1"
})(["padding:10px 0 10px 20px;display:flex;flex-direction:column;height:100%;justify-content:center;min-height:40px;&:hover{background:#00000008;cursor:pointer;}"]);
var PlaceItemWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__PlaceItemWrapper",
  componentId: "sc-11tpu22-2"
})(["background:", ";height:45px;width:45px;border-radius:5px;display:flex;justify-content:center;align-items:center;"], function (_ref5) {
  var theme = _ref5.theme;
  return theme.css.cardBackground;
});
var DropdownIcon = styled_components_esm(FontAwesomeIcon).withConfig({
  displayName: "styles__DropdownIcon",
  componentId: "sc-11tpu22-3"
})(["", ""], function (_ref6) {
  var $showClearIcon = _ref6.$showClearIcon;
  return $showClearIcon && Ae(["font-size:12px;color:#2b2b2b;background:#d9d9d9;padding:5px;aspect-ratio:1/1;border-radius:100%;"]);
});
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faLocationDot.js
var faLocationDot = __webpack_require__(745);
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/dropdown/item_renderer.tsx


// Hooks



// Components





// Recoil

var ItemRenderer = (0,react_production_min.forwardRef)(function (item, ref) {
  var setSelectedLocation = Recoil_index_24(LocationDropdownState);
  var setSelectedConferenceType = Recoil_index_24(ConferenceTypeState);
  var ctx = (0,react_production_min.useContext)(DropdownContext);
  var theme = Ze();
  var onClicked = function onClicked() {
    var _ctx$selectRef, _ctx$selectRef$curren;
    item.isLocationDropdown ? setSelectedLocation({
      value: item.value,
      isPlace: !item.locationString
    }) : setSelectedConferenceType(item.value);
    (_ctx$selectRef = ctx.selectRef) === null || _ctx$selectRef === void 0 ? void 0 : (_ctx$selectRef$curren = _ctx$selectRef.current) === null || _ctx$selectRef$curren === void 0 ? void 0 : _ctx$selectRef$curren.blur();
  };
  return /*#__PURE__*/react.createElement(ItemWrapper, {
    onClick: onClicked,
    ref: ref
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      gap: "6px",
      alignItems: "center"
    }
  }, Boolean(item.imageUrl) && /*#__PURE__*/react.createElement("div", {
    style: {
      height: "45px",
      width: "45px",
      minWidth: 45,
      borderRadius: "5px",
      backgroundPosition: "center",
      backgroundSize: "cover",
      backgroundRepeat: "no-repeat",
      backgroundImage: "url(".concat(item.imageUrl, ")")
    }
  }), item.group === "Plats" && /*#__PURE__*/react.createElement(PlaceItemWrapper, null, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    style: {
      alignSelf: "center",
      fontSize: "20px",
      width: "20px",
      margin: "0px 10px",
      opacity: theme.css.bodyMutedOpacity
    },
    icon: faLocationDot/* faLocationDot */.op
  })), /*#__PURE__*/react.createElement("div", {
    style: {
      height: "100%",
      paddingLeft: 15
    }
  }, /*#__PURE__*/react.createElement(BodyText, {
    muted: true
  }, item.label), /*#__PURE__*/react.createElement(BodyText, null, item.locationString))));
});
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/dropdown/dropdown.tsx


// Hooks


// Components







// Types

var Dropdown = function Dropdown(_ref) {
  var value = _ref.value,
    readOnly = _ref.readOnly,
    selectedValueTextOverride = _ref.selectedValueTextOverride,
    label = _ref.label,
    options = _ref.options,
    icon = _ref.icon,
    searchable = _ref.searchable,
    minWidth = _ref.minWidth,
    isLocationDropdown = _ref.isLocationDropdown,
    clearable = _ref.clearable,
    onClear = _ref.onClear,
    flexOverride = _ref.flexOverride;
  var selectRef = (0,react_production_min.useRef)(null);
  var theme = Ze();
  var clearClicked = function clearClicked(e) {
    if (value !== undefined && clearable) {
      e.preventDefault();
      e.stopPropagation();
      onClear === null || onClear === void 0 ? void 0 : onClear();
    }
  };
  return /*#__PURE__*/react.createElement(DropdownContext.Provider, {
    value: {
      selectRef: selectRef
    }
  }, /*#__PURE__*/react.createElement(DropdownWrapper, {
    flexOverride: flexOverride,
    minWidth: minWidth,
    onClick: function onClick() {
      var _selectRef$current;
      selectRef === null || selectRef === void 0 ? void 0 : (_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 ? void 0 : _selectRef$current.focus();
    },
    isConference: true
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    style: {
      alignSelf: "center",
      fontSize: "20px",
      width: "20px",
      margin: "0px 10px",
      opacity: theme.css.bodyMutedOpacity
    },
    icon: icon
  }), /*#__PURE__*/react.createElement(Select_Select, {
    maxDropdownHeight: 500,
    readOnly: readOnly,
    transition: "fade",
    transitionDuration: 80,
    transitionTimingFunction: "ease",
    value: value,
    iconWidth: "20px",
    itemComponent: ItemRenderer,
    ref: selectRef,
    rightSectionProps: {
      style: {
        pointerEvents: clearable && Boolean(value) ? "auto" : "none"
      }
    },
    rightSection: /*#__PURE__*/react.createElement(DropdownIcon, {
      onClick: function onClick(e) {
        return clearClicked(e);
      },
      icon: clearable && Boolean(value) ? faClose/* faClose */.YI : faChevronDown/* faChevronDown */.pt,
      $showClearIcon: clearable && Boolean(value)
    }),
    label: label,
    styles: {
      root: {
        alignSelf: "center",
        width: "100%",
        fontFamily: theme.css.bodyFontFamily
      },
      input: {
        border: 0,
        paddingLeft: 0,
        paddingTop: 0,
        height: "22px",
        minHeight: "22px",
        cursor: "pointer",
        fontFamily: theme.css.bodyFontFamily,
        textOverflow: "ellipsis"
      },
      dropdown: {
        minWidth: isLocationDropdown ? "290px !important" : "auto",
        width: "100% !important",
        transform: "translateX(-20px)",
        fontFamily: theme.css.bodyFontFamily,
        zIndex: 500
      },
      label: {
        pointerEvents: "none",
        opacity: theme.css.bodyMutedOpacity,
        userSelect: "none",
        textOverflow: "ellipsis"
      }
    },
    searchable: searchable,
    clearable: clearable,
    placeholder: selectedValueTextOverride !== null && selectedValueTextOverride !== void 0 ? selectedValueTextOverride : "Nothing selected",
    data: options === null || options === void 0 ? void 0 : options.map(function (x) {
      var _x$value;
      return {
        value: (_x$value = x.value) !== null && _x$value !== void 0 ? _x$value : x.name,
        label: x.name,
        group: x.group,
        locationString: x.locationString,
        ddLabel: label,
        imageUrl: x.imageUrl,
        isLocationDropdown: isLocationDropdown
      };
    })
  })));
};
var DropdownContext = (0,react_production_min.createContext)({});
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faPresentationScreen.js
var faPresentationScreen = __webpack_require__(4718);
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/conferencetype_dropdown/conferencetype_dropdown.tsx


// Hooks


// Recoil



// Components


// Icons



// Types

var ConferenceTypeDropdown = function ConferenceTypeDropdown(_ref) {
  var flexOverride = _ref.flexOverride;
  var value = Recoil_index_20(ConferenceTypeState);
  var translations = useAccommodationTranslations();
  var options = (0,react_production_min.useMemo)(function () {
    return [{
      name: translations(accommodation_AccommodationTranslations["EA4H.Conference.DayConference"]),
      value: "conference"
    }, {
      name: translations(accommodation_AccommodationTranslations["EA4H.Conference.ConferenceWithAccommodation"]),
      value: "conference_with_accommodation"
    }];
  }, [translations]);
  return /*#__PURE__*/react.createElement(Dropdown, {
    flexOverride: flexOverride,
    value: value,
    icon: faPresentationScreen/* faPresentationScreen */.r0,
    label: translations(accommodation_AccommodationTranslations["EA4H.Conference.TypeOfBooking"]),
    options: options
  });
};
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faChevronLeft.js
var faChevronLeft = __webpack_require__(6037);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faChevronRight.js
var faChevronRight = __webpack_require__(5972);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faAngleDown.js
var faAngleDown = __webpack_require__(2963);
// EXTERNAL MODULE: ./node_modules/react-loading-skeleton/dist/skeleton.css
var skeleton = __webpack_require__(586);
;// CONCATENATED MODULE: ./node_modules/react-loading-skeleton/dist/index.mjs


/**
 * @internal
 */
const SkeletonThemeContext = react.createContext({});

/* eslint-disable react/no-array-index-key */
const defaultEnableAnimation = true;
// For performance & cleanliness, don't add any inline styles unless we have to
function styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {
    const style = {};
    if (direction === 'rtl')
        style['--animation-direction'] = 'reverse';
    if (typeof duration === 'number')
        style['--animation-duration'] = `${duration}s`;
    if (!enableAnimation)
        style['--pseudo-element-display'] = 'none';
    if (typeof width === 'string' || typeof width === 'number')
        style.width = width;
    if (typeof height === 'string' || typeof height === 'number')
        style.height = height;
    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')
        style.borderRadius = borderRadius;
    if (circle)
        style.borderRadius = '50%';
    if (typeof baseColor !== 'undefined')
        style['--base-color'] = baseColor;
    if (typeof highlightColor !== 'undefined')
        style['--highlight-color'] = highlightColor;
    return style;
}
function dist_Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {
    var _a, _b, _c;
    const contextStyleOptions = react.useContext(SkeletonThemeContext);
    const propsStyleOptions = { ...originalPropsStyleOptions };
    // DO NOT overwrite style options from the context if `propsStyleOptions`
    // has properties explicity set to undefined
    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {
        if (typeof value === 'undefined') {
            delete propsStyleOptions[key];
        }
    }
    // Props take priority over context
    const styleOptions = {
        ...contextStyleOptions,
        ...propsStyleOptions,
        circle,
    };
    // `styleProp` has the least priority out of everything
    const style = {
        ...styleProp,
        ...styleOptionsToCssProperties(styleOptions),
    };
    let className = 'react-loading-skeleton';
    if (customClassName)
        className += ` ${customClassName}`;
    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;
    const elements = [];
    const countCeil = Math.ceil(count);
    for (let i = 0; i < countCeil; i++) {
        let thisStyle = style;
        if (countCeil > count && i === countCeil - 1) {
            // count is not an integer and we've reached the last iteration of
            // the loop, so add a "fractional" skeleton.
            //
            // For example, if count is 3.5, we've already added 3 full
            // skeletons, so now we add one more skeleton that is 0.5 times the
            // original width.
            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS
            const fractionalPart = count % 1;
            const fractionalWidth = typeof width === 'number'
                ? width * fractionalPart
                : `calc(${width} * ${fractionalPart})`;
            thisStyle = { ...thisStyle, width: fractionalWidth };
        }
        const skeletonSpan = (react.createElement("span", { className: className, style: thisStyle, key: i }, "\u200C"));
        if (inline) {
            elements.push(skeletonSpan);
        }
        else {
            // Without the <br />, the skeleton lines will all run together if
            // `width` is specified
            elements.push(react.createElement(react.Fragment, { key: i },
                skeletonSpan,
                react.createElement("br", null)));
        }
    }
    return (react.createElement("span", { className: containerClassName, "data-testid": containerTestId, "aria-live": "polite", "aria-busy": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper
        ? elements.map((el, i) => react.createElement(Wrapper, { key: i }, el))
        : elements));
}

function SkeletonTheme({ children, ...styleOptions }) {
    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));
}



;// CONCATENATED MODULE: ./src/shared_components/calendar/calendar_day_item.tsx



//Hooks



//Components




 //Types
//Recoil


var CalendarDayItem = function CalendarDayItem(_ref) {
  var day = _ref.day,
    isFirstDayOfWeek = _ref.isFirstDayOfWeek,
    isConference = _ref.isConference,
    date = _ref.date,
    dateFormatter = _ref.dateFormatter,
    isEndOfStayDate = _ref.isEndOfStayDate,
    isStartOfStayDate = _ref.isStartOfStayDate,
    _onClick = _ref.onClick,
    stayLengthChosen = _ref.stayLengthChosen,
    isSelected = _ref.isSelected,
    nightsAvailable = _ref.nightsAvailable,
    children = _ref.children,
    unavailable = _ref.unavailable,
    conferenceType = _ref.conferenceType;
  var _React$useState = react.useState(false),
    _React$useState2 = slicedToArray_slicedToArray(_React$useState, 2),
    showMoreNights = _React$useState2[0],
    setShowMoreNights = _React$useState2[1];
  var theme = Ze();
  var _React$useState3 = react.useState(false),
    _React$useState4 = slicedToArray_slicedToArray(_React$useState3, 2),
    isOpen = _React$useState4[0],
    setIsOpen = _React$useState4[1];
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var selectedEndDate = Recoil_index_20(selectedCalendarEndDate);
  var selectedObjectInfo = Recoil_index_20(selectedObjectState);
  var translations = useAccommodationTranslations();
  var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 0, 0, 0, 0);
  var onStayLengthChosen = function onStayLengthChosen(stayLength) {
    stayLengthChosen === null || stayLengthChosen === void 0 ? void 0 : stayLengthChosen(stayLength);
    setIsOpen(false);
  };
  var setStayLengthOption = function setStayLengthOption() {
    !showMoreNights ? setShowMoreNights(true) : setShowMoreNights(false);
  };
  var isPastDate = date.getTime() < today.getTime();
  var selectedDates = {
    startDate: selectedStartDate ? new Date(selectedStartDate) : undefined,
    endDate: selectedEndDate ? new Date(selectedEndDate) : undefined
  };
  if (!day.validArrivalDate && !day.validArrivalDateForSisterHotels && !day.validArrivalDateForWaitingList) {
    return /*#__PURE__*/react.createElement(CalendarDayItemDiv, {
      className: "cal_day_item_div",
      isFirstDayOfWeek: isFirstDayOfWeek,
      day: day,
      passedDate: date.getTime() < today.getTime(),
      isEndOfStay: isEndOfStayDate,
      isStartOfStay: isStartOfStayDate,
      unavailable: true,
      selected: isSelected,
      selectedDates: selectedDates
    }, (selectedObjectInfo === null || selectedObjectInfo === void 0 ? void 0 : selectedObjectInfo.objectId) === undefined && /*#__PURE__*/react.createElement(CalendarDayBackground, {
      className: "cal_day_bg_non_valid",
      selected: isSelected,
      isPastDate: isPastDate,
      day: day
    }), children);
  }
  return /*#__PURE__*/react.createElement(Popover, {
    overflowHidden: true,
    withoutCloseButton: true,
    showPopover: isOpen,
    onClose: function onClose() {
      setShowMoreNights(false);
      setIsOpen(false);
    },
    target: /*#__PURE__*/react.createElement(CalendarDayItemDiv, {
      className: "cal_day_item_div",
      isFirstDayOfWeek: isFirstDayOfWeek,
      day: day,
      passedDate: isPastDate,
      onClick: function onClick(e) {
        setIsOpen(function (x) {
          return !x;
        });
        _onClick === null || _onClick === void 0 ? void 0 : _onClick();
      },
      isEndOfStay: isEndOfStayDate,
      isStartOfStay: isStartOfStayDate,
      selected: isSelected || isOpen,
      selectedDates: selectedDates,
      isConference: isConference,
      conferenceType: conferenceType
    }, /*#__PURE__*/react.createElement(CalendarDayBackground, {
      className: "cal_day_bg",
      selected: isSelected || isOpen,
      isPastDate: date.getTime() < today.getTime(),
      day: day,
      isConference: isConference
    }), children, !isConference && /*#__PURE__*/react.createElement(FontAwesomeIcon, {
      icon: faAngleDown/* faAngleDown */.gc,
      style: {
        position: "absolute",
        right: "5px",
        top: "5px"
      }
    })),
    position: "bottom",
    trapFocus: false
  }, !isConference && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    style: {
      paddingLeft: "15px",
      paddingRight: "15px",
      background: theme.css.calendarMarkerColor,
      height: "30px",
      display: "flex",
      justifyContent: "center",
      flexDirection: "column"
    }
  }, /*#__PURE__*/react.createElement(CalendarPopoutHeader, null, translations(accommodation_AccommodationTranslations["EA4H.General.AvailableLengthOfStay"]))), /*#__PURE__*/react.createElement(StayLengthOptionsList, {
    showMoreNights: showMoreNights
  }, /*#__PURE__*/react.createElement(react.Fragment, null, nightsAvailable === null || nightsAvailable === void 0 ? void 0 : nightsAvailable.slice(0, 5).map(function (n) {
    return /*#__PURE__*/react.createElement(AvailableNightOption, {
      key: n,
      date: day.date,
      dateFormatter: dateFormatter,
      nrOfNights: n,
      onClick: function onClick() {
        return onStayLengthChosen(n);
      }
    });
  })), nightsAvailable && nightsAvailable.length > 5 && !showMoreNights && /*#__PURE__*/react.createElement(StayLengthOption, {
    onClick: setStayLengthOption
  }, /*#__PURE__*/react.createElement("span", null, " ", /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "space-between",
      paddingRight: "12px"
    }
  }, /*#__PURE__*/react.createElement("p", {
    style: {
      margin: 0
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Manage.Reservations.SearchReservations.MoreSearchOptions"]), " "), /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    style: {
      fontSize: "16px"
    },
    icon: faAngleDown/* faAngleDown */.gc
  })))), showMoreNights && /*#__PURE__*/react.createElement(react.Fragment, null, nightsAvailable === null || nightsAvailable === void 0 ? void 0 : nightsAvailable.slice(5).map(function (n) {
    return /*#__PURE__*/react.createElement(AvailableNightOption, {
      key: n,
      date: day.date,
      dateFormatter: dateFormatter,
      nrOfNights: n,
      onClick: function onClick() {
        return onStayLengthChosen(n);
      }
    });
  })))));
};
var AvailableNightOption = function AvailableNightOption(_ref2) {
  var nrOfNights = _ref2.nrOfNights,
    date = _ref2.date,
    onClick = _ref2.onClick,
    dateFormatter = _ref2.dateFormatter;
  var translations = useAccommodationTranslations();
  var newDate = new Date(date.valueOf());
  newDate.setDate(newDate.getDate() + nrOfNights);
  return /*#__PURE__*/react.createElement(StayLengthOption, {
    id: newDate.toString(),
    key: "".concat(nrOfNights, "_nights"),
    onClick: onClick
    // onClick={() => onStayLengthChosen?.(nrOfNights)}
  }, nrOfNights, " ", nrOfNights === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Night_LOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Nights_LOWER"]), " ", "(", dateFormatter.format(newDate), ")");
};
/* harmony default export */ var calendar_day_item = (CalendarDayItem);
;// CONCATENATED MODULE: ./src/shared_components/calendar/inner_calendar_items.tsx



// Hooks



// Components




// Recoil


// Lib



// Types

var CalendarSkeleton = function CalendarSkeleton() {
  var theme = Ze();
  var calendarSkeletonRowArray = Array.from(Array(6).keys());
  var calendarSkeletonColumnArray = Array.from(Array(7).keys());
  return /*#__PURE__*/react.createElement(react.Fragment, null, calendarSkeletonRowArray.map(function (val, i) {
    return /*#__PURE__*/react.createElement(CalendarDayRow, {
      key: "calendar-week-".concat(i)
    }, calendarSkeletonColumnArray.map(function (val, j) {
      return /*#__PURE__*/react.createElement("div", {
        key: "calendar-skeleton-day-".concat(j),
        style: {
          width: "100%",
          position: "relative",
          borderRadius: theme.css.inputRoundedCorners,
          overflow: "hidden"
        }
      }, /*#__PURE__*/react.createElement("div", {
        style: {
          background: "currentColor",
          opacity: .15,
          position: "absolute",
          inset: 0
        }
      }), /*#__PURE__*/react.createElement(dist_Skeleton, {
        borderRadius: 0,
        width: "100%",
        style: {
          opacity: .4
        },
        height: 40,
        duration: 1.5,
        baseColor: "transparent",
        highlightColor: "currentColor"
      }));
    }));
  }));
};
var InnerCalendarItems = function InnerCalendarItems(_ref) {
  var _calendarResult$calen;
  var isCalendarLoading = _ref.isCalendarLoading,
    calendarResult = _ref.calendarResult,
    isConference = _ref.isConference,
    selectedConferenceType = _ref.selectedConferenceType,
    smallScreenDateChosen = _ref.smallScreenDateChosen;
  var calendarOptions = Recoil_index_20(calendarOptionsState);
  var _useRecoilState = Recoil_index_22(selectedCalendarStartDate),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    selectedStartDate = _useRecoilState2[0],
    setSelectedStartDate = _useRecoilState2[1];
  var setSelectedEndDate = Recoil_index_24(selectedCalendarEndDate);
  var languageCulture = Recoil_index_20(languageCultureState);
  var dateFormatterShort = new Intl.DateTimeFormat(languageCulture, {
    month: "short",
    day: "2-digit",
    weekday: "short"
  });
  var handleChangeDate = function handleChangeDate(date) {
    setSelectedStartDate(dateToServerFormat(date));
    setSelectedEndDate(isConference ? dateToServerFormat(date) : undefined);
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, isCalendarLoading && /*#__PURE__*/react.createElement(CalendarSkeleton, null), calendarResult === null || calendarResult === void 0 ? void 0 : (_calendarResult$calen = calendarResult.calendarWeeks) === null || _calendarResult$calen === void 0 ? void 0 : _calendarResult$calen.map(function (week, index) {
    var _week$calendarDays;
    return /*#__PURE__*/react.createElement(CalendarDayRow, {
      className: "cal_day_row",
      key: "calendar-week-".concat(index)
    }, (_week$calendarDays = week.calendarDays) === null || _week$calendarDays === void 0 ? void 0 : _week$calendarDays.map(function (day, dayIndex) {
      var _calendarOptions$sele, _calendarOptions$sele2, _calendarOptions$sele3;
      var date = toUTCDate(new Date(day.date.valueOf()));
      var dayPrice = day.price === undefined || day.price === null ? undefined : Math.round(day.price);
      var isSelected = ((_calendarOptions$sele = calendarOptions.selectedDates) === null || _calendarOptions$sele === void 0 ? void 0 : _calendarOptions$sele.startDate) === "".concat(date) || Boolean((_calendarOptions$sele2 = calendarOptions.selectedDates) === null || _calendarOptions$sele2 === void 0 ? void 0 : _calendarOptions$sele2.startDate) && Boolean((_calendarOptions$sele3 = calendarOptions.selectedDates) === null || _calendarOptions$sele3 === void 0 ? void 0 : _calendarOptions$sele3.endDate) && toUTCDate(new Date(calendarOptions.selectedDates.startDate)) <= date && toUTCDate(new Date(calendarOptions.selectedDates.endDate)) >= date;

      // Endpoint for calendar seemingly returns an ISO string and not a Date object
      // When receiving data from ednpoint, the type for day.date will be a string and not a JS Date object
      // If so continue with normal comparison, if not compare ISO strings.
      var isEndOfStayDate = false;
      var isStartOfStayDate = false;
      if (typeof (day === null || day === void 0 ? void 0 : day.date) === "string") {
        var _calendarOptions$sele4, _calendarOptions$sele5;
        isEndOfStayDate = ((_calendarOptions$sele4 = calendarOptions.selectedDates) === null || _calendarOptions$sele4 === void 0 ? void 0 : _calendarOptions$sele4.endDate) === "".concat(day.date);
        isStartOfStayDate = ((_calendarOptions$sele5 = calendarOptions.selectedDates) === null || _calendarOptions$sele5 === void 0 ? void 0 : _calendarOptions$sele5.startDate) === "".concat(day.date);
      } else {
        var _calendarOptions$sele6, _calendarOptions$sele7, _day$date, _day$date$toISOString, _day$date$toISOString2, _calendarOptions$sele8, _calendarOptions$sele9, _day$date2, _day$date2$toISOStrin, _day$date2$toISOStrin2;
        isEndOfStayDate = ((_calendarOptions$sele6 = calendarOptions.selectedDates) === null || _calendarOptions$sele6 === void 0 ? void 0 : (_calendarOptions$sele7 = _calendarOptions$sele6.endDate) === null || _calendarOptions$sele7 === void 0 ? void 0 : _calendarOptions$sele7.split("T")[0]) === ((_day$date = day.date) === null || _day$date === void 0 ? void 0 : (_day$date$toISOString = _day$date.toISOString()) === null || _day$date$toISOString === void 0 ? void 0 : (_day$date$toISOString2 = _day$date$toISOString.split("T")) === null || _day$date$toISOString2 === void 0 ? void 0 : _day$date$toISOString2[0]);
        isStartOfStayDate = ((_calendarOptions$sele8 = calendarOptions.selectedDates) === null || _calendarOptions$sele8 === void 0 ? void 0 : (_calendarOptions$sele9 = _calendarOptions$sele8.startDate) === null || _calendarOptions$sele9 === void 0 ? void 0 : _calendarOptions$sele9.split("T")[0]) === ((_day$date2 = day.date) === null || _day$date2 === void 0 ? void 0 : (_day$date2$toISOStrin = _day$date2.toISOString()) === null || _day$date2$toISOStrin === void 0 ? void 0 : (_day$date2$toISOStrin2 = _day$date2$toISOStrin.split("T")) === null || _day$date2$toISOStrin2 === void 0 ? void 0 : _day$date2$toISOStrin2[0]);
      }
      return /*#__PURE__*/react.createElement(calendar_day_item, {
        isConference: isConference,
        conferenceType: selectedConferenceType,
        isFirstDayOfWeek: dayIndex === 0,
        day: day,
        dateFormatter: dateFormatterShort,
        key: "week_".concat(index, "_").concat(date.getTime()),
        isSelected: isSelected,
        isEndOfStayDate: isEndOfStayDate,
        isStartOfStayDate: isStartOfStayDate,
        onClick: function onClick() {
          return handleChangeDate(date);
        },
        stayLengthChosen: function stayLengthChosen(stayLength) {
          if (selectedStartDate) {
            var endDate = add(toUTCDate(new Date(selectedStartDate)), {
              days: stayLength
            });
            setSelectedEndDate(dateToServerFormat(endDate));
          }
          smallScreenDateChosen === null || smallScreenDateChosen === void 0 ? void 0 : smallScreenDateChosen();
        },
        nightsAvailable: day.stayLengths,
        date: date
      }, /*#__PURE__*/react.createElement("p", {
        style: {
          margin: 0,
          position: "absolute",
          top: "5px",
          left: "5px"
        }
      }, date.getDate()), calendarResult.hasPopulatedPrices && dayPrice !== undefined && !isConference && /*#__PURE__*/react.createElement("p", {
        style: {
          margin: 0,
          position: "absolute",
          bottom: "5px",
          right: "5px",
          overflow: "hidden",
          textAlign: "right",
          lineHeight: "normal",
          fontSize: "11px",
          fontFamily: "Arial, sans-serif",
          fontWeight: 400
        }
      }, dayPrice));
    }));
  }));
};
;// CONCATENATED MODULE: ./src/shared_components/calendar/search_options_override_contextprovider.tsx

var search_options_override_contextprovider_excluded = (/* unused pure expression or super */ null && (["children"]));

var CalendarSearchOptionsOverrideContext = react.createContext({});
var CalendarSearchOptionsOverrideContextProvider = function CalendarSearchOptionsOverrideContextProvider(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, search_options_override_contextprovider_excluded);
  return /*#__PURE__*/React.createElement(CalendarSearchOptionsOverrideContext.Provider, {
    value: {
      accommodationTypes: props.accommodationTypes,
      adults: props.adults,
      allowCalendarToMoveForward: props.allowCalendarToMoveForward,
      bookingCode: props.bookingCode,
      campaignId: props.campaignId,
      cancellationPolicyId: props.cancellationPolicyId,
      childAges: props.childAges,
      internalRoomIdBeingEdit: props.internalRoomIdBeingEdit,
      packageCategoryId: props.packageCategoryId,
      packageId: props.packageId,
      promoCode: props.promoCode,
      ratePlanAndPackageIdsFilter: props.ratePlanAndPackageIdsFilter,
      roomId: props.roomId,
      typeOfSearch: props.typeOfSearch,
      availabilityCalendarForProducts: props.availabilityCalendarForProducts
    }
  }, children);
};
;// CONCATENATED MODULE: ./src/hooks/useCalendarSearch.ts







var useCalendarSearch = function useCalendarSearch(year, month, nrOfAdults, childAges, guestRoomId, packageId, campaignId, accommodationTypes, promoCode, typeOfSearch, allowCalendarToMoveForward, availabilityCalendarForProducts) {
  var _searchOptions$filter, _calendarOptionsOverr, _calendarOptionsOverr2, _calendarOptionsOverr3, _calendarOptionsOverr4, _calendarOptionsOverr5, _calendarOptionsOverr6, _ref, _calendarOptionsOverr7, _calendarOptionsOverr8, _calendarOptionsOverr9;
  var apiContext = react.useContext(APIContext);
  var API = Recoil_index_20(ScopedAPI({
    jwtToken: apiContext.token,
    apiUrl: apiContext.apiUrl
  }));
  var calendarOptionsOverride = react.useContext(CalendarSearchOptionsOverrideContext);
  var controller = new AbortController();
  var signal = controller.signal;
  var accommodationTypesString = accommodationTypes == undefined ? undefined : accommodationTypes.join(",");
  if (accommodationTypesString === "") {
    accommodationTypesString = ",";
  }
  var searchOptions = Recoil_index_20(searchOptionsState);
  var agentCode = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$filter = searchOptions.filter) === null || _searchOptions$filter === void 0 ? void 0 : _searchOptions$filter.agentCode;
  return (0,es.useQuery)(["calendarsearch", year, month, (_calendarOptionsOverr = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.adults) !== null && _calendarOptionsOverr !== void 0 ? _calendarOptionsOverr : nrOfAdults, (_calendarOptionsOverr2 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.childAges) !== null && _calendarOptionsOverr2 !== void 0 ? _calendarOptionsOverr2 : childAges, (_calendarOptionsOverr3 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.roomId) !== null && _calendarOptionsOverr3 !== void 0 ? _calendarOptionsOverr3 : guestRoomId, (_calendarOptionsOverr4 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.packageId) !== null && _calendarOptionsOverr4 !== void 0 ? _calendarOptionsOverr4 : packageId, (_calendarOptionsOverr5 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.campaignId) !== null && _calendarOptionsOverr5 !== void 0 ? _calendarOptionsOverr5 : campaignId, (_calendarOptionsOverr6 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.accommodationTypes) !== null && _calendarOptionsOverr6 !== void 0 ? _calendarOptionsOverr6 : accommodationTypesString, (_ref = (_calendarOptionsOverr7 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.typeOfSearch) !== null && _calendarOptionsOverr7 !== void 0 ? _calendarOptionsOverr7 : typeOfSearch) !== null && _ref !== void 0 ? _ref : TypeOfSearch.All, (_calendarOptionsOverr8 = calendarOptionsOverride === null || calendarOptionsOverride === void 0 ? void 0 : calendarOptionsOverride.promoCode) !== null && _calendarOptionsOverr8 !== void 0 ? _calendarOptionsOverr8 : promoCode, (_calendarOptionsOverr9 = calendarOptionsOverride.availabilityCalendarForProducts) !== null && _calendarOptionsOverr9 !== void 0 ? _calendarOptionsOverr9 : availabilityCalendarForProducts, agentCode], function () {
    var promise = API.accommodationCalendarV1(year, month, undefined, packageId, guestRoomId, campaignId, apiContext.firstDayOfWeek, undefined, nrOfAdults, childAges, undefined, undefined, undefined, promoCode, accommodationTypesString, typeOfSearch !== null && typeOfSearch !== void 0 ? typeOfSearch : TypeOfSearch.All, allowCalendarToMoveForward, availabilityCalendarForProducts, agentCode, apiContext.channelId, signal);
    promise.cancel = function () {
      return controller.abort();
    };
    return promise;
  }, {
    //staleTime:20000,
    refetchOnWindowFocus: false,
    enabled: apiContext.firstDayOfWeek !== undefined
  });
};
;// CONCATENATED MODULE: ./src/shared_components/calendar/calendar_extra_text.tsx


var CalendarExtraText = function CalendarExtraText(_ref) {
  var Right = _ref.Right,
    Left = _ref.Left;
  var theme = Ze();
  //// const isVerySmallScreen = useMediaQuery({ query: theme.mediaQueries.verySmall })
  // const isSmallScreen = useMediaQuery({ query: theme.mediaQueries.small })

  return /*#__PURE__*/react.createElement(Container, null, /*#__PURE__*/react.createElement("p", {
    style: {
      margin: 0
    }
  }, Left), /*#__PURE__*/react.createElement("p", {
    style: {
      margin: 0
    }
  }, Right));
};
var Container = styled_components_esm.div.withConfig({
  displayName: "calendar_extra_text__Container",
  componentId: "sc-162bvmu-0"
})(["justify-content:space-between;display:flex;margin-top:5px;", ""], function (_ref2) {
  var theme = _ref2.theme;
  return Ae(["opacity:", ";font-size:", ";line-height:", ";font-family:", ";color:", ";@media ", "{color:", ";}@media ", "{color:", ";}.no_avail_change_search_modal &{color:", ";}"], theme.css.bodyMutedOpacity, theme.css.smallFontSize, theme.css.bodyLineHeight, theme.css.bodyFontFamily, theme.css.sidebarColor, theme.mediaQueries.small, theme.css.popoutColor, theme.mediaQueries.verySmall, theme.css.bodyColor, theme.css.popoutColor);
});
;// CONCATENATED MODULE: ./src/shared_components/calendar/calendar_legend_item.tsx



//Types

var CalendarLegendItem = function CalendarLegendItem(props) {
  var _props$opacity;
  var backgroundColor = props.backgroundColor,
    backgroundSize = props.backgroundSize,
    backgroundImage = props.backgroundImage;
  var theme = Ze();
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      alignItems: "center",
      gap: "8px",
      fontSize: theme.css.smallFontSize
    }
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      opacity: (_props$opacity = props.opacity) !== null && _props$opacity !== void 0 ? _props$opacity : 1,
      backgroundColor: backgroundColor !== null && backgroundColor !== void 0 ? backgroundColor : "transparent",
      backgroundSize: backgroundSize !== null && backgroundSize !== void 0 ? backgroundSize : "unset",
      backgroundImage: backgroundImage !== null && backgroundImage !== void 0 ? backgroundImage : "unset",
      height: "14px",
      width: "14px"
    }
  }), props.children);
};
/* harmony default export */ var calendar_legend_item = (CalendarLegendItem);
;// CONCATENATED MODULE: ./src/shared_components/calendar/accommodation_inner_calendar_items.tsx


// Hooks







// Components





// Recoil


// Types

// Translation


// Lib

var AccommodationInnerCalendarItems = function AccommodationInnerCalendarItems(_ref) {
  var _calendarOptions$sele3, _calendarOptions$sele4, _calendarOptions$sele5, _calendarOptions$sele6, _calendarOptions$sele7, _calendarOptions$sele9, _calendarOptions$sele10;
  var selectedAccommodationTypes = _ref.selectedAccommodationTypes,
    promoCode = _ref.promoCode,
    smallScreenDateChosen = _ref.smallScreenDateChosen,
    selectedMonth = _ref.selectedMonth,
    setSelectedMonth = _ref.setSelectedMonth,
    months = _ref.months,
    onMonthChanged = _ref.onMonthChanged;
  var path = useLocation();
  var firstCalendarResultReceived = react.useRef(false);
  var calendarOptions = Recoil_index_20(calendarOptionsState);
  var searchResults = Recoil_index_20(cachedSearchResultState);
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var selectedObject = Recoil_index_20(selectedObjectState);
  var selectedEndDate = Recoil_index_20(selectedCalendarEndDate);
  var languageCulture = Recoil_index_20(languageCultureState);
  var setSelectedMonthIndex = Recoil_index_24(selectedCalendarMonthIndex);
  var translations = useAccommodationTranslations();
  var _useChannel = useChannel(),
    channelInfo = _useChannel.data;
  var theme = Ze();
  var isVerySmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.verySmall
  });
  var isSmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.small
  });
  var nights = (0,react_production_min.useMemo)(function () {
    var _calendarOptions$sele, _calendarOptions$sele2;
    return (_calendarOptions$sele = calendarOptions.selectedDates) !== null && _calendarOptions$sele !== void 0 && _calendarOptions$sele.startDate && (_calendarOptions$sele2 = calendarOptions.selectedDates) !== null && _calendarOptions$sele2 !== void 0 && _calendarOptions$sele2.endDate ? GetAmountOfDaysBetweenDates(new Date(calendarOptions.selectedDates.startDate), new Date(calendarOptions.selectedDates.endDate)) : 0;
  }, [calendarOptions.selectedDates]);
  var _useCalendarSearch = useCalendarSearch(selectedMonth.year, selectedMonth.month, 2, [], (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele3 = calendarOptions.selectedObject) === null || _calendarOptions$sele3 === void 0 ? void 0 : _calendarOptions$sele3.objectType) === "Accommodation" ? calendarOptions.selectedObject.objectId : undefined, (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele4 = calendarOptions.selectedObject) === null || _calendarOptions$sele4 === void 0 ? void 0 : _calendarOptions$sele4.objectType) === "Package" ? calendarOptions.selectedObject.objectId : undefined, (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele5 = calendarOptions.selectedObject) === null || _calendarOptions$sele5 === void 0 ? void 0 : _calendarOptions$sele5.objectType) === "Campaign" ? calendarOptions.selectedObject.objectId : undefined, selectedAccommodationTypes, promoCode, path.pathname.toLowerCase() === "/package" ? TypeOfSearch.PackageOnly : TypeOfSearch.All, !firstCalendarResultReceived.current),
    calendarResult = _useCalendarSearch.data,
    isCalendarLoading = _useCalendarSearch.isLoading;
  var dateFormatterWithoutDayName = new Intl.DateTimeFormat(languageCulture, {
    month: "short",
    day: "2-digit"
  });
  var isPackageDetail = (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele6 = calendarOptions.selectedObject) === null || _calendarOptions$sele6 === void 0 ? void 0 : _calendarOptions$sele6.objectType) === "Package" && Boolean(calendarOptions.selectedObject.objectName);
  var isRoomDetail = (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele7 = calendarOptions.selectedObject) === null || _calendarOptions$sele7 === void 0 ? void 0 : _calendarOptions$sele7.objectType) === "Accommodation" && Boolean(calendarOptions.selectedObject.objectName);
  var noCheckInText = translations(accommodation_AccommodationTranslations["EA4H.General.NoCheckedIn"]);
  if (isPackageDetail || isRoomDetail) {
    noCheckInText = GetTranslation(translations(accommodation_AccommodationTranslations["EA4H.General.NoCheckedInFor{0}"]), "'".concat(selectedObject === null || selectedObject === void 0 ? void 0 : selectedObject.objectName, "'"));
  }
  react.useEffect(function () {
    if (searchResults !== null && searchResults !== void 0 && searchResults.roomsResult && selectedStartDate && selectedEndDate) {
      var _calendarResult$calen, _calendarResult$calen2;
      var arrivalWeekIndex = calendarResult === null || calendarResult === void 0 ? void 0 : (_calendarResult$calen = calendarResult.calendarWeeks) === null || _calendarResult$calen === void 0 ? void 0 : _calendarResult$calen.findIndex(function (x) {
        var _x$calendarDays;
        return (_x$calendarDays = x.calendarDays) === null || _x$calendarDays === void 0 ? void 0 : _x$calendarDays.find(function (y) {
          return "".concat(y.date) === "".concat(selectedStartDate);
        });
      });
      var departureWeekIndex = calendarResult === null || calendarResult === void 0 ? void 0 : (_calendarResult$calen2 = calendarResult.calendarWeeks) === null || _calendarResult$calen2 === void 0 ? void 0 : _calendarResult$calen2.findIndex(function (x) {
        var _x$calendarDays2;
        return (_x$calendarDays2 = x.calendarDays) === null || _x$calendarDays2 === void 0 ? void 0 : _x$calendarDays2.find(function (y) {
          return "".concat(y.date) === "".concat(selectedEndDate);
        });
      });
      if (arrivalWeekIndex !== -1 && departureWeekIndex === -1) {
        var currentMonthInfo = months.find(function (x) {
          return x.prettyName === selectedMonth.prettyName;
        });
        var nextMonthInfo = months[months.indexOf(currentMonthInfo) + 1];
        setSelectedMonth(nextMonthInfo);
      }
    }
  }, []);
  react.useEffect(function () {
    if (calendarResult && !firstCalendarResultReceived.current) {
      //THIS IS THE FIRST CALENDARRESULT, SWITCH SELECTED MONTH IF WE SHOULD HOP FORWARD.
      var monthInfo = months.find(function (x) {
        return x.year === (calendarResult === null || calendarResult === void 0 ? void 0 : calendarResult.year) && x.month === calendarResult.month;
      });
      if (monthInfo) {
        setSelectedMonth(monthInfo);
      }
      firstCalendarResultReceived.current = true;
    }
  }, [calendarResult]);
  react.useEffect(function () {
    var index = months.indexOf(selectedMonth);
    if (index > -1) {
      setSelectedMonthIndex(index.toString());
      onMonthChanged === null || onMonthChanged === void 0 ? void 0 : onMonthChanged(new Date(months[index].year, months[index].month, 1));
    }
  }, [selectedMonth, months]);
  var renderCalendarExtraTextLeft = function renderCalendarExtraTextLeft() {
    var _calendarOptions$sele8;
    if ((_calendarOptions$sele8 = calendarOptions.selectedDates) !== null && _calendarOptions$sele8 !== void 0 && _calendarOptions$sele8.startDate && calendarOptions.selectedDates.endDate) {
      return "".concat(dateFormatterWithoutDayName.format(new Date(calendarOptions.selectedDates.startDate)), " - ").concat(dateFormatterWithoutDayName.format(new Date(calendarOptions.selectedDates.endDate)), ", ").concat(nights, " ").concat(nights > 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Nights_LOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Night_LOWER"]));
    }
    return translations(accommodation_AccommodationTranslations["EA4H.Online.NoDateSelected"]);
  };
  var renderCalendarExtraTextRight = function renderCalendarExtraTextRight() {
    if (calendarResult !== null && calendarResult !== void 0 && calendarResult.hasPopulatedPrices) {
      return channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.currency;
    }
  };
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(InnerCalendarItems, {
    calendarResult: calendarResult,
    isCalendarLoading: isCalendarLoading,
    smallScreenDateChosen: smallScreenDateChosen
  }), /*#__PURE__*/react.createElement(CalendarExtraText, {
    Left: renderCalendarExtraTextLeft(),
    Right: renderCalendarExtraTextRight()
  }), /*#__PURE__*/react.createElement(Legend, {
    style: {
      marginTop: "10px"
    }
  }, /*#__PURE__*/react.createElement(calendar_legend_item, {
    backgroundImage: isVerySmallScreen ? stripedGradient(theme.css.bodyColor) : isSmallScreen ? stripedGradient(theme.css.popoutColor) : stripedGradient(theme.css.sidebarColor),
    backgroundSize: "6px 6px",
    opacity: .5
  }, noCheckInText), (channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.anySisterHotels) && (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele9 = calendarOptions.selectedObject) === null || _calendarOptions$sele9 === void 0 ? void 0 : _calendarOptions$sele9.objectType) === "Accommodation" && /*#__PURE__*/react.createElement(calendar_legend_item, {
    backgroundColor: theme.css.calendarMarkerSisterHotelColor,
    backgroundSize: "6px 6px"
  }, translations(accommodation_AccommodationTranslations["EA4H.General.CrossSaleOrWaitingList"])), (channelInfo === null || channelInfo === void 0 ? void 0 : channelInfo.waitingListActivated) && (calendarOptions === null || calendarOptions === void 0 ? void 0 : (_calendarOptions$sele10 = calendarOptions.selectedObject) === null || _calendarOptions$sele10 === void 0 ? void 0 : _calendarOptions$sele10.objectType) === "Accommodation" && /*#__PURE__*/react.createElement(calendar_legend_item, {
    backgroundColor: theme.css.calendarMarkerWaitingListColor,
    backgroundSize: "6px 6px"
  }, translations(accommodation_AccommodationTranslations["EA4H.General.WaitingList"]))));
};
;// CONCATENATED MODULE: ./src/shared_components/calendar/inner_calendar.tsx



//Hooks



//Components




 //CSS


//Lib


//Types


//Recoil







// Translations

var InnerCalendar = function InnerCalendar(_ref) {
  var disableOnSearch = _ref.disableOnSearch,
    disabled = _ref.disabled,
    promoCode = _ref.promoCode,
    selectedAccommodationTypes = _ref.selectedAccommodationTypes,
    onMonthChanged = _ref.onMonthChanged,
    smallScreenDateChosen = _ref.smallScreenDateChosen,
    useCardColors = _ref.useCardColors,
    isConference = _ref.isConference,
    selectedConferenceType = _ref.selectedConferenceType;
  var _useRecoilState = Recoil_index_22(selectedCalendarMonthIndex),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    selectedMonthIndex = _useRecoilState2[0],
    setSelectedMonthIndex = _useRecoilState2[1];
  var languageCulture = Recoil_index_20(languageCultureState);
  var translations = useAccommodationTranslations();
  var months = (0,react_production_min.useMemo)(function () {
    return get19MonthsAhead(new Date(), translations);
  }, [languageCulture]);
  var _useState = (0,react_production_min.useState)(months[parseInt(selectedMonthIndex)]),
    _useState2 = slicedToArray_slicedToArray(_useState, 2),
    selectedMonth = _useState2[0],
    setSelectedMonth = _useState2[1];
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var isSearching = (0,es.useIsFetching)("accommodationsearch") > 0;
  var theme = Ze();
  react.useEffect(function () {
    var index = months.indexOf(selectedMonth);
    if (index > -1) {
      setSelectedMonthIndex(index.toString());
      onMonthChanged === null || onMonthChanged === void 0 ? void 0 : onMonthChanged(new Date(months[index].year, months[index].month, 1));
    }
  }, [selectedMonth, months]);
  var weekDays = function weekDays() {
    var _apiContext$firstDayO;
    var calDays = [translations(accommodation_AccommodationTranslations["EA4H.General.SundayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.MondayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.TuesdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.WednesdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.ThursdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.FridayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.SaturdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.SundayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.MondayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.TuesdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.WednesdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.ThursdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.FridayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.SaturdayThreeLetters"]), translations(accommodation_AccommodationTranslations["EA4H.General.SundayThreeLetters"])];
    var startIndex = Object.keys(DayOfWeek).indexOf((_apiContext$firstDayO = apiContext.firstDayOfWeek) !== null && _apiContext$firstDayO !== void 0 ? _apiContext$firstDayO : translations(accommodation_AccommodationTranslations["EA4H.General.SundayThreeLetters"]));
    var endIndex = startIndex + 7;
    return calDays.slice(startIndex, endIndex);
  };
  var getDayOfWeekHeaders = function getDayOfWeekHeaders() {
    return weekDays().map(function (dayName, index) {
      return /*#__PURE__*/react.createElement(CalendarDayHeaderItem, {
        key: "".concat(dayName, "_").concat(index)
      }, dayName);
    });
  };

  // const isPackageDetail = calendarOptions?.selectedObject?.objectType === "Package" && Boolean(calendarOptions.selectedObject.objectName)
  // const isRoomDetail = calendarOptions?.selectedObject?.objectType === "Accommodation" && Boolean(calendarOptions.selectedObject.objectName)
  // let noCheckInText = translations(AccommodationTranslations["EA4H.General.NoCheckedIn"])
  // if (isPackageDetail || isRoomDetail) {
  //   noCheckInText = GetTranslation(translations(AccommodationTranslations["EA4H.General.NoCheckedInFor{0}"]), `'${selectedObject?.objectName}'`)
  // }

  var calendarShouldBeDisabled = disabled || isSearching && disableOnSearch;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    style: {
      color: useCardColors ? theme.css.cardColor : "unset",
      pointerEvents: calendarShouldBeDisabled ? "none" : "auto",
      opacity: calendarShouldBeDisabled ? .5 : 1
    }
  }, /*#__PURE__*/react.createElement(CalendarMonthSelectionDiv, {
    id: "cal_month_select"
  }, /*#__PURE__*/react.createElement("div", {
    onClick: function onClick() {
      if (months.indexOf(selectedMonth) === 0) {
        return;
      }
      var currentMonthInfo = months.find(function (x) {
        return x.prettyName === selectedMonth.prettyName;
      });
      var previousMonthInfo = months[months.indexOf(currentMonthInfo) - 1];
      setSelectedMonth(previousMonthInfo);
    },
    style: {
      opacity: months.indexOf(selectedMonth) === 0 ? 0.5 : 1,
      display: "grid",
      placeContent: "center",
      cursor: "pointer",
      width: "30px",
      marginLeft: "-10px"
    }
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    icon: faChevronLeft/* faChevronLeft */.A3
  })), /*#__PURE__*/react.createElement("div", {
    style: {
      position: "relative",
      flex: 1
    }
  }, /*#__PURE__*/react.createElement(CalendarMonthSelect, {
    onChange: function onChange(e) {
      var monthData = months.find(function (x) {
        return x.prettyName === e.target.value;
      });
      setSelectedMonth(monthData);
    },
    style: {
      border: 0,
      textTransform: "uppercase"
    },
    value: selectedMonth.prettyName
  }, months.map(function (month) {
    return /*#__PURE__*/react.createElement("option", {
      key: month.prettyName,
      style: {
        textTransform: "capitalize",
        fontSize: "15px",
        color: "black"
      },
      value: month.prettyName,
      label: month.prettyName
    }, month.prettyName);
  })), /*#__PURE__*/react.createElement("span", {
    style: {
      textTransform: "capitalize",
      fontWeight: theme.css.bodyBoldFontWeight,
      fontSize: theme.css.bodyFontSize,
      pointerEvents: "none",
      position: "absolute",
      inset: 0,
      display: "grid",
      placeContent: "center",
      gridAutoFlow: "column",
      gap: "6px"
    }
  }, selectedMonth.prettyName, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    style: {
      alignSelf: "center"
    },
    icon: faAngleDown/* faAngleDown */.gc
  }))), /*#__PURE__*/react.createElement("div", {
    onClick: function onClick() {
      if (months.indexOf(selectedMonth) === 18) {
        return;
      }
      var currentMonthInfo = months.find(function (x) {
        return x.prettyName === selectedMonth.prettyName;
      });
      var nextMonthInfo = months[months.indexOf(currentMonthInfo) + 1];
      setSelectedMonth(nextMonthInfo);
    },
    style: {
      opacity: months.indexOf(selectedMonth) === 18 ? 0.5 : 1,
      display: "grid",
      placeContent: "center",
      cursor: "pointer",
      width: "30px",
      marginRight: "-10px"
    }
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    icon: faChevronRight/* faChevronRight */._t
  }))), /*#__PURE__*/react.createElement(CalendarDayHeaderRow, null, getDayOfWeekHeaders()), isConference && /*#__PURE__*/react.createElement(InnerCalendarItems, {
    smallScreenDateChosen: smallScreenDateChosen,
    isConference: true,
    selectedConferenceType: selectedConferenceType,
    isCalendarLoading: false,
    calendarResult: conferenceCalendarSearchResult(selectedMonth.month, selectedMonth.year, selectedConferenceType === "conference_with_accommodation")
  }), !isConference && /*#__PURE__*/react.createElement(AccommodationInnerCalendarItems, {
    selectedMonth: selectedMonth,
    setSelectedMonth: setSelectedMonth,
    selectedAccommodationTypes: selectedAccommodationTypes,
    promoCode: promoCode,
    smallScreenDateChosen: smallScreenDateChosen,
    months: months
  })));
};
/* harmony default export */ var inner_calendar = (InnerCalendar);
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/styles.ts


var styles_SearchButton = styled_components_esm(button_Button).withConfig({
  displayName: "styles__SearchButton",
  componentId: "sc-dcxeu6-0"
})(["", ""], function (_ref) {
  var theme = _ref.theme;
  return Ae(["&&&{max-width:none;min-height:60px;height:60px;min-width:110px;border-radius:", ";text-transform:uppercase;@media ", "{max-width:100%;width:100%;}@media ", "{max-width:100%;width:100%;}}"], theme.css.inputRoundedCorners, function (_ref2) {
    var theme = _ref2.theme;
    return theme.mediaQueries.small;
  }, function (_ref3) {
    var theme = _ref3.theme;
    return theme.mediaQueries.verySmall;
  });
});
var FullWidthBackgroundWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__FullWidthBackgroundWrapper",
  componentId: "sc-dcxeu6-1"
})(["width:100%;background-color:", ";z-index:9999;position:sticky;top:0;left:0;right:0;"], function (_ref4) {
  var theme = _ref4.theme;
  return theme.css.formBackground;
});
var SearchBarWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__SearchBarWrapper",
  componentId: "sc-dcxeu6-2"
})(["display:flex;max-width:1600px;align-items:start;justify-content:space-between;padding:15px 20px;column-gap:10px;flex-wrap:no-wrap;", " > *{flex:1;}"], function (_ref5) {
  var inModal = _ref5.inModal;
  return inModal && Ae(["@media ", "{row-gap:10px;flex-wrap:wrap;align-items:stretch;justify-content:center;}"], function (_ref6) {
    var theme = _ref6.theme;
    return theme.mediaQueries.max1000px;
  });
});
var SearchButtonWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__SearchButtonWrapper",
  componentId: "sc-dcxeu6-3"
})(["display:flex;gap:6px;color:", ";cursor:pointer;@media ", "{width:100%;align-self:center;justify-content:center;}&:hover{text-decoration:underline;}"], function (_ref7) {
  var theme = _ref7.theme;
  return theme.css.linkColor;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.mediaQueries.verySmall;
});
var SearchRowWrapper = styled_components_esm.div.withConfig({
  displayName: "styles__SearchRowWrapper",
  componentId: "sc-dcxeu6-4"
})(["display:flex;flex-direction:column;gap:5px;align-items:stretch;", ""], function (_ref9) {
  var inModal = _ref9.inModal;
  return inModal && Ae(["flex:1;"]);
});
var TargetWrapperDiv = styled_components_esm.div.withConfig({
  displayName: "styles__TargetWrapperDiv",
  componentId: "sc-dcxeu6-5"
})(["display:flex;align-items:stretch;justify-content:stretch;position:relative;@media ", "{flex:1;}"], function (_ref10) {
  var theme = _ref10.theme;
  return theme.mediaQueries.small;
});
var MinifiedSearchBarInner = styled_components_esm.div.withConfig({
  displayName: "styles__MinifiedSearchBarInner",
  componentId: "sc-dcxeu6-6"
})(["display:flex;flex:1;align-items:center;justify-content:space-around;"]);
;// CONCATENATED MODULE: ./node_modules/date-fns/esm/parseISO/index.js



/**
 * @name parseISO
 * @category Common Helpers
 * @summary Parse ISO string
 *
 * @description
 * Parse the given string in ISO 8601 format and return an instance of Date.
 *
 * Function accepts complete ISO 8601 formats as well as partial implementations.
 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
 *
 * If the argument isn't a string, the function cannot parse the string or
 * the values are invalid, it returns Invalid Date.
 *
 * @param {String} argument - the value to convert
 * @param {Object} [options] - an object with options.
 * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
 *
 * @example
 * // Convert string '2014-02-11T11:30:30' to date:
 * const result = parseISO('2014-02-11T11:30:30')
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert string '+02014101' to date,
 * // if the additional number of digits in the extended year format is 1:
 * const result = parseISO('+02014101', { additionalDigits: 1 })
 * //=> Fri Apr 11 2014 00:00:00
 */

function parseISO(argument, options) {
  var _options$additionalDi;
  requiredArgs(1, arguments);
  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
    throw new RangeError('additionalDigits must be 0, 1 or 2');
  }
  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
    return new Date(NaN);
  }
  var dateStrings = splitDateString(argument);
  var date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime())) {
    return new Date(NaN);
  }
  var timestamp = date.getTime();
  var time = 0;
  var offset;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) {
      return new Date(NaN);
    }
  }
  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) {
      return new Date(NaN);
    }
  } else {
    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone
    // but we need it to be parsed in our timezone
    // so we use utc values to build date in our timezone.
    // Year values from 0 to 99 map to the years 1900 to 1999
    // so set year explicitly with setFullYear.

    var result = new Date(0);
    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());
    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
    return result;
  }
  return new Date(timestamp + time + offset);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  var dateStrings = {};
  var array = dateString.split(patterns.dateTimeDelimiter);
  var timeString; // The regex match should only return at maximum two array elements.
  // [date], [time], or [date, time].

  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(dateStrings.date.length, dateString.length);
    }
  }
  if (timeString) {
    var token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], '');
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
  var captures = dateString.match(regex); // Invalid ISO-formatted year

  if (!captures) return {
    year: NaN,
    restDateString: ''
  };
  var year = captures[1] ? parseInt(captures[1]) : null;
  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both

  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  // Invalid ISO-formatted year
  if (year === null) return new Date(NaN);
  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string

  if (!captures) return new Date(NaN);
  var isWeekDate = !!captures[4];
  var dayOfYear = parseDateUnit(captures[1]);
  var month = parseDateUnit(captures[2]) - 1;
  var day = parseDateUnit(captures[3]);
  var week = parseDateUnit(captures[4]);
  var dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    var date = new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures) return NaN; // Invalid ISO-formatted time

  var hours = parseTimeUnit(captures[1]);
  var minutes = parseTimeUnit(captures[2]);
  var seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(',', '.')) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === 'Z') return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  var sign = captures[1] === '+' ? -1 : 1;
  var hours = parseInt(captures[2]);
  var minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7;
  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
} // Validation functions
// February is null to handle the leap year (using ||)

var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function parseISO_isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (parseISO_isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (parseISO_isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/divider/divider.tsx



var divider_Divider = function Divider(_ref) {
  var label = _ref.label,
    icon = _ref.icon;
  var theme = Ze();
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      alignItems: "center",
      gap: "10px",
      width: "100%"
    }
  }, /*#__PURE__*/react.createElement(BodyText, {
    small: true,
    muted: true,
    style: {
      whiteSpace: "nowrap"
    }
  }, icon && /*#__PURE__*/react.createElement("span", {
    style: {
      marginRight: '8px'
    }
  }, icon), label), /*#__PURE__*/react.createElement("hr", {
    style: {
      margin: "0",
      height: theme.css.dividerBorderWidth,
      border: 0,
      width: "100%",
      background: theme.css.cardDividerColor
    }
  }));
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/date_dropdown/nr_of_nights_selection.tsx



// Hooks



// Components




// Lib


// Recoil


var NrOfNightsSelection = function NrOfNightsSelection() {
  var _useRecoilState = Recoil_index_22(NumberOfNightsState),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    nrOfNights = _useRecoilState2[0],
    setNrOfNights = _useRecoilState2[1];
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var setSelectedEndDate = Recoil_index_24(selectedCalendarEndDate);
  var conferenceType = Recoil_index_20(ConferenceTypeState);
  var translations = useAccommodationTranslations();
  (0,react_production_min.useEffect)(function () {
    if (selectedStartDate && conferenceType === "conference_with_accommodation") {
      var endDate = add(toUTCDate(new Date(selectedStartDate)), {
        days: nrOfNights
      });
      setSelectedEndDate(dateToServerFormat(endDate));
    }
  }, [nrOfNights, selectedStartDate]);
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      width: "100%",
      justifyContent: "space-between",
      alignItems: "center",
      marginTop: "5px"
    }
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      alignItems: "center",
      gap: "10px"
    }
  }, /*#__PURE__*/react.createElement(BodyText, {
    large: true,
    bold: true
  }, translations(accommodation_AccommodationTranslations["EA4H.General.NumberOfNights"]))), /*#__PURE__*/react.createElement(Select, {
    style: {
      width: "165px"
    },
    value: nrOfNights,
    onChange: function onChange(e) {
      return setNrOfNights(Number(e.target.value));
    }
  }, Array(10).fill(null).map(function (x, i) {
    var optionLabel = "".concat(i + 1, " ").concat(i === 0 ? translations(accommodation_AccommodationTranslations["EA4H.General.Night"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Nights"]));
    return /*#__PURE__*/react.createElement("option", {
      value: i + 1,
      label: optionLabel,
      key: "".concat(x, "-").concat(i)
    }, optionLabel);
  })));
};
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faLongArrowRight.js
var faLongArrowRight = __webpack_require__(7034);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/CheckboxGroup.context.js

const CheckboxGroupContext = (0,react_production_min.createContext)(null);
const CheckboxGroupProvider = CheckboxGroupContext.Provider;
const useCheckboxGroupContext = () => (0,react_production_min.useContext)(CheckboxGroupContext);

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Stack/Stack.styles.js

var Stack_styles_useStyles = createStyles((theme, {
  spacing,
  align,
  justify
}) => ({
  root: {
    display: "flex",
    flexDirection: "column",
    alignItems: align,
    justifyContent: justify,
    gap: theme.fn.size({
      size: spacing,
      sizes: theme.spacing
    })
  }
}));
/* harmony default export */ var Stack_styles = (Stack_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Stack/Stack.js




var Stack_defProp = Object.defineProperty;
var Stack_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Stack_hasOwnProp = Object.prototype.hasOwnProperty;
var Stack_propIsEnum = Object.prototype.propertyIsEnumerable;
var Stack_defNormalProp = (obj, key, value) => key in obj ? Stack_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Stack_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Stack_hasOwnProp.call(b, prop)) Stack_defNormalProp(a, prop, b[prop]);
  if (Stack_getOwnPropSymbols) for (var prop of Stack_getOwnPropSymbols(b)) {
    if (Stack_propIsEnum.call(b, prop)) Stack_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Stack_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Stack_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Stack_getOwnPropSymbols) for (var prop of Stack_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Stack_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Stack_defaultProps = {
  spacing: "md",
  align: "stretch",
  justify: "flex-start"
};
const Stack = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Stack", Stack_defaultProps, props),
    {
      spacing,
      className,
      align,
      justify,
      unstyled
    } = _a,
    others = Stack_objRest(_a, ["spacing", "className", "align", "justify", "unstyled"]);
  const {
    classes,
    cx
  } = Stack_styles({
    spacing,
    align,
    justify
  }, {
    name: "Stack",
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, Stack_spreadValues({
    className: cx(classes.root, className),
    ref
  }, others));
});
Stack.displayName = "@mantine/core/Stack";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/CheckboxGroup/InputsGroup.js



function InputsGroup({
  spacing,
  offset,
  orientation,
  children,
  role,
  unstyled
}) {
  if (orientation === "horizontal") {
    return /* @__PURE__ */react.createElement(Group, {
      pt: offset,
      spacing,
      role,
      unstyled
    }, children);
  }
  return /* @__PURE__ */react.createElement(Stack, {
    pt: offset,
    spacing,
    role,
    unstyled
  }, children);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/CheckboxGroup/CheckboxGroup.js






var CheckboxGroup_defProp = Object.defineProperty;
var CheckboxGroup_getOwnPropSymbols = Object.getOwnPropertySymbols;
var CheckboxGroup_hasOwnProp = Object.prototype.hasOwnProperty;
var CheckboxGroup_propIsEnum = Object.prototype.propertyIsEnumerable;
var CheckboxGroup_defNormalProp = (obj, key, value) => key in obj ? CheckboxGroup_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var CheckboxGroup_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (CheckboxGroup_hasOwnProp.call(b, prop)) CheckboxGroup_defNormalProp(a, prop, b[prop]);
  if (CheckboxGroup_getOwnPropSymbols) for (var prop of CheckboxGroup_getOwnPropSymbols(b)) {
    if (CheckboxGroup_propIsEnum.call(b, prop)) CheckboxGroup_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var CheckboxGroup_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (CheckboxGroup_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && CheckboxGroup_getOwnPropSymbols) for (var prop of CheckboxGroup_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && CheckboxGroup_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const CheckboxGroup_defaultProps = {
  orientation: "horizontal",
  spacing: "lg",
  size: "sm",
  offset: "xs"
};
const CheckboxGroup = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("CheckboxGroup", CheckboxGroup_defaultProps, props),
    {
      children,
      value,
      defaultValue,
      onChange,
      orientation,
      spacing,
      size,
      wrapperProps,
      offset
    } = _a,
    others = CheckboxGroup_objRest(_a, ["children", "value", "defaultValue", "onChange", "orientation", "spacing", "size", "wrapperProps", "offset"]);
  const [_value, setValue] = useUncontrolled({
    value,
    defaultValue,
    finalValue: [],
    onChange
  });
  const handleChange = event => {
    const itemValue = event.currentTarget.value;
    setValue(_value.includes(itemValue) ? _value.filter(item => item !== itemValue) : [..._value, itemValue]);
  };
  return /* @__PURE__ */react.createElement(CheckboxGroupProvider, {
    value: {
      value: _value,
      onChange: handleChange,
      size
    }
  }, /* @__PURE__ */react.createElement(Input_Input.Wrapper, CheckboxGroup_spreadValues(CheckboxGroup_spreadValues({
    labelElement: "div",
    size,
    __staticSelector: "CheckboxGroup",
    ref
  }, wrapperProps), others), /* @__PURE__ */react.createElement(InputsGroup, {
    spacing,
    orientation,
    offset
  }, children)));
});
CheckboxGroup.displayName = "@mantine/core/CheckboxGroup";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/CheckboxIcon.js

var CheckboxIcon_defProp = Object.defineProperty;
var CheckboxIcon_getOwnPropSymbols = Object.getOwnPropertySymbols;
var CheckboxIcon_hasOwnProp = Object.prototype.hasOwnProperty;
var CheckboxIcon_propIsEnum = Object.prototype.propertyIsEnumerable;
var CheckboxIcon_defNormalProp = (obj, key, value) => key in obj ? CheckboxIcon_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var CheckboxIcon_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (CheckboxIcon_hasOwnProp.call(b, prop)) CheckboxIcon_defNormalProp(a, prop, b[prop]);
  if (CheckboxIcon_getOwnPropSymbols) for (var prop of CheckboxIcon_getOwnPropSymbols(b)) {
    if (CheckboxIcon_propIsEnum.call(b, prop)) CheckboxIcon_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var CheckboxIcon_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (CheckboxIcon_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && CheckboxIcon_getOwnPropSymbols) for (var prop of CheckboxIcon_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && CheckboxIcon_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function CheckIcon(props) {
  return /* @__PURE__ */react.createElement("svg", CheckboxIcon_spreadValues({
    viewBox: "0 0 10 7",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /* @__PURE__ */react.createElement("path", {
    d: "M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z",
    fill: "currentColor",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}
function CheckboxIcon(_a) {
  var _b = _a,
    {
      indeterminate
    } = _b,
    others = CheckboxIcon_objRest(_b, ["indeterminate"]);
  if (indeterminate) {
    return /* @__PURE__ */react.createElement("svg", CheckboxIcon_spreadValues({
      xmlns: "http://www.w3.org/2000/svg",
      fill: "none",
      viewBox: "0 0 32 6"
    }, others), /* @__PURE__ */react.createElement("rect", {
      width: "32",
      height: "6",
      fill: "currentColor",
      rx: "3"
    }));
  }
  return /* @__PURE__ */react.createElement(CheckIcon, CheckboxIcon_spreadValues({}, others));
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/Checkbox.styles.js

var Checkbox_styles_defProp = Object.defineProperty;
var Checkbox_styles_defProps = Object.defineProperties;
var Checkbox_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var Checkbox_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Checkbox_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var Checkbox_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var Checkbox_styles_defNormalProp = (obj, key, value) => key in obj ? Checkbox_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Checkbox_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Checkbox_styles_hasOwnProp.call(b, prop)) Checkbox_styles_defNormalProp(a, prop, b[prop]);
  if (Checkbox_styles_getOwnPropSymbols) for (var prop of Checkbox_styles_getOwnPropSymbols(b)) {
    if (Checkbox_styles_propIsEnum.call(b, prop)) Checkbox_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Checkbox_styles_spreadProps = (a, b) => Checkbox_styles_defProps(a, Checkbox_styles_getOwnPropDescs(b));
const Checkbox_styles_sizes = {
  xs: 16,
  sm: 20,
  md: 24,
  lg: 30,
  xl: 36
};
const Checkbox_styles_iconSizes = {
  xs: 8,
  sm: 10,
  md: 14,
  lg: 16,
  xl: 20
};
var Checkbox_styles_useStyles = createStyles((theme, {
  size,
  radius,
  color,
  transitionDuration,
  labelPosition,
  error,
  indeterminate
}, getRef) => {
  const _size = theme.fn.size({
    size,
    sizes: Checkbox_styles_sizes
  });
  const colors = theme.fn.variant({
    variant: "filled",
    color
  });
  const errorColor = theme.fn.variant({
    variant: "filled",
    color: "red"
  }).background;
  return {
    icon: {
      ref: getRef("icon"),
      color: indeterminate ? "inherit" : theme.white,
      transform: indeterminate ? "none" : "translateY(5px) scale(0.5)",
      opacity: indeterminate ? 1 : 0,
      transitionProperty: "opacity, transform",
      transitionTimingFunction: "ease",
      transitionDuration: `${transitionDuration}ms`,
      pointerEvents: "none",
      width: theme.fn.size({
        size,
        sizes: Checkbox_styles_iconSizes
      }),
      position: "absolute",
      zIndex: 1,
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      margin: "auto",
      "@media (prefers-reduced-motion)": {
        transitionDuration: theme.respectReducedMotion ? "0ms" : void 0
      }
    },
    inner: {
      position: "relative",
      width: _size,
      height: _size,
      order: labelPosition === "left" ? 2 : 1
    },
    input: Checkbox_styles_spreadProps(Checkbox_styles_spreadValues({}, theme.fn.focusStyles()), {
      appearance: "none",
      backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.white,
      border: `1px solid ${error ? errorColor : theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[4]}`,
      width: _size,
      height: _size,
      borderRadius: theme.fn.radius(radius),
      padding: 0,
      display: "block",
      margin: 0,
      transition: `border-color ${transitionDuration}ms ease, background-color ${transitionDuration}ms ease`,
      cursor: theme.cursorType,
      "&:checked": {
        backgroundColor: colors.background,
        borderColor: colors.background,
        [`& + .${getRef("icon")}`]: {
          opacity: 1,
          color: theme.white,
          transform: "translateY(0) scale(1)"
        }
      },
      "&:disabled": {
        backgroundColor: theme.colorScheme === "dark" ? theme.colors.dark[4] : theme.colors.gray[2],
        borderColor: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[3],
        cursor: "not-allowed",
        [`& + .${getRef("icon")}`]: {
          color: theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[5]
        }
      }
    })
  };
});
/* harmony default export */ var Checkbox_styles = (Checkbox_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/InlineInput/InlineInput.styles.js

var InlineInput_styles_defProp = Object.defineProperty;
var InlineInput_styles_defProps = Object.defineProperties;
var InlineInput_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var InlineInput_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InlineInput_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var InlineInput_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var InlineInput_styles_defNormalProp = (obj, key, value) => key in obj ? InlineInput_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InlineInput_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InlineInput_styles_hasOwnProp.call(b, prop)) InlineInput_styles_defNormalProp(a, prop, b[prop]);
  if (InlineInput_styles_getOwnPropSymbols) for (var prop of InlineInput_styles_getOwnPropSymbols(b)) {
    if (InlineInput_styles_propIsEnum.call(b, prop)) InlineInput_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InlineInput_styles_spreadProps = (a, b) => InlineInput_styles_defProps(a, InlineInput_styles_getOwnPropDescs(b));
const InlineInput_styles_sizes = {
  xs: 16,
  sm: 20,
  md: 24,
  lg: 30,
  xl: 36
};
var InlineInput_styles_useStyles = createStyles((theme, {
  labelPosition,
  size
}) => ({
  root: {},
  body: {
    display: "flex"
  },
  labelWrapper: InlineInput_styles_spreadProps(InlineInput_styles_spreadValues({}, theme.fn.fontStyles()), {
    display: "inline-flex",
    flexDirection: "column",
    WebkitTapHighlightColor: "transparent",
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }),
    lineHeight: `${theme.fn.size({
      size,
      sizes: InlineInput_styles_sizes
    })}px`,
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.black,
    cursor: theme.cursorType,
    order: labelPosition === "left" ? 1 : 2
  }),
  description: {
    marginTop: `calc(${theme.spacing.xs}px / 2)`,
    [labelPosition === "left" ? "paddingRight" : "paddingLeft"]: theme.spacing.sm
  },
  error: {
    marginTop: `calc(${theme.spacing.xs}px / 2)`,
    [labelPosition === "left" ? "paddingRight" : "paddingLeft"]: theme.spacing.sm
  },
  label: {
    cursor: theme.cursorType,
    [labelPosition === "left" ? "paddingRight" : "paddingLeft"]: theme.spacing.sm,
    "&[data-disabled]": {
      color: theme.colorScheme === "dark" ? theme.colors.dark[3] : theme.colors.gray[5]
    }
  }
}));
/* harmony default export */ var InlineInput_styles = (InlineInput_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/InlineInput/InlineInput.js




var InlineInput_defProp = Object.defineProperty;
var InlineInput_getOwnPropSymbols = Object.getOwnPropertySymbols;
var InlineInput_hasOwnProp = Object.prototype.hasOwnProperty;
var InlineInput_propIsEnum = Object.prototype.propertyIsEnumerable;
var InlineInput_defNormalProp = (obj, key, value) => key in obj ? InlineInput_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var InlineInput_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (InlineInput_hasOwnProp.call(b, prop)) InlineInput_defNormalProp(a, prop, b[prop]);
  if (InlineInput_getOwnPropSymbols) for (var prop of InlineInput_getOwnPropSymbols(b)) {
    if (InlineInput_propIsEnum.call(b, prop)) InlineInput_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var InlineInput_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (InlineInput_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && InlineInput_getOwnPropSymbols) for (var prop of InlineInput_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && InlineInput_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function InlineInput(_a) {
  var _b = _a,
    {
      __staticSelector,
      className,
      classNames,
      styles,
      unstyled,
      children,
      label,
      description,
      id,
      disabled,
      error,
      size,
      labelPosition
    } = _b,
    others = InlineInput_objRest(_b, ["__staticSelector", "className", "classNames", "styles", "unstyled", "children", "label", "description", "id", "disabled", "error", "size", "labelPosition"]);
  const {
    classes,
    cx
  } = InlineInput_styles({
    size,
    labelPosition
  }, {
    name: __staticSelector,
    styles,
    classNames,
    unstyled
  });
  return /* @__PURE__ */react.createElement(Box, InlineInput_spreadValues({
    className: cx(classes.root, className)
  }, others), /* @__PURE__ */react.createElement("div", {
    className: cx(classes.body)
  }, children, /* @__PURE__ */react.createElement("div", {
    className: classes.labelWrapper
  }, label && /* @__PURE__ */react.createElement("label", {
    className: classes.label,
    "data-disabled": disabled || void 0,
    htmlFor: id
  }, label), description && /* @__PURE__ */react.createElement(Input_Input.Description, {
    className: classes.description
  }, description), error && error !== "boolean" && /* @__PURE__ */react.createElement(Input_Input.Error, {
    className: classes.error
  }, error))));
}
InlineInput.displayName = "@mantine/core/InlineInput";

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Checkbox/Checkbox.js









var Checkbox_defProp = Object.defineProperty;
var Checkbox_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Checkbox_hasOwnProp = Object.prototype.hasOwnProperty;
var Checkbox_propIsEnum = Object.prototype.propertyIsEnumerable;
var Checkbox_defNormalProp = (obj, key, value) => key in obj ? Checkbox_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Checkbox_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Checkbox_hasOwnProp.call(b, prop)) Checkbox_defNormalProp(a, prop, b[prop]);
  if (Checkbox_getOwnPropSymbols) for (var prop of Checkbox_getOwnPropSymbols(b)) {
    if (Checkbox_propIsEnum.call(b, prop)) Checkbox_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Checkbox_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Checkbox_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Checkbox_getOwnPropSymbols) for (var prop of Checkbox_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Checkbox_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Checkbox_defaultProps = {
  size: "sm",
  transitionDuration: 100,
  icon: CheckboxIcon,
  labelPosition: "right"
};
const Checkbox = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Checkbox", Checkbox_defaultProps, props),
    {
      className,
      style,
      sx,
      checked,
      disabled,
      color,
      label,
      indeterminate,
      id,
      size,
      radius,
      wrapperProps,
      children,
      classNames,
      styles,
      transitionDuration,
      icon: Icon,
      unstyled,
      labelPosition,
      description,
      error
    } = _a,
    others = Checkbox_objRest(_a, ["className", "style", "sx", "checked", "disabled", "color", "label", "indeterminate", "id", "size", "radius", "wrapperProps", "children", "classNames", "styles", "transitionDuration", "icon", "unstyled", "labelPosition", "description", "error"]);
  const ctx = useCheckboxGroupContext();
  const uuid = useId(id);
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  const {
    classes
  } = Checkbox_styles({
    size: (ctx == null ? void 0 : ctx.size) || size,
    radius,
    color,
    transitionDuration,
    labelPosition,
    error: !!error,
    indeterminate
  }, {
    name: "Checkbox",
    classNames,
    styles,
    unstyled
  });
  const contextProps = ctx ? {
    checked: ctx.value.includes(rest.value),
    onChange: ctx.onChange
  } : {};
  return /* @__PURE__ */react.createElement(InlineInput, Checkbox_spreadValues(Checkbox_spreadValues({
    className,
    sx,
    style,
    id: uuid,
    size: (ctx == null ? void 0 : ctx.size) || size,
    labelPosition,
    label,
    description,
    error,
    disabled,
    __staticSelector: "Checkbox",
    classNames,
    styles,
    unstyled,
    "data-checked": contextProps.checked || void 0
  }, systemStyles), wrapperProps), /* @__PURE__ */react.createElement("div", {
    className: classes.inner
  }, /* @__PURE__ */react.createElement("input", Checkbox_spreadValues(Checkbox_spreadValues({
    id: uuid,
    ref,
    type: "checkbox",
    className: classes.input,
    checked,
    disabled
  }, rest), contextProps)), /* @__PURE__ */react.createElement(Icon, {
    indeterminate,
    className: classes.icon
  })));
});
Checkbox.displayName = "@mantine/core/Checkbox";
Checkbox.Group = CheckboxGroup;

;// CONCATENATED MODULE: ./node_modules/@mantine/hooks/esm/utils/clamp/clamp.js
function clamp_clamp(value, min, max) {
  return Math.min(Math.max(value, min), max);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/pad-time/pad-time.js
function padTime(value) {
  const _val = parseInt(value, 10);
  return _val >= 10 ? _val.toString() : `0${_val}`;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/TimeInputBase.styles.js

var TimeInputBase_styles_defProp = Object.defineProperty;
var TimeInputBase_styles_defProps = Object.defineProperties;
var TimeInputBase_styles_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var TimeInputBase_styles_getOwnPropSymbols = Object.getOwnPropertySymbols;
var TimeInputBase_styles_hasOwnProp = Object.prototype.hasOwnProperty;
var TimeInputBase_styles_propIsEnum = Object.prototype.propertyIsEnumerable;
var TimeInputBase_styles_defNormalProp = (obj, key, value) => key in obj ? TimeInputBase_styles_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var TimeInputBase_styles_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (TimeInputBase_styles_hasOwnProp.call(b, prop)) TimeInputBase_styles_defNormalProp(a, prop, b[prop]);
  if (TimeInputBase_styles_getOwnPropSymbols) for (var prop of TimeInputBase_styles_getOwnPropSymbols(b)) {
    if (TimeInputBase_styles_propIsEnum.call(b, prop)) TimeInputBase_styles_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var TimeInputBase_styles_spreadProps = (a, b) => TimeInputBase_styles_defProps(a, TimeInputBase_styles_getOwnPropDescs(b));
const inputSizes = {
  xs: 20,
  sm: 23,
  md: 25,
  lg: 27,
  xl: 29
};
var TimeInputBase_styles_useStyles = createStyles((theme, {
  size,
  hasValue
}) => ({
  timeInput: TimeInputBase_styles_spreadProps(TimeInputBase_styles_spreadValues({}, theme.fn.fontStyles()), {
    width: theme.fn.size({
      size,
      sizes: inputSizes
    }),
    appearance: "none",
    backgroundColor: "transparent",
    color: "inherit",
    padding: 0,
    textAlign: "center",
    border: "1px solid transparent",
    fontSize: theme.fn.size({
      size,
      sizes: theme.fontSizes
    }),
    lineHeight: 1,
    outline: 0,
    "&:focus": {
      textAlign: hasValue ? void 0 : "start"
    },
    "&::placeholder": {
      width: "auto",
      textAlign: "left"
    },
    "&[disabled]": {
      color: theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[7],
      cursor: "not-allowed"
    }
  }),
  amPmInput: {
    textAlign: "left"
  }
}));
/* harmony default export */ var TimeInputBase_styles = (TimeInputBase_styles_useStyles);

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/TimeField/TimeField.js





var TimeField_defProp = Object.defineProperty;
var TimeField_getOwnPropSymbols = Object.getOwnPropertySymbols;
var TimeField_hasOwnProp = Object.prototype.hasOwnProperty;
var TimeField_propIsEnum = Object.prototype.propertyIsEnumerable;
var TimeField_defNormalProp = (obj, key, value) => key in obj ? TimeField_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var TimeField_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (TimeField_hasOwnProp.call(b, prop)) TimeField_defNormalProp(a, prop, b[prop]);
  if (TimeField_getOwnPropSymbols) for (var prop of TimeField_getOwnPropSymbols(b)) {
    if (TimeField_propIsEnum.call(b, prop)) TimeField_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var TimeField_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (TimeField_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && TimeField_getOwnPropSymbols) for (var prop of TimeField_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && TimeField_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const TimeField = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      className,
      onFocus,
      onBlur,
      onChange,
      setValue,
      withSeparator = false,
      size = "sm",
      max,
      min = 0,
      value,
      unstyled
    } = _b,
    others = TimeField_objRest(_b, ["className", "onFocus", "onBlur", "onChange", "setValue", "withSeparator", "size", "max", "min", "value", "unstyled"]);
  const [digitsEntered, setDigitsEntered] = (0,react_production_min.useState)(0);
  const {
    classes,
    cx,
    theme
  } = TimeInputBase_styles({
    size,
    hasValue: !!value
  }, {
    name: "TimeField",
    unstyled
  });
  const inputRef = (0,react_production_min.useRef)();
  const handleFocus = event => {
    typeof onFocus === "function" && onFocus(event);
    inputRef.current.select();
    setDigitsEntered(0);
  };
  const handleBlur = event => {
    typeof onBlur === "function" && onBlur(event);
    if (digitsEntered === 1) {
      typeof onChange === "function" && onChange(event.currentTarget.value, false);
    }
  };
  const handleClick = event => {
    event.stopPropagation();
    inputRef.current.select();
  };
  const handleKeyDown = event => {
    if (event.key === "ArrowUp") {
      event.preventDefault();
      const padded = padTime(clamp_clamp(parseInt(event.currentTarget.value, 10) + 1, min, max).toString());
      if (value !== padded) {
        onChange(padded, false);
      }
    }
    if (event.key === "ArrowDown") {
      event.preventDefault();
      const padded = padTime(clamp_clamp(parseInt(event.currentTarget.value, 10) - 1, min, max).toString());
      if (value !== padded) {
        onChange(padded, false);
      }
    }
  };
  const handleChange = event => {
    setDigitsEntered(digitsEntered + 1);
    const _val = parseInt(event.currentTarget.value, 10).toString();
    if (_val === "0" && digitsEntered === 0) {
      setValue("00");
      return;
    }
    onChange(_val, true, digitsEntered > 0);
  };
  return /* @__PURE__ */react.createElement(react.Fragment, null, /* @__PURE__ */react.createElement("input", TimeField_spreadValues({
    type: "text",
    inputMode: "numeric",
    ref: useMergedRef(inputRef, ref),
    onChange: handleChange,
    onClick: handleClick,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onKeyDown: handleKeyDown,
    value,
    className: cx(classes.timeInput, className)
  }, others)), withSeparator && /* @__PURE__ */react.createElement(Text, {
    size,
    unstyled,
    style: {
      lineHeight: 1,
      color: value ? "inherit" : theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[7]
    }
  }, ":"));
});
TimeField.displayName = "@mantine/dates/TimeField";

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/create-time-handler/all-but-last-digit/all-but-last-digit.js
function allButLastDigit(value) {
  return Math.floor(value / 10);
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/create-time-handler/create-time-handler.js



function createTimeHandler({
  onChange,
  nextRef,
  min,
  max,
  nextMax
}) {
  return (value, triggerShift, forceTriggerShift = false) => {
    var _a, _b;
    const parsed = parseInt(value, 10);
    if (Number.isNaN(parsed)) {
      return;
    }
    if (parsed > allButLastDigit(max) || forceTriggerShift) {
      const lastDigit = parsed % 10;
      let updatedValue;
      let carryOver;
      if (parsed > max && nextMax && lastDigit <= allButLastDigit(nextMax)) {
        updatedValue = padTime(allButLastDigit(parsed).toString());
        carryOver = padTime(lastDigit.toString());
      } else {
        updatedValue = padTime(clamp_clamp(parsed, min, max).toString());
      }
      onChange(updatedValue, carryOver);
      triggerShift && ((_a = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _a.focus());
      triggerShift && ((_b = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _b.select());
      return;
    }
    onChange(parsed.toString());
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInput/TimeInput.styles.js

var TimeInput_styles_useStyles = createStyles((theme, {
  size
}) => ({
  timeInput: {},
  amPmInput: {},
  disabled: {
    cursor: "not-allowed"
  },
  controls: {
    display: "flex",
    alignItems: "center",
    height: theme.fn.size({
      size,
      sizes: Input_styles_sizes
    }) - 2
  }
}));
/* harmony default export */ var TimeInput_styles = (TimeInput_styles_useStyles);
;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/AmPmInput/AmPmInput.js



var AmPmInput_defProp = Object.defineProperty;
var AmPmInput_getOwnPropSymbols = Object.getOwnPropertySymbols;
var AmPmInput_hasOwnProp = Object.prototype.hasOwnProperty;
var AmPmInput_propIsEnum = Object.prototype.propertyIsEnumerable;
var AmPmInput_defNormalProp = (obj, key, value) => key in obj ? AmPmInput_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var AmPmInput_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (AmPmInput_hasOwnProp.call(b, prop)) AmPmInput_defNormalProp(a, prop, b[prop]);
  if (AmPmInput_getOwnPropSymbols) for (var prop of AmPmInput_getOwnPropSymbols(b)) {
    if (AmPmInput_propIsEnum.call(b, prop)) AmPmInput_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var AmPmInput_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (AmPmInput_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && AmPmInput_getOwnPropSymbols) for (var prop of AmPmInput_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && AmPmInput_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const AmPmInput = (0,react_production_min.forwardRef)((_a, ref) => {
  var _b = _a,
    {
      className,
      onChange,
      onFocus,
      size = "sm",
      value,
      unstyled,
      amLabel,
      pmLabel
    } = _b,
    others = AmPmInput_objRest(_b, ["className", "onChange", "onFocus", "size", "value", "unstyled", "amLabel", "pmLabel"]);
  const {
    classes,
    cx
  } = TimeInputBase_styles({
    size,
    hasValue: !!value
  }, {
    name: "AmPmInput",
    unstyled
  });
  const inputRef = (0,react_production_min.useRef)();
  const handleFocus = event => {
    typeof onFocus === "function" && onFocus(event);
    inputRef.current.select();
  };
  const handleClick = event => {
    event.stopPropagation();
    inputRef.current.select();
  };
  const handleKeyDown = event => {
    if (event.key === "ArrowUp" || event.key === "ArrowDown") {
      event.preventDefault();
      onChange(value === amLabel ? pmLabel : amLabel, true);
    }
  };
  const handleChange = event => {
    const lastInputVal = event.target.value.slice(-1).toLowerCase();
    if (lastInputVal === "p") {
      event.preventDefault();
      onChange(pmLabel, true);
      return;
    }
    if (lastInputVal === "a") {
      event.preventDefault();
      onChange(amLabel, true);
      return;
    }
    onChange(value.toString(), true);
  };
  return /* @__PURE__ */react.createElement("input", AmPmInput_spreadValues({
    type: "text",
    ref: useMergedRef(inputRef, ref),
    onClick: handleClick,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown,
    onChange: handleChange,
    value,
    className: cx(classes.timeInput, classes.amPmInput)
  }, others));
});
AmPmInput.displayName = "@mantine/dates/AmPmInput";

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/create-amPm-handler/create-amPm-handler.js
function createAmPmHandler({
  amLabel,
  pmLabel,
  onChange,
  nextRef
}) {
  return (value, triggerShift) => {
    var _a, _b;
    const testRegex = new RegExp(`(^(${amLabel}|${pmLabel})?$)`);
    const valLower = value.toLowerCase();
    if (valLower === amLabel || valLower === pmLabel) {
      onChange(valLower);
      triggerShift && ((_a = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _a.focus());
      triggerShift && ((_b = nextRef == null ? void 0 : nextRef.current) == null ? void 0 : _b.select());
      return;
    }
    if (!testRegex.test(valLower)) {
      return;
    }
    onChange(valLower);
  };
}

// EXTERNAL MODULE: ./node_modules/dayjs/dayjs.min.js
var dayjs_min = __webpack_require__(7076);
var dayjs_min_default = /*#__PURE__*/__webpack_require__.n(dayjs_min);
;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/get-date/get-date.js

function getDate(hours, minutes, seconds, format, pmLabel, amPm) {
  const date = dayjs_min_default()();
  let _hours = parseInt(hours, 10);
  const _minutes = parseInt(minutes, 10);
  const _seconds = parseInt(seconds, 10);
  if (Number.isNaN(_hours)) {
    _hours = 0;
  }
  if (format === "12") {
    _hours %= 12;
    if (amPm === pmLabel) {
      _hours += 12;
    }
  }
  return date.hour(_hours).minute(Number.isNaN(_minutes) ? 0 : _minutes).second(Number.isNaN(_seconds) ? 0 : _seconds).millisecond(0).toDate();
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInputBase/get-time-values/get-time-value.js

function getTimeValues(value, format, amLabel, pmLabel) {
  if (!(value instanceof Date)) {
    return {
      hours: "",
      minutes: "",
      seconds: "",
      amPm: ""
    };
  }
  let _hours = value.getHours();
  const isPm = _hours >= 12;
  if (format === "12") {
    _hours %= 12;
    if (_hours === 0) {
      _hours += 12;
    }
  }
  return {
    hours: padTime(_hours.toString()),
    minutes: padTime(value.getMinutes().toString()),
    seconds: padTime(value.getSeconds().toString()),
    amPm: isPm ? pmLabel : amLabel
  };
}

;// CONCATENATED MODULE: ./node_modules/@mantine/dates/esm/components/TimeInput/TimeInput.js










var TimeInput_defProp = Object.defineProperty;
var TimeInput_defProps = Object.defineProperties;
var TimeInput_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var TimeInput_getOwnPropSymbols = Object.getOwnPropertySymbols;
var TimeInput_hasOwnProp = Object.prototype.hasOwnProperty;
var TimeInput_propIsEnum = Object.prototype.propertyIsEnumerable;
var TimeInput_defNormalProp = (obj, key, value) => key in obj ? TimeInput_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var TimeInput_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (TimeInput_hasOwnProp.call(b, prop)) TimeInput_defNormalProp(a, prop, b[prop]);
  if (TimeInput_getOwnPropSymbols) for (var prop of TimeInput_getOwnPropSymbols(b)) {
    if (TimeInput_propIsEnum.call(b, prop)) TimeInput_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var TimeInput_spreadProps = (a, b) => TimeInput_defProps(a, TimeInput_getOwnPropDescs(b));
var TimeInput_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (TimeInput_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && TimeInput_getOwnPropSymbols) for (var prop of TimeInput_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && TimeInput_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const TimeInput_RIGHT_SECTION_WIDTH = {
  xs: 24,
  sm: 30,
  md: 34,
  lg: 40,
  xl: 44
};
const TimeInput_defaultProps = {
  size: "sm",
  withSeconds: false,
  clearable: false,
  format: "24",
  amLabel: "am",
  pmLabel: "pm",
  timePlaceholder: "--",
  amPmPlaceholder: "am",
  disabled: false
};
const TimeInput_TimeInput = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("TimeInput", TimeInput_defaultProps, props),
    {
      required,
      label,
      error,
      description,
      className,
      style,
      size,
      wrapperProps,
      classNames,
      styles,
      id,
      value,
      defaultValue,
      onChange,
      withSeconds,
      clearable,
      clearButtonLabel,
      format,
      amLabel,
      pmLabel,
      name,
      hoursLabel,
      minutesLabel,
      secondsLabel,
      amPmLabel,
      timePlaceholder,
      amPmPlaceholder,
      disabled,
      sx,
      nextRef,
      labelProps,
      descriptionProps,
      errorProps,
      unstyled,
      withAsterisk
    } = _a,
    others = TimeInput_objRest(_a, ["required", "label", "error", "description", "className", "style", "size", "wrapperProps", "classNames", "styles", "id", "value", "defaultValue", "onChange", "withSeconds", "clearable", "clearButtonLabel", "format", "amLabel", "pmLabel", "name", "hoursLabel", "minutesLabel", "secondsLabel", "amPmLabel", "timePlaceholder", "amPmPlaceholder", "disabled", "sx", "nextRef", "labelProps", "descriptionProps", "errorProps", "unstyled", "withAsterisk"]);
  const {
    classes,
    cx,
    theme
  } = TimeInput_styles({
    size
  }, {
    classNames,
    styles,
    unstyled,
    name: "TimeInput"
  });
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  const uuid = useId(id);
  const hoursRef = (0,react_production_min.useRef)();
  const minutesRef = (0,react_production_min.useRef)();
  const secondsRef = (0,react_production_min.useRef)();
  const amPmRef = (0,react_production_min.useRef)();
  const [time, setTime] = (0,react_production_min.useState)(getTimeValues(value || defaultValue, format, amLabel, pmLabel));
  const [_value, setValue] = (0,react_production_min.useState)(value || defaultValue);
  useDidUpdate(() => {
    setTime(getTimeValues(_value, format, amLabel, pmLabel));
  }, [_value, format, amLabel, pmLabel]);
  useDidUpdate(() => {
    if ((value == null ? void 0 : value.getTime()) !== (_value == null ? void 0 : _value.getTime())) {
      setValue(value);
    }
  }, [value]);
  const setDate = change => {
    const timeWithChange = TimeInput_spreadValues(TimeInput_spreadValues({}, time), change);
    const newDate = getDate(timeWithChange.hours, timeWithChange.minutes, timeWithChange.seconds, format, pmLabel, timeWithChange.amPm);
    setValue(newDate);
    typeof onChange === "function" && onChange(newDate);
  };
  const handleHoursChange = createTimeHandler({
    onChange: (val, carryOver) => {
      setDate({
        hours: val,
        minutes: carryOver != null ? carryOver : time.minutes
      });
    },
    min: format === "12" ? 1 : 0,
    max: format === "12" ? 12 : 23,
    nextRef: minutesRef,
    nextMax: 59
  });
  const handleMinutesChange = createTimeHandler({
    onChange: (val, carryOver) => {
      setDate({
        minutes: val,
        seconds: carryOver != null ? carryOver : time.seconds
      });
    },
    min: 0,
    max: 59,
    nextRef: withSeconds ? secondsRef : format === "12" ? amPmRef : nextRef,
    nextMax: withSeconds ? 59 : void 0
  });
  const handleSecondsChange = createTimeHandler({
    onChange: val => {
      setDate({
        seconds: val
      });
    },
    min: 0,
    max: 59,
    nextRef: format === "12" ? amPmRef : nextRef
  });
  const handleAmPmChange = createAmPmHandler({
    amLabel,
    pmLabel,
    onChange: val => {
      setDate({
        amPm: val
      });
    },
    nextRef
  });
  const handleClear = () => {
    setTime({
      hours: "",
      minutes: "",
      seconds: "",
      amPm: ""
    });
    setValue(null);
    onChange == null ? void 0 : onChange(null);
    hoursRef.current.focus();
  };
  const rightSection = clearable && _value && !disabled ? /* @__PURE__ */react.createElement(CloseButton, {
    variant: "transparent",
    "aria-label": clearButtonLabel,
    onClick: handleClear,
    size,
    unstyled
  }) : null;
  return /* @__PURE__ */react.createElement(Input_Input.Wrapper, TimeInput_spreadValues(TimeInput_spreadValues({
    required,
    label,
    error,
    description,
    className,
    style,
    classNames,
    styles,
    size,
    __staticSelector: "TimeInput",
    id: uuid,
    sx,
    errorProps,
    descriptionProps,
    labelProps,
    unstyled,
    withAsterisk
  }, systemStyles), wrapperProps), /* @__PURE__ */react.createElement(Input_Input, TimeInput_spreadValues({
    component: "div",
    __staticSelector: "TimeInput",
    required,
    invalid: !!error,
    onClick: () => hoursRef.current.focus(),
    size,
    className: cx({
      [classes.disabled]: disabled
    }),
    classNames,
    styles,
    disabled,
    rightSection,
    rightSectionWidth: theme.fn.size({
      size,
      sizes: TimeInput_RIGHT_SECTION_WIDTH
    }),
    unstyled
  }, rest), /* @__PURE__ */react.createElement("div", {
    className: classes.controls
  }, /* @__PURE__ */react.createElement(TimeField, {
    ref: useMergedRef(hoursRef, ref),
    value: time.hours,
    onChange: handleHoursChange,
    setValue: val => setTime(current => TimeInput_spreadProps(TimeInput_spreadValues({}, current), {
      hours: val
    })),
    id: uuid,
    className: classes.timeInput,
    withSeparator: true,
    size,
    max: format === "12" ? 12 : 23,
    placeholder: timePlaceholder,
    "aria-label": hoursLabel,
    disabled,
    name,
    unstyled
  }), /* @__PURE__ */react.createElement(TimeField, {
    ref: minutesRef,
    value: time.minutes,
    onChange: handleMinutesChange,
    setValue: val => setTime(current => TimeInput_spreadProps(TimeInput_spreadValues({}, current), {
      minutes: val
    })),
    className: classes.timeInput,
    withSeparator: withSeconds,
    size,
    max: 59,
    placeholder: timePlaceholder,
    "aria-label": minutesLabel,
    disabled,
    unstyled
  }), withSeconds && /* @__PURE__ */react.createElement(TimeField, {
    ref: secondsRef,
    value: time.seconds,
    onChange: handleSecondsChange,
    setValue: val => setTime(current => TimeInput_spreadProps(TimeInput_spreadValues({}, current), {
      seconds: val
    })),
    className: classes.timeInput,
    size,
    max: 59,
    placeholder: timePlaceholder,
    "aria-label": secondsLabel,
    disabled,
    unstyled
  }), format === "12" && /* @__PURE__ */react.createElement(AmPmInput, {
    ref: amPmRef,
    value: time.amPm,
    onChange: handleAmPmChange,
    placeholder: amPmPlaceholder,
    amLabel,
    pmLabel,
    size,
    "aria-label": amPmLabel,
    disabled,
    unstyled
  }))));
});
TimeInput_TimeInput.displayName = "@mantine/dates/TimeInput";

;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/date_dropdown/time_input.tsx



var TimeInput = function TimeInput(_ref) {
  var onChange = _ref.onChange,
    value = _ref.value;
  var theme = Ze();
  return /*#__PURE__*/react.createElement(TimeInput_TimeInput, {
    styles: {
      input: {
        border: 0,
        padding: 0
      },
      timeInput: {
        fontFamily: theme.css.bodyFontFamily
      }
    },
    onChange: onChange,
    value: value
  });
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/date_dropdown/meeting_length_selection.tsx


function meeting_length_selection_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function meeting_length_selection_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? meeting_length_selection_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : meeting_length_selection_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }


// Hooks



// Components






// Types

// Recoil

var MeetingLengthSelection = function MeetingLengthSelection(_ref) {
  var _conferenceTimeState$2, _conferenceTimeState$3, _conferenceTimeState$4;
  var label = _ref.label,
    withCheckbox = _ref.withCheckbox,
    id = _ref.id;
  var _useRecoilState = Recoil_index_22(ConferenceTimeState),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    conferenceTimeState = _useRecoilState2[0],
    setConferenceTimeState = _useRecoilState2[1];
  var setMPSearchValidationState = Recoil_index_24(MPSearchValidationState);
  var theme = Ze();
  var handleChangeStartTime = function handleChangeStartTime(time) {
    setMPSearchValidationState(undefined);
    setConferenceTimeState(function (prevState) {
      // Time validation, uncomment if needed
      // const isBefore = compareAsc(new Date(prevState?.[id]?.endTime ?? time), time)
      // const startTime = isBefore ? time : prevState?.[id]?.endTime
      return meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState), {}, defineProperty_defineProperty({}, id, meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState === null || prevState === void 0 ? void 0 : prevState[id]), {}, {
        startTime: time
      })));
    });
  };
  var handleChangeEndTime = function handleChangeEndTime(time) {
    setMPSearchValidationState(undefined);
    setConferenceTimeState(function (prevState) {
      // Time validation, uncomment if needed
      // const isAfter = compareAsc(time, new Date(prevState?.[id]?.startTime ?? 0))
      // const endTime = isAfter ? time : prevState?.[id]?.startTime
      return meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState), {}, defineProperty_defineProperty({}, id, meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState === null || prevState === void 0 ? void 0 : prevState[id]), {}, {
        endTime: time
      })));
    });
  };
  var handleCheck = function handleCheck() {
    setMPSearchValidationState(undefined);
    setConferenceTimeState(function (prevState) {
      var _prevState$id;
      // Prevent changing state if number of checked time is 0
      var numOfChecked = Object.values(prevState).reduce(function (acc, obj) {
        return acc += obj.checked ? 1 : 0;
      }, 0);
      if (!(numOfChecked === 1 && prevState !== null && prevState !== void 0 && (_prevState$id = prevState[id]) !== null && _prevState$id !== void 0 && _prevState$id.checked)) {
        var _prevState$id2;
        return meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState), {}, defineProperty_defineProperty({}, id, meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState === null || prevState === void 0 ? void 0 : prevState[id]), {}, {
          checked: !(prevState !== null && prevState !== void 0 && (_prevState$id2 = prevState[id]) !== null && _prevState$id2 !== void 0 && _prevState$id2.checked)
        })));
      } else {
        return prevState;
      }
    });
  };
  (0,react_production_min.useEffect)(function () {
    var _conferenceTimeState$;
    if (!(conferenceTimeState !== null && conferenceTimeState !== void 0 && (_conferenceTimeState$ = conferenceTimeState[id]) !== null && _conferenceTimeState$ !== void 0 && _conferenceTimeState$.startTime)) {
      setConferenceTimeState(function (prevState) {
        return meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState), {}, defineProperty_defineProperty({}, id, meeting_length_selection_objectSpread(meeting_length_selection_objectSpread({}, prevState === null || prevState === void 0 ? void 0 : prevState[id]), {}, {
          startTime: new Date("July 1, 1999, 09:00"),
          endTime: new Date("July 1, 1999, 17:00")
        })));
      });
    }
  }, []);
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      width: "100%",
      justifyContent: "space-between",
      alignItems: "center",
      marginTop: "5px"
    }
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      alignItems: "center",
      gap: "10px"
    }
  }, withCheckbox && /*#__PURE__*/react.createElement(Checkbox, {
    checked: (_conferenceTimeState$2 = conferenceTimeState[id]) === null || _conferenceTimeState$2 === void 0 ? void 0 : _conferenceTimeState$2.checked,
    onChange: handleCheck
  }), /*#__PURE__*/react.createElement(BodyText, {
    large: true,
    bold: true
  }, label)), /*#__PURE__*/react.createElement("div", {
    style: {
      width: "165px",
      boxSizing: "border-box",
      display: "flex",
      border: "".concat(theme.css.inputBorderWidth, " solid ").concat(theme.css.inputBorderColor),
      borderRadius: theme.css.inputRoundedCorners,
      height: "40px",
      alignItems: "center",
      gap: "6px",
      justifyContent: "center"
    }
  }, /*#__PURE__*/react.createElement(TimeInput, {
    onChange: handleChangeStartTime,
    value: conferenceTimeState === null || conferenceTimeState === void 0 ? void 0 : (_conferenceTimeState$3 = conferenceTimeState[id]) === null || _conferenceTimeState$3 === void 0 ? void 0 : _conferenceTimeState$3.startTime
  }), /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    style: {
      opacity: theme.css.bodyMutedOpacity
    },
    icon: faLongArrowRight/* faLongArrowRight */.b1
  }), /*#__PURE__*/react.createElement(TimeInput, {
    onChange: handleChangeEndTime,
    value: conferenceTimeState === null || conferenceTimeState === void 0 ? void 0 : (_conferenceTimeState$4 = conferenceTimeState[id]) === null || _conferenceTimeState$4 === void 0 ? void 0 : _conferenceTimeState$4.endTime
  })));
};
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faCalendar.js
var faCalendar = __webpack_require__(4383);
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/date_dropdown/date_dropdown.tsx


//Hooks





//Components











//Types

//Recoil



var DateDropdown = function DateDropdown(_ref) {
  var flexOverride = _ref.flexOverride;
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var setSelectedEndDate = Recoil_index_24(selectedCalendarEndDate);
  var selectedConferenceType = Recoil_index_20(ConferenceTypeState);
  var languageCulture = Recoil_index_20(languageCultureState);
  var numberOfNights = Recoil_index_20(NumberOfNightsState);
  var MPSearchValidation = Recoil_index_20(MPSearchValidationState);
  var translations = useAccommodationTranslations();
  var theme = Ze();
  var isVerySmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.verySmall
  });
  var dateFormatterShort = new Intl.DateTimeFormat(languageCulture, {
    day: "2-digit",
    month: "short"
  });
  var dateStringCreator = function dateStringCreator() {
    if (selectedConferenceType === "conference") {
      return "".concat(date);
    } else {
      return "".concat(date, ", ").concat(numberOfNights, " ").concat(numberOfNights === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.Night"]) : translations(accommodation_AccommodationTranslations["EA4H.General.Nights"]));
    }
  };
  var date = selectedStartDate ? dateFormatterShort.format(parseISO(selectedStartDate)) : null;
  var selectionString = selectedStartDate ? dateStringCreator() : translations(accommodation_AccommodationTranslations["EA4H.Online.NoDateSelected"]);

  // If the conference isn't with lodging, set end date same as start date.
  (0,react_production_min.useEffect)(function () {
    if (selectedConferenceType === "conference") {
      setSelectedEndDate(selectedStartDate);
    }
  }, [selectedConferenceType]);
  var hasMissingConferenceTimes = Boolean(MPSearchValidation === null || MPSearchValidation === void 0 ? void 0 : MPSearchValidation.missingConferenceTimes);
  return /*#__PURE__*/react.createElement(Popover_Popover, {
    position: "bottom",
    withArrow: true,
    shadow: "md",
    zIndex: 500,
    closeOnClickOutside: true
  }, /*#__PURE__*/react.createElement(Popover_Popover.Target, null, /*#__PURE__*/react.createElement(TargetWrapperDiv, null, /*#__PURE__*/react.createElement(Dropdown, {
    flexOverride: flexOverride,
    readOnly: true,
    selectedValueTextOverride: selectionString,
    searchable: true,
    icon: faCalendar/* faCalendar */.fT,
    label: "Datum",
    options: []
  }))), /*#__PURE__*/react.createElement(Popover_Popover.Dropdown, {
    style: {
      padding: "20px"
    }
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      minWidth: "350px",
      display: "flex",
      flexDirection: selectedConferenceType === "conference" || isVerySmallScreen ? "column" : "row",
      gap: selectedConferenceType === "conference" ? "10px" : "20px"
    }
  }, /*#__PURE__*/react.createElement(inner_calendar, {
    selectedAccommodationTypes: [AccommodationType.Hotel],
    isConference: true,
    selectedConferenceType: selectedConferenceType
  }), selectedConferenceType === "conference" && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(MeetingLengthSelection, {
    label: translations(accommodation_AccommodationTranslations["EA4H.Conference.MeetingLength"]),
    id: 0
  }), hasMissingConferenceTimes ? /*#__PURE__*/react.createElement(BodyText, {
    small: true,
    muted: true,
    style: {
      color: "red"
    }
  }, MPSearchValidation === null || MPSearchValidation === void 0 ? void 0 : MPSearchValidation.missingConferenceTimes) : null), selectedConferenceType === "conference_with_accommodation" && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("hr", {
    style: {
      margin: "0",
      height: "auto",
      border: 0,
      width: theme.css.dividerBorderWidth,
      background: theme.css.cardDividerColor
    }
  }), /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      width: "350px",
      flexDirection: "column",
      alignItems: "start",
      gap: "15px"
    }
  }, /*#__PURE__*/react.createElement(NrOfNightsSelection, null), /*#__PURE__*/react.createElement(divider_Divider, {
    label: translations(accommodation_AccommodationTranslations["EA4H.Conference.TimesForMeetingRooms"])
  }), Array.from(Array(numberOfNights + 1).keys()).map(function (num) {
    return /*#__PURE__*/react.createElement(MeetingLengthSelection, {
      key: "meeting-length-selection-".concat(num),
      withCheckbox: true,
      label: "".concat(translations(accommodation_AccommodationTranslations["EA4H.General.Day"]), " ").concat(num + 1),
      id: num
    });
  }), hasMissingConferenceTimes ? /*#__PURE__*/react.createElement(BodyText, {
    small: true,
    muted: true,
    style: {
      color: "red"
    }
  }, MPSearchValidation === null || MPSearchValidation === void 0 ? void 0 : MPSearchValidation.missingConferenceTimes) : null)))));
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/hooks/useMultipropertyPlaces.ts





var useMultipropertyPlaces = function useMultipropertyPlaces(forConference) {
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var API = Recoil_index_20(ScopedAPI({
    jwtToken: apiContext.token,
    apiUrl: apiContext.apiUrl
  }));
  return (0,es.useQuery)(["multipropertyPlaces", apiContext.multiPropertyId], function () {
    return API.multipropertiesPlacesV1(forConference, +apiContext.languageId, apiContext.multiPropertyId);
  }, {
    staleTime: Infinity,
    refetchOnWindowFocus: false,
    suspense: true
  });
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/location_dropdown/location_dropdown.tsx




// Hooks




// Components




// Recoil


// Types

var LocationDropdown = function LocationDropdown(_ref) {
  var _placesData$places$ma, _placesData$places, _placesData$hotels$ma, _placesData$hotels;
  var flexOverride = _ref.flexOverride;
  var _useRecoilState = Recoil_index_22(LocationDropdownState),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    location = _useRecoilState2[0],
    setLocation = _useRecoilState2[1];
  var _useMultipropertyPlac = useMultipropertyPlaces(true),
    placesData = _useMultipropertyPlac.data;
  var translations = useAccommodationTranslations();
  var placesOptions = (_placesData$places$ma = placesData === null || placesData === void 0 ? void 0 : (_placesData$places = placesData.places) === null || _placesData$places === void 0 ? void 0 : _placesData$places.map(function (destination) {
    return {
      group: translations(accommodation_AccommodationTranslations["EA4H.General.HotelLocation"]),
      name: destination.name,
      value: destination.id
    };
  })) !== null && _placesData$places$ma !== void 0 ? _placesData$places$ma : [];
  var propertyOptions = (_placesData$hotels$ma = placesData === null || placesData === void 0 ? void 0 : (_placesData$hotels = placesData.hotels) === null || _placesData$hotels === void 0 ? void 0 : _placesData$hotels.map(function (hotel) {
    return {
      group: translations(accommodation_AccommodationTranslations["EA4H.General.Property"]),
      name: hotel.name,
      value: hotel.id,
      imageUrl: "https://images.bookvisit.com/img/".concat(hotel === null || hotel === void 0 ? void 0 : hotel.imageId, ".jpg?maxwidth=45&maxheight=45&mode=crop"),
      locationString: "".concat(hotel.city, ", ").concat(hotel.country)
    };
  })) !== null && _placesData$hotels$ma !== void 0 ? _placesData$hotels$ma : [];
  var options = [].concat(_toConsumableArray(placesOptions), _toConsumableArray(propertyOptions));
  var onClear = function onClear() {
    setLocation(undefined);
  };
  return /*#__PURE__*/react.createElement(Dropdown, {
    flexOverride: flexOverride,
    onClear: onClear,
    isLocationDropdown: true,
    value: location === null || location === void 0 ? void 0 : location.value,
    searchable: true,
    clearable: true,
    icon: faLocationDot/* faLocationDot */.op,
    label: translations(accommodation_AccommodationTranslations["EA4H.Conference.PlaceOrFacility"]),
    options: options
  });
};
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faUsers.js
var faUsers = __webpack_require__(6415);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faMinus.js
var faMinus = __webpack_require__(4738);
// EXTERNAL MODULE: ./node_modules/@fortawesome/pro-regular-svg-icons/faPlus.js
var faPlus = __webpack_require__(2990);
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/participants_dropdown/amount_selector.tsx







var AmountSelector = function AmountSelector(_ref) {
  var title = _ref.title,
    onChange = _ref.onChange,
    value = _ref.value,
    minValue = _ref.minValue;
  var theme = Ze();
  var increase = function increase() {
    return onChange(value + 1);
  };
  var decrease = function decrease() {
    return onChange(value - 1 < minValue ? minValue : value - 1);
  };
  return /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center"
    }
  }, /*#__PURE__*/react.createElement(BodyText, {
    large: true
  }, title), /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/react.createElement(button_Button, {
    onClick: decrease,
    style: {
      borderRadius: theme.css.inputRoundedCorners,
      width: "40px",
      display: "grid",
      placeContent: "center"
    }
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    color: theme.css.buttonColor,
    icon: faMinus/* faMinus */.Kl
  })), /*#__PURE__*/react.createElement("div", {
    style: {
      userSelect: "none",
      fontFamily: theme.css.bodyFontFamily,
      display: "grid",
      placeContent: "center",
      border: "".concat(theme.css.inputBorderWidth, " solid ").concat(theme.css.inputBorderColor),
      borderRadius: theme.css.inputRoundedCorners,
      width: "50px",
      height: "40px",
      boxSizing: "border-box"
    }
  }, value), /*#__PURE__*/react.createElement(button_Button, {
    onClick: increase,
    style: {
      borderRadius: theme.css.inputRoundedCorners,
      width: "40px",
      display: "grid",
      placeContent: "center"
    }
  }, /*#__PURE__*/react.createElement(FontAwesomeIcon, {
    color: theme.css.buttonColor,
    icon: faPlus/* faPlus */.r8
  }))));
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/participants_dropdown/participants_dropdown.tsx


function participants_dropdown_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function participants_dropdown_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? participants_dropdown_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : participants_dropdown_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }


//Hooks



//Components








//Recoil

var ParticipantsDropdown = function ParticipantsDropdown() {
  var _useRecoilState = Recoil_index_22(ParticipantsDropdownState),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    participants = _useRecoilState2[0],
    setParticipants = _useRecoilState2[1];
  var singleRoomAmount = participants.singleRoomAmount,
    personAmount = participants.personAmount,
    doubleRoomAmount = participants.doubleRoomAmount;
  var translations = useAccommodationTranslations();
  var handleChangeParticipantsState = function handleChangeParticipantsState(key, val) {
    setParticipants(function (prevState) {
      return participants_dropdown_objectSpread(participants_dropdown_objectSpread({}, prevState), {}, defineProperty_defineProperty({}, key, val));
    });
  };
  var roomAmount = singleRoomAmount + doubleRoomAmount;
  var roomString = roomAmount === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.RoomLOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.RoomsLower"]);
  var personString = personAmount === 1 ? translations(accommodation_AccommodationTranslations["EA4H.General.PersonLOWER"]) : translations(accommodation_AccommodationTranslations["EA4H.General.PersonsLOWER"]);
  var selectionString = "".concat(personAmount, " ").concat(personString, ", ").concat(roomAmount, " ").concat(roomString);
  return /*#__PURE__*/react.createElement(Popover_Popover, {
    position: "bottom",
    withArrow: true,
    shadow: "md",
    zIndex: 500
  }, /*#__PURE__*/react.createElement(Popover_Popover.Target, null, /*#__PURE__*/react.createElement(TargetWrapperDiv, null, /*#__PURE__*/react.createElement(Dropdown, {
    readOnly: true,
    icon: faUsers/* faUsers */.FV,
    label: translations(accommodation_AccommodationTranslations["EA4H.General.Participants"]),
    options: [],
    selectedValueTextOverride: selectionString
  }))), /*#__PURE__*/react.createElement(Popover_Popover.Dropdown, {
    style: {
      padding: "20px"
    }
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      minWidth: "350px",
      display: "flex",
      flexDirection: "column",
      gap: "10px"
    }
  }, /*#__PURE__*/react.createElement(AmountSelector, {
    minValue: 1,
    value: personAmount,
    onChange: function onChange(val) {
      return handleChangeParticipantsState("personAmount", val);
    },
    title: "".concat(translations(accommodation_AccommodationTranslations["EA4H.General.NrParticipants"]), ":")
  }), /*#__PURE__*/react.createElement(divider_Divider, {
    label: translations(accommodation_AccommodationTranslations["EA4H.General.DesiredNrOfRooms"])
  }), /*#__PURE__*/react.createElement(AmountSelector, {
    minValue: 0,
    value: singleRoomAmount,
    onChange: function onChange(val) {
      return handleChangeParticipantsState("singleRoomAmount", val);
    },
    title: translations(accommodation_AccommodationTranslations["EA4H.General.SingleRooms"])
  }), /*#__PURE__*/react.createElement(AmountSelector, {
    minValue: 0,
    value: doubleRoomAmount,
    onChange: function onChange(val) {
      return handleChangeParticipantsState("doubleRoomAmount", val);
    },
    title: translations(accommodation_AccommodationTranslations["EA4H.General.DoubleRooms"])
  }))));
};
;// CONCATENATED MODULE: ./src/reservation/multiproperty/components/search_bar/date_dropdown/date_dropdown_content.tsx










var DateDropdownContent = function DateDropdownContent() {
  var theme = Ze();
  var isVerySmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.verySmall
  });
  var selectedConferenceType = Recoil_index_20(ConferenceTypeState);
  var numberOfNights = Recoil_index_20(NumberOfNightsState);
  return /*#__PURE__*/react.createElement("div", {
    style: {
      minWidth: "350px",
      display: "flex",
      flexDirection: selectedConferenceType === "conference" || isVerySmallScreen ? "column" : "row",
      gap: selectedConferenceType === "conference" ? "10px" : "20px"
    }
  }, /*#__PURE__*/react.createElement(inner_calendar, {
    selectedAccommodationTypes: [AccommodationType.Hotel],
    isConference: true,
    selectedConferenceType: selectedConferenceType
  }), selectedConferenceType === "conference" && /*#__PURE__*/react.createElement(MeetingLengthSelection, {
    label: "M\xF6tesl\xE4ngd:",
    id: 0
  }), selectedConferenceType === "conference_with_accommodation" && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("hr", {
    style: {
      margin: "0",
      height: "auto",
      border: 0,
      width: theme.css.dividerBorderWidth,
      background: theme.css.cardDividerColor
    }
  }), /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      width: "350px",
      flexDirection: "column",
      alignItems: "start",
      gap: "15px"
    }
  }, /*#__PURE__*/react.createElement(NrOfNightsSelection, {
    label: "M\xF6tesl\xE4ngd:",
    id: 0,
    selectedConferenceType: selectedConferenceType
  }), /*#__PURE__*/react.createElement(divider_Divider, {
    label: "Tider f\xF6r m\xF6tesrum"
  }), Array.from(Array(numberOfNights + 1).keys()).map(function (num) {
    return /*#__PURE__*/react.createElement(MeetingLengthSelection, {
      withCheckbox: true,
      label: "Dag ".concat(num + 1),
      id: num
    });
  }))));
};
;// CONCATENATED MODULE: ./src/widgets/conference/components/standard_conference_widget.tsx


// Hooks





// Recoil




// Components









// Types

var StandardConferenceWidget = function StandardConferenceWidget(_ref) {
  var _calendarOptions$sele, _calendarOptions$sele2;
  var widgetLayout = _ref.widgetLayout;
  var widgetConfig = Recoil_index_20(WidgetConfigState);
  var _useMultipropertyWidg = useMultipropertyWidgetSearch(),
    makeSearch = _useMultipropertyWidg.makeSearch;
  var isSearching = (0,es.useIsFetching)(["accommodationsearch"]) > 0;
  var calendarOptions = Recoil_index_20(calendarOptionsState);
  var is2Columns = widgetLayout === WidgetLayout.Standard2Columns || widgetLayout === WidgetLayout.Standard2ColumnsCompact;
  var isCalendar = widgetLayout === WidgetLayout.Calendar2Columns;
  var theme = Ze();
  var isSmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.small
  });
  var flexDirection = is2Columns && !isSmallScreen ? "row" : "column";
  return /*#__PURE__*/react.createElement(StandardWidgetWrapper, null, /*#__PURE__*/react.createElement(StandardWidgetContentWrapper, {
    flexDirection: flexDirection
  }, /*#__PURE__*/react.createElement(StandardWidgetContainer, null, /*#__PURE__*/react.createElement(ConferenceTypeDropdown, {
    flexOverride: true
  })), /*#__PURE__*/react.createElement(StandardWidgetContainer, null, /*#__PURE__*/react.createElement(LocationDropdown, {
    flexOverride: true
  })), /*#__PURE__*/react.createElement(StandardWidgetContainer, null, isCalendar && !isSmallScreen ? /*#__PURE__*/react.createElement(DateDropdownContent, null) : /*#__PURE__*/react.createElement(DateDropdown, null)), /*#__PURE__*/react.createElement(StandardWidgetContainer, null, /*#__PURE__*/react.createElement(ParticipantsDropdown, null)), (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.promoCode) && /*#__PURE__*/react.createElement(StandardWidgetContainer, {
    style: {
      flexBasis: "50%"
    }
  }, /*#__PURE__*/react.createElement(promo_button, {
    mediaQueryOverride: true
  }))), /*#__PURE__*/react.createElement("div", {
    style: {
      padding: "20px"
    }
  }, /*#__PURE__*/react.createElement(SearchButton, {
    isLoading: isSearching,
    hasCodes: false,
    onSearch: makeSearch,
    disabled: !((_calendarOptions$sele = calendarOptions.selectedDates) !== null && _calendarOptions$sele !== void 0 && _calendarOptions$sele.startDate) || !((_calendarOptions$sele2 = calendarOptions.selectedDates) !== null && _calendarOptions$sele2 !== void 0 && _calendarOptions$sele2.endDate)
  })));
};
;// CONCATENATED MODULE: ./src/widgets/conference/components/standard_wide_conference_widget.tsx


// Hooks






// Components








// Translations


// Types

// Recoil

var StandardWideConferenceWidget = function StandardWideConferenceWidget() {
  var widgetConfig = Recoil_index_20(WidgetConfigState);
  var translations = useAccommodationTranslations();
  var theme = Ze();
  var isSmallScreen = (0,react_responsive.useMediaQuery)({
    query: theme.mediaQueries.small
  });
  var containsPromoCode = (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.promoCode) || (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.agentCode) || (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.corpCode);
  var _useMultipropertyWidg = useMultipropertyWidgetSearch(),
    makeSearch = _useMultipropertyWidg.makeSearch;
  return /*#__PURE__*/react.createElement(StandardWideConferenceWidgetWrapper, {
    promo: containsPromoCode
  }, /*#__PURE__*/react.createElement(StandardWideWidgetInputWrapper, null, /*#__PURE__*/react.createElement(ConferenceTypeDropdown, {
    flexOverride: isSmallScreen
  })), /*#__PURE__*/react.createElement(StandardWideWidgetInputWrapper, null, /*#__PURE__*/react.createElement(LocationDropdown, null)), /*#__PURE__*/react.createElement(StandardWideWidgetInputWrapper, null, /*#__PURE__*/react.createElement(DateDropdown, {
    flexOverride: isSmallScreen
  })), /*#__PURE__*/react.createElement(StandardWideWidgetInputWrapper, null, /*#__PURE__*/react.createElement(ParticipantsDropdown, null)), containsPromoCode && isSmallScreen && /*#__PURE__*/react.createElement(StandardWideConferenceWidgetSearchButtonWrapper, {
    promo: true
  }, /*#__PURE__*/react.createElement(promo_button, {
    mediaQueryOverride: true
  })), containsPromoCode && !isSmallScreen && /*#__PURE__*/react.createElement(StandardWideWidgetInputWrapper, {
    promo: true
  }, /*#__PURE__*/react.createElement(promo_button, {
    mediaQueryOverride: true
  })), /*#__PURE__*/react.createElement(StandardWideConferenceWidgetSearchButtonWrapper, null, /*#__PURE__*/react.createElement(styles_SearchButton, {
    onClick: makeSearch
  }, translations(accommodation_AccommodationTranslations["EA4H.General.SearchButton"]))));
};
;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Collapse/use-collapse.js



var use_collapse_defProp = Object.defineProperty;
var use_collapse_defProps = Object.defineProperties;
var use_collapse_getOwnPropDescs = Object.getOwnPropertyDescriptors;
var use_collapse_getOwnPropSymbols = Object.getOwnPropertySymbols;
var use_collapse_hasOwnProp = Object.prototype.hasOwnProperty;
var use_collapse_propIsEnum = Object.prototype.propertyIsEnumerable;
var use_collapse_defNormalProp = (obj, key, value) => key in obj ? use_collapse_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var use_collapse_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (use_collapse_hasOwnProp.call(b, prop)) use_collapse_defNormalProp(a, prop, b[prop]);
  if (use_collapse_getOwnPropSymbols) for (var prop of use_collapse_getOwnPropSymbols(b)) {
    if (use_collapse_propIsEnum.call(b, prop)) use_collapse_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var use_collapse_spreadProps = (a, b) => use_collapse_defProps(a, use_collapse_getOwnPropDescs(b));
var use_collapse_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (use_collapse_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && use_collapse_getOwnPropSymbols) for (var prop of use_collapse_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && use_collapse_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
function getAutoHeightDuration(height) {
  if (!height || typeof height === "string") {
    return 0;
  }
  const constant = height / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function getElementHeight(el) {
  return (el == null ? void 0 : el.current) ? el.current.scrollHeight : "auto";
}
const raf = typeof window !== "undefined" && window.requestAnimationFrame;
function useCollapse({
  transitionDuration,
  transitionTimingFunction = "ease",
  onTransitionEnd = () => {},
  opened
}) {
  const el = (0,react_production_min.useRef)(null);
  const collapsedHeight = "0px";
  const collapsedStyles = {
    display: "none",
    height: "0px",
    overflow: "hidden"
  };
  const [styles, setStylesRaw] = (0,react_production_min.useState)(opened ? {} : collapsedStyles);
  const setStyles = newStyles => {
    (0,react_dom_production_min.flushSync)(() => setStylesRaw(newStyles));
  };
  const mergeStyles = newStyles => {
    setStyles(oldStyles => use_collapse_spreadValues(use_collapse_spreadValues({}, oldStyles), newStyles));
  };
  function getTransitionStyles(height) {
    const _duration = transitionDuration || getAutoHeightDuration(height);
    return {
      transition: `height ${_duration}ms ${transitionTimingFunction}`
    };
  }
  useDidUpdate(() => {
    if (opened) {
      raf(() => {
        mergeStyles({
          willChange: "height",
          display: "block",
          overflow: "hidden"
        });
        raf(() => {
          const height = getElementHeight(el);
          mergeStyles(use_collapse_spreadProps(use_collapse_spreadValues({}, getTransitionStyles(height)), {
            height
          }));
        });
      });
    } else {
      raf(() => {
        const height = getElementHeight(el);
        mergeStyles(use_collapse_spreadProps(use_collapse_spreadValues({}, getTransitionStyles(height)), {
          willChange: "height",
          height
        }));
        raf(() => mergeStyles({
          height: collapsedHeight,
          overflow: "hidden"
        }));
      });
    }
  }, [opened]);
  const handleTransitionEnd = e => {
    if (e.target !== el.current || e.propertyName !== "height") {
      return;
    }
    if (opened) {
      const height = getElementHeight(el);
      if (height === styles.height) {
        setStyles({});
      } else {
        mergeStyles({
          height
        });
      }
      onTransitionEnd();
    } else if (styles.height === collapsedHeight) {
      setStyles(collapsedStyles);
      onTransitionEnd();
    }
  };
  function getCollapseProps(_a = {}) {
    var _b = _a,
      {
        style = {},
        refKey = "ref"
      } = _b,
      rest = use_collapse_objRest(_b, ["style", "refKey"]);
    const theirRef = rest[refKey];
    return use_collapse_spreadProps(use_collapse_spreadValues({
      "aria-hidden": !opened
    }, rest), {
      [refKey]: mergeRefs(el, theirRef),
      onTransitionEnd: handleTransitionEnd,
      style: use_collapse_spreadValues(use_collapse_spreadValues({
        boxSizing: "border-box"
      }, style), styles)
    });
  }
  return getCollapseProps;
}

;// CONCATENATED MODULE: ./node_modules/@mantine/core/esm/Collapse/Collapse.js






var Collapse_defProp = Object.defineProperty;
var Collapse_getOwnPropSymbols = Object.getOwnPropertySymbols;
var Collapse_hasOwnProp = Object.prototype.hasOwnProperty;
var Collapse_propIsEnum = Object.prototype.propertyIsEnumerable;
var Collapse_defNormalProp = (obj, key, value) => key in obj ? Collapse_defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value
}) : obj[key] = value;
var Collapse_spreadValues = (a, b) => {
  for (var prop in b || (b = {})) if (Collapse_hasOwnProp.call(b, prop)) Collapse_defNormalProp(a, prop, b[prop]);
  if (Collapse_getOwnPropSymbols) for (var prop of Collapse_getOwnPropSymbols(b)) {
    if (Collapse_propIsEnum.call(b, prop)) Collapse_defNormalProp(a, prop, b[prop]);
  }
  return a;
};
var Collapse_objRest = (source, exclude) => {
  var target = {};
  for (var prop in source) if (Collapse_hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];
  if (source != null && Collapse_getOwnPropSymbols) for (var prop of Collapse_getOwnPropSymbols(source)) {
    if (exclude.indexOf(prop) < 0 && Collapse_propIsEnum.call(source, prop)) target[prop] = source[prop];
  }
  return target;
};
const Collapse_defaultProps = {
  transitionDuration: 200,
  transitionTimingFunction: "ease",
  animateOpacity: true
};
const Collapse = (0,react_production_min.forwardRef)((props, ref) => {
  const _a = useComponentDefaultProps("Collapse", Collapse_defaultProps, props),
    {
      children,
      in: opened,
      transitionDuration,
      transitionTimingFunction,
      style,
      onTransitionEnd,
      animateOpacity
    } = _a,
    others = Collapse_objRest(_a, ["children", "in", "transitionDuration", "transitionTimingFunction", "style", "onTransitionEnd", "animateOpacity"]);
  const theme = useMantineTheme();
  const shouldReduceMotion = useReducedMotion();
  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;
  const duration = reduceMotion ? 0 : transitionDuration;
  const {
    systemStyles,
    rest
  } = extractSystemStyles(others);
  const getCollapseProps = useCollapse({
    opened,
    transitionDuration: duration,
    transitionTimingFunction,
    onTransitionEnd
  });
  if (duration === 0) {
    return opened ? /* @__PURE__ */react.createElement(Box, Collapse_spreadValues({}, rest), children) : null;
  }
  return /* @__PURE__ */react.createElement(Box, Collapse_spreadValues({}, getCollapseProps(Collapse_spreadValues(Collapse_spreadValues({
    style,
    ref
  }, rest), systemStyles))), /* @__PURE__ */react.createElement("div", {
    style: {
      opacity: opened || !animateOpacity ? 1 : 0,
      transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : "none"
    }
  }, children));
});
Collapse.displayName = "@mantine/core/Collapse";

;// CONCATENATED MODULE: ./src/widgets/single_property/components/large_promo_code_button.tsx






var LargePromoCodeButton = function LargePromoCodeButton(_ref) {
  var isConference = _ref.isConference;
  var _useState = (0,react_production_min.useState)(false),
    _useState2 = slicedToArray_slicedToArray(_useState, 2),
    opened = _useState2[0],
    setOpened = _useState2[1];
  var handleToggleInput = function handleToggleInput() {
    setOpened(function (prevState) {
      return !prevState;
    });
  };
  return /*#__PURE__*/react.createElement(LargePromoCodeButtonWrapper, {
    isConference: isConference
  }, /*#__PURE__*/react.createElement(ButtonElement, {
    onClick: handleToggleInput
  }), /*#__PURE__*/react.createElement(Collapse, {
    in: opened
  }, /*#__PURE__*/react.createElement("div", {
    style: {
      paddingTop: 10
    }
  }, /*#__PURE__*/react.createElement(CodeInputs, {
    closeLargeWidget: handleToggleInput
  }))));
};
;// CONCATENATED MODULE: ./src/widgets/conference/components/large_conference_calendar.tsx


// Hooks



// Components





// Recoil



// Types

var LargeConferenceCalendar = function LargeConferenceCalendar() {
  var theme = Ze();
  var selectedStartDate = Recoil_index_20(selectedCalendarStartDate);
  var setSelectedEndDate = Recoil_index_24(selectedCalendarEndDate);
  var selectedConferenceType = Recoil_index_20(ConferenceTypeState);
  var numberOfNights = Recoil_index_20(NumberOfNightsState);

  // If the conference isn't with lodging, set end date same as start date.
  (0,react_production_min.useEffect)(function () {
    if (selectedConferenceType === "conference") {
      setSelectedEndDate(selectedStartDate);
    }
  }, [selectedConferenceType]);
  return /*#__PURE__*/react.createElement("div", {
    style: {
      minWidth: "350px",
      display: "flex",
      flexDirection: selectedConferenceType === "conference" ? "column" : "column",
      gap: selectedConferenceType === "conference" ? "10px" : "20px",
      padding: "10px"
    }
  }, /*#__PURE__*/react.createElement(inner_calendar, {
    selectedAccommodationTypes: [AccommodationType.Hotel],
    isConference: true,
    selectedConferenceType: selectedConferenceType
  }), selectedConferenceType === "conference" && /*#__PURE__*/react.createElement(MeetingLengthSelection, {
    label: "M\xF6tesl\xE4ngd:",
    id: 0
  }), selectedConferenceType === "conference_with_accommodation" && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("hr", {
    style: {
      margin: "0",
      height: "auto",
      border: 0,
      width: theme.css.dividerBorderWidth,
      background: theme.css.cardDividerColor
    }
  }), /*#__PURE__*/react.createElement("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      alignItems: "start",
      gap: "15px"
    }
  }, /*#__PURE__*/react.createElement(NrOfNightsSelection, {
    label: "M\xF6tesl\xE4ngd:",
    id: 0,
    selectedConferenceType: selectedConferenceType
  }), /*#__PURE__*/react.createElement(divider_Divider, {
    label: "Tider f\xF6r m\xF6tesrum"
  }), Array.from(Array(numberOfNights + 1).keys()).map(function (num) {
    return /*#__PURE__*/react.createElement(MeetingLengthSelection, {
      withCheckbox: true,
      label: "Dag ".concat(num + 1),
      id: num
    });
  }))));
};
;// CONCATENATED MODULE: ./src/widgets/conference/components/large_conference_widget.tsx


// Hooks





// Components











// Recoil





// Translations


// Types

var LargeConferenceWidget = function LargeConferenceWidget(_ref) {
  var _searchOptions$roomCo, _calendarOptions$sele, _calendarOptions$sele2, _calendarOptions$sele3, _calendarOptions$sele4, _calendarOptions$sele5, _calendarOptions$sele6;
  var _ref$threeColumn = _ref.threeColumn,
    threeColumn = _ref$threeColumn === void 0 ? false : _ref$threeColumn;
  var calendarOptions = Recoil_index_20(calendarOptionsState);
  var searchOptions = Recoil_index_20(searchOptionsState);
  var widgetConfig = Recoil_index_20(WidgetConfigState);
  var conferenceType = Recoil_index_20(ConferenceTypeState);
  var isSearching = (0,es.useIsFetching)(["accommodationsearch"]) > 0;
  var translations = useAccommodationTranslations();
  var isSmallScreen = (0,react_responsive.useMediaQuery)({
    query: "(max-width: 700px)"
  });
  var isVeryLargeScreen = (0,react_responsive.useMediaQuery)({
    query: "(min-width: 1200px)"
  });
  var _useMultipropertyWidg = useMultipropertyWidgetSearch(),
    makeSearch = _useMultipropertyWidg.makeSearch;
  var is3Column = threeColumn && isVeryLargeScreen;
  var totalAdults = searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$roomCo = searchOptions.roomConfigs) === null || _searchOptions$roomCo === void 0 ? void 0 : _searchOptions$roomCo.reduce(function (acc, room) {
    return room.adults ? acc + room.adults : acc;
  }, 0);
  var containsPromoCode = (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.promoCode) || (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.agentCode) || (widgetConfig === null || widgetConfig === void 0 ? void 0 : widgetConfig.corpCode);
  var tempConfName = conferenceType === "conference" ? "Dagkonferens" : "Konferens med logi";
  return /*#__PURE__*/react.createElement(react.Fragment, null, !isSmallScreen ? /*#__PURE__*/react.createElement(LargeWidgetWrapper, {
    threeColumn: is3Column
  }, /*#__PURE__*/react.createElement(LargeWidgetLargeItemWrapper, {
    flex: true,
    gap: true
  }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(ConferenceTypeDropdown, {
    flexOverride: true
  })), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(ParticipantsDropdown, null)), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(LocationDropdown, {
    flexOverride: true
  })), containsPromoCode && /*#__PURE__*/react.createElement(LargePromoCodeButton, {
    isConference: true
  })), /*#__PURE__*/react.createElement(LargeWidgetLargeItemWrapper, null, /*#__PURE__*/react.createElement(BodyText, {
    style: {
      paddingBottom: "10px"
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.Conference.DateForConference"]), ":"), /*#__PURE__*/react.createElement(LargeConferenceCalendar, null), !is3Column && !isSmallScreen && /*#__PURE__*/react.createElement(SearchButton, {
    isLoading: isSearching,
    hasCodes: false,
    onSearch: function onSearch() {},
    disabled: !((_calendarOptions$sele = calendarOptions.selectedDates) !== null && _calendarOptions$sele !== void 0 && _calendarOptions$sele.startDate) || !((_calendarOptions$sele2 = calendarOptions.selectedDates) !== null && _calendarOptions$sele2 !== void 0 && _calendarOptions$sele2.endDate)
  })), is3Column && /*#__PURE__*/react.createElement(LargeWidgetLargeItemWrapper, {
    flex: true
  }, /*#__PURE__*/react.createElement(BodyText, {
    style: {
      paddingBottom: "10px"
    }
  }, translations(accommodation_AccommodationTranslations["EA4H.General.YourChoice"]), ":"), /*#__PURE__*/react.createElement(BodyText, null, tempConfName), /*#__PURE__*/react.createElement(BodyText, null, totalAdults, " ", translations(accommodation_AccommodationTranslations["EA4H.General.Guests_LOWER"])), /*#__PURE__*/react.createElement("div", {
    style: {
      flexGrow: 1
    }
  }), /*#__PURE__*/react.createElement(SearchButton, {
    isLoading: isSearching,
    hasCodes: false,
    onSearch: makeSearch,
    disabled: !((_calendarOptions$sele3 = calendarOptions.selectedDates) !== null && _calendarOptions$sele3 !== void 0 && _calendarOptions$sele3.startDate) || !((_calendarOptions$sele4 = calendarOptions.selectedDates) !== null && _calendarOptions$sele4 !== void 0 && _calendarOptions$sele4.endDate)
  }))) : /*#__PURE__*/react.createElement(LargeWidgetWrapper, null, /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, {
    isSearch: !containsPromoCode
  }, /*#__PURE__*/react.createElement(ConferenceTypeDropdown, null)), /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, null, /*#__PURE__*/react.createElement(DateDropdown, null)), /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, null, /*#__PURE__*/react.createElement(ParticipantsDropdown, null)), /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, null, /*#__PURE__*/react.createElement(LocationDropdown, null)), containsPromoCode && /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, {
    isSearch: true,
    promo: true
  }, /*#__PURE__*/react.createElement(promo_button, {
    mediaQueryOverride: true
  })), /*#__PURE__*/react.createElement(LargeWidgetItemWrapper, {
    isSearch: true
  }, /*#__PURE__*/react.createElement(SearchButton, {
    isLoading: isSearching,
    hasCodes: false,
    onSearch: makeSearch,
    disabled: !((_calendarOptions$sele5 = calendarOptions.selectedDates) !== null && _calendarOptions$sele5 !== void 0 && _calendarOptions$sele5.startDate) || !((_calendarOptions$sele6 = calendarOptions.selectedDates) !== null && _calendarOptions$sele6 !== void 0 && _calendarOptions$sele6.endDate)
  }))));
};
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js
function _objectDestructuringEmpty(obj) {
  if (obj == null) throw new TypeError("Cannot destructure " + obj);
}
;// CONCATENATED MODULE: ./src/widgets/single_property/components/standard_one_column_simplify.tsx



// Components



// Hooks


// Translations


// Types

var StandardOneColumnSimplify = function StandardOneColumnSimplify(_ref) {
  _objectDestructuringEmpty(_ref);
  var translations = useAccommodationTranslations();
  return (
    /*#__PURE__*/
    // TODO: Redirect to search on onClick
    react.createElement(StandardOneColumnSimplifyWrapper, null, /*#__PURE__*/react.createElement(button_Button, {
      style: {
        maxWidth: "unset"
      },
      onClick: function onClick() {}
    }, translations(accommodation_AccommodationTranslations["EA4H.General.Book"])))
  );
};
;// CONCATENATED MODULE: ./src/widgets/conference/render_selected_conference_widget.tsx






var renderSelectedConferenceWidget = function renderSelectedConferenceWidget(layout) {
  switch (layout) {
    case WidgetLayout.Standard1Column:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
    case WidgetLayout.Standard1ColumnCompact:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
    case WidgetLayout.Standard2Columns:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
    case WidgetLayout.Standard2ColumnsCompact:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
    case WidgetLayout.Calendar2Columns:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
    case WidgetLayout.StandardWide:
      return /*#__PURE__*/react.createElement(StandardWideConferenceWidget, null);
    case WidgetLayout.StandardWideCompact:
      return /*#__PURE__*/react.createElement(StandardWideConferenceWidget, {
        compact: true
      });
    case WidgetLayout.Large2Columns:
      return /*#__PURE__*/react.createElement(LargeConferenceWidget, null);
    case WidgetLayout.Large3Columns:
      return /*#__PURE__*/react.createElement(LargeConferenceWidget, {
        threeColumn: true
      });
    case WidgetLayout.Standard1ColumnSimplify:
      return /*#__PURE__*/react.createElement(StandardOneColumnSimplify, null);
    case WidgetLayout.Standard1ColumnPlate:
      return /*#__PURE__*/react.createElement(StandardConferenceWidget, {
        widgetLayout: layout
      });
  }
};
;// CONCATENATED MODULE: ./src/widgets/conference/conference_widget.tsx


function conference_widget_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function conference_widget_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? conference_widget_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : conference_widget_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }


// Hooks



// Components


// Types

// Util


// Recoil





// Style


var ConferenceWidget = function ConferenceWidget(props) {
  var _useRecoilState = Recoil_index_22(WidgetConfigState),
    _useRecoilState2 = slicedToArray_slicedToArray(_useRecoilState, 2),
    widgetConfig = _useRecoilState2[0],
    setWidgetConfig = _useRecoilState2[1];
  var setMultiPropertyInfo = Recoil_index_24(MultiPropertyInfoState);
  var apiContext = (0,react_production_min.useContext)(APIContext);
  var _useRecoilValue = Recoil_index_20(ScopedStyle({
      apiUrl: apiContext.apiUrl,
      jwtToken: apiContext.token,
      multiPropertyId: apiContext.multiPropertyId
    })),
    css = _useRecoilValue.css,
    originalCSS = _useRecoilValue.originalCSS;
  var _useMultiPropertyInfo = useMultiPropertyInfo(),
    mpInfo = _useMultiPropertyInfo.data;
  (0,react_production_min.useEffect)(function () {
    var corpCode = props.corpCode,
      promoCode = props.promoCode,
      agentCode = props.agentCode,
      loginLink = props.loginLink;
    if (props && !widgetConfig) setWidgetConfig(conference_widget_objectSpread(conference_widget_objectSpread({}, props), {}, {
      corpCode: corpCode === "true",
      promoCode: promoCode === "true",
      agentCode: agentCode === "true",
      loginLink: loginLink === "true"
    }));
  }, [props]);
  (0,react_production_min.useEffect)(function () {
    if (mpInfo) {
      setMultiPropertyInfo(mpInfo);
    }
  }, [mpInfo]);
  return /*#__PURE__*/react.createElement(Le, {
    theme: {
      css: css,
      style: {},
      mediaQueries: BV_MediaQueries,
      originalCSS: originalCSS
    }
  }, /*#__PURE__*/react.createElement(WidgetWrapper, null, renderSelectedConferenceWidget(props.widgetLayout)));
};

// // Temporarily using default config
// ConferenceWidget.defaultProps = {
//   openOption: "redirect",
//   promoCode: true,
//   corpCode: false,
//   agentCode: false,
//   loginLink: false,
//   widgetLayout: WidgetLayout.Standard1Column,
//   currency: "SEK",
//   channelId: "f4f47e77-2f29-4bee-8869-4b300d68782b"
// }
;// CONCATENATED MODULE: ./src/widgets/conference/cf_widget.tsx



// Components



// Types

var CfWidget = function CfWidget(props) {
  react_dom.render( /*#__PURE__*/react.createElement(RootWidgetWrapper, props, /*#__PURE__*/react.createElement(ConferenceWidget, props)), document.getElementById(props.WidgetContainerId));
};
var TestCfWidget = function TestCfWidget(props) {
  return /*#__PURE__*/react.createElement(RootWidgetWrapper, props, /*#__PURE__*/react.createElement(ConferenceWidget, props));
};
}();
/******/ 	return __webpack_exports__;
/******/ })()
;
});