/* .Box */

/* .FloatingArrow */

/* .FloatingDelayGroup */

/* .OptionalPortal */

/* .TOOLTIP_ERRORS.children */

/* .TooltipFloating */

/* .TooltipGroup */

/* .TooltipGroupProvider */

/* .Transition */

/* .arrow */

/* .createStyles */

/* .flip */

/* .getDefaultZIndex */

/* .getFloatingPosition */

/* .getOverflowAncestors */

/* .inline */

/* .isElement */

/* .offset */

/* .shift */

/* .useComponentDefaultProps */

/* .useDelayGroup */

/* .useDelayGroupContext */

/* .useDidUpdate */

/* .useDismiss */

/* .useFloating */

/* .useFloatingAutoUpdate */

/* .useFloatingTooltip */

/* .useFocus */

/* .useHover */

/* .useId */

/* .useInteractions */

/* .useMergedRef */

/* .useRole */

/* .useTooltip */

/* .useTooltipGroupContext */

/* @__PURE__ */

/* ["default"] */

/* binding */

/* eslint-disable react/no-array-index-key */

/* harmony default export */

/* harmony export */

/* harmony import */

/* unused harmony export SkeletonTheme */

/**
 * @internal
 */

/***/

//

// 100% is the default since that's what's in the CSS

// DO NOT overwrite style options from the context if `propsStyleOptions`

// Exports

// For example, if count is 3.5, we've already added 3 full

// For performance & cleanliness, don't add any inline styles unless we have to

// Module

// Props take priority over context

// Without the <br />, the skeleton lines will all run together if

// `styleProp` has the least priority out of everything

// `width` is specified

// count is not an integer and we've reached the last iteration of

// has properties explicity set to undefined

// original width.

// skeletons, so now we add one more skeleton that is 0.5 times the

// the loop, so add a "fractional" skeleton.
